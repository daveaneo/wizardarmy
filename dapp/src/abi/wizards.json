{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getStatsGivenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalDefense",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "speed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "losses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "battles",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goodness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "badness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initiationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protectedUntilTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Wizards.ELEMENT",
              "name": "element",
              "type": "uint8"
            }
          ],
          "internalType": "struct Wizards.Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.OUTCOME",
          "name": "outcome",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalPower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalDefense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/interfaces/IERC165.sol",
    "16": "contracts/interfaces/IERC721.sol",
    "17": "contracts/interfaces/IERC721Enumerable.sol",
    "18": "contracts/interfaces/IERC721Metadata.sol",
    "21": "contracts/libraries/Strings.sol",
    "22": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "4": "contracts/helpers/ERC165.sol",
    "6": "contracts/helpers/ERC721.sol",
    "7": "contracts/helpers/ERC721Enumerable.sol",
    "8": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        5628
      ],
      "Context": [
        3859
      ],
      "ERC165": [
        5287
      ],
      "ERC721": [
        5232
      ],
      "ERC721Enumerable": [
        4210
      ],
      "IERC165": [
        3871
      ],
      "IERC721": [
        3084
      ],
      "IERC721Enumerable": [
        5263
      ],
      "IERC721Metadata": [
        5314
      ],
      "IERC721Receiver": [
        5332
      ],
      "Ownable": [
        2855
      ],
      "Strings": [
        4413
      ],
      "Wizards": [
        3791
      ]
    },
    "id": 3792,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3086,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 3087,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3792,
        "sourceUnit": 2856,
        "src": "94:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 3088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3792,
        "sourceUnit": 4211,
        "src": "127:40:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 3089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3792,
        "sourceUnit": 4414,
        "src": "169:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3090,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4210,
              "src": "379:16:22"
            },
            "id": 3091,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:22"
          },
          {
            "baseName": {
              "id": 3092,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2855,
              "src": "397:7:22"
            },
            "id": 3093,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:22"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3791,
        "linearizedBaseContracts": [
          3791,
          2855,
          4210,
          5263,
          5232,
          5314,
          3084,
          5287,
          3871,
          3859
        ],
        "name": "Wizards",
        "nameLocation": "368:7:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 3098,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "527:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 3791,
            "src": "493:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 3097,
              "keyType": {
                "id": 3094,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 3096,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3095,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3143,
                  "src": "513:5:22"
                },
                "referencedDeclaration": 3143,
                "src": "513:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 3100,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "563:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 3791,
            "src": "548:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3099,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3101,
              "nodeType": "StructuredDocumentation",
              "src": "572:36:22",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 3103,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "629:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 3791,
            "src": "614:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 3108,
            "members": [
              {
                "id": 3104,
                "name": "FIRE",
                "nameLocation": "697:4:22",
                "nodeType": "EnumValue",
                "src": "697:4:22"
              },
              {
                "id": 3105,
                "name": "WIND",
                "nameLocation": "703:4:22",
                "nodeType": "EnumValue",
                "src": "703:4:22"
              },
              {
                "id": 3106,
                "name": "WATER",
                "nameLocation": "709:5:22",
                "nodeType": "EnumValue",
                "src": "709:5:22"
              },
              {
                "id": 3107,
                "name": "EARTH",
                "nameLocation": "716:5:22",
                "nodeType": "EnumValue",
                "src": "716:5:22"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "688:7:22",
            "nodeType": "EnumDefinition",
            "src": "683:39:22"
          },
          {
            "canonicalName": "Wizards.OUTCOME",
            "id": 3113,
            "members": [
              {
                "id": 3109,
                "name": "LOSS",
                "nameLocation": "742:4:22",
                "nodeType": "EnumValue",
                "src": "742:4:22"
              },
              {
                "id": 3110,
                "name": "WIN",
                "nameLocation": "748:3:22",
                "nodeType": "EnumValue",
                "src": "748:3:22"
              },
              {
                "id": 3111,
                "name": "TIE",
                "nameLocation": "753:3:22",
                "nodeType": "EnumValue",
                "src": "753:3:22"
              },
              {
                "id": 3112,
                "name": "CAPTURE",
                "nameLocation": "758:7:22",
                "nodeType": "EnumValue",
                "src": "758:7:22"
              }
            ],
            "name": "OUTCOME",
            "nameLocation": "733:7:22",
            "nodeType": "EnumDefinition",
            "src": "728:38:22"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 3143,
            "members": [
              {
                "constant": false,
                "id": 3115,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "890:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "882:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3114,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "882:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3117,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "914:2:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "906:10:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "906:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3119,
                "mutability": "mutable",
                "name": "magicalPower",
                "nameLocation": "935:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "927:20:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "927:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3121,
                "mutability": "mutable",
                "name": "magicalDefense",
                "nameLocation": "966:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "958:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "958:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3123,
                "mutability": "mutable",
                "name": "speed",
                "nameLocation": "999:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "991:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3122,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "991:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3125,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "1023:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1015:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3124,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1015:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3127,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "1046:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1038:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3126,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3129,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "1071:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1063:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3128,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1063:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3131,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1097:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1089:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3130,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1089:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3133,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "1129:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1121:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3132,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1121:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3135,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "1156:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1148:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3134,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1148:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3137,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1182:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1174:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1174:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3139,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1240:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1232:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1232:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3142,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1326:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3143,
                "src": "1318:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$3108",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 3141,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3140,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3108,
                    "src": "1318:7:22"
                  },
                  "referencedDeclaration": 3108,
                  "src": "1318:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$3108",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "826:5:22",
            "nodeType": "StructDefinition",
            "scope": 3791,
            "src": "819:522:22",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 3154,
            "members": [
              {
                "constant": false,
                "id": 3145,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1407:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3154,
                "src": "1399:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3144,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1399:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3147,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1434:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3154,
                "src": "1426:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3146,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1426:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3149,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1467:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 3154,
                "src": "1459:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3148,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1459:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3151,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1495:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3154,
                "src": "1487:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3150,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1487:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3153,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1537:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 3154,
                "src": "1529:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3152,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1529:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1356:16:22",
            "nodeType": "StructDefinition",
            "scope": 3791,
            "src": "1349:217:22",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 3157,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1598:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 3791,
            "src": "1574:40:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 3156,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3155,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3154,
                "src": "1574:16:22"
              },
              "referencedDeclaration": 3154,
              "src": "1574:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$3154_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 3161,
            "name": "NewVerifier",
            "nameLocation": "1686:11:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1706:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3161,
                  "src": "1698:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1697:17:22"
            },
            "src": "1680:35:22"
          },
          {
            "anonymous": false,
            "id": 3165,
            "name": "NewBattler",
            "nameLocation": "1727:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1746:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3165,
                  "src": "1738:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:18:22"
            },
            "src": "1721:35:22"
          },
          {
            "anonymous": false,
            "id": 3173,
            "name": "Initiated",
            "nameLocation": "1768:9:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1786:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3173,
                  "src": "1778:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "1813:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3173,
                  "src": "1797:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1831:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3173,
                  "src": "1823:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1823:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:64:22"
            },
            "src": "1762:80:22"
          },
          {
            "body": {
              "id": 3188,
              "nodeType": "Block",
              "src": "1993:93:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3180,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "2011:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3182,
                        "indexExpression": {
                          "id": 3181,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3175,
                          "src": "2026:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2011:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "2011:49:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 3184,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2063:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2063:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2011:67:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3179,
                  "id": 3187,
                  "nodeType": "Return",
                  "src": "2004:74:22"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 3189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "1939:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "1956:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "1948:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:19:22"
            },
            "returnParameters": {
              "id": 3179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3189,
                  "src": "1987:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1986:6:22"
            },
            "scope": 3791,
            "src": "1930:156:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3201,
              "nodeType": "Block",
              "src": "2174:51:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3197,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3098,
                      "src": "2192:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3199,
                    "indexExpression": {
                      "id": 3198,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "2207:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2192:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "functionReturnParameters": 3196,
                  "id": 3200,
                  "nodeType": "Return",
                  "src": "2185:32:22"
                }
              ]
            },
            "functionSelector": "8cb22518",
            "id": 3202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatsGivenId",
            "nameLocation": "2103:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3191,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2127:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "2119:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2118:19:22"
            },
            "returnParameters": {
              "id": 3196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3202,
                  "src": "2160:12:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                    "typeString": "struct Wizards.Stats"
                  },
                  "typeName": {
                    "id": 3194,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3193,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3143,
                      "src": "2160:5:22"
                    },
                    "referencedDeclaration": 3143,
                    "src": "2160:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                      "typeString": "struct Wizards.Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:14:22"
            },
            "scope": 3791,
            "src": "2094:131:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3245,
              "nodeType": "Block",
              "src": "2431:343:22",
              "statements": [
                {
                  "expression": {
                    "id": 3219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3215,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2442:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3149,
                      "src": "2442:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 3218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2471:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2442:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3220,
                  "nodeType": "ExpressionStatement",
                  "src": "2442:34:22"
                },
                {
                  "expression": {
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3221,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2487:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3147,
                      "src": "2487:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2521:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2487:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:35:22"
                },
                {
                  "expression": {
                    "id": 3231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3227,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2533:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "2533:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 3230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2561:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2533:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3232,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:29:22"
                },
                {
                  "expression": {
                    "id": 3237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3233,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2601:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3235,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3151,
                      "src": "2601:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2644:6:22",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "2601:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3238,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:49:22"
                },
                {
                  "expression": {
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3239,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3157,
                        "src": "2689:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3153,
                      "src": "2689:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3242,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3208,
                      "src": "2730:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2689:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3244,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:49:22"
                }
              ]
            },
            "id": 3246,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3211,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3204,
                    "src": "2415:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3212,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3206,
                    "src": "2422:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3213,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3210,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5232,
                  "src": "2408:6:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2408:22:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3204,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2360:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "2346:19:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3206,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2381:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "2367:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3208,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2398:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3246,
                  "src": "2390:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2345:62:22"
            },
            "returnParameters": {
              "id": 3214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2431:0:22"
            },
            "scope": 3791,
            "src": "2334:440:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3368,
              "nodeType": "Block",
              "src": "2807:980:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3250,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3961,
                            "src": "2826:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2826:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 3252,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3157,
                            "src": "2842:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3149,
                          "src": "2842:26:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2826:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 3255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2870:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 3249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2818:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2818:69:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3257,
                  "nodeType": "ExpressionStatement",
                  "src": "2818:69:22"
                },
                {
                  "assignments": [
                    3259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3259,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "3013:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3005:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3258,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3005:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3274,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3265,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3961,
                                  "src": "3064:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3064:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3267,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3079:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3079:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3269,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3091:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3091:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3263,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3047:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3047:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3047:60:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3262,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3037:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3037:71:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3029:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3029:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3029:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3005:104:22"
                },
                {
                  "assignments": [
                    3276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3276,
                      "mutability": "mutable",
                      "name": "hp",
                      "nameLocation": "3242:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3234:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3234:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3282,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3247:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3278,
                        "name": "pseudoRandNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3259,
                        "src": "3252:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3252:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3234:36:22"
                },
                {
                  "assignments": [
                    3284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3284,
                      "mutability": "mutable",
                      "name": "magicalPower",
                      "nameLocation": "3289:12:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3281:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3281:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3293,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3304:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3286,
                              "name": "pseudoRandNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3259,
                              "src": "3310:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3324:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3310:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3289,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3309:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3331:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3309:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3304:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3281:52:22"
                },
                {
                  "assignments": [
                    3295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3295,
                      "mutability": "mutable",
                      "name": "magicalDefense",
                      "nameLocation": "3352:14:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3344:22:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3344:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3306,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3369:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3297,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3259,
                                "src": "3375:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3389:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3375:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 3300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3392:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "3375:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3302,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3374:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3397:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3374:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3369:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3344:55:22"
                },
                {
                  "assignments": [
                    3308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3308,
                      "mutability": "mutable",
                      "name": "speed",
                      "nameLocation": "3418:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3410:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3410:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3319,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3426:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3310,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3259,
                                "src": "3432:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3446:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3432:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 3313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3449:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3432:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3315,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3431:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3454:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3431:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3426:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3410:46:22"
                },
                {
                  "assignments": [
                    3322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3322,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "3475:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3467:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$3108",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 3321,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3320,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3108,
                          "src": "3467:7:22"
                        },
                        "referencedDeclaration": 3108,
                        "src": "3467:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3108",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3333,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3324,
                                  "name": "pseudoRandNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3259,
                                  "src": "3494:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 3325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3508:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "3494:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 3327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3511:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "3494:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3329,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3493:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3516:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "3493:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3323,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3108,
                      "src": "3485:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$3108_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 3332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3485:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$3108",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3467:51:22"
                },
                {
                  "assignments": [
                    3336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3336,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3544:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3368,
                      "src": "3531:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3335,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3334,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3143,
                          "src": "3531:5:22"
                        },
                        "referencedDeclaration": 3143,
                        "src": "3531:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3353,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 3338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3561:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 3339,
                        "name": "hp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3276,
                        "src": "3564:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3340,
                        "name": "magicalPower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "3568:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3341,
                        "name": "magicalDefense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3295,
                        "src": "3582:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3342,
                        "name": "speed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3308,
                        "src": "3598:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3608:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3611:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3614:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3623:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3626:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3351,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3322,
                        "src": "3629:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3108",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$3108",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 3337,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3143,
                      "src": "3555:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$3143_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3531:106:22"
                },
                {
                  "expression": {
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3354,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3098,
                        "src": "3648:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 3357,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3355,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3961,
                          "src": "3663:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3663:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3648:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3143_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3358,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3336,
                      "src": "3680:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "3648:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 3360,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3708:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3708:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3364,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3961,
                          "src": "3720:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3720:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3361,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4926,
                        4955
                      ],
                      "referencedDeclaration": 4926,
                      "src": "3698:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3367,
                  "nodeType": "ExpressionStatement",
                  "src": "3698:36:22"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 3369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2791:4:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:2:22"
            },
            "returnParameters": {
              "id": 3248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2807:0:22"
            },
            "scope": 3791,
            "src": "2782:1005:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3427,
              "nodeType": "Block",
              "src": "3907:484:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3377,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3372,
                              "src": "3934:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3376,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4560,
                            "src": "3926:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3379,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3947:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3947:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3926:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3959:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 3375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3918:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3386,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3098,
                              "src": "3994:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 3388,
                            "indexExpression": {
                              "id": 3387,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3372,
                              "src": "4009:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3994:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3143_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 3389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3137,
                          "src": "3994:44:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4042:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3994:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 3392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4045:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3986:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3986:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3394,
                  "nodeType": "ExpressionStatement",
                  "src": "3986:79:22"
                },
                {
                  "assignments": [
                    3397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3397,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "4124:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3427,
                      "src": "4110:21:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3396,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3395,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3143,
                          "src": "4110:5:22"
                        },
                        "referencedDeclaration": 3143,
                        "src": "4110:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3401,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3398,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3098,
                      "src": "4134:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3400,
                    "indexExpression": {
                      "id": 3399,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3372,
                      "src": "4149:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4134:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4110:48:22"
                },
                {
                  "expression": {
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3402,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "4169:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3137,
                      "src": "4169:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3405,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4199:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4199:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4169:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3408,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:45:22"
                },
                {
                  "expression": {
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3409,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "4225:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "4225:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3412,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4259:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4259:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 3414,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3157,
                          "src": "4277:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3154_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3151,
                        "src": "4277:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4259:58:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4225:92:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:92:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3420,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4345:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4345:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3422,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3372,
                        "src": "4357:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3423,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4367:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4367:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3419,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3173,
                      "src": "4335:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3426,
                  "nodeType": "EmitStatement",
                  "src": "4330:53:22"
                }
              ]
            },
            "documentation": {
              "id": 3370,
              "nodeType": "StructuredDocumentation",
              "src": "3797:59:22",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 3428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "3871:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3372,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3888:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3428,
                  "src": "3880:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:18:22"
            },
            "returnParameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3907:0:22"
            },
            "scope": 3791,
            "src": "3862:529:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "4552:766:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3113",
                      "typeString": "enum Wizards.OUTCOME"
                    },
                    "id": 3447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3444,
                      "name": "outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3435,
                      "src": "4566:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3113",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3445,
                        "name": "OUTCOME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3113,
                        "src": "4577:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3113_$",
                          "typeString": "type(enum Wizards.OUTCOME)"
                        }
                      },
                      "id": 3446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "WIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3110,
                      "src": "4577:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3113",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "src": "4566:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3113",
                        "typeString": "enum Wizards.OUTCOME"
                      },
                      "id": 3466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3463,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3435,
                        "src": "4727:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3113",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3464,
                          "name": "OUTCOME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3113,
                          "src": "4738:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3113_$",
                            "typeString": "type(enum Wizards.OUTCOME)"
                          }
                        },
                        "id": 3465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LOSS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3109,
                        "src": "4738:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3113",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "src": "4727:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3482,
                    "nodeType": "IfStatement",
                    "src": "4724:145:22",
                    "trueBody": {
                      "id": 3481,
                      "nodeType": "Block",
                      "src": "4751:118:22",
                      "statements": [
                        {
                          "expression": {
                            "id": 3472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3467,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "4766:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3469,
                                "indexExpression": {
                                  "id": 3468,
                                  "name": "_attackerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3430,
                                  "src": "4781:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4766:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3143_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3470,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "losses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3127,
                              "src": "4766:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4804:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4766:39:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3473,
                          "nodeType": "ExpressionStatement",
                          "src": "4766:39:22"
                        },
                        {
                          "expression": {
                            "id": 3479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3474,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3098,
                                  "src": "4820:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3476,
                                "indexExpression": {
                                  "id": 3475,
                                  "name": "_defenderId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3432,
                                  "src": "4835:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4820:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3143_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3477,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "wins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "4820:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4856:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4820:37:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3480,
                          "nodeType": "ExpressionStatement",
                          "src": "4820:37:22"
                        }
                      ]
                    }
                  },
                  "id": 3483,
                  "nodeType": "IfStatement",
                  "src": "4563:306:22",
                  "trueBody": {
                    "id": 3462,
                    "nodeType": "Block",
                    "src": "4589:120:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3448,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3098,
                                "src": "4604:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3450,
                              "indexExpression": {
                                "id": 3449,
                                "name": "_attackerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3430,
                                "src": "4619:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4604:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3143_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3125,
                            "src": "4604:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4640:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4604:37:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3454,
                        "nodeType": "ExpressionStatement",
                        "src": "4604:37:22"
                      },
                      {
                        "expression": {
                          "id": 3460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3455,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3098,
                                "src": "4656:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3457,
                              "indexExpression": {
                                "id": 3456,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3432,
                                "src": "4671:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4656:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3143_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3458,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "losses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3127,
                            "src": "4656:34:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4694:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4656:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3461,
                        "nodeType": "ExpressionStatement",
                        "src": "4656:39:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3484,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "4881:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3486,
                        "indexExpression": {
                          "id": 3485,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "4896:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4881:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3131,
                      "src": "4881:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3488,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3437,
                      "src": "4926:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4881:55:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3490,
                  "nodeType": "ExpressionStatement",
                  "src": "4881:55:22"
                }
              ]
            },
            "functionSelector": "8140bd0b",
            "id": 3492,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3442,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3441,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3730,
                  "src": "4540:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4540:11:22"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "4408:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3430,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "4429:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "4421:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3432,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "4450:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "4442:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4442:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3435,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nameLocation": "4471:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "4463:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OUTCOME_$3113",
                    "typeString": "enum Wizards.OUTCOME"
                  },
                  "typeName": {
                    "id": 3434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3433,
                      "name": "OUTCOME",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3113,
                      "src": "4463:7:22"
                    },
                    "referencedDeclaration": 3113,
                    "src": "4463:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3113",
                      "typeString": "enum Wizards.OUTCOME"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "4488:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "4480:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3439,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "4517:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "4509:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4420:110:22"
            },
            "returnParameters": {
              "id": 3443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4552:0:22"
            },
            "scope": 3791,
            "src": "4399:919:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3500,
              "nodeType": "Block",
              "src": "5437:10:22",
              "statements": []
            },
            "documentation": {
              "id": 3493,
              "nodeType": "StructuredDocumentation",
              "src": "5326:43:22",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 3501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "5384:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3495,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5403:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5395:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5395:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5394:18:22"
            },
            "returnParameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5428:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5428:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5427:9:22"
            },
            "scope": 3791,
            "src": "5375:72:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3509,
              "nodeType": "Block",
              "src": "5595:10:22",
              "statements": []
            },
            "documentation": {
              "id": 3502,
              "nodeType": "StructuredDocumentation",
              "src": "5455:72:22",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 3510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "5542:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5564:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3510,
                  "src": "5556:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5556:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5555:18:22"
            },
            "returnParameters": {
              "id": 3508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3510,
                  "src": "5589:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5589:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5588:6:22"
            },
            "scope": 3791,
            "src": "5533:72:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3518,
              "nodeType": "Block",
              "src": "5744:8:22",
              "statements": []
            },
            "documentation": {
              "id": 3511,
              "nodeType": "StructuredDocumentation",
              "src": "5613:65:22",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "0c457ce4",
            "id": 3519,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3515,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3703,
                  "src": "5731:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5731:12:22"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "5693:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3513,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5712:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3519,
                  "src": "5704:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5704:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5703:18:22"
            },
            "returnParameters": {
              "id": 3517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5744:0:22"
            },
            "scope": 3791,
            "src": "5684:68:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3527,
              "nodeType": "Block",
              "src": "5906:8:22",
              "statements": []
            },
            "documentation": {
              "id": 3520,
              "nodeType": "StructuredDocumentation",
              "src": "5760:87:22",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 3528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3524,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3718,
                  "src": "5886:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5886:10:22"
              }
            ],
            "name": "crush",
            "nameLocation": "5862:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5876:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3528,
                  "src": "5868:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5868:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5867:18:22"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5906:0:22"
            },
            "scope": 3791,
            "src": "5853:61:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4622
            ],
            "body": {
              "id": 3548,
              "nodeType": "Block",
              "src": "6013:269:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3538,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3530,
                            "src": "6040:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3537,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4870,
                          "src": "6032:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6032:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6051:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 3536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6024:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6024:77:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3542,
                  "nodeType": "ExpressionStatement",
                  "src": "6024:77:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3544,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "6167:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067",
                        "id": 3545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6177:96:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        },
                        "value": "https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        }
                      ],
                      "id": 3543,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3688,
                      "src": "6152:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 3546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6152:122:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3535,
                  "id": 3547,
                  "nodeType": "Return",
                  "src": "6145:129:22"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5933:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5980:8:22"
            },
            "parameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3530,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5950:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3549,
                  "src": "5942:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5942:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5941:18:22"
            },
            "returnParameters": {
              "id": 3535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3549,
                  "src": "5998:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3533,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5998:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5997:15:22"
            },
            "scope": 3791,
            "src": "5924:358:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3687,
              "nodeType": "Block",
              "src": "6392:3133:22",
              "statements": [
                {
                  "assignments": [
                    3560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3560,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "6471:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3687,
                      "src": "6458:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3559,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3558,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3143,
                          "src": "6458:5:22"
                        },
                        "referencedDeclaration": 3143,
                        "src": "6458:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3143_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3564,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3561,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3098,
                      "src": "6481:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3143_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3563,
                    "indexExpression": {
                      "id": 3562,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3551,
                      "src": "6496:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6481:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3143_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:47:22"
                },
                {
                  "assignments": [
                    3566
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3566,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "6532:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3687,
                      "src": "6518:22:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3565,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6518:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 3571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6581:30:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 3572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6626:72:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 3573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6713:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 3574,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3553,
                            "src": "6743:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 3575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6753:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 3576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6771:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 3577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6833:78:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3580,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3560,
                                  "src": "6943:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 3581,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3115,
                                "src": "6943:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3578,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4413,
                                "src": "6926:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4295,
                              "src": "6926:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6926:31:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 3583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6959:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 3569,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6550:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6550:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6550:424:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6543:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3567,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6543:6:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6543:432:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6518:457:22"
                },
                {
                  "expression": {
                    "id": 3616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3587,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3566,
                      "src": "7040:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3592,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3566,
                              "src": "7075:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 3593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7098:60:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3596,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "7190:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3597,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3117,
                                  "src": "7190:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3594,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "7173:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "7173:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7173:28:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7205:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20706f776572222c202276616c7565223a20",
                              "id": 3600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7224:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3603,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "7327:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3604,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalPower",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3119,
                                  "src": "7327:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3601,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "7310:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "7310:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7310:38:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7352:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20646566656e7365222c202276616c7565223a20",
                              "id": 3607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7375:73:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3610,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "7480:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3611,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalDefense",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3121,
                                  "src": "7480:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3608,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "7463:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "7463:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7463:40:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7507:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3590,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7058:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7058:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7058:464:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7051:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3588,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7051:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7051:472:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7040:483:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3617,
                  "nodeType": "ExpressionStatement",
                  "src": "7040:483:22"
                },
                {
                  "expression": {
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3618,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3566,
                      "src": "7588:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3623,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3566,
                              "src": "7623:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20227370656564222c202276616c7565223a20",
                              "id": 3624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7646:63:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3627,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "7741:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3628,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "speed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3123,
                                  "src": "7741:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3625,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "7724:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "7724:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7724:31:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7759:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d70222c202276616c7565223a20",
                              "id": 3631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7778:60:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3634,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "7870:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3635,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3125,
                                  "src": "7870:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3632,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "7853:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "7853:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7853:30:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7887:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3621,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7606:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7606:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7606:296:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7599:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3619,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7599:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7599:304:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7588:315:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3641,
                  "nodeType": "ExpressionStatement",
                  "src": "7588:315:22"
                },
                {
                  "expression": {
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3642,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3566,
                      "src": "7970:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3647,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3566,
                              "src": "8005:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 3648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8028:64:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3651,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "8124:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3652,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "losses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3127,
                                  "src": "8124:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3649,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "8107:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "8107:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8107:32:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8143:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 3655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8162:65:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3658,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "8259:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3659,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "battles",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3129,
                                  "src": "8259:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3656,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "8242:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "8242:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8242:33:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8279:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 3662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8302:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3665,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3560,
                                    "src": "8405:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3143_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3666,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3131,
                                  "src": "8405:21:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3663,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4413,
                                  "src": "8388:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4413_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "8388:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8388:39:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8431:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3645,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7988:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7988:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7988:458:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7981:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3643,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7981:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7981:466:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7970:477:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3672,
                  "nodeType": "ExpressionStatement",
                  "src": "7970:477:22"
                },
                {
                  "expression": {
                    "id": 3683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3673,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3566,
                      "src": "8483:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3678,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3566,
                              "src": "8518:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 3679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8528:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 3680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8532:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 3676,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8501:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8501:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8501:35:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8494:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3674,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8494:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8494:43:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8483:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3684,
                  "nodeType": "ExpressionStatement",
                  "src": "8483:54:22"
                },
                {
                  "expression": {
                    "id": 3685,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3566,
                    "src": "9509:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3557,
                  "id": 3686,
                  "nodeType": "Return",
                  "src": "9502:15:22"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 3688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "6299:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3551,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6322:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3688,
                  "src": "6314:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6314:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3553,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "6346:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3688,
                  "src": "6332:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6332:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6313:42:22"
            },
            "returnParameters": {
              "id": 3557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3688,
                  "src": "6377:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6377:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6376:15:22"
            },
            "scope": 3791,
            "src": "6290:3235:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3702,
              "nodeType": "Block",
              "src": "10188:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3691,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10207:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10207:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3695,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10229:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3791",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3791",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10221:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10221:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10221:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10207:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10236:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10199:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3700,
                  "nodeType": "ExpressionStatement",
                  "src": "10199:53:22"
                },
                {
                  "id": 3701,
                  "nodeType": "PlaceholderStatement",
                  "src": "10320:1:22"
                }
              ]
            },
            "id": 3703,
            "name": "onlyVerifier",
            "nameLocation": "10173:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10185:2:22"
            },
            "src": "10164:165:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3717,
              "nodeType": "Block",
              "src": "10359:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3706,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10378:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10378:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3710,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10400:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3791",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3791",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10392:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3708,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10392:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10392:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10378:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10407:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10370:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10370:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3715,
                  "nodeType": "ExpressionStatement",
                  "src": "10370:53:22"
                },
                {
                  "id": 3716,
                  "nodeType": "PlaceholderStatement",
                  "src": "10491:1:22"
                }
              ]
            },
            "id": 3718,
            "name": "onlyHolder",
            "nameLocation": "10346:10:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10356:2:22"
            },
            "src": "10337:163:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3729,
              "nodeType": "Block",
              "src": "10531:138:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3721,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10564:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10564:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3723,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3100,
                          "src": "10578:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10564:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 3725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10600:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 3720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10542:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10542:107:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3727,
                  "nodeType": "ExpressionStatement",
                  "src": "10542:107:22"
                },
                {
                  "id": 3728,
                  "nodeType": "PlaceholderStatement",
                  "src": "10660:1:22"
                }
              ]
            },
            "id": 3730,
            "name": "onlyBattler",
            "nameLocation": "10517:11:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10528:2:22"
            },
            "src": "10508:161:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3759,
              "nodeType": "Block",
              "src": "10834:166:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3738,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3732,
                            "src": "10853:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10873:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10865:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10865:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10865:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10853:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3744,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3732,
                            "src": "10879:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3745,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3100,
                            "src": "10891:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10879:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10853:45:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10900:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10845:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10845:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3750,
                  "nodeType": "ExpressionStatement",
                  "src": "10845:82:22"
                },
                {
                  "expression": {
                    "id": 3753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3751,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3100,
                      "src": "10938:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3752,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3732,
                      "src": "10948:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10938:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3754,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:18:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3756,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3732,
                        "src": "10983:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3755,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "10972:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10972:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3758,
                  "nodeType": "EmitStatement",
                  "src": "10967:25:22"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 3760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3734,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2798,
                  "src": "10824:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "10824:9:22"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "10783:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3732,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "10805:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3760,
                  "src": "10797:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10797:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10796:18:22"
            },
            "returnParameters": {
              "id": 3736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10834:0:22"
            },
            "scope": 3791,
            "src": "10774:226:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3789,
              "nodeType": "Block",
              "src": "11070:173:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3768,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3762,
                            "src": "11089:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11110:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11102:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3769,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11102:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11102:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11089:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3774,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3762,
                            "src": "11116:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3775,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3103,
                            "src": "11129:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11116:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11089:48:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11139:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11081:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11081:85:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3780,
                  "nodeType": "ExpressionStatement",
                  "src": "11081:85:22"
                },
                {
                  "expression": {
                    "id": 3783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3781,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3103,
                      "src": "11177:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3782,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3762,
                      "src": "11188:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11177:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3784,
                  "nodeType": "ExpressionStatement",
                  "src": "11177:20:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3786,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3762,
                        "src": "11225:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3785,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3161,
                      "src": "11213:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11213:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3788,
                  "nodeType": "EmitStatement",
                  "src": "11208:27:22"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 3790,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3764,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2798,
                  "src": "11060:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11060:9:22"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "11017:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3762,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "11040:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3790,
                  "src": "11032:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11032:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11031:19:22"
            },
            "returnParameters": {
              "id": 3766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11070:0:22"
            },
            "scope": 3791,
            "src": "11008:235:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3792,
        "src": "359:10889:22",
        "usedErrors": []
      }
    ],
    "src": "33:11215:22"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620031a9380380620031a9833981016040819052620000349162000289565b8251839083906200004d90600090602085019062000116565b5080516200006390600190602084019062000116565b505050620000806200007a620000c060201b60201c565b620000c4565b6127106010556001600f556005600e5562015180601155601280546001600160a01b0319166001600160a01b039290921691909117905550620003539050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001249062000316565b90600052602060002090601f01602090048101928262000148576000855562000193565b82601f106200016357805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019357825182559160200191906001019062000176565b50620001a1929150620001a5565b5090565b5b80821115620001a15760008155600101620001a6565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e457600080fd5b81516001600160401b0380821115620002015762000201620001bc565b604051601f8301601f19908116603f011681019082821181831017156200022c576200022c620001bc565b816040528381526020925086838588010111156200024957600080fd5b600091505b838210156200026d57858201830151818301840152908201906200024e565b838211156200027f5760008385830101525b9695505050505050565b6000806000606084860312156200029f57600080fd5b83516001600160401b0380821115620002b757600080fd5b620002c587838801620001d2565b94506020860151915080821115620002dc57600080fd5b50620002eb86828701620001d2565b604086015190935090506001600160a01b03811681146200030b57600080fd5b809150509250925092565b600181811c908216806200032b57607f821691505b602082108114156200034d57634e487b7160e01b600052602260045260246000fd5b50919050565b612e4680620003636000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f14610469578063db2a0a5514610502578063e52e324914610556578063e985e9c514610569578063f2fde38b146105a557600080fd5b8063a22cb4651461041d578063b88d4fde14610430578063bc0b0d8814610443578063c87b56dd1461045657600080fd5b806382afd23b116100f457806382afd23b146103ac5780638cb22518146103d15780638da5cb5b146103f157806395d89b411461040257806397fc007c1461040a57600080fd5b806370a082311461036b578063715018a61461037e5780637901ea78146103865780638140bd0b1461039957600080fd5b80631249c58b116101a85780632f745c59116101775780632f745c591461031f57806342842e0e14610332578063437454b9146102d65780634f6ccce7146103455780636352211e1461035857600080fd5b80631249c58b146102e957806318160ddd146102f157806323b872dd146102f95780632b7ac3f31461030c57600080fd5b8063081812fc116101e4578063081812fc14610288578063095ea7b3146102b35780630a363d08146102c85780630c457ce4146102d657600080fd5b806301ffc9a7146102165780630419e3141461023e578063051063531461025e57806306fdde0314610280575b600080fd5b6102296102243660046121d2565b6105b8565b60405190151581526020015b60405180910390f35b61025161024c366004612282565b6105e3565b6040516102359190612335565b61027261026c366004612348565b50600090565b604051908152602001610235565b6102516107f6565b61029b610296366004612348565b610888565b6040516001600160a01b039091168152602001610235565b6102c66102c136600461237d565b610922565b005b61022961026c366004612348565b6102c66102e4366004612348565b610a38565b6102c6610a7b565b600854610272565b6102c66103073660046123a7565b610d53565b600d5461029b906001600160a01b031681565b61027261032d36600461237d565b610d84565b6102c66103403660046123a7565b610e1a565b610272610353366004612348565b610e35565b61029b610366366004612348565b610ec8565b6102726103793660046123e3565b610f3f565b6102c6610fc6565b6102c6610394366004612348565b610ffc565b6102c66103a73660046123fe565b61110a565b6102296103ba366004612348565b6000908152600b60205260409020600c0154421090565b6103e46103df366004612348565b611274565b6040516102359190612483565b600a546001600160a01b031661029b565b61025161135b565b6102c66104183660046123e3565b61136a565b6102c661042b36600461252d565b611456565b6102c661043e366004612569565b61151b565b600c5461029b906001600160a01b031681565b610251610464366004612348565b611553565b6104e8610477366004612348565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549b8b0154600c8c0154600d909c01549a9c999b989a979996989597949693959294919392909160ff168e565b6040516102359e9d9c9b9a999897969594939291906125e5565b600e54600f5460105460115460125461052594939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a001610235565b6102c66105643660046123e3565b6115f4565b61022961057736600461265f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102c66105b33660046123e3565b6116d9565b60006001600160e01b0319821663780e9d6360e01b14806105dd57506105dd82611771565b92915050565b60606000600b6000858152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156106ac576106ac61244b565b60038111156106bd576106bd61244b565b8152505090506000836106d383600001516117c1565b6040516020016106e49291906126ae565b60405160208183030381529060405290508061070383602001516117c1565b61071084604001516117c1565b61071d85606001516117c1565b6040516020016107309493929190612808565b60405160208183030381529060405290508061074f83608001516117c1565b61075c8460a001516117c1565b60405160200161076e9392919061293a565b60405160208183030381529060405290508061078d8360c001516117c1565b61079a8460e001516117c1565b6107a88561010001516117c1565b6040516020016107bb9493929190612a17565b6040516020818303038152906040529050806040516020016107dd9190612b2d565b60408051808303601f1901815291905295945050505050565b60606000805461080590612b5c565b80601f016020809104026020016040519081016040528092919081815260200182805461083190612b5c565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061092d82610ec8565b9050806001600160a01b0316836001600160a01b0316141561099b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108fd565b336001600160a01b03821614806109b757506109b78133610577565b610a295760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108fd565b610a3383836118c7565b505050565b33301415610a785760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b60448201526064016108fd565b50565b60105460085410610abf5760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b60448201526064016108fd565b6000610aca60085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f19818403018152919052805160209091012090506000610b1d601a83612bad565b610b28906019612bd7565b90506000601a610b39606485612bef565b610b439190612bad565b610b4e906019612bd7565b90506000600a610b5e8186612bef565b610b69906004612c03565b610b739190612bad565b610b7e90600a612bd7565b90506000600a610b8e8187612bef565b610b99906005612c03565b610ba39190612bad565b610bae90600a612bd7565b905060006004610bbf600a88612bef565b610bca906006612c03565b610bd49190612bad565b6003811115610be557610be561244b565b90506000604051806101c00160405280600181526020018781526020018681526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610c5e57610c5e61244b565b9052905080600b6000610c7060085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c01556101a082015181600d0160006101000a81548160ff02191690836003811115610d3057610d3061244b565b0217905550905050610d4a33610d4560085490565b611935565b50505050505050565b610d5d3382611953565b610d795760405162461bcd60e51b81526004016108fd90612c22565b610a33838383611a46565b6000610d8f83610f3f565b8210610df15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016108fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610a338383836040518060200160405280600081525061151b565b6000610e4060085490565b8210610ea35760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016108fd565b60088281548110610eb657610eb6612c73565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105dd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108fd565b60006001600160a01b038216610faa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108fd565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610ff05760405162461bcd60e51b81526004016108fd90612c89565b610ffa6000611bf1565b565b3361100682610ec8565b6001600160a01b03161461104c5760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b60448201526064016108fd565b6000818152600b602081905260409091200154156110a05760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b60448201526064016108fd565b6000818152600b602081905260409091204291810182905560115490916110c79190612bd7565b600c8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b600c546001600160a01b031633146111705760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b60648201526084016108fd565b60018360038111156111845761118461244b565b14156111de576000858152600b602052604081206005018054600192906111ac908490612bd7565b90915550506000848152600b602052604081206006018054600192906111d3908490612bd7565b909155506112479050565b60008360038111156111f2576111f261244b565b1415611247576000858152600b6020526040812060060180546001929061121a908490612bd7565b90915550506000848152600b60205260408120600501805460019290611241908490612bd7565b90915550505b6000858152600b602052604081206008018054849290611268908490612bd7565b90915550505050505050565b61127c61213d565b600b6000838152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156113415761134161244b565b60038111156113525761135261244b565b90525092915050565b60606001805461080590612b5c565b600a546001600160a01b031633146113945760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b038116158015906113ba5750600d546001600160a01b03828116911614155b6114015760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108fd565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b6001600160a01b0382163314156114af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108fd565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115253383611953565b6115415760405162461bcd60e51b81526004016108fd90612c22565b61154d84848484611c43565b50505050565b6000818152600260205260409020546060906001600160a01b03166115d25760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108fd565b6105dd826040518060800160405280605e8152602001612db3605e91396105e3565b600a546001600160a01b0316331461161e5760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b038116158015906116445750600c546001600160a01b03828116911614155b61168b5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108fd565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a49060200161144b565b600a546001600160a01b031633146117035760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b0381166117685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108fd565b610a7881611bf1565b60006001600160e01b031982166380ac58cd60e01b14806117a257506001600160e01b03198216635b5e139f60e01b145b806105dd57506301ffc9a760e01b6001600160e01b03198316146105dd565b6060816117e55750506040805180820190915260018152600360fc1b602082015290565b8160005b811561180f57806117f981612cbe565b91506118089050600a83612bef565b91506117e9565b60008167ffffffffffffffff81111561182a5761182a6121f6565b6040519080825280601f01601f191660200182016040528015611854576020820181803683370190505b5090505b84156118bf57611869600183612cd9565b9150611876600a86612bad565b611881906030612bd7565b60f81b81838151811061189657611896612c73565b60200101906001600160f81b031916908160001a9053506118b8600a86612bef565b9450611858565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906118fc82610ec8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61194f828260405180602001604052806000815250611c76565b5050565b6000818152600260205260408120546001600160a01b03166119cc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108fd565b60006119d783610ec8565b9050806001600160a01b0316846001600160a01b03161480611a125750836001600160a01b0316611a0784610888565b6001600160a01b0316145b806118bf57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166118bf565b826001600160a01b0316611a5982610ec8565b6001600160a01b031614611ac15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016108fd565b6001600160a01b038216611b235760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108fd565b611b2e838383611ca9565b611b396000826118c7565b6001600160a01b0383166000908152600360205260408120805460019290611b62908490612cd9565b90915550506001600160a01b0382166000908152600360205260408120805460019290611b90908490612bd7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611c4e848484611a46565b611c5a84848484611d61565b61154d5760405162461bcd60e51b81526004016108fd90612cf0565b611c808383611e5f565b611c8d6000848484611d61565b610a335760405162461bcd60e51b81526004016108fd90612cf0565b6001600160a01b038316611d0457611cff81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611d27565b816001600160a01b0316836001600160a01b031614611d2757611d278382611fad565b6001600160a01b038216611d3e57610a338161204a565b826001600160a01b0316826001600160a01b031614610a3357610a3382826120f9565b60006001600160a01b0384163b15611e5457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611da5903390899088908890600401612d42565b6020604051808303816000875af1925050508015611de0575060408051601f3d908101601f19168201909252611ddd91810190612d7f565b60015b611e3a573d808015611e0e576040519150601f19603f3d011682016040523d82523d6000602084013e611e13565b606091505b508051611e325760405162461bcd60e51b81526004016108fd90612cf0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506118bf565b506001949350505050565b6001600160a01b038216611eb55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108fd565b6000818152600260205260409020546001600160a01b031615611f1a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108fd565b611f2660008383611ca9565b6001600160a01b0382166000908152600360205260408120805460019290611f4f908490612bd7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611fba84610f3f565b611fc49190612cd9565b600083815260076020526040902054909150808214612017576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061205c90600190612cd9565b6000838152600960205260408120546008805493945090928490811061208457612084612c73565b9060005260206000200154905080600883815481106120a5576120a5612c73565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806120dd576120dd612d9c565b6001900381819060005260206000200160009055905550505050565b600061210483610f3f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156121b7576121b761244b565b905290565b6001600160e01b031981168114610a7857600080fd5b6000602082840312156121e457600080fd5b81356121ef816121bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612227576122276121f6565b604051601f8501601f19908116603f0116810190828211818310171561224f5761224f6121f6565b8160405280935085815286868601111561226857600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561229557600080fd5b82359150602083013567ffffffffffffffff8111156122b357600080fd5b8301601f810185136122c457600080fd5b6122d38582356020840161220c565b9150509250929050565b60005b838110156122f85781810151838201526020016122e0565b8381111561154d5750506000910152565b600081518084526123218160208601602086016122dd565b601f01601f19169290920160200192915050565b6020815260006121ef6020830184612309565b60006020828403121561235a57600080fd5b5035919050565b80356001600160a01b038116811461237857600080fd5b919050565b6000806040838503121561239057600080fd5b61239983612361565b946020939093013593505050565b6000806000606084860312156123bc57600080fd5b6123c584612361565b92506123d360208501612361565b9150604084013590509250925092565b6000602082840312156123f557600080fd5b6121ef82612361565b600080600080600060a0868803121561241657600080fd5b853594506020860135935060408601356004811061243357600080fd5b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6004811061247f57634e487b7160e01b600052602160045260246000fd5b9052565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a08084015161252582850182612461565b505092915050565b6000806040838503121561254057600080fd5b61254983612361565b91506020830135801515811461255e57600080fd5b809150509250929050565b6000806000806080858703121561257f57600080fd5b61258885612361565b935061259660208601612361565b925060408501359150606085013567ffffffffffffffff8111156125b957600080fd5b8501601f810187136125ca57600080fd5b6125d98782356020840161220c565b91505092959194509250565b60006101c0820190508f82528e60208301528d60408301528c60608301528b60808301528a60a08301528960c08301528860e0830152876101008301528661012083015285610140830152846101608301528361018083015261264c6101a0830184612461565b9f9e505050505050505050505050505050565b6000806040838503121561267257600080fd5b61267b83612361565b915061268960208401612361565b90509250929050565b600081516126a48185602086016122dd565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b6062820152825160009061275781606e8501602088016122dd565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c18201526127ff6127f160cd830186612692565b61207d60f01b815260020190565b95945050505050565b6000855161281a818460208a016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a200000000000006020830152865161287c81603a850160208b016122dd565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c84015286516128dc816081860160208b016122dd565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c382015261292f6127f160ca830186612692565b979650505050505050565b6000845161294c8184602089016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a20000000602083015285516129ae81603d850160208a016122dd565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605f84015285519150612a018260798501602089016122dd565b60799290910191820152607b0195945050505050565b60008551612a29818460208a016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a20000060208301528651612a8b81603e850160208b016122dd565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a200060608401528651612adc81607f860160208b016122dd565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c182015261292f6127f160c6830186612692565b60008251612b3f8184602087016122dd565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c90821680612b7057607f821691505b60208210811415612b9157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082612bbc57612bbc612b97565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115612bea57612bea612bc1565b500190565b600082612bfe57612bfe612b97565b500490565b6000816000190483118215151615612c1d57612c1d612bc1565b500290565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415612cd257612cd2612bc1565b5060010190565b600082821015612ceb57612ceb612bc1565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d7590830184612309565b9695505050505050565b600060208284031215612d9157600080fd5b81516121ef816121bc565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067a2646970667358221220263aa2876dc8fa5efc11877efb29d7825d8735a66f2607ffe9c55cd381e8f01e64736f6c634300080c0033",
  "bytecodeSha1": "fbe050c9c6f71134ae8fdccfeef09677427aa099",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "142": [
            563,
            573,
            false
          ]
        }
      },
      "22": {
        "Wizards.initiate": {
          "113": [
            3926,
            3957,
            true
          ],
          "114": [
            3994,
            4043,
            true
          ]
        },
        "Wizards.mint": {
          "112": [
            2826,
            2868,
            true
          ]
        },
        "Wizards.reportBattle": {
          "115": [
            4566,
            4588,
            false
          ],
          "116": [
            4727,
            4750,
            false
          ]
        },
        "Wizards.updateBattler": {
          "119": [
            10853,
            10875,
            false
          ],
          "120": [
            10879,
            10898,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "117": [
            11089,
            11112,
            false
          ],
          "118": [
            11116,
            11137,
            true
          ]
        },
        "Wizards.verifyDuty": {
          "111": [
            10207,
            10234,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "ERC721._mint": {
          "133": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "132": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "131": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "129": [
            10896,
            10927,
            true
          ],
          "130": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "121": [
            3746,
            3757,
            true
          ],
          "122": [
            3830,
            3851,
            true
          ],
          "123": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "126": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.ownerOf": {
          "125": [
            2362,
            2381,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "128": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "127": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "124": [
            5169,
            5210,
            true
          ]
        }
      },
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "136": [
            2870,
            2888,
            false
          ],
          "137": [
            2967,
            2977,
            false
          ],
          "138": [
            3067,
            3083,
            false
          ],
          "139": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "140": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "135": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "134": [
            1421,
            1452,
            true
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "141": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "60": [
            590,
            600
          ],
          "61": [
            711,
            719
          ],
          "62": [
            734,
            744
          ],
          "63": [
            850,
            861
          ],
          "64": [
            876,
            932
          ],
          "65": [
            947,
            958
          ],
          "66": [
            980,
            1001
          ]
        }
      },
      "22": {
        "Wizards.formatTokenURI": {
          "5": [
            7040,
            7523
          ],
          "6": [
            7588,
            7903
          ],
          "7": [
            7970,
            8447
          ],
          "8": [
            8483,
            8537
          ]
        },
        "Wizards.getStatsGivenId": {
          "41": [
            2185,
            2217
          ]
        },
        "Wizards.initiate": {
          "31": [
            3918,
            3975
          ],
          "32": [
            3986,
            4065
          ],
          "33": [
            4169,
            4214
          ],
          "34": [
            4225,
            4317
          ],
          "35": [
            4330,
            4383
          ]
        },
        "Wizards.isActive": {
          "1": [
            2004,
            2078
          ]
        },
        "Wizards.mint": {
          "17": [
            2818,
            2887
          ],
          "18": [
            3648,
            3687
          ],
          "19": [
            3698,
            3734
          ]
        },
        "Wizards.reportBattle": {
          "36": [
            4604,
            4641
          ],
          "37": [
            4656,
            4695
          ],
          "38": [
            4766,
            4805
          ],
          "39": [
            4820,
            4857
          ],
          "40": [
            4881,
            4936
          ]
        },
        "Wizards.tokenURI": {
          "51": [
            6024,
            6101
          ],
          "52": [
            6145,
            6274
          ]
        },
        "Wizards.updateBattler": {
          "53": [
            10845,
            10927
          ],
          "54": [
            10938,
            10956
          ],
          "55": [
            10967,
            10992
          ]
        },
        "Wizards.updateVerifier": {
          "43": [
            11081,
            11166
          ],
          "44": [
            11177,
            11197
          ],
          "45": [
            11208,
            11235
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "59": [
            901,
            948
          ]
        }
      },
      "6": {
        "ERC721._approve": {
          "67": [
            11535,
            11564
          ],
          "68": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "92": [
            12700,
            12760
          ],
          "93": [
            12527,
            12589
          ],
          "94": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "10": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "70": [
            7882,
            7955
          ],
          "71": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "95": [
            9528,
            9589
          ],
          "96": [
            9600,
            9658
          ],
          "97": [
            9671,
            9716
          ],
          "98": [
            9729,
            9747
          ],
          "99": [
            9758,
            9779
          ],
          "100": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "69": [
            8538,
            8564
          ],
          "84": [
            8929,
            8947
          ],
          "85": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "82": [
            7007,
            7035
          ],
          "83": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "72": [
            10888,
            10973
          ],
          "73": [
            10984,
            11049
          ],
          "74": [
            11062,
            11101
          ],
          "75": [
            11166,
            11195
          ],
          "76": [
            11208,
            11228
          ],
          "77": [
            11239,
            11257
          ],
          "78": [
            11268,
            11289
          ],
          "79": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "13": [
            3738,
            3795
          ],
          "15": [
            3808,
            3976
          ],
          "16": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "28": [
            2041,
            2115
          ],
          "29": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "11": [
            4180,
            4253
          ],
          "12": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "9": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "27": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "24": [
            5522,
            5561
          ],
          "49": [
            5807,
            5910
          ],
          "50": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "46": [
            4472,
            4534
          ],
          "47": [
            4547,
            4600
          ],
          "48": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "58": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "42": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            5161,
            5264
          ],
          "21": [
            5277,
            5305
          ]
        }
      },
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "87": [
            4053,
            4097
          ],
          "88": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "109": [
            3687,
            3721
          ],
          "110": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "86": [
            2905,
            2945
          ],
          "89": [
            2994,
            3041
          ],
          "90": [
            3100,
            3145
          ],
          "91": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "105": [
            6793,
            6829
          ],
          "106": [
            6898,
            6939
          ],
          "107": [
            7063,
            7094
          ],
          "108": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "101": [
            5367,
            5411
          ],
          "102": [
            5484,
            5527
          ],
          "103": [
            5662,
            5695
          ],
          "104": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "25": [
            1913,
            2008
          ],
          "26": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "22": [
            1413,
            1500
          ],
          "23": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "8": {
        "Ownable._setOwner": {
          "80": [
            2193,
            2210
          ],
          "81": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "56": [
            1982,
            2055
          ],
          "57": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f14610469578063db2a0a5514610502578063e52e324914610556578063e985e9c514610569578063f2fde38b146105a557600080fd5b8063a22cb4651461041d578063b88d4fde14610430578063bc0b0d8814610443578063c87b56dd1461045657600080fd5b806382afd23b116100f457806382afd23b146103ac5780638cb22518146103d15780638da5cb5b146103f157806395d89b411461040257806397fc007c1461040a57600080fd5b806370a082311461036b578063715018a61461037e5780637901ea78146103865780638140bd0b1461039957600080fd5b80631249c58b116101a85780632f745c59116101775780632f745c591461031f57806342842e0e14610332578063437454b9146102d65780634f6ccce7146103455780636352211e1461035857600080fd5b80631249c58b146102e957806318160ddd146102f157806323b872dd146102f95780632b7ac3f31461030c57600080fd5b8063081812fc116101e4578063081812fc14610288578063095ea7b3146102b35780630a363d08146102c85780630c457ce4146102d657600080fd5b806301ffc9a7146102165780630419e3141461023e578063051063531461025e57806306fdde0314610280575b600080fd5b6102296102243660046121d2565b6105b8565b60405190151581526020015b60405180910390f35b61025161024c366004612282565b6105e3565b6040516102359190612335565b61027261026c366004612348565b50600090565b604051908152602001610235565b6102516107f6565b61029b610296366004612348565b610888565b6040516001600160a01b039091168152602001610235565b6102c66102c136600461237d565b610922565b005b61022961026c366004612348565b6102c66102e4366004612348565b610a38565b6102c6610a7b565b600854610272565b6102c66103073660046123a7565b610d53565b600d5461029b906001600160a01b031681565b61027261032d36600461237d565b610d84565b6102c66103403660046123a7565b610e1a565b610272610353366004612348565b610e35565b61029b610366366004612348565b610ec8565b6102726103793660046123e3565b610f3f565b6102c6610fc6565b6102c6610394366004612348565b610ffc565b6102c66103a73660046123fe565b61110a565b6102296103ba366004612348565b6000908152600b60205260409020600c0154421090565b6103e46103df366004612348565b611274565b6040516102359190612483565b600a546001600160a01b031661029b565b61025161135b565b6102c66104183660046123e3565b61136a565b6102c661042b36600461252d565b611456565b6102c661043e366004612569565b61151b565b600c5461029b906001600160a01b031681565b610251610464366004612348565b611553565b6104e8610477366004612348565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549b8b0154600c8c0154600d909c01549a9c999b989a979996989597949693959294919392909160ff168e565b6040516102359e9d9c9b9a999897969594939291906125e5565b600e54600f5460105460115460125461052594939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a001610235565b6102c66105643660046123e3565b6115f4565b61022961057736600461265f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102c66105b33660046123e3565b6116d9565b60006001600160e01b0319821663780e9d6360e01b14806105dd57506105dd82611771565b92915050565b60606000600b6000858152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156106ac576106ac61244b565b60038111156106bd576106bd61244b565b8152505090506000836106d383600001516117c1565b6040516020016106e49291906126ae565b60405160208183030381529060405290508061070383602001516117c1565b61071084604001516117c1565b61071d85606001516117c1565b6040516020016107309493929190612808565b60405160208183030381529060405290508061074f83608001516117c1565b61075c8460a001516117c1565b60405160200161076e9392919061293a565b60405160208183030381529060405290508061078d8360c001516117c1565b61079a8460e001516117c1565b6107a88561010001516117c1565b6040516020016107bb9493929190612a17565b6040516020818303038152906040529050806040516020016107dd9190612b2d565b60408051808303601f1901815291905295945050505050565b60606000805461080590612b5c565b80601f016020809104026020016040519081016040528092919081815260200182805461083190612b5c565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061092d82610ec8565b9050806001600160a01b0316836001600160a01b0316141561099b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108fd565b336001600160a01b03821614806109b757506109b78133610577565b610a295760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108fd565b610a3383836118c7565b505050565b33301415610a785760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b60448201526064016108fd565b50565b60105460085410610abf5760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b60448201526064016108fd565b6000610aca60085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f19818403018152919052805160209091012090506000610b1d601a83612bad565b610b28906019612bd7565b90506000601a610b39606485612bef565b610b439190612bad565b610b4e906019612bd7565b90506000600a610b5e8186612bef565b610b69906004612c03565b610b739190612bad565b610b7e90600a612bd7565b90506000600a610b8e8187612bef565b610b99906005612c03565b610ba39190612bad565b610bae90600a612bd7565b905060006004610bbf600a88612bef565b610bca906006612c03565b610bd49190612bad565b6003811115610be557610be561244b565b90506000604051806101c00160405280600181526020018781526020018681526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610c5e57610c5e61244b565b9052905080600b6000610c7060085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c01556101a082015181600d0160006101000a81548160ff02191690836003811115610d3057610d3061244b565b0217905550905050610d4a33610d4560085490565b611935565b50505050505050565b610d5d3382611953565b610d795760405162461bcd60e51b81526004016108fd90612c22565b610a33838383611a46565b6000610d8f83610f3f565b8210610df15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016108fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610a338383836040518060200160405280600081525061151b565b6000610e4060085490565b8210610ea35760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016108fd565b60088281548110610eb657610eb6612c73565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105dd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108fd565b60006001600160a01b038216610faa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108fd565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610ff05760405162461bcd60e51b81526004016108fd90612c89565b610ffa6000611bf1565b565b3361100682610ec8565b6001600160a01b03161461104c5760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b60448201526064016108fd565b6000818152600b602081905260409091200154156110a05760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b60448201526064016108fd565b6000818152600b602081905260409091204291810182905560115490916110c79190612bd7565b600c8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b600c546001600160a01b031633146111705760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b60648201526084016108fd565b60018360038111156111845761118461244b565b14156111de576000858152600b602052604081206005018054600192906111ac908490612bd7565b90915550506000848152600b602052604081206006018054600192906111d3908490612bd7565b909155506112479050565b60008360038111156111f2576111f261244b565b1415611247576000858152600b6020526040812060060180546001929061121a908490612bd7565b90915550506000848152600b60205260408120600501805460019290611241908490612bd7565b90915550505b6000858152600b602052604081206008018054849290611268908490612bd7565b90915550505050505050565b61127c61213d565b600b6000838152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156113415761134161244b565b60038111156113525761135261244b565b90525092915050565b60606001805461080590612b5c565b600a546001600160a01b031633146113945760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b038116158015906113ba5750600d546001600160a01b03828116911614155b6114015760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108fd565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b6001600160a01b0382163314156114af5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108fd565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115253383611953565b6115415760405162461bcd60e51b81526004016108fd90612c22565b61154d84848484611c43565b50505050565b6000818152600260205260409020546060906001600160a01b03166115d25760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108fd565b6105dd826040518060800160405280605e8152602001612db3605e91396105e3565b600a546001600160a01b0316331461161e5760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b038116158015906116445750600c546001600160a01b03828116911614155b61168b5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108fd565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a49060200161144b565b600a546001600160a01b031633146117035760405162461bcd60e51b81526004016108fd90612c89565b6001600160a01b0381166117685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108fd565b610a7881611bf1565b60006001600160e01b031982166380ac58cd60e01b14806117a257506001600160e01b03198216635b5e139f60e01b145b806105dd57506301ffc9a760e01b6001600160e01b03198316146105dd565b6060816117e55750506040805180820190915260018152600360fc1b602082015290565b8160005b811561180f57806117f981612cbe565b91506118089050600a83612bef565b91506117e9565b60008167ffffffffffffffff81111561182a5761182a6121f6565b6040519080825280601f01601f191660200182016040528015611854576020820181803683370190505b5090505b84156118bf57611869600183612cd9565b9150611876600a86612bad565b611881906030612bd7565b60f81b81838151811061189657611896612c73565b60200101906001600160f81b031916908160001a9053506118b8600a86612bef565b9450611858565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906118fc82610ec8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61194f828260405180602001604052806000815250611c76565b5050565b6000818152600260205260408120546001600160a01b03166119cc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108fd565b60006119d783610ec8565b9050806001600160a01b0316846001600160a01b03161480611a125750836001600160a01b0316611a0784610888565b6001600160a01b0316145b806118bf57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166118bf565b826001600160a01b0316611a5982610ec8565b6001600160a01b031614611ac15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016108fd565b6001600160a01b038216611b235760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108fd565b611b2e838383611ca9565b611b396000826118c7565b6001600160a01b0383166000908152600360205260408120805460019290611b62908490612cd9565b90915550506001600160a01b0382166000908152600360205260408120805460019290611b90908490612bd7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611c4e848484611a46565b611c5a84848484611d61565b61154d5760405162461bcd60e51b81526004016108fd90612cf0565b611c808383611e5f565b611c8d6000848484611d61565b610a335760405162461bcd60e51b81526004016108fd90612cf0565b6001600160a01b038316611d0457611cff81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611d27565b816001600160a01b0316836001600160a01b031614611d2757611d278382611fad565b6001600160a01b038216611d3e57610a338161204a565b826001600160a01b0316826001600160a01b031614610a3357610a3382826120f9565b60006001600160a01b0384163b15611e5457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611da5903390899088908890600401612d42565b6020604051808303816000875af1925050508015611de0575060408051601f3d908101601f19168201909252611ddd91810190612d7f565b60015b611e3a573d808015611e0e576040519150601f19603f3d011682016040523d82523d6000602084013e611e13565b606091505b508051611e325760405162461bcd60e51b81526004016108fd90612cf0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506118bf565b506001949350505050565b6001600160a01b038216611eb55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108fd565b6000818152600260205260409020546001600160a01b031615611f1a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108fd565b611f2660008383611ca9565b6001600160a01b0382166000908152600360205260408120805460019290611f4f908490612bd7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611fba84610f3f565b611fc49190612cd9565b600083815260076020526040902054909150808214612017576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061205c90600190612cd9565b6000838152600960205260408120546008805493945090928490811061208457612084612c73565b9060005260206000200154905080600883815481106120a5576120a5612c73565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806120dd576120dd612d9c565b6001900381819060005260206000200160009055905550505050565b600061210483610f3f565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156121b7576121b761244b565b905290565b6001600160e01b031981168114610a7857600080fd5b6000602082840312156121e457600080fd5b81356121ef816121bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612227576122276121f6565b604051601f8501601f19908116603f0116810190828211818310171561224f5761224f6121f6565b8160405280935085815286868601111561226857600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561229557600080fd5b82359150602083013567ffffffffffffffff8111156122b357600080fd5b8301601f810185136122c457600080fd5b6122d38582356020840161220c565b9150509250929050565b60005b838110156122f85781810151838201526020016122e0565b8381111561154d5750506000910152565b600081518084526123218160208601602086016122dd565b601f01601f19169290920160200192915050565b6020815260006121ef6020830184612309565b60006020828403121561235a57600080fd5b5035919050565b80356001600160a01b038116811461237857600080fd5b919050565b6000806040838503121561239057600080fd5b61239983612361565b946020939093013593505050565b6000806000606084860312156123bc57600080fd5b6123c584612361565b92506123d360208501612361565b9150604084013590509250925092565b6000602082840312156123f557600080fd5b6121ef82612361565b600080600080600060a0868803121561241657600080fd5b853594506020860135935060408601356004811061243357600080fd5b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b6004811061247f57634e487b7160e01b600052602160045260246000fd5b9052565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a08084015161252582850182612461565b505092915050565b6000806040838503121561254057600080fd5b61254983612361565b91506020830135801515811461255e57600080fd5b809150509250929050565b6000806000806080858703121561257f57600080fd5b61258885612361565b935061259660208601612361565b925060408501359150606085013567ffffffffffffffff8111156125b957600080fd5b8501601f810187136125ca57600080fd5b6125d98782356020840161220c565b91505092959194509250565b60006101c0820190508f82528e60208301528d60408301528c60608301528b60808301528a60a08301528960c08301528860e0830152876101008301528661012083015285610140830152846101608301528361018083015261264c6101a0830184612461565b9f9e505050505050505050505050505050565b6000806040838503121561267257600080fd5b61267b83612361565b915061268960208401612361565b90509250929050565b600081516126a48185602086016122dd565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b6062820152825160009061275781606e8501602088016122dd565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c18201526127ff6127f160cd830186612692565b61207d60f01b815260020190565b95945050505050565b6000855161281a818460208a016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a200000000000006020830152865161287c81603a850160208b016122dd565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c84015286516128dc816081860160208b016122dd565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c382015261292f6127f160ca830186612692565b979650505050505050565b6000845161294c8184602089016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a20000000602083015285516129ae81603d850160208a016122dd565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605f84015285519150612a018260798501602089016122dd565b60799290910191820152607b0195945050505050565b60008551612a29818460208a016122dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a20000060208301528651612a8b81603e850160208b016122dd565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a200060608401528651612adc81607f860160208b016122dd565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c182015261292f6127f160c6830186612692565b60008251612b3f8184602087016122dd565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c90821680612b7057607f821691505b60208210811415612b9157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082612bbc57612bbc612b97565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115612bea57612bea612bc1565b500190565b600082612bfe57612bfe612b97565b500490565b6000816000190483118215151615612c1d57612c1d612bc1565b500290565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600019821415612cd257612cd2612bc1565b5060010190565b600082821015612ceb57612ceb612bc1565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d7590830184612309565b9695505050505050565b600060208284031215612d9157600080fd5b81516121ef816121bc565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067a2646970667358221220263aa2876dc8fa5efc11877efb29d7825d8735a66f2607ffe9c55cd381e8f01e64736f6c634300080c0033",
  "deployedSourceMap": "359:10889:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:23;;558:22;540:41;;528:2;513:18;988:224:7;;;;;;;;6290:3235:22;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5375:72::-;;;;;;:::i;:::-;-1:-1:-1;5428:7:22;;5375:72;;;;2989:25:23;;;2977:2;2962:18;5375:72:22;2843:177:23;2525:100:6;;;:::i;4084:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3189:32:23;;;3171:51;;3159:2;3144:18;4084:221:6;3025:203:23;3607:411:6;;;;;;:::i;:::-;;:::i;:::-;;5533:72:22;;;;;;:::i;5684:68::-;;;;;;:::i;:::-;;:::i;2782:1005::-;;;:::i;1628:113:7:-;1716:10;:17;1628:113;;4974:339:6;;;;;;:::i;:::-;;:::i;614:23:22:-;;;;;-1:-1:-1;;;;;614:23:22;;;1296:256:7;;;;;;:::i;:::-;;:::i;5384:185:6:-;;;;;;:::i;:::-;;:::i;1818:233:7:-;;;;;;:::i;:::-;;:::i;2219:239:6:-;;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;:::i;:::-;;:::i;1652:94:8:-;;;:::i;3862:529:22:-;;;;;;:::i;:::-;;:::i;4399:919::-;;;;;;:::i;:::-;;:::i;1930:156::-;;;;;;:::i;:::-;1987:4;2011:25;;;:14;:25;;;;;:49;;;2063:15;-1:-1:-1;2011:67:22;1930:156;2094:131;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1001:87:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;1001:87;;2694:104:6;;;:::i;11008:235:22:-;;;;;;:::i;:::-;;:::i;4377:295:6:-;;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;:::i;:::-;;:::i;548:22:22:-;;;;;-1:-1:-1;;;;;548:22:22;;;5924:358;;;;;;:::i;:::-;;:::i;493:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1574:40::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1574:40:22;;;;;;;8786:25:23;;;8842:2;8827:18;;8820:34;;;;8870:18;;;8863:34;;;;8928:2;8913:18;;8906:34;-1:-1:-1;;;;;8977:32:23;8971:3;8956:19;;8949:61;8773:3;8758:19;1574:40:22;8527:489:23;10774:226:22;;;;;;:::i;:::-;;:::i;4743:164:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:8;;;;;;:::i;:::-;;:::i;988:224:7:-;1090:4;-1:-1:-1;;;;;;1114:50:7;;-1:-1:-1;;;1114:50:7;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:7:o;6290:3235:22:-;6377:13;6458:20;6481:14;:24;6496:8;6481:24;;;;;;;;;;;6458:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;6518:22;6743:8;6926:31;6943:7;:13;;;6926:16;:31::i;:::-;6550:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6518:457;;7075:8;7173:28;7190:7;:10;;;7173:16;:28::i;:::-;7310:38;7327:7;:20;;;7310:16;:38::i;:::-;7463:40;7480:7;:22;;;7463:16;:40::i;:::-;7058:464;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7040:483;;7623:8;7724:31;7741:7;:13;;;7724:16;:31::i;:::-;7853:30;7870:7;:12;;;7853:16;:30::i;:::-;7606:296;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7588:315;;8005:8;8107:32;8124:7;:14;;;8107:16;:32::i;:::-;8242:33;8259:7;:15;;;8242:16;:33::i;:::-;8388:39;8405:7;:21;;;8388:16;:39::i;:::-;7988:458;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7970:477;;8518:8;8501:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;8501:35:22;;;;;;;6290:3235;-1:-1:-1;;;;;6290:3235:22:o;2525:100:6:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;4180:73;;;;-1:-1:-1;;;4180:73:6;;18316:2:23;4180:73:6;;;18298:21:23;18355:2;18335:18;;;18328:30;18394:34;18374:18;;;18367:62;-1:-1:-1;;;18445:18:23;;;18438:42;18497:19;;4180:73:6;;;;;;;;;-1:-1:-1;4273:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:6;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:6;:2;-1:-1:-1;;;;;3746:11:6;;;3738:57;;;;-1:-1:-1;;;3738:57:6;;18729:2:23;3738:57:6;;;18711:21:23;18768:2;18748:18;;;18741:30;18807:34;18787:18;;;18780:62;-1:-1:-1;;;18858:18:23;;;18851:31;18899:19;;3738:57:6;18527:397:23;3738:57:6;679:10:3;-1:-1:-1;;;;;3830:21:6;;;;:62;;-1:-1:-1;3855:37:6;3872:5;679:10:3;4743:164:6;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:6;;19131:2:23;3808:168:6;;;19113:21:23;19170:2;19150:18;;;19143:30;19209:34;19189:18;;;19182:62;19280:26;19260:18;;;19253:54;19324:19;;3808:168:6;18929:420:23;3808:168:6;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;5684:68:22:-;10207:10;10229:4;10207:27;;10199:53;;;;-1:-1:-1;;;10199:53:22;;19556:2:23;10199:53:22;;;19538:21:23;19595:2;19575:18;;;19568:30;-1:-1:-1;;;19614:18:23;;;19607:43;19667:18;;10199:53:22;19354:337:23;10199:53:22;5684:68;:::o;2782:1005::-;2842:26;;1716:10:7;:17;2826:42:22;2818:69;;;;-1:-1:-1;;;2818:69:22;;19898:2:23;2818:69:22;;;19880:21:23;19937:2;19917:18;;;19910:30;-1:-1:-1;;;19956:18:23;;;19949:44;20010:18;;2818:69:22;19696:338:23;2818:69:22;3005:21;3064:13;1716:10:7;:17;;1628:113;3064:13:22;3047:60;;;;;;20224:19:23;;;;-1:-1:-1;;3079:10:22;20281:2:23;20277:15;20273:53;20259:12;;;20252:75;3091:15:22;20343:12:23;;;20336:28;20380:12;;3047:60:22;;;-1:-1:-1;;3047:60:22;;;;;;;;;3037:71;;3047:60;3037:71;;;;;-1:-1:-1;3029:80:22;3252:18;3268:2;3037:71;3252:18;:::i;:::-;3247:23;;:2;:23;:::i;:::-;3234:36;-1:-1:-1;3281:20:22;3331:2;3310:17;3324:3;3310:13;:17;:::i;:::-;3309:24;;;;:::i;:::-;3304:29;;:2;:29;:::i;:::-;3281:52;-1:-1:-1;3344:22:22;3397:2;3375:16;3397:2;3375:13;:16;:::i;:::-;:18;;3392:1;3375:18;:::i;:::-;3374:25;;;;:::i;:::-;3369:30;;:2;:30;:::i;:::-;3344:55;-1:-1:-1;3410:13:22;3454:2;3432:16;3454:2;3432:13;:16;:::i;:::-;:18;;3449:1;3432:18;:::i;:::-;3431:25;;;;:::i;:::-;3426:30;;:2;:30;:::i;:::-;3410:46;-1:-1:-1;3467:15:22;3516:1;3494:16;3508:2;3494:13;:16;:::i;:::-;:18;;3511:1;3494:18;:::i;:::-;3493:24;;;;:::i;:::-;3485:33;;;;;;;;:::i;:::-;3467:51;;3531:20;3555:82;;;;;;;;3561:1;3555:82;;;;3564:2;3555:82;;;;3568:12;3555:82;;;;3582:14;3555:82;;;;3598:5;3555:82;;;;3605:1;3555:82;;;;3608:1;3555:82;;;;3611:1;3555:82;;;;3614:1;3555:82;;;;3617:1;3555:82;;;;3620:1;3555:82;;;;3623:1;3555:82;;;;3626:1;3555:82;;;;3629:7;3555:82;;;;;;;;:::i;:::-;;;3531:106;-1:-1:-1;3531:106:22;3648:14;:29;3663:13;1716:10:7;:17;;1628:113;3663:13:22;3648:29;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3698:36;3708:10;3720:13;1716:10:7;:17;;1628:113;3720:13:22;3698:9;:36::i;:::-;2807:980;;;;;;;2782:1005::o;4974:339:6:-;5169:41;679:10:3;5202:7:6;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:6;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:7:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:7;;21835:2:23;1413:87:7;;;21817:21:23;21874:2;21854:18;;;21847:30;21913:34;21893:18;;;21886:62;-1:-1:-1;;;21964:18:23;;;21957:41;22015:19;;1413:87:7;21633:407:23;1413:87:7;-1:-1:-1;;;;;;1518:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;5384:185:6:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;1818:233:7:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:7;;22247:2:23;1913:95:7;;;22229:21:23;22286:2;22266:18;;;22259:30;22325:34;22305:18;;;22298:62;-1:-1:-1;;;22376:18:23;;;22369:42;22428:19;;1913:95:7;22045:408:23;1913:95:7;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:6:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:6;2362:19;2354:73;;;;-1:-1:-1;;;2354:73:6;;22792:2:23;2354:73:6;;;22774:21:23;22831:2;22811:18;;;22804:30;22870:34;22850:18;;;22843:62;-1:-1:-1;;;22921:18:23;;;22914:39;22970:19;;2354:73:6;22590:405:23;1949:208:6;2021:7;-1:-1:-1;;;;;2049:19:6;;2041:74;;;;-1:-1:-1;;;2041:74:6;;23202:2:23;2041:74:6;;;23184:21:23;23241:2;23221:18;;;23214:30;23280:34;23260:18;;;23253:62;-1:-1:-1;;;23331:18:23;;;23324:40;23381:19;;2041:74:6;23000:406:23;2041:74:6;-1:-1:-1;;;;;;2133:16:6;;;;;:9;:16;;;;;;;1949:208::o;1652:94:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;3862:529:22:-;3947:10;3926:17;3934:8;3926:7;:17::i;:::-;-1:-1:-1;;;;;3926:31:22;;3918:57;;;;-1:-1:-1;;;3918:57:22;;23974:2:23;3918:57:22;;;23956:21:23;24013:2;23993:18;;;23986:30;-1:-1:-1;;;24032:18:23;;;24025:43;24085:18;;3918:57:22;23772:337:23;3918:57:22;3994:24;;;;:14;:24;;;;;;;;:44;;:49;3986:79;;;;-1:-1:-1;;;3986:79:22;;24316:2:23;3986:79:22;;;24298:21:23;24355:2;24335:18;;;24328:30;-1:-1:-1;;;24374:18:23;;;24367:47;24431:18;;3986:79:22;24114:341:23;3986:79:22;4110:21;4134:24;;;:14;:24;;;;;;;;4199:15;4169:27;;;:45;;;4277:40;;4134:24;;4259:58;;4277:40;4259:58;:::i;:::-;4225:31;;;:92;4335:48;;;4345:10;24634:51:23;;4367:15:22;24716:2:23;24701:18;;24694:34;4357:8:22;;4335:48;;24607:18:23;4335:48:22;;;;;;;3907:484;3862:529;:::o;4399:919::-;10578:7;;-1:-1:-1;;;;;10578:7:22;10564:10;:21;10542:107;;;;-1:-1:-1;;;10542:107:22;;24941:2:23;10542:107:22;;;24923:21:23;24980:2;24960:18;;;24953:30;25019:34;24999:18;;;24992:62;-1:-1:-1;;;25070:18:23;;;25063:34;25114:19;;10542:107:22;24739:400:23;10542:107:22;4577:11:::1;4566:7;:22;;;;;;;;:::i;:::-;;4563:306;;;4604:27;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;4640:1:::1;::::0;4604:27;:37:::1;::::0;4640:1;;4604:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4656:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;4694:1:::1;::::0;4656:27;:39:::1;::::0;4694:1;;4656:39:::1;:::i;:::-;::::0;;;-1:-1:-1;4563:306:22::1;::::0;-1:-1:-1;4563:306:22::1;;4738:12;4727:7;:23;;;;;;;;:::i;:::-;;4724:145;;;4766:27;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;4804:1:::1;::::0;4766:27;:39:::1;::::0;4804:1;;4766:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;4820:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;4856:1:::1;::::0;4820:27;:37:::1;::::0;4856:1;;4820:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4724:145:22::1;4881:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;4926:10;;4881:27;:55:::1;::::0;4926:10;;4881:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4399:919:22:o;2094:131::-;2160:12;;:::i;:::-;2192:14;:25;2207:9;2192:25;;;;;;;;;;;2185:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;2185:32:22;2094:131;-1:-1:-1;;2094:131:22:o;2694:104:6:-;2750:13;2783:7;2776:14;;;;;:::i;11008:235:22:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;11089:23:22;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;11129:8:22::1;::::0;-1:-1:-1;;;;;11116:21:22;;::::1;11129:8:::0;::::1;11116:21;;11089:48;11081:85;;;::::0;-1:-1:-1;;;11081:85:22;;25346:2:23;11081:85:22::1;::::0;::::1;25328:21:23::0;25385:2;25365:18;;;25358:30;-1:-1:-1;;;25404:18:23;;;25397:54;25468:18;;11081:85:22::1;25144:348:23::0;11081:85:22::1;11177:8;:20:::0;;-1:-1:-1;;;;;;11177:20:22::1;-1:-1:-1::0;;;;;11177:20:22;::::1;::::0;;::::1;::::0;;;11213:22:::1;::::0;3171:51:23;;;11213:22:22::1;::::0;3159:2:23;3144:18;11213:22:22::1;;;;;;;;11008:235:::0;:::o;4377:295:6:-;-1:-1:-1;;;;;4480:24:6;;679:10:3;4480:24:6;;4472:62;;;;-1:-1:-1;;;4472:62:6;;25699:2:23;4472:62:6;;;25681:21:23;25738:2;25718:18;;;25711:30;25777:27;25757:18;;;25750:55;25822:18;;4472:62:6;25497:349:23;4472:62:6;679:10:3;4547:32:6;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:6;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:6;;;;;;;;;;4616:48;;540:41:23;;;4547:42:6;;679:10:3;4616:48:6;;513:18:23;4616:48:6;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:3;5848:7:6;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:6;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;5924:358:22:-;7543:4:6;7567:16;;;:7;:16;;;;;;5998:13:22;;-1:-1:-1;;;;;7567:16:6;6024:77:22;;;;-1:-1:-1;;;6024:77:22;;26053:2:23;6024:77:22;;;26035:21:23;26092:2;26072:18;;;26065:30;26131:34;26111:18;;;26104:62;-1:-1:-1;;;26182:18:23;;;26175:45;26237:19;;6024:77:22;25851:411:23;6024:77:22;6152:122;6167:8;6152:122;;;;;;;;;;;;;;;;;:14;:122::i;10774:226::-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;10853:22:22;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;10891:7:22::1;::::0;-1:-1:-1;;;;;10879:19:22;;::::1;10891:7:::0;::::1;10879:19;;10853:45;10845:82;;;::::0;-1:-1:-1;;;10845:82:22;;25346:2:23;10845:82:22::1;::::0;::::1;25328:21:23::0;25385:2;25365:18;;;25358:30;-1:-1:-1;;;25404:18:23;;;25397:54;25468:18;;10845:82:22::1;25144:348:23::0;10845:82:22::1;10938:7;:18:::0;;-1:-1:-1;;;;;;10938:18:22::1;-1:-1:-1::0;;;;;10938:18:22;::::1;::::0;;::::1;::::0;;;10972:20:::1;::::0;3171:51:23;;;10972:20:22::1;::::0;3159:2:23;3144:18;10972:20:22::1;3025:203:23::0;1901:192:8;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:8;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:8;;26469:2:23;1982:73:8::1;::::0;::::1;26451:21:23::0;26508:2;26488:18;;;26481:30;26547:34;26527:18;;;26520:62;-1:-1:-1;;;26598:18:23;;;26591:36;26644:19;;1982:73:8::1;26267:402:23::0;1982:73:8::1;2066:19;2076:8;2066:9;:19::i;1580:305:6:-:0;1682:4;-1:-1:-1;;;;;;1719:40:6;;-1:-1:-1;;;1719:40:6;;:105;;-1:-1:-1;;;;;;;1776:48:6;;-1:-1:-1;;;1776:48:6;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:4;;;1841:36:6;799:157:4;286:723:21;342:13;563:10;559:53;;-1:-1:-1;;590:10:21;;;;;;;;;;;;-1:-1:-1;;;590:10:21;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:21;;-1:-1:-1;742:2:21;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:21;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:21;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:21;;;;;;;;-1:-1:-1;947:11:21;956:2;947:11;;:::i;:::-;;;816:154;;;994:6;286:723;-1:-1:-1;;;;286:723:21:o;11460:174:6:-;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:6;-1:-1:-1;;;;;11535:29:6;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:6;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;7882:73;;;;-1:-1:-1;;;7882:73:6;;27146:2:23;7882:73:6;;;27128:21:23;27185:2;27165:18;;;27158:30;27224:34;27204:18;;;27197:62;-1:-1:-1;;;27275:18:23;;;27268:42;27327:19;;7882:73:6;26944:408:23;7882:73:6;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:6;:7;-1:-1:-1;;;;;8024:16:6;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:6;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:6;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:6;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:6;;10888:85;;;;-1:-1:-1;;;10888:85:6;;27559:2:23;10888:85:6;;;27541:21:23;27598:2;27578:18;;;27571:30;27637:34;27617:18;;;27610:62;-1:-1:-1;;;27688:18:23;;;27681:39;27737:19;;10888:85:6;27357:405:23;10888:85:6;-1:-1:-1;;;;;10992:16:6;;10984:65;;;;-1:-1:-1;;;10984:65:6;;27969:2:23;10984:65:6;;;27951:21:23;28008:2;27988:18;;;27981:30;28047:34;28027:18;;;28020:62;-1:-1:-1;;;28098:18:23;;;28091:34;28142:19;;10984:65:6;27767:400:23;10984:65:6;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:6;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:6;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:6;-1:-1:-1;;;;;11268:21:6;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:6:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:6;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:6;;;;;;;:::i;2664:589:7:-;-1:-1:-1;;;;;2870:18:7;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:7;:4;-1:-1:-1;;;;;2967:10:7;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:7;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:7;:2;-1:-1:-1;;;;;3167:10:7;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:6:-;12354:4;-1:-1:-1;;;;;12375:13:6;;1064:20:20;1112:8;12371:624:6;;12411:72;;-1:-1:-1;;;12411:72:6;;-1:-1:-1;;;;;12411:36:6;;;;;:72;;679:10:3;;12462:4:6;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:6;;;;;;;;-1:-1:-1;;12411:72:6;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12657:13:6;;12653:272;;12700:60;;-1:-1:-1;;;12700:60:6;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:6;-1:-1:-1;;;12534:55:6;;-1:-1:-1;12527:62:6;;12371:624;-1:-1:-1;12979:4:6;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:6;;9528:61;;;;-1:-1:-1;;;9528:61:6;;29552:2:23;9528:61:6;;;29534:21:23;;;29571:18;;;29564:30;29630:34;29610:18;;;29603:62;29682:18;;9528:61:6;29350:356:23;9528:61:6;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;:30;9600:58;;;;-1:-1:-1;;;9600:58:6;;29913:2:23;9600:58:6;;;29895:21:23;29952:2;29932:18;;;29925:30;29991;29971:18;;;29964:58;30039:18;;9600:58:6;29711:352:23;9600:58:6;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:6;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:6;-1:-1:-1;;;;;9758:21:6;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:7:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:7;;;5245:328;;-1:-1:-1;;;;;5316:18:7;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:7;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:7;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:7;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:131:23:-;-1:-1:-1;;;;;;88:32:23;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:23:o;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:23;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:519::-;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1552:9;1539:23;1529:33;;1613:2;1602:9;1598:18;1585:32;1640:18;1632:6;1629:30;1626:50;;;1672:1;1669;1662:12;1626:50;1695:22;;1748:4;1740:13;;1736:27;-1:-1:-1;1726:55:23;;1777:1;1774;1767:12;1726:55;1800:74;1866:7;1861:2;1848:16;1843:2;1839;1835:11;1800:74;:::i;:::-;1790:84;;;1361:519;;;;;:::o;1885:258::-;1957:1;1967:113;1981:6;1978:1;1975:13;1967:113;;;2057:11;;;2051:18;2038:11;;;2031:39;2003:2;1996:10;1967:113;;;2098:6;2095:1;2092:13;2089:48;;;-1:-1:-1;;2133:1:23;2115:16;;2108:27;1885:258::o;2148:269::-;2201:3;2239:5;2233:12;2266:6;2261:3;2254:19;2282:63;2338:6;2331:4;2326:3;2322:14;2315:4;2308:5;2304:16;2282:63;:::i;:::-;2399:2;2378:15;-1:-1:-1;;2374:29:23;2365:39;;;;2406:4;2361:50;;2148:269;-1:-1:-1;;2148:269:23:o;2422:231::-;2571:2;2560:9;2553:21;2534:4;2591:56;2643:2;2632:9;2628:18;2620:6;2591:56;:::i;2658:180::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;-1:-1:-1;2809:23:23;;2658:180;-1:-1:-1;2658:180:23:o;3233:173::-;3301:20;;-1:-1:-1;;;;;3350:31:23;;3340:42;;3330:70;;3396:1;3393;3386:12;3330:70;3233:173;;;:::o;3411:254::-;3479:6;3487;3540:2;3528:9;3519:7;3515:23;3511:32;3508:52;;;3556:1;3553;3546:12;3508:52;3579:29;3598:9;3579:29;:::i;:::-;3569:39;3655:2;3640:18;;;;3627:32;;-1:-1:-1;;;3411:254:23:o;3670:328::-;3747:6;3755;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;;3903:38;3937:2;3926:9;3922:18;3903:38;:::i;:::-;3893:48;;3988:2;3977:9;3973:18;3960:32;3950:42;;3670:328;;;;;:::o;4003:186::-;4062:6;4115:2;4103:9;4094:7;4090:23;4086:32;4083:52;;;4131:1;4128;4121:12;4083:52;4154:29;4173:9;4154:29;:::i;4194:542::-;4301:6;4309;4317;4325;4333;4386:3;4374:9;4365:7;4361:23;4357:33;4354:53;;;4403:1;4400;4393:12;4354:53;4439:9;4426:23;4416:33;;4496:2;4485:9;4481:18;4468:32;4458:42;;4550:2;4539:9;4535:18;4522:32;4583:1;4576:5;4573:12;4563:40;;4599:1;4596;4589:12;4563:40;4194:542;;;;-1:-1:-1;4622:5:23;;4674:2;4659:18;;4646:32;;-1:-1:-1;4725:3:23;4710:19;4697:33;;4194:542;-1:-1:-1;;4194:542:23:o;4741:127::-;4802:10;4797:3;4793:20;4790:1;4783:31;4833:4;4830:1;4823:15;4857:4;4854:1;4847:15;4873:235;4952:1;4945:5;4942:12;4932:143;;4997:10;4992:3;4988:20;4985:1;4978:31;5032:4;5029:1;5022:15;5060:4;5057:1;5050:15;4932:143;5084:18;;4873:235::o;5113:1234::-;5251:4;5293:3;5282:9;5278:19;5270:27;;5330:6;5324:13;5313:9;5306:32;5394:4;5386:6;5382:17;5376:24;5369:4;5358:9;5354:20;5347:54;5457:4;5449:6;5445:17;5439:24;5432:4;5421:9;5417:20;5410:54;5520:4;5512:6;5508:17;5502:24;5495:4;5484:9;5480:20;5473:54;5583:4;5575:6;5571:17;5565:24;5558:4;5547:9;5543:20;5536:54;5646:4;5638:6;5634:17;5628:24;5621:4;5610:9;5606:20;5599:54;5709:4;5701:6;5697:17;5691:24;5684:4;5673:9;5669:20;5662:54;5772:4;5764:6;5760:17;5754:24;5747:4;5736:9;5732:20;5725:54;5798:6;5858:2;5850:6;5846:15;5840:22;5835:2;5824:9;5820:18;5813:50;;5882:6;5942:2;5934:6;5930:15;5924:22;5919:2;5908:9;5904:18;5897:50;;5966:6;6026:2;6018:6;6014:15;6008:22;6003:2;5992:9;5988:18;5981:50;;6050:6;6110:2;6102:6;6098:15;6092:22;6087:2;6076:9;6072:18;6065:50;;6134:6;6194:2;6186:6;6182:15;6176:22;6171:2;6160:9;6156:18;6149:50;;6218:6;6271:2;6263:6;6259:15;6253:22;6284:57;6337:2;6326:9;6322:18;6308:12;6284:57;:::i;:::-;;;5113:1234;;;;:::o;6352:347::-;6417:6;6425;6478:2;6466:9;6457:7;6453:23;6449:32;6446:52;;;6494:1;6491;6484:12;6446:52;6517:29;6536:9;6517:29;:::i;:::-;6507:39;;6596:2;6585:9;6581:18;6568:32;6643:5;6636:13;6629:21;6622:5;6619:32;6609:60;;6665:1;6662;6655:12;6609:60;6688:5;6678:15;;;6352:347;;;;;:::o;6704:667::-;6799:6;6807;6815;6823;6876:3;6864:9;6855:7;6851:23;6847:33;6844:53;;;6893:1;6890;6883:12;6844:53;6916:29;6935:9;6916:29;:::i;:::-;6906:39;;6964:38;6998:2;6987:9;6983:18;6964:38;:::i;:::-;6954:48;;7049:2;7038:9;7034:18;7021:32;7011:42;;7104:2;7093:9;7089:18;7076:32;7131:18;7123:6;7120:30;7117:50;;;7163:1;7160;7153:12;7117:50;7186:22;;7239:4;7231:13;;7227:27;-1:-1:-1;7217:55:23;;7268:1;7265;7258:12;7217:55;7291:74;7357:7;7352:2;7339:16;7334:2;7330;7326:11;7291:74;:::i;:::-;7281:84;;;6704:667;;;;;;;:::o;7376:1146::-;7846:4;7888:3;7877:9;7873:19;7865:27;;7919:6;7908:9;7901:25;7962:6;7957:2;7946:9;7942:18;7935:34;8005:6;8000:2;7989:9;7985:18;7978:34;8048:6;8043:2;8032:9;8028:18;8021:34;8092:6;8086:3;8075:9;8071:19;8064:35;8136:6;8130:3;8119:9;8115:19;8108:35;8180:6;8174:3;8163:9;8159:19;8152:35;8224:6;8218:3;8207:9;8203:19;8196:35;8268:6;8262:3;8251:9;8247:19;8240:35;8312:6;8306:3;8295:9;8291:19;8284:35;8356:7;8350:3;8339:9;8335:19;8328:36;8401:7;8395:3;8384:9;8380:19;8373:36;8446:7;8440:3;8429:9;8425:19;8418:36;8463:53;8511:3;8500:9;8496:19;8487:7;8463:53;:::i;:::-;7376:1146;;;;;;;;;;;;;;;;;:::o;9021:260::-;9089:6;9097;9150:2;9138:9;9129:7;9125:23;9121:32;9118:52;;;9166:1;9163;9156:12;9118:52;9189:29;9208:9;9189:29;:::i;:::-;9179:39;;9237:38;9271:2;9260:9;9256:18;9237:38;:::i;:::-;9227:48;;9021:260;;;;;:::o;9286:185::-;9328:3;9366:5;9360:12;9381:52;9426:6;9421:3;9414:4;9407:5;9403:16;9381:52;:::i;:::-;9449:16;;;;;9286:185;-1:-1:-1;;9286:185:23:o;9596:1883::-;10512:66;10500:79;;10609:66;10604:2;10595:12;;10588:88;10706:34;10701:2;10692:12;;10685:56;-1:-1:-1;;;10766:2:23;10757:12;;10750:46;-1:-1:-1;;;10821:2:23;10812:12;;10805:58;10886:13;;-1:-1:-1;;10908:61:23;10886:13;10956:3;10947:13;;10942:2;10930:15;;10908:61;:::i;:::-;-1:-1:-1;;;11028:3:23;10988:16;;;11020:12;;;11013:34;-1:-1:-1;;;11071:3:23;11063:12;;11056:70;11156:66;11150:3;11142:12;;11135:88;11253:66;11247:3;11239:12;;11232:88;-1:-1:-1;;;11344:3:23;11336:12;;11329:58;11403:70;11433:39;11467:3;11459:12;;11451:6;11433:39;:::i;:::-;-1:-1:-1;;;9541:17:23;;9583:1;9574:11;;9476:115;11403:70;11396:77;9596:1883;-1:-1:-1;;;;;9596:1883:23:o;11484:2085::-;12365:3;12403:6;12397:13;12419:53;12465:6;12460:3;12453:4;12445:6;12441:17;12419:53;:::i;:::-;12503:6;12498:3;12494:16;12481:29;;12529:66;12618:2;12611:5;12604:17;12655:66;12648:4;12641:5;12637:16;12630:92;12753:6;12747:13;12769:66;12826:8;12821:2;12814:5;12810:14;12803:4;12795:6;12791:17;12769:66;:::i;:::-;-1:-1:-1;;;12921:2:23;12854:20;;;;12913:11;;;12906:23;;;12953:2;12945:11;;12938:23;;;12990:66;12985:2;12977:11;;12970:87;-1:-1:-1;;;13081:3:23;13073:12;;13066:44;13135:13;;13157:64;13135:13;13206:3;13198:12;;13191:4;13179:17;;13157:64;:::i;:::-;13281:3;13240:17;;13273:12;;;13266:24;13314:3;13306:12;;13299:24;13353:66;13347:3;13339:12;;13332:88;-1:-1:-1;;;13444:3:23;13436:12;;13429:48;13493:70;13523:39;13557:3;13549:12;;13541:6;13523:39;:::i;13493:70::-;13486:77;11484:2085;-1:-1:-1;;;;;;;11484:2085:23:o;13574:1537::-;14205:3;14243:6;14237:13;14259:53;14305:6;14300:3;14293:4;14285:6;14281:17;14259:53;:::i;:::-;14343:6;14338:3;14334:16;14321:29;;14369:66;14458:2;14451:5;14444:17;14495:66;14488:4;14481:5;14477:16;14470:92;14593:6;14587:13;14609:66;14666:8;14661:2;14654:5;14650:14;14643:4;14635:6;14631:17;14609:66;:::i;:::-;14705:8;14698:5;14694:20;14684:30;;;-1:-1:-1;;;14766:2:23;14761;14757;14753:11;14746:23;14798:2;14793;14789;14785:11;14778:23;14830:66;14825:2;14821;14817:11;14810:87;14928:6;14922:13;14906:29;;14944:64;14999:8;14993:3;14989:2;14985:12;14978:4;14970:6;14966:17;14944:64;:::i;:::-;15068:3;15027:17;;;;15060:12;;;15053:24;15101:3;15093:12;;13574:1537;-1:-1:-1;;;;;13574:1537:23:o;15116:2028::-;15997:3;16035:6;16029:13;16051:53;16097:6;16092:3;16085:4;16077:6;16073:17;16051:53;:::i;:::-;16135:6;16130:3;16126:16;16113:29;;16161:66;16250:2;16243:5;16236:17;16287:66;16280:4;16273:5;16269:16;16262:92;16385:6;16379:13;16401:66;16458:8;16453:2;16446:5;16442:14;16435:4;16427:6;16423:17;16401:66;:::i;:::-;16497:8;16490:5;16486:20;16476:30;;;-1:-1:-1;;;16558:2:23;16553;16549;16545:11;16538:23;16590:2;16585;16581;16577:11;16570:23;16622:66;16617:2;16613;16609:11;16602:87;16720:6;16714:13;16736:64;16791:8;16785:3;16781:2;16777:12;16770:4;16762:6;16758:17;16736:64;:::i;:::-;16860:3;16819:17;;16852:12;;;16845:24;16893:3;16885:12;;16878:24;16932:66;16926:3;16918:12;;16911:88;-1:-1:-1;;;17023:3:23;17015:12;;17008:44;17068:70;17098:39;17132:3;17124:12;;17116:6;17098:39;:::i;17149:575::-;17482:3;17520:6;17514:13;17536:53;17582:6;17577:3;17570:4;17562:6;17558:17;17536:53;:::i;:::-;-1:-1:-1;;;17611:16:23;;17636:18;;;-1:-1:-1;;;;17681:1:23;17670:13;;17663:26;17716:1;17705:13;;17149:575;-1:-1:-1;17149:575:23:o;17729:380::-;17808:1;17804:12;;;;17851;;;17872:61;;17926:4;17918:6;17914:17;17904:27;;17872:61;17979:2;17971:6;17968:14;17948:18;17945:38;17942:161;;;18025:10;18020:3;18016:20;18013:1;18006:31;18060:4;18057:1;18050:15;18088:4;18085:1;18078:15;17942:161;;17729:380;;;:::o;20403:127::-;20464:10;20459:3;20455:20;20452:1;20445:31;20495:4;20492:1;20485:15;20519:4;20516:1;20509:15;20535:112;20567:1;20593;20583:35;;20598:18;;:::i;:::-;-1:-1:-1;20632:9:23;;20535:112::o;20652:127::-;20713:10;20708:3;20704:20;20701:1;20694:31;20744:4;20741:1;20734:15;20768:4;20765:1;20758:15;20784:128;20824:3;20855:1;20851:6;20848:1;20845:13;20842:39;;;20861:18;;:::i;:::-;-1:-1:-1;20897:9:23;;20784:128::o;20917:120::-;20957:1;20983;20973:35;;20988:18;;:::i;:::-;-1:-1:-1;21022:9:23;;20917:120::o;21042:168::-;21082:7;21148:1;21144;21140:6;21136:14;21133:1;21130:21;21125:1;21118:9;21111:17;21107:45;21104:71;;;21155:18;;:::i;:::-;-1:-1:-1;21195:9:23;;21042:168::o;21215:413::-;21417:2;21399:21;;;21456:2;21436:18;;;21429:30;21495:34;21490:2;21475:18;;21468:62;-1:-1:-1;;;21561:2:23;21546:18;;21539:47;21618:3;21603:19;;21215:413::o;22458:127::-;22519:10;22514:3;22510:20;22507:1;22500:31;22550:4;22547:1;22540:15;22574:4;22571:1;22564:15;23411:356;23613:2;23595:21;;;23632:18;;;23625:30;23691:34;23686:2;23671:18;;23664:62;23758:2;23743:18;;23411:356::o;26674:135::-;26713:3;-1:-1:-1;;26734:17:23;;26731:43;;;26754:18;;:::i;:::-;-1:-1:-1;26801:1:23;26790:13;;26674:135::o;26814:125::-;26854:4;26882:1;26879;26876:8;26873:34;;;26887:18;;:::i;:::-;-1:-1:-1;26924:9:23;;26814:125::o;28172:414::-;28374:2;28356:21;;;28413:2;28393:18;;;28386:30;28452:34;28447:2;28432:18;;28425:62;-1:-1:-1;;;28518:2:23;28503:18;;28496:48;28576:3;28561:19;;28172:414::o;28591:500::-;-1:-1:-1;;;;;28860:15:23;;;28842:34;;28912:15;;28907:2;28892:18;;28885:43;28959:2;28944:18;;28937:34;;;29007:3;29002:2;28987:18;;28980:31;;;28785:4;;29028:57;;29065:19;;29057:6;29028:57;:::i;:::-;29020:65;28591:500;-1:-1:-1;;;;;;28591:500:23:o;29096:249::-;29165:6;29218:2;29206:9;29197:7;29193:23;29189:32;29186:52;;;29234:1;29231;29224:12;29186:52;29266:9;29260:16;29285:30;29309:5;29285:30;:::i;30068:127::-;30129:10;30124:3;30120:20;30117:1;30110:31;30160:4;30157:1;30150:15;30184:4;30181:1;30174:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    359,
    11248
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87BFC7F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82AFD23B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8CB22518 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x8140BD0B EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xC457CE4 EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x2282 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2335 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x272 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x272 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FE JUMP JUMPDEST PUSH2 0x110A JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2483 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29B JUMP JUMPDEST PUSH2 0x251 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x136A JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x2569 JUMP JUMPDEST PUSH2 0x151B JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x4E8 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD SWAP12 DUP12 ADD SLOAD PUSH1 0xC DUP13 ADD SLOAD PUSH1 0xD SWAP1 SWAP13 ADD SLOAD SWAP11 SWAP13 SWAP10 SWAP12 SWAP9 SWAP11 SWAP8 SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25E5 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x525 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x5B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5DD JUMPI POP PUSH2 0x5DD DUP3 PUSH2 0x1771 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AC PUSH2 0x244B JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BD PUSH2 0x244B JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x6D3 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E4 SWAP3 SWAP2 SWAP1 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x703 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x710 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x71D DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x730 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x74F DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x75C DUP5 PUSH1 0xA0 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x78D DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x79A DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH2 0x7A8 DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x17C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x805 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x831 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x853 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x861 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x99B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x9B7 JUMPI POP PUSH2 0x9B7 DUP2 CALLER PUSH2 0x577 JUMP JUMPDEST PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0xA33 DUP4 DUP4 PUSH2 0x18C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ ISZERO PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACA PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB1D PUSH1 0x1A DUP4 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0xB28 SWAP1 PUSH1 0x19 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1A PUSH2 0xB39 PUSH1 0x64 DUP6 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0xB4E SWAP1 PUSH1 0x19 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB5E DUP2 DUP7 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0xB69 SWAP1 PUSH1 0x4 PUSH2 0x2C03 JUMP JUMPDEST PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0xB7E SWAP1 PUSH1 0xA PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB8E DUP2 DUP8 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0xB99 SWAP1 PUSH1 0x5 PUSH2 0x2C03 JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0xBAE SWAP1 PUSH1 0xA PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xBBF PUSH1 0xA DUP9 PUSH2 0x2BEF JUMP JUMPDEST PUSH2 0xBCA SWAP1 PUSH1 0x6 PUSH2 0x2C03 JUMP JUMPDEST PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x2BAD JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBE5 JUMPI PUSH2 0xBE5 PUSH2 0x244B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0x244B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xC70 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0x244B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xD4A CALLER PUSH2 0xD45 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1935 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD5D CALLER DUP3 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0xA33 DUP4 DUP4 DUP4 PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8F DUP4 PUSH2 0xF3F JUMP JUMPDEST DUP3 LT PUSH2 0xDF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA33 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEB6 JUMPI PUSH2 0xEB6 PUSH2 0x2C73 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C89 JUMP JUMPDEST PUSH2 0xFFA PUSH1 0x0 PUSH2 0x1BF1 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1006 DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x11 SLOAD SWAP1 SWAP2 PUSH2 0x10C7 SWAP2 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x244B JUMP JUMPDEST EQ ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11AC SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11D3 SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1247 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F2 JUMPI PUSH2 0x11F2 PUSH2 0x244B JUMP JUMPDEST EQ ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x121A SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1241 SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1268 SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x127C PUSH2 0x213D JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1341 JUMPI PUSH2 0x1341 PUSH2 0x244B JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1352 JUMPI PUSH2 0x1352 PUSH2 0x244B JUMP JUMPDEST SWAP1 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x805 SWAP1 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1394 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13BA JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x14AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1525 CALLER DUP4 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C22 JUMP JUMPDEST PUSH2 0x154D DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C43 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x5DD DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DB3 PUSH1 0x5E SWAP2 CODECOPY PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x161E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1644 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x168B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0x144B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2C89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0xA78 DUP2 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x17A2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5DD JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x17E5 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x180F JUMPI DUP1 PUSH2 0x17F9 DUP2 PUSH2 0x2CBE JUMP JUMPDEST SWAP2 POP PUSH2 0x1808 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2BEF JUMP JUMPDEST SWAP2 POP PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x182A JUMPI PUSH2 0x182A PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1854 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x18BF JUMPI PUSH2 0x1869 PUSH1 0x1 DUP4 PUSH2 0x2CD9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1876 PUSH1 0xA DUP7 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0x1881 SWAP1 PUSH1 0x30 PUSH2 0x2BD7 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1896 JUMPI PUSH2 0x1896 PUSH2 0x2C73 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x18B8 PUSH1 0xA DUP7 PUSH2 0x2BEF JUMP JUMPDEST SWAP5 POP PUSH2 0x1858 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x18FC DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x194F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1C76 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D7 DUP4 PUSH2 0xEC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1A12 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A07 DUP5 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x18BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18BF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A59 DUP3 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x1B2E DUP4 DUP4 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST PUSH2 0x1B39 PUSH1 0x0 DUP3 PUSH2 0x18C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1B62 SWAP1 DUP5 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1B90 SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C4E DUP5 DUP5 DUP5 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x1C5A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x154D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST PUSH2 0x1C80 DUP4 DUP4 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D04 JUMPI PUSH2 0x1CFF DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1D27 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D27 JUMPI PUSH2 0x1D27 DUP4 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D3E JUMPI PUSH2 0xA33 DUP2 PUSH2 0x204A JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA33 JUMPI PUSH2 0xA33 DUP3 DUP3 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1DA5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DE0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DDD SWAP2 DUP2 ADD SWAP1 PUSH2 0x2D7F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E3A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2CF0 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x18BF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1EB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1F1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x1F26 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1F4F SWAP1 DUP5 SWAP1 PUSH2 0x2BD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1FBA DUP5 PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x1FC4 SWAP2 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2017 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x205C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2CD9 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2084 JUMPI PUSH2 0x2084 PUSH2 0x2C73 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x20A5 JUMPI PUSH2 0x20A5 PUSH2 0x2C73 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x20DD JUMPI PUSH2 0x20DD PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP4 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21B7 JUMPI PUSH2 0x21B7 PUSH2 0x244B JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21EF DUP2 PUSH2 0x21BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2227 JUMPI PUSH2 0x2227 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x224F JUMPI PUSH2 0x224F PUSH2 0x21F6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x22C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22D3 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22E0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x154D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2321 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2309 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x235A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2399 DUP4 PUSH2 0x2361 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23C5 DUP5 PUSH2 0x2361 JUMP JUMPDEST SWAP3 POP PUSH2 0x23D3 PUSH1 0x20 DUP6 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21EF DUP3 PUSH2 0x2361 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x247F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD PUSH2 0x2525 DUP3 DUP6 ADD DUP3 PUSH2 0x2461 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2549 DUP4 PUSH2 0x2361 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x255E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x257F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2588 DUP6 PUSH2 0x2361 JUMP JUMPDEST SWAP4 POP PUSH2 0x2596 PUSH1 0x20 DUP7 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x25CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25D9 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP16 DUP3 MSTORE DUP15 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE DUP13 PUSH1 0x60 DUP4 ADD MSTORE DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE DUP6 PUSH2 0x140 DUP4 ADD MSTORE DUP5 PUSH2 0x160 DUP4 ADD MSTORE DUP4 PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x264C PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x267B DUP4 PUSH2 0x2361 JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 PUSH1 0x20 DUP5 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x26A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22DD JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2757 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x27FF PUSH2 0x27F1 PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x2692 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x281A DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x22DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x287C DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x3A SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3C DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C PUSH1 0x5C DUP5 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0x7C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x28DC DUP2 PUSH1 0x81 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x81 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x83 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276 PUSH1 0xA3 DUP3 ADD MSTORE PUSH7 0x30B63AB2911D1 PUSH1 0xCD SHL PUSH1 0xC3 DUP3 ADD MSTORE PUSH2 0x292F PUSH2 0x27F1 PUSH1 0xCA DUP4 ADD DUP7 PUSH2 0x2692 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x294C DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x22DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20227370656564222C202276616C7565223A20000000 PUSH1 0x20 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x29AE DUP2 PUSH1 0x3D DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x22DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3D DUP5 ADD MSTORE DUP2 PUSH1 0x3F DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000 PUSH1 0x5F DUP5 ADD MSTORE DUP6 MLOAD SWAP2 POP PUSH2 0x2A01 DUP3 PUSH1 0x79 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x79 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7B ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2A29 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x22DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x2A8B DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x22DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x2ADC DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x292F PUSH2 0x27F1 PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2B3F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2B70 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2B91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BBC JUMPI PUSH2 0x2BBC PUSH2 0x2B97 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2BEA JUMPI PUSH2 0x2BEA PUSH2 0x2BC1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BFE JUMPI PUSH2 0x2BFE PUSH2 0x2B97 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2C1D JUMPI PUSH2 0x2C1D PUSH2 0x2BC1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2CD2 JUMPI PUSH2 0x2CD2 PUSH2 0x2BC1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEB PUSH2 0x2BC1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2D75 SWAP1 DUP4 ADD DUP5 PUSH2 0x2309 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21EF DUP2 PUSH2 0x21BC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6173 ORIGIN 0x2E PUSH7 0x7463646E2E6E65 PUSH21 0x2F76322F6A70672F30332F31322F37372F30332F31 ADDRESS ADDRESS ADDRESS 0x5F CHAINID 0x5F CALLER BALANCE ORIGIN CALLDATACOPY CALLDATACOPY ADDRESS CALLER CALLVALUE CODECOPY 0x5F CALLVALUE PUSH13 0x6B464E336532556C4F34336B51 PUSH13 0x46656D464E4970566B47355A77 PUSH26 0x74712E6A7067A2646970667358221220263AA2876DC8FA5EFC11 DUP8 PUSH31 0xFB29D7825D8735A66F2607FFE9C55CD381E8F01E64736F6C634300080C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87BFC7F"
    },
    "60": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87BFC7F"
    },
    "71": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x469"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDB2A0A55"
    },
    "82": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x502"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE52E3249"
    },
    "93": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x556"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x569"
    },
    "108": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "116": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5A5"
    },
    "119": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "120": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "131": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x41D"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB88D4FDE"
    },
    "142": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x430"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBC0B0D88"
    },
    "153": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x443"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87B56DD"
    },
    "164": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x456"
    },
    "168": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "169": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "172": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x82AFD23B"
    },
    "180": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x82AFD23B"
    },
    "191": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3AC"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8CB22518"
    },
    "202": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D1"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F1"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "224": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "225": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x402"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "229": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x97FC007C"
    },
    "235": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "236": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x40A"
    },
    "239": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "240": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "243": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "251": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x36B"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "262": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x37E"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7901EA78"
    },
    "273": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x386"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8140BD0B"
    },
    "284": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "285": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x399"
    },
    "288": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "289": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1249C58B"
    },
    "300": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "306": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F745C59"
    },
    "311": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "312": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F745C59"
    },
    "322": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "323": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31F"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "328": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "333": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "334": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x332"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x437454B9"
    },
    "344": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "345": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D6"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "349": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "350": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F6CCCE7"
    },
    "355": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "356": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x345"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "360": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "361": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6352211E"
    },
    "366": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "367": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x358"
    },
    "370": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "376": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1249C58B"
    },
    "382": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "383": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E9"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "387": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "393": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "394": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "404": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "405": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F9"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "409": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "410": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2B7AC3F3"
    },
    "415": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "416": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30C"
    },
    "419": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "420": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "423": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "426": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "431": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "GT",
      "path": "22"
    },
    "432": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "436": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "437": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "442": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "443": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x288"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "447": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "448": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "453": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "454": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B3"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "458": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "459": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA363D08"
    },
    "464": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "465": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C8"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "470": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC457CE4"
    },
    "475": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "476": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D6"
    },
    "479": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "480": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "483": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "484": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "485": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "486": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FFC9A7"
    },
    "491": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "492": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "496": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "497": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x419E314"
    },
    "502": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "503": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "507": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "508": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5106353"
    },
    "513": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "514": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25E"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "518": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "519": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "524": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "EQ",
      "path": "22"
    },
    "525": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x280"
    },
    "528": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "529": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "530": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "DUP1",
      "path": "22"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        11248
      ],
      "op": "REVERT",
      "path": "22"
    },
    "534": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "535": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x229"
    },
    "538": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x224"
    },
    "541": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "542": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "544": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21D2"
    },
    "547": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "548": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "549": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B8"
    },
    "552": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "553": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "554": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "ISZERO"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "DUP2"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "566": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "568": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "569": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "570": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "571": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "7"
    },
    "572": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "573": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "7"
    },
    "574": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "575": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x251"
    },
    "578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24C"
    },
    "581": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "584": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2282"
    },
    "587": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMP",
      "path": "22"
    },
    "588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5E3"
    },
    "592": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMP",
      "path": "22"
    },
    "593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "594": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x235"
    },
    "600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "602": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2335"
    },
    "605": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMP",
      "path": "22"
    },
    "606": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "607": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x272"
    },
    "610": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C"
    },
    "613": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "614": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "616": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "619": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5375,
        5447
      ],
      "op": "JUMP",
      "path": "22"
    },
    "620": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5428,
        5435
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "624": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5428,
        5435
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "625": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "JUMP",
      "path": "22"
    },
    "626": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "627": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "629": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "630": {
      "op": "SWAP1"
    },
    "631": {
      "op": "DUP2"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5375,
        5447
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x235"
    },
    "639": {
      "op": "JUMP"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F6"
    },
    "647": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "648": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "649": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29B"
    },
    "652": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x296"
    },
    "655": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "656": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2348"
    },
    "661": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "662": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "663": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x888"
    },
    "666": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "667": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "668": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "670": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "op": "SWAP1"
    },
    "680": {
      "op": "SWAP2"
    },
    "681": {
      "op": "AND"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x235"
    },
    "690": {
      "op": "JUMP"
    },
    "691": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "692": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6"
    },
    "695": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C1"
    },
    "698": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "699": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "701": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x237D"
    },
    "704": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "705": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "706": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x922"
    },
    "709": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "710": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "711": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "6"
    },
    "712": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "713": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "716": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C"
    },
    "719": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "720": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "722": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5533,
        5605
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "725": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        5533,
        5605
      ],
      "op": "JUMP",
      "path": "22"
    },
    "726": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "727": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "730": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E4"
    },
    "733": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "734": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "736": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "739": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMP",
      "path": "22"
    },
    "740": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "741": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA38"
    },
    "744": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMP",
      "path": "22"
    },
    "745": {
      "fn": "Wizards.mint",
      "offset": [
        2782,
        3787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "746": {
      "fn": "Wizards.mint",
      "offset": [
        2782,
        3787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "749": {
      "fn": "Wizards.mint",
      "offset": [
        2782,
        3787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA7B"
    },
    "752": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2782,
        3787
      ],
      "op": "JUMP",
      "path": "22"
    },
    "753": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "754": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x8"
    },
    "756": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "757": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x272"
    },
    "760": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6"
    },
    "765": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "769": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "771": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23A7"
    },
    "774": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "775": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "776": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD53"
    },
    "779": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "780": {
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "781": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "783": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "784": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29B"
    },
    "787": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "offset": [
        614,
        637
      ],
      "op": "AND",
      "path": "22"
    },
    "797": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "798": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "799": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "800": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x272"
    },
    "803": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "806": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "807": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x237D"
    },
    "812": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "813": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "814": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD84"
    },
    "817": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "819": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6"
    },
    "822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x340"
    },
    "825": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23A7"
    },
    "831": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "832": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE1A"
    },
    "836": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "837": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "838": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x272"
    },
    "841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x353"
    },
    "844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "845": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "847": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2348"
    },
    "850": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "851": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "852": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE35"
    },
    "855": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "856": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "857": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29B"
    },
    "860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x366"
    },
    "863": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "864": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2348"
    },
    "869": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "870": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "871": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC8"
    },
    "874": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "875": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "876": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x379"
    },
    "882": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "883": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "885": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23E3"
    },
    "888": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "889": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "890": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF3F"
    },
    "893": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C6"
    },
    "898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFC6"
    },
    "901": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "902": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "903": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "906": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x394"
    },
    "909": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "910": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "912": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "915": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMP",
      "path": "22"
    },
    "916": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "917": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFFC"
    },
    "920": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMP",
      "path": "22"
    },
    "921": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "922": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "925": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "929": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "931": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23FE"
    },
    "934": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMP",
      "path": "22"
    },
    "935": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "936": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x110A"
    },
    "939": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMP",
      "path": "22"
    },
    "940": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "941": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "944": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3BA"
    },
    "947": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "948": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "950": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "953": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        1930,
        2086
      ],
      "op": "JUMP",
      "path": "22"
    },
    "954": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "955": {
      "fn": "Wizards.isActive",
      "offset": [
        1987,
        1991
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "957": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 1
    },
    "958": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "DUP2",
      "path": "22"
    },
    "959": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "960": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2025
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "962": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "964": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "965": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "967": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "968": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2036
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "969": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2060
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "971": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2060
      ],
      "op": "ADD",
      "path": "22"
    },
    "972": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2060
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "973": {
      "fn": "Wizards.isActive",
      "offset": [
        2063,
        2078
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "974": {
      "op": "LT"
    },
    "975": {
      "fn": "Wizards.isActive",
      "offset": [
        2011,
        2078
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "976": {
      "fn": "Wizards.isActive",
      "offset": [
        1930,
        2086
      ],
      "op": "JUMP",
      "path": "22"
    },
    "977": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "978": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "981": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3DF"
    },
    "984": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "985": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "987": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "990": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMP",
      "path": "22"
    },
    "991": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "992": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1274"
    },
    "995": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMP",
      "path": "22"
    },
    "996": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "997": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "999": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1000": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x235"
    },
    "1003": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1004": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1005": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2483"
    },
    "1008": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1010": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0xA"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "SUB"
    },
    "1021": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x29B"
    },
    "1025": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1026": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1027": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x251"
    },
    "1030": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x135B"
    },
    "1033": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1034": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1035": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "1038": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x418"
    },
    "1041": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1042": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1044": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E3"
    },
    "1047": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1048": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1049": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x136A"
    },
    "1052": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1053": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1054": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6"
    },
    "1057": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42B"
    },
    "1060": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1061": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1063": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x252D"
    },
    "1066": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1067": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1068": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1456"
    },
    "1071": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1072": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C6"
    },
    "1076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x43E"
    },
    "1079": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1082": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2569"
    },
    "1085": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1087": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151B"
    },
    "1090": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1091": {
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1094": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1095": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29B"
    },
    "1098": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "offset": [
        548,
        570
      ],
      "op": "AND",
      "path": "22"
    },
    "1108": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1109": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1110": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1111": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x251"
    },
    "1114": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x464"
    },
    "1117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1118": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "1123": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        5924,
        6282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1124": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1125": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1553"
    },
    "1128": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        5924,
        6282
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1129": {
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1130": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4E8"
    },
    "1133": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x477"
    },
    "1136": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1137": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2348"
    },
    "1142": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1146": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1148": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1150": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1151": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1153": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1154": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1155": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1156": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1158": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1159": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1160": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1161": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1162": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1166": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1171": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1172": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1176": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1177": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1180": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1181": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1183": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1188": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1190": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "1195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP9",
      "path": "22"
    },
    "1196": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1198": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "1200": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP10",
      "path": "22"
    },
    "1201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1203": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP11",
      "path": "22"
    },
    "1206": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1211": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1213": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1214": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1215": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1216": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1219": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP13",
      "path": "22"
    },
    "1220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1222": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1224": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1225": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1226": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1227": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1228": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1230": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1233": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1235": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1236": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1237": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1238": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1239": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1240": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1241": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1242": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1243": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1244": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1245": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1246": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1247": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1248": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1249": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1250": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1251": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1253": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "AND",
      "path": "22"
    },
    "1254": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP15",
      "path": "22"
    },
    "1255": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1256": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1257": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1259": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1260": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x235"
    },
    "1263": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP15",
      "path": "22"
    },
    "1264": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP14",
      "path": "22"
    },
    "1265": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1266": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1267": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1268": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1269": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1270": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1271": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1272": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1273": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1274": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1275": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1276": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1277": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1278": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25E5"
    },
    "1281": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1282": {
      "offset": [
        1574,
        1614
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1283": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "1285": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1286": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "1288": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1289": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1291": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1292": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "1294": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1295": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "1297": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1298": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x525"
    },
    "1301": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1302": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1303": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1304": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1305": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "op": "SUB"
    },
    "1314": {
      "offset": [
        1574,
        1614
      ],
      "op": "AND",
      "path": "22"
    },
    "1315": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1316": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1317": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1318": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1320": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1321": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1574,
        1614
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1322": {
      "op": "SWAP6"
    },
    "1323": {
      "op": "DUP7"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1327": {
      "op": "DUP7"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "SWAP5"
    },
    "1330": {
      "op": "SWAP1"
    },
    "1331": {
      "op": "SWAP5"
    },
    "1332": {
      "op": "MSTORE"
    },
    "1333": {
      "op": "SWAP3"
    },
    "1334": {
      "op": "DUP5"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "SWAP2"
    },
    "1337": {
      "op": "SWAP1"
    },
    "1338": {
      "op": "SWAP2"
    },
    "1339": {
      "op": "MSTORE"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1342": {
      "op": "DUP4"
    },
    "1343": {
      "op": "ADD"
    },
    "1344": {
      "op": "MSTORE"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "op": "AND"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1356": {
      "op": "DUP3"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "offset": [
        1574,
        1614
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x235"
    },
    "1365": {
      "op": "JUMP"
    },
    "1366": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1367": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "1370": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x564"
    },
    "1373": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1374": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1376": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23E3"
    },
    "1379": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        10774,
        11000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1380": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1381": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F4"
    },
    "1384": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        10774,
        11000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x229"
    },
    "1389": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x577"
    },
    "1392": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1393": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x265F"
    },
    "1398": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1399": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 3
    },
    "1409": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1410": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "1411": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1414": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1416": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1418": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1420": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1421": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1422": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1423": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1426": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1427": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1428": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1429": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1430": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1431": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1432": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1436": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1438": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1439": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1440": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1443": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C6"
    },
    "1449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B3"
    },
    "1452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x23E3"
    },
    "1458": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16D9"
    },
    "1463": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1464": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1465": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "op": "NOT"
    },
    "1476": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 4
    },
    "1477": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "7"
    },
    "1478": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1485": {
      "op": "SHL"
    },
    "1486": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "7"
    },
    "1487": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1488": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5DD"
    },
    "1491": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1492": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "7"
    },
    "1493": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5DD"
    },
    "1496": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1497": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1771"
    },
    "1500": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1501": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1502": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1503": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1507": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6377,
        6390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1510": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1512": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6495
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1514": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1516": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6496,
        6504
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1517": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1518": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1519": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1521": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1522": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1523": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1524": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1525": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1528": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1530": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6481,
        6505
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1531": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1534": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1535": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "1538": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1539": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1541": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1542": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1543": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1544": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1546": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1547": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1548": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1549": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1550": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1551": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1553": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1554": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1556": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1557": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1558": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1559": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1560": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1561": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1564": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1566": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1568": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1569": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1574": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1576": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1577": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1579": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1580": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1581": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1584": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1587": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1591": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1594": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1598": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1599": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1604": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1609": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1610": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1611": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1614": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "1616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1617": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1618": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1619": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1620": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1621": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1623": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1624": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "1626": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1627": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1628": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1630": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1631": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1633": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1634": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1636": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1637": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1638": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1639": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1640": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1641": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1643": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1644": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1646": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1647": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1648": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1649": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1650": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1651": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1653": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1654": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1656": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1657": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1658": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1659": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1660": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1661": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1664": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1666": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1667": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1668": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1669": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1670": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1671": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1674": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1676": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1677": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ADD",
      "path": "22"
    },
    "1678": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1680": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1681": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1682": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1683": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1686": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "EXP",
      "path": "22"
    },
    "1687": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1688": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DIV",
      "path": "22"
    },
    "1689": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1691": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "AND",
      "path": "22"
    },
    "1692": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1694": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1695": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "GT",
      "path": "22"
    },
    "1696": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1697": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6AC"
    },
    "1700": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1701": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6AC"
    },
    "1704": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "1707": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1708": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1709": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1711": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1712": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "GT",
      "path": "22"
    },
    "1713": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1714": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6BD"
    },
    "1717": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1718": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6BD"
    },
    "1721": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "1724": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1725": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1726": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1727": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1728": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "POP",
      "path": "22"
    },
    "1729": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "POP",
      "path": "22"
    },
    "1730": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1731": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6458,
        6505
      ],
      "op": "POP",
      "path": "22"
    },
    "1732": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6518,
        6540
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1734": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6743,
        6751
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1735": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6926,
        6957
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D3"
    },
    "1738": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6943,
        6950
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1739": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6943,
        6956
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1741": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6943,
        6956
      ],
      "op": "ADD",
      "path": "22"
    },
    "1742": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6943,
        6956
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1743": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6926,
        6942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1746": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6926,
        6957
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1747": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6926,
        6957
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1748": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1750": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1751": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1753": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "ADD",
      "path": "22"
    },
    "1754": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6E4"
    },
    "1757": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1758": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1759": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1760": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26AE"
    },
    "1763": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6550,
        6974
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1764": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1765": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1767": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1768": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1770": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1771": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1772": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SUB",
      "path": "22"
    },
    "1773": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SUB",
      "path": "22"
    },
    "1774": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1775": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1776": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1777": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1779": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6974
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1780": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6518,
        6975
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1781": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6518,
        6975
      ],
      "op": "POP",
      "path": "22"
    },
    "1782": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7075,
        7083
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 5
    },
    "1783": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7173,
        7201
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x703"
    },
    "1786": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7190,
        7197
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1787": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7190,
        7200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1789": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7190,
        7200
      ],
      "op": "ADD",
      "path": "22"
    },
    "1790": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7190,
        7200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1791": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7173,
        7189
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1794": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7173,
        7201
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1795": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7173,
        7201
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1796": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7310,
        7348
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x710"
    },
    "1799": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7327,
        7334
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1800": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7327,
        7347
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1802": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7327,
        7347
      ],
      "op": "ADD",
      "path": "22"
    },
    "1803": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7327,
        7347
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1804": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7310,
        7326
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1807": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7310,
        7348
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1808": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7310,
        7348
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1809": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7463,
        7503
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71D"
    },
    "1812": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7480,
        7487
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1813": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7480,
        7502
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1815": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7480,
        7502
      ],
      "op": "ADD",
      "path": "22"
    },
    "1816": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7480,
        7502
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1817": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7463,
        7479
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1820": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7463,
        7503
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1821": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7463,
        7503
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1822": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1824": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1825": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1827": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "ADD",
      "path": "22"
    },
    "1828": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x730"
    },
    "1831": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1832": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1833": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1834": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1835": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1836": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2808"
    },
    "1839": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7058,
        7522
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1840": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1841": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1843": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1844": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1846": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1847": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1848": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SUB",
      "path": "22"
    },
    "1849": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SUB",
      "path": "22"
    },
    "1850": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1851": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1852": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1853": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1855": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7058,
        7522
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1856": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7040,
        7523
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1857": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7040,
        7523
      ],
      "op": "POP",
      "path": "22"
    },
    "1858": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7623,
        7631
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 6
    },
    "1859": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7724,
        7755
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x74F"
    },
    "1862": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7741,
        7748
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1863": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7741,
        7754
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "1865": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7741,
        7754
      ],
      "op": "ADD",
      "path": "22"
    },
    "1866": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7741,
        7754
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1867": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7724,
        7740
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1870": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7724,
        7755
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1871": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7724,
        7755
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1872": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7853,
        7883
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x75C"
    },
    "1875": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7870,
        7877
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1876": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7870,
        7882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "1878": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7870,
        7882
      ],
      "op": "ADD",
      "path": "22"
    },
    "1879": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7870,
        7882
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1880": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7853,
        7869
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1883": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7853,
        7883
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1884": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7853,
        7883
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1885": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1887": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1888": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1890": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "ADD",
      "path": "22"
    },
    "1891": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x76E"
    },
    "1894": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1895": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1896": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1897": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1898": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x293A"
    },
    "1901": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7606,
        7902
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1902": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1903": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1905": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1906": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1908": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1909": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1910": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SUB",
      "path": "22"
    },
    "1911": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SUB",
      "path": "22"
    },
    "1912": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1913": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1914": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1915": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1917": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7606,
        7902
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1918": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7588,
        7903
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1919": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7588,
        7903
      ],
      "op": "POP",
      "path": "22"
    },
    "1920": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8005,
        8013
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 7
    },
    "1921": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8107,
        8139
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x78D"
    },
    "1924": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8124,
        8131
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1925": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8124,
        8138
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "1927": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8124,
        8138
      ],
      "op": "ADD",
      "path": "22"
    },
    "1928": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8124,
        8138
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1929": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8107,
        8123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1932": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8107,
        8139
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1933": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8107,
        8139
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1934": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8242,
        8275
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x79A"
    },
    "1937": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8259,
        8266
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1938": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8259,
        8274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "1940": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8259,
        8274
      ],
      "op": "ADD",
      "path": "22"
    },
    "1941": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8259,
        8274
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1942": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8242,
        8258
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1945": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8242,
        8275
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1946": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8242,
        8275
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1947": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8388,
        8427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7A8"
    },
    "1950": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8405,
        8412
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1951": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8405,
        8426
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1954": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8405,
        8426
      ],
      "op": "ADD",
      "path": "22"
    },
    "1955": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8405,
        8426
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1956": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8388,
        8404
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17C1"
    },
    "1959": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8388,
        8427
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1960": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8388,
        8427
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1961": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1963": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1964": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1966": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "ADD",
      "path": "22"
    },
    "1967": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7BB"
    },
    "1970": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1971": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1972": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1973": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1974": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1975": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A17"
    },
    "1978": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7988,
        8446
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1979": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1980": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1982": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1983": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1985": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1986": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1987": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SUB",
      "path": "22"
    },
    "1988": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SUB",
      "path": "22"
    },
    "1989": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1990": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1991": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1992": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1994": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7988,
        8446
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1995": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7970,
        8447
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1996": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7970,
        8447
      ],
      "op": "POP",
      "path": "22"
    },
    "1997": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8518,
        8526
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 8
    },
    "1998": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2000": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2001": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2003": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "ADD",
      "path": "22"
    },
    "2004": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7DD"
    },
    "2007": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2008": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2009": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B2D"
    },
    "2012": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8501,
        8536
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2013": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2014": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2016": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2017": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2018": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2019": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2020": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SUB",
      "path": "22"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2023": {
      "op": "NOT"
    },
    "2024": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "ADD",
      "path": "22"
    },
    "2025": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2026": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2027": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2028": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2029": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2030": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8501,
        8536
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2031": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6290,
        9525
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2032": {
      "op": "POP"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        6290,
        9525
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2038": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2039": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2041": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "2043": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2044": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2045": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x805"
    },
    "2048": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2049": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5C"
    },
    "2052": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2053": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2054": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2055": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2057": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2058": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2060": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2061": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2062": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2063": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2064": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2066": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2067": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2070": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2071": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2072": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2073": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2075": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2076": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2077": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2078": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2079": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2080": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2081": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2082": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2083": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2085": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2086": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2087": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2088": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2089": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x831"
    },
    "2092": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2093": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5C"
    },
    "2096": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2097": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2098": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2099": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2100": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87E"
    },
    "2103": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2104": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2105": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2107": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "6"
    },
    "2108": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x853"
    },
    "2111": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2112": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2115": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2116": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2117": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2118": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2119": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2120": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2121": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2122": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2123": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2125": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2126": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2127": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x87E"
    },
    "2130": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2131": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2132": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2133": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2134": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2135": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2136": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2138": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2139": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2141": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2143": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2144": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2145": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2146": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2147": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2148": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2149": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2150": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2151": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2153": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2154": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2155": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2157": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2158": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2159": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2160": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "6"
    },
    "2161": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x861"
    },
    "2164": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2165": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2166": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2167": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "6"
    },
    "2168": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2170": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "6"
    },
    "2171": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2172": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2173": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2174": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2175": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2176": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2177": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2178": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2179": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2180": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2181": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2182": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2183": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2184": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2185": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2187": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 10
    },
    "2188": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2189": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2190": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2192": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2194": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2195": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2197": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2198": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2199": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "2209": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0x906"
    },
    "2212": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2213": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2215": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2222": {
      "op": "SHL"
    },
    "2223": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2224": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2227": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2229": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2230": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "6"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2236": {
      "op": "DUP3"
    },
    "2237": {
      "op": "ADD"
    },
    "2238": {
      "op": "MSTORE"
    },
    "2239": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "MSTORE"
    },
    "2277": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2302": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2304": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2305": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2306": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2307": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "6"
    },
    "2308": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2309": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "2310": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x0"
    },
    "2314": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2315": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2316": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2317": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2319": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2321": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2322": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2324": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2325": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2326": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "SUB"
    },
    "2335": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "6"
    },
    "2336": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2337": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2338": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2339": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2341": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92D"
    },
    "2344": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2345": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC8"
    },
    "2348": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2349": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2350": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2351": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "6"
    },
    "2352": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "op": "SUB"
    },
    "2361": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2362": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2369": {
      "op": "SHL"
    },
    "2370": {
      "op": "SUB"
    },
    "2371": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2372": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "EQ",
      "path": "6"
    },
    "2373": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2374": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99B"
    },
    "2377": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2378": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2380": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2389": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2392": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2394": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2395": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "6"
    },
    "2396": {
      "op": "MSTORE"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2401": {
      "op": "DUP3"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "ADD"
    },
    "2441": {
      "op": "MSTORE"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2449": {
      "op": "DUP3"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2454": {
      "op": "ADD"
    },
    "2455": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "2458": {
      "op": "JUMP"
    },
    "2459": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2460": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 14
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 15
    },
    "2470": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "6"
    },
    "2471": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "6"
    },
    "2472": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2473": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B7"
    },
    "2476": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2477": {
      "op": "POP"
    },
    "2478": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B7"
    },
    "2481": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2482": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x577"
    },
    "2486": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2487": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2488": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA29"
    },
    "2491": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2492": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2494": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2503": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2506": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2508": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2509": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "6"
    },
    "2510": {
      "op": "MSTORE"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2515": {
      "op": "DUP3"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "MSTORE"
    },
    "2518": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2553": {
      "op": "DUP3"
    },
    "2554": {
      "op": "ADD"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "ADD"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "2600": {
      "op": "JUMP"
    },
    "2601": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2602": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0xA33"
    },
    "2605": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2606": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2607": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C7"
    },
    "2610": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2611": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2612": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2613": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2614": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2615": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2616": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2617": {
      "offset": [
        10207,
        10217
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2618": {
      "offset": [
        10229,
        10233
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "2619": {
      "offset": [
        10207,
        10234
      ],
      "op": "EQ",
      "path": "22"
    },
    "2620": {
      "branch": 111,
      "fn": "Wizards.verifyDuty",
      "offset": [
        10207,
        10234
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2621": {
      "offset": [
        10199,
        10252
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA78"
    },
    "2624": {
      "branch": 111,
      "offset": [
        10199,
        10252
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2625": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10199,
        10252
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2627": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10199,
        10252
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "offset": [
        10199,
        10252
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2636": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10199,
        10252
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2639": {
      "offset": [
        10199,
        10252
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2641": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10199,
        10252
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2642": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10199,
        10252
      ],
      "op": "ADD",
      "path": "22"
    },
    "2643": {
      "op": "MSTORE"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2670": {
      "op": "DUP3"
    },
    "2671": {
      "op": "ADD"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2675": {
      "op": "ADD"
    },
    "2676": {
      "offset": [
        10199,
        10252
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "2679": {
      "op": "JUMP"
    },
    "2680": {
      "offset": [
        10199,
        10252
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2681": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5684,
        5752
      ],
      "op": "POP",
      "path": "22"
    },
    "2682": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        5684,
        5752
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2683": {
      "fn": "Wizards.mint",
      "offset": [
        2782,
        3787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2684": {
      "fn": "Wizards.mint",
      "offset": [
        2842,
        2868
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x10"
    },
    "2686": {
      "fn": "Wizards.mint",
      "offset": [
        2842,
        2868
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2687": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2689": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2690": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2826,
        2868
      ],
      "op": "LT",
      "path": "22"
    },
    "2691": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xABF"
    },
    "2694": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2695": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2697": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2704": {
      "op": "SHL"
    },
    "2705": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2706": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2709": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2711": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2712": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "ADD",
      "path": "22"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2718": {
      "op": "DUP3"
    },
    "2719": {
      "op": "ADD"
    },
    "2720": {
      "op": "MSTORE"
    },
    "2721": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2741": {
      "op": "DUP3"
    },
    "2742": {
      "op": "ADD"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "2750": {
      "op": "JUMP"
    },
    "2751": {
      "fn": "Wizards.mint",
      "offset": [
        2818,
        2887
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2752": {
      "fn": "Wizards.mint",
      "offset": [
        3005,
        3026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2754": {
      "fn": "Wizards.mint",
      "offset": [
        3064,
        3077
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xACA"
    },
    "2757": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2759": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2760": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2761": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2762": {
      "fn": "Wizards.mint",
      "offset": [
        3064,
        3077
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2763": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2765": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2766": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2767": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2769": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2770": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "ADD",
      "path": "22"
    },
    "2771": {
      "op": "SWAP3"
    },
    "2772": {
      "op": "SWAP1"
    },
    "2773": {
      "op": "SWAP3"
    },
    "2774": {
      "op": "MSTORE"
    },
    "2775": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2788": {
      "op": "NOT"
    },
    "2789": {
      "fn": "Wizards.mint",
      "offset": [
        3079,
        3089
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "AND"
    },
    "2794": {
      "op": "SWAP1"
    },
    "2795": {
      "op": "DUP3"
    },
    "2796": {
      "op": "ADD"
    },
    "2797": {
      "op": "MSTORE"
    },
    "2798": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3106
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2801": {
      "op": "DUP3"
    },
    "2802": {
      "op": "ADD"
    },
    "2803": {
      "op": "MSTORE"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2806": {
      "op": "ADD"
    },
    "2807": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2809": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2810": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2813": {
      "op": "NOT"
    },
    "2814": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2815": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2816": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "SUB",
      "path": "22"
    },
    "2817": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "ADD",
      "path": "22"
    },
    "2818": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2819": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2820": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2821": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2822": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2823": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2824": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2825": {
      "fn": "Wizards.mint",
      "offset": [
        3047,
        3107
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2827": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2828": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2829": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "ADD",
      "path": "22"
    },
    "2830": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2831": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "fn": "Wizards.mint",
      "offset": [
        3029,
        3109
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2835": {
      "fn": "Wizards.mint",
      "offset": [
        3252,
        3270
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB1D"
    },
    "2838": {
      "fn": "Wizards.mint",
      "offset": [
        3268,
        3270
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "2840": {
      "fn": "Wizards.mint",
      "offset": [
        3037,
        3108
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2841": {
      "fn": "Wizards.mint",
      "offset": [
        3252,
        3270
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BAD"
    },
    "2844": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3252,
        3270
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2845": {
      "fn": "Wizards.mint",
      "offset": [
        3252,
        3270
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2846": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3270
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB28"
    },
    "2849": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3270
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2850": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3249
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "2852": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3270
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "2855": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3247,
        3270
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2856": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3270
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2857": {
      "fn": "Wizards.mint",
      "offset": [
        3234,
        3270
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "fn": "Wizards.mint",
      "offset": [
        3281,
        3301
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2861": {
      "fn": "Wizards.mint",
      "offset": [
        3331,
        3333
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "2863": {
      "fn": "Wizards.mint",
      "offset": [
        3310,
        3327
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB39"
    },
    "2866": {
      "fn": "Wizards.mint",
      "offset": [
        3324,
        3327
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2868": {
      "fn": "Wizards.mint",
      "offset": [
        3310,
        3323
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2869": {
      "fn": "Wizards.mint",
      "offset": [
        3310,
        3327
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BEF"
    },
    "2872": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3310,
        3327
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2873": {
      "fn": "Wizards.mint",
      "offset": [
        3310,
        3327
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2874": {
      "fn": "Wizards.mint",
      "offset": [
        3309,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB43"
    },
    "2877": {
      "fn": "Wizards.mint",
      "offset": [
        3309,
        3333
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2878": {
      "fn": "Wizards.mint",
      "offset": [
        3309,
        3333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2879": {
      "fn": "Wizards.mint",
      "offset": [
        3309,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BAD"
    },
    "2882": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3309,
        3333
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2883": {
      "fn": "Wizards.mint",
      "offset": [
        3309,
        3333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2884": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB4E"
    },
    "2887": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2888": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3306
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "2890": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "2893": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3304,
        3333
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2894": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2895": {
      "fn": "Wizards.mint",
      "offset": [
        3281,
        3333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "Wizards.mint",
      "offset": [
        3344,
        3366
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2899": {
      "fn": "Wizards.mint",
      "offset": [
        3397,
        3399
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2901": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB5E"
    },
    "2904": {
      "fn": "Wizards.mint",
      "offset": [
        3397,
        3399
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2905": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3388
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2906": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BEF"
    },
    "2909": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3375,
        3391
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2910": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3391
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2911": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3393
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB69"
    },
    "2914": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3393
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2915": {
      "fn": "Wizards.mint",
      "offset": [
        3392,
        3393
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2917": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3393
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C03"
    },
    "2920": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3375,
        3393
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2921": {
      "fn": "Wizards.mint",
      "offset": [
        3375,
        3393
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2922": {
      "fn": "Wizards.mint",
      "offset": [
        3374,
        3399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB73"
    },
    "2925": {
      "fn": "Wizards.mint",
      "offset": [
        3374,
        3399
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2926": {
      "fn": "Wizards.mint",
      "offset": [
        3374,
        3399
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2927": {
      "fn": "Wizards.mint",
      "offset": [
        3374,
        3399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BAD"
    },
    "2930": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3374,
        3399
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2931": {
      "fn": "Wizards.mint",
      "offset": [
        3374,
        3399
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2932": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB7E"
    },
    "2935": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3399
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2936": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3371
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2938": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3399
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "2941": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3369,
        3399
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2942": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3399
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2943": {
      "fn": "Wizards.mint",
      "offset": [
        3344,
        3399
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "fn": "Wizards.mint",
      "offset": [
        3410,
        3423
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2947": {
      "fn": "Wizards.mint",
      "offset": [
        3454,
        3456
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2949": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB8E"
    },
    "2952": {
      "fn": "Wizards.mint",
      "offset": [
        3454,
        3456
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2953": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3445
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2954": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3448
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BEF"
    },
    "2957": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3432,
        3448
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2958": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3448
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2959": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3450
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB99"
    },
    "2962": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3450
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2963": {
      "fn": "Wizards.mint",
      "offset": [
        3449,
        3450
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "2965": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3450
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C03"
    },
    "2968": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3432,
        3450
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2969": {
      "fn": "Wizards.mint",
      "offset": [
        3432,
        3450
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2970": {
      "fn": "Wizards.mint",
      "offset": [
        3431,
        3456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBA3"
    },
    "2973": {
      "fn": "Wizards.mint",
      "offset": [
        3431,
        3456
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2974": {
      "fn": "Wizards.mint",
      "offset": [
        3431,
        3456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2975": {
      "fn": "Wizards.mint",
      "offset": [
        3431,
        3456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BAD"
    },
    "2978": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3431,
        3456
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2979": {
      "fn": "Wizards.mint",
      "offset": [
        3431,
        3456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2980": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBAE"
    },
    "2983": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2984": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2986": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3456
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "2989": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3426,
        3456
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2990": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3456
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2991": {
      "fn": "Wizards.mint",
      "offset": [
        3410,
        3456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "fn": "Wizards.mint",
      "offset": [
        3467,
        3482
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2995": {
      "fn": "Wizards.mint",
      "offset": [
        3516,
        3517
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2997": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBBF"
    },
    "3000": {
      "fn": "Wizards.mint",
      "offset": [
        3508,
        3510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3002": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3507
      ],
      "op": "DUP9",
      "path": "22"
    },
    "3003": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BEF"
    },
    "3006": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3494,
        3510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3007": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3008": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3512
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBCA"
    },
    "3011": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3512
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3012": {
      "fn": "Wizards.mint",
      "offset": [
        3511,
        3512
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3014": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3512
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C03"
    },
    "3017": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3494,
        3512
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3018": {
      "fn": "Wizards.mint",
      "offset": [
        3494,
        3512
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3019": {
      "fn": "Wizards.mint",
      "offset": [
        3493,
        3517
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBD4"
    },
    "3022": {
      "fn": "Wizards.mint",
      "offset": [
        3493,
        3517
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3023": {
      "fn": "Wizards.mint",
      "offset": [
        3493,
        3517
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3024": {
      "fn": "Wizards.mint",
      "offset": [
        3493,
        3517
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BAD"
    },
    "3027": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3493,
        3517
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3028": {
      "fn": "Wizards.mint",
      "offset": [
        3493,
        3517
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3029": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3031": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3032": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "GT",
      "path": "22"
    },
    "3033": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3034": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE5"
    },
    "3037": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3038": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE5"
    },
    "3041": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "3044": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3485,
        3518
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3045": {
      "fn": "Wizards.mint",
      "offset": [
        3485,
        3518
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3046": {
      "fn": "Wizards.mint",
      "offset": [
        3467,
        3518
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3047": {
      "fn": "Wizards.mint",
      "offset": [
        3467,
        3518
      ],
      "op": "POP",
      "path": "22"
    },
    "3048": {
      "fn": "Wizards.mint",
      "offset": [
        3531,
        3551
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3050": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3052": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3053": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3054": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "3057": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3058": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3060": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3061": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3062": {
      "fn": "Wizards.mint",
      "offset": [
        3561,
        3562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3064": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3065": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3066": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3068": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3069": {
      "fn": "Wizards.mint",
      "offset": [
        3564,
        3566
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3070": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3071": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3072": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3074": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3075": {
      "fn": "Wizards.mint",
      "offset": [
        3568,
        3580
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3076": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3077": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3078": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3080": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3081": {
      "fn": "Wizards.mint",
      "offset": [
        3582,
        3596
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3082": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3083": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3084": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3086": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3087": {
      "fn": "Wizards.mint",
      "offset": [
        3598,
        3603
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3088": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3089": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3090": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3092": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3093": {
      "fn": "Wizards.mint",
      "offset": [
        3605,
        3606
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3095": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3096": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3097": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3099": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3100": {
      "fn": "Wizards.mint",
      "offset": [
        3608,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3102": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3103": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3104": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3106": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3107": {
      "fn": "Wizards.mint",
      "offset": [
        3611,
        3612
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3109": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3110": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3111": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3113": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3114": {
      "fn": "Wizards.mint",
      "offset": [
        3614,
        3615
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3116": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3117": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3118": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3120": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3121": {
      "fn": "Wizards.mint",
      "offset": [
        3617,
        3618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3123": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3124": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3125": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3127": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3128": {
      "fn": "Wizards.mint",
      "offset": [
        3620,
        3621
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3130": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3131": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3132": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3134": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3135": {
      "fn": "Wizards.mint",
      "offset": [
        3623,
        3624
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3137": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3138": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3139": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3141": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3142": {
      "fn": "Wizards.mint",
      "offset": [
        3626,
        3627
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3144": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3145": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3146": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3148": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ADD",
      "path": "22"
    },
    "3149": {
      "fn": "Wizards.mint",
      "offset": [
        3629,
        3636
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3150": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3152": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3153": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "GT",
      "path": "22"
    },
    "3154": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3155": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC5E"
    },
    "3158": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3159": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC5E"
    },
    "3162": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "3165": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3555,
        3637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3166": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3167": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3168": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3637
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3169": {
      "fn": "Wizards.mint",
      "offset": [
        3531,
        3637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "fn": "Wizards.mint",
      "offset": [
        3531,
        3637
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3172": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3662
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0xB"
    },
    "3174": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3176": {
      "fn": "Wizards.mint",
      "offset": [
        3663,
        3676
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC70"
    },
    "3179": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3181": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3182": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3183": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3184": {
      "fn": "Wizards.mint",
      "offset": [
        3663,
        3676
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3185": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3186": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3187": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3189": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "ADD",
      "path": "22"
    },
    "3190": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3191": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3192": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3193": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3195": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "ADD",
      "path": "22"
    },
    "3196": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3198": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3677
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3199": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3201": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3202": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3203": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3204": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3205": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3207": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3208": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3209": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3211": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3212": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3213": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3214": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3215": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3217": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3218": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3219": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3221": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3222": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3223": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3224": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3225": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3227": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3228": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3229": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "3231": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3232": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3233": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3234": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3235": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3237": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3238": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3239": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "3241": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3242": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3243": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3244": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3245": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3247": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3248": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3249": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "3251": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3252": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3253": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3254": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3255": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3257": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3258": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3259": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "3261": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3262": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3263": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3264": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3265": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3267": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3268": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3269": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3271": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3272": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3273": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3274": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3275": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "3277": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3278": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3279": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3282": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3283": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3284": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3285": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3286": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "3288": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3289": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3290": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x120"
    },
    "3293": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3294": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3295": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3296": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3297": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "3299": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3300": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3301": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x140"
    },
    "3304": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3305": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3306": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3307": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3308": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3310": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3311": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3312": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x160"
    },
    "3315": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3316": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3317": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3318": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3319": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "3321": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3322": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3323": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x180"
    },
    "3326": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3327": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3328": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3329": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3330": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "3332": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3333": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3334": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A0"
    },
    "3337": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3338": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3339": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3340": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3341": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3343": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ADD",
      "path": "22"
    },
    "3344": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3346": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3349": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "EXP",
      "path": "22"
    },
    "3350": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3351": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3352": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3353": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3355": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MUL",
      "path": "22"
    },
    "3356": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "NOT",
      "path": "22"
    },
    "3357": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "AND",
      "path": "22"
    },
    "3358": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3359": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3360": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3362": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3363": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "GT",
      "path": "22"
    },
    "3364": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3365": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD30"
    },
    "3368": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3369": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD30"
    },
    "3372": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "3375": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3648,
        3687
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3376": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3377": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "MUL",
      "path": "22"
    },
    "3378": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "OR",
      "path": "22"
    },
    "3379": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3380": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3381": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "POP",
      "path": "22"
    },
    "3382": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3383": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "POP",
      "path": "22"
    },
    "3384": {
      "fn": "Wizards.mint",
      "offset": [
        3648,
        3687
      ],
      "op": "POP",
      "path": "22"
    },
    "3385": {
      "fn": "Wizards.mint",
      "offset": [
        3698,
        3734
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 19,
      "value": "0xD4A"
    },
    "3388": {
      "fn": "Wizards.mint",
      "offset": [
        3708,
        3718
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3389": {
      "fn": "Wizards.mint",
      "offset": [
        3720,
        3733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD45"
    },
    "3392": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3394": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3395": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3396": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3397": {
      "fn": "Wizards.mint",
      "offset": [
        3720,
        3733
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3398": {
      "fn": "Wizards.mint",
      "offset": [
        3698,
        3707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1935"
    },
    "3401": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3698,
        3734
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3402": {
      "fn": "Wizards.mint",
      "offset": [
        3698,
        3734
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3403": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3404": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3405": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3406": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3407": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3408": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3409": {
      "fn": "Wizards.mint",
      "offset": [
        2807,
        3787
      ],
      "op": "POP",
      "path": "22"
    },
    "3410": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        2782,
        3787
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3411": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3412": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 20,
      "value": "0xD5D"
    },
    "3415": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3416": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3417": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1953"
    },
    "3420": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3421": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3422": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD79"
    },
    "3425": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3426": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3428": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3429": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3437": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3438": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3440": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "6"
    },
    "3441": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "3444": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3445": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C22"
    },
    "3448": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3449": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3450": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xA33"
    },
    "3453": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3454": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3455": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3456": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A46"
    },
    "3459": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3460": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3461": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3463": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0xD8F"
    },
    "3466": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3467": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3F"
    },
    "3470": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3471": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3472": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3473": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "7"
    },
    "3474": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF1"
    },
    "3477": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3478": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3480": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3487": {
      "op": "SHL"
    },
    "3488": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3489": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3492": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3494": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3495": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "7"
    },
    "3496": {
      "op": "MSTORE"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3539": {
      "op": "DUP3"
    },
    "3540": {
      "op": "ADD"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3559": {
      "op": "DUP3"
    },
    "3560": {
      "op": "ADD"
    },
    "3561": {
      "op": "MSTORE"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3564": {
      "op": "ADD"
    },
    "3565": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FD"
    },
    "3568": {
      "op": "JUMP"
    },
    "3569": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3570": {
      "op": "POP"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "op": "SUB"
    },
    "3579": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 23
    },
    "3580": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3581": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3582": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "7"
    },
    "3583": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3585": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3586": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3587": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3588": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3590": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3592": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3593": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3594": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3595": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3597": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3598": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3599": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3600": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3601": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3602": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3603": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3604": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3605": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3606": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3607": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3608": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3609": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xA33"
    },
    "3614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3619": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3620": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "6"
    },
    "3624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3627": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3628": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3630": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3631": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3632": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "6"
    },
    "3633": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151B"
    },
    "3636": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3637": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3638": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3640": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0xE40"
    },
    "3643": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3645": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3646": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3647": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3648": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3649": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3650": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "7"
    },
    "3651": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA3"
    },
    "3654": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3655": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3657": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3664": {
      "op": "SHL"
    },
    "3665": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3666": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3669": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3671": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3672": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "3673": {
      "op": "MSTORE"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "op": "MSTORE"
    },
    "3681": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "MSTORE"
    },
    "3719": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3737": {
      "op": "DUP3"
    },
    "3738": {
      "op": "ADD"
    },
    "3739": {
      "op": "MSTORE"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8FD"
    },
    "3746": {
      "op": "JUMP"
    },
    "3747": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3748": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x8"
    },
    "3750": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3751": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3752": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3753": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3754": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "7"
    },
    "3755": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB6"
    },
    "3758": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3759": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB6"
    },
    "3762": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C73"
    },
    "3765": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3766": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3767": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3768": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3770": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3771": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3773": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3775": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3776": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "7"
    },
    "3777": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3778": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3779": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "7"
    },
    "3780": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3781": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3782": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "7"
    },
    "3783": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3785": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3789": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3792": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3794": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3795": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3797": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3798": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3799": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "6"
    },
    "3809": {
      "branch": 125,
      "fn": "ERC721.ownerOf",
      "offset": [
        2362,
        2381
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 27
    },
    "3810": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DD"
    },
    "3813": {
      "branch": 125,
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3814": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3816": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3823": {
      "op": "SHL"
    },
    "3824": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3825": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3828": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3830": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3831": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "6"
    },
    "3832": {
      "op": "MSTORE"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3837": {
      "op": "DUP3"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "op": "MSTORE"
    },
    "3840": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3875": {
      "op": "DUP3"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "MSTORE"
    },
    "3878": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3893": {
      "op": "DUP3"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3898": {
      "op": "ADD"
    },
    "3899": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "3902": {
      "op": "JUMP"
    },
    "3903": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3904": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 28
    },
    "3915": {
      "branch": 126,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "6"
    },
    "3916": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFAA"
    },
    "3919": {
      "branch": 126,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3920": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3922": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3929": {
      "op": "SHL"
    },
    "3930": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3934": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3936": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3937": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "6"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3943": {
      "op": "DUP3"
    },
    "3944": {
      "op": "ADD"
    },
    "3945": {
      "op": "MSTORE"
    },
    "3946": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3981": {
      "op": "DUP3"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "MSTORE"
    },
    "3984": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "4009": {
      "op": "JUMP"
    },
    "4010": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "op": "SUB"
    },
    "4020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "6",
      "statement": 29
    },
    "4021": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4023": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4024": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4025": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4026": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4028": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4033": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4037": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4038": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4039": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4041": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4051": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4052": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4053": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFF0"
    },
    "4056": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4057": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4059": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4066": {
      "op": "SHL"
    },
    "4067": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4068": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4069": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4071": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4072": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FD"
    },
    "4075": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4076": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C89"
    },
    "4079": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4080": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 30,
      "value": "0xFFA"
    },
    "4084": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4086": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BF1"
    },
    "4089": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4091": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4092": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4093": {
      "fn": "Wizards.initiate",
      "offset": [
        3947,
        3957
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 31
    },
    "4094": {
      "fn": "Wizards.initiate",
      "offset": [
        3926,
        3943
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1006"
    },
    "4097": {
      "fn": "Wizards.initiate",
      "offset": [
        3934,
        3942
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4098": {
      "fn": "Wizards.initiate",
      "offset": [
        3926,
        3933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEC8"
    },
    "4101": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3926,
        3943
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4102": {
      "fn": "Wizards.initiate",
      "offset": [
        3926,
        3943
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "op": "SUB"
    },
    "4111": {
      "fn": "Wizards.initiate",
      "offset": [
        3926,
        3957
      ],
      "op": "AND",
      "path": "22"
    },
    "4112": {
      "branch": 113,
      "fn": "Wizards.initiate",
      "offset": [
        3926,
        3957
      ],
      "op": "EQ",
      "path": "22"
    },
    "4113": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104C"
    },
    "4116": {
      "branch": 113,
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4117": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4119": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4126": {
      "op": "SHL"
    },
    "4127": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4128": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4131": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4133": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4134": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "ADD",
      "path": "22"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4162": {
      "op": "DUP3"
    },
    "4163": {
      "op": "ADD"
    },
    "4164": {
      "op": "MSTORE"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "4171": {
      "op": "JUMP"
    },
    "4172": {
      "fn": "Wizards.initiate",
      "offset": [
        3918,
        3975
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4173": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 32,
      "value": "0x0"
    },
    "4175": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4176": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4177": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4178": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4008
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4180": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4182": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4183": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4184": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4185": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4187": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4188": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4189": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4018
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4190": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4038
      ],
      "op": "ADD",
      "path": "22"
    },
    "4191": {
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4038
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4192": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        3994,
        4043
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4193": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10A0"
    },
    "4196": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4197": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4199": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4206": {
      "op": "SHL"
    },
    "4207": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4208": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4211": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4213": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4214": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "ADD",
      "path": "22"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4243": {
      "op": "SHL"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "ADD"
    },
    "4248": {
      "op": "MSTORE"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "4255": {
      "op": "JUMP"
    },
    "4256": {
      "fn": "Wizards.initiate",
      "offset": [
        3986,
        4065
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4257": {
      "fn": "Wizards.initiate",
      "offset": [
        4110,
        4131
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4259": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4260": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4261": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4262": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4264": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4266": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4267": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4268": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4269": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4271": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4272": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4273": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4274": {
      "fn": "Wizards.initiate",
      "offset": [
        4199,
        4214
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 33
    },
    "4275": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4196
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4276": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4196
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4277": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4196
      ],
      "op": "ADD",
      "path": "22"
    },
    "4278": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4214
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4279": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4214
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4280": {
      "fn": "Wizards.initiate",
      "offset": [
        4169,
        4214
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4281": {
      "fn": "Wizards.initiate",
      "offset": [
        4277,
        4317
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 34,
      "value": "0x11"
    },
    "4283": {
      "fn": "Wizards.initiate",
      "offset": [
        4277,
        4317
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4284": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4285": {
      "fn": "Wizards.initiate",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4286": {
      "fn": "Wizards.initiate",
      "offset": [
        4259,
        4317
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10C7"
    },
    "4289": {
      "fn": "Wizards.initiate",
      "offset": [
        4259,
        4317
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4290": {
      "fn": "Wizards.initiate",
      "offset": [
        4277,
        4317
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4291": {
      "fn": "Wizards.initiate",
      "offset": [
        4259,
        4317
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4294": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4259,
        4317
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4295": {
      "fn": "Wizards.initiate",
      "offset": [
        4259,
        4317
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4296": {
      "fn": "Wizards.initiate",
      "offset": [
        4225,
        4256
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4298": {
      "fn": "Wizards.initiate",
      "offset": [
        4225,
        4256
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4299": {
      "fn": "Wizards.initiate",
      "offset": [
        4225,
        4256
      ],
      "op": "ADD",
      "path": "22"
    },
    "4300": {
      "fn": "Wizards.initiate",
      "offset": [
        4225,
        4317
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4301": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0x40"
    },
    "4303": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4304": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4305": {
      "fn": "Wizards.initiate",
      "offset": [
        4345,
        4355
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4306": {
      "op": "DUP2"
    },
    "4307": {
      "op": "MSTORE"
    },
    "4308": {
      "fn": "Wizards.initiate",
      "offset": [
        4367,
        4382
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "op": "MSTORE"
    },
    "4314": {
      "fn": "Wizards.initiate",
      "offset": [
        4357,
        4365
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4315": {
      "fn": "Wizards.initiate",
      "offset": [
        4357,
        4365
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4316": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "4349": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4353": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4354": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4355": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4356": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "SUB",
      "path": "22"
    },
    "4357": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4358": {
      "fn": "Wizards.initiate",
      "offset": [
        4335,
        4383
      ],
      "op": "LOG2",
      "path": "22"
    },
    "4359": {
      "fn": "Wizards.initiate",
      "offset": [
        3907,
        4391
      ],
      "op": "POP",
      "path": "22"
    },
    "4360": {
      "fn": "Wizards.initiate",
      "offset": [
        3862,
        4391
      ],
      "op": "POP",
      "path": "22"
    },
    "4361": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        3862,
        4391
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4362": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4363": {
      "offset": [
        10578,
        10585
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4365": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10578,
        10585
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4372": {
      "op": "SHL"
    },
    "4373": {
      "op": "SUB"
    },
    "4374": {
      "offset": [
        10578,
        10585
      ],
      "op": "AND",
      "path": "22"
    },
    "4375": {
      "offset": [
        10564,
        10574
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4376": {
      "offset": [
        10564,
        10585
      ],
      "op": "EQ",
      "path": "22"
    },
    "4377": {
      "offset": [
        10542,
        10649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1170"
    },
    "4380": {
      "offset": [
        10542,
        10649
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4381": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10542,
        10649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4383": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10542,
        10649
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4390": {
      "op": "SHL"
    },
    "4391": {
      "offset": [
        10542,
        10649
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4392": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10542,
        10649
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4395": {
      "offset": [
        10542,
        10649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4397": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10542,
        10649
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4398": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10542,
        10649
      ],
      "op": "ADD",
      "path": "22"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4402": {
      "op": "DUP1"
    },
    "4403": {
      "op": "DUP3"
    },
    "4404": {
      "op": "ADD"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4441": {
      "op": "DUP3"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "MSTORE"
    },
    "4444": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4451": {
      "op": "SHL"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4454": {
      "op": "DUP3"
    },
    "4455": {
      "op": "ADD"
    },
    "4456": {
      "op": "MSTORE"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4459": {
      "op": "ADD"
    },
    "4460": {
      "offset": [
        10542,
        10649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "4463": {
      "op": "JUMP"
    },
    "4464": {
      "offset": [
        10542,
        10649
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4465": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4577,
        4588
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4467": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4573
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4468": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4470": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4471": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "GT",
      "path": "22"
    },
    "4472": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4473": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1184"
    },
    "4476": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4477": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1184"
    },
    "4480": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "4483": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4566,
        4588
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4484": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4485": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4566,
        4588
      ],
      "op": "EQ",
      "path": "22"
    },
    "4486": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4487": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11DE"
    },
    "4490": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4491": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 36,
      "value": "0x0"
    },
    "4493": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4494": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4495": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4496": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4498": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4500": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4501": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4503": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4504": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4505": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4507": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4636
      ],
      "op": "ADD",
      "path": "22"
    },
    "4508": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4509": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4510": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4640,
        4641
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4512": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4640,
        4641
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4513": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4631
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4514": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11AC"
    },
    "4517": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4518": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4640,
        4641
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4519": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4640,
        4641
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4520": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4523": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4604,
        4641
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4524": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4525": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4526": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4527": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4604,
        4641
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x0"
    },
    "4532": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4533": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4534": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4535": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4537": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4539": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4540": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4542": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4543": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4544": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4690
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "4546": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4690
      ],
      "op": "ADD",
      "path": "22"
    },
    "4547": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4548": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4549": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4694,
        4695
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4551": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4694,
        4695
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4552": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4683
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4553": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11D3"
    },
    "4556": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4557": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4694,
        4695
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4558": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4694,
        4695
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4559": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4562": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4656,
        4695
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4563": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4564": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4565": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4566": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4656,
        4695
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1247"
    },
    "4571": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4572": {
      "op": "POP"
    },
    "4573": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4574": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4563,
        4869
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4575": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4738,
        4750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4577": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4734
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4578": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4580": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4581": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "GT",
      "path": "22"
    },
    "4582": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4583": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11F2"
    },
    "4586": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4587": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11F2"
    },
    "4590": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "4593": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4727,
        4750
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4594": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4595": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4727,
        4750
      ],
      "op": "EQ",
      "path": "22"
    },
    "4596": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4724,
        4869
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4597": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4724,
        4869
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1247"
    },
    "4600": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4724,
        4869
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4601": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 38,
      "value": "0x0"
    },
    "4603": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4604": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4605": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4606": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4780
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4608": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4610": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4611": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4613": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4614": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4615": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4800
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "4617": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4800
      ],
      "op": "ADD",
      "path": "22"
    },
    "4618": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4619": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4620": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4804,
        4805
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4622": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4804,
        4805
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4623": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4793
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4624": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x121A"
    },
    "4627": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4628": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4804,
        4805
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4629": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4804,
        4805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4630": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4633": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4766,
        4805
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4634": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4635": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4636": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4637": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4766,
        4805
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 39,
      "value": "0x0"
    },
    "4642": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4643": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4644": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4645": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4834
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4647": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4649": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4650": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4652": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4653": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4654": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4852
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4656": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4852
      ],
      "op": "ADD",
      "path": "22"
    },
    "4657": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4658": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4659": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4856,
        4857
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4661": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4856,
        4857
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4662": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4663": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1241"
    },
    "4666": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4667": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4856,
        4857
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4668": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4856,
        4857
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4669": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4672": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4820,
        4857
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4673": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4674": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4675": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4676": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4820,
        4857
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "op": "POP"
    },
    "4679": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4724,
        4869
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4680": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 40,
      "value": "0x0"
    },
    "4682": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4683": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4684": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4685": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4895
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4687": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4689": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4690": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4692": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4693": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4694": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4922
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "4696": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4922
      ],
      "op": "ADD",
      "path": "22"
    },
    "4697": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4698": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4699": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4926,
        4936
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4700": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4926,
        4936
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4701": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4908
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4702": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1268"
    },
    "4705": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4706": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4926,
        4936
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4707": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4926,
        4936
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4708": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BD7"
    },
    "4711": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4881,
        4936
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4712": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4713": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4714": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4715": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4881,
        4936
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4716": {
      "op": "POP"
    },
    "4717": {
      "op": "POP"
    },
    "4718": {
      "op": "POP"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "op": "POP"
    },
    "4722": {
      "op": "POP"
    },
    "4723": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        4399,
        5318
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4724": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4725": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2160,
        2172
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x127C"
    },
    "4728": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2160,
        2172
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x213D"
    },
    "4731": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2160,
        2172
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4732": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2160,
        2172
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4733": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2206
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 41,
      "value": "0xB"
    },
    "4735": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4737": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2207,
        2216
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4738": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4739": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4740": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4742": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4743": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4744": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4745": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4746": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4748": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4749": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4751": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2192,
        2217
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4752": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4754": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4755": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4756": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "4759": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4760": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4762": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4763": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4764": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4765": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4767": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4768": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4769": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4770": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4771": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4772": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4774": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4775": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4777": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4778": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4779": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4780": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4781": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4782": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4784": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4785": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4787": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4788": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4789": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4790": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4791": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4792": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4794": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4795": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4797": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4798": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4799": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4800": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4801": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4802": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4804": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4805": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4807": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4808": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4809": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4810": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4811": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4812": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4814": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4815": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4817": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4818": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4819": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4820": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4821": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4822": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4824": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4825": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "4827": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4828": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4829": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4830": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4831": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4832": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4834": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4835": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "4837": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4838": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4839": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4840": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4841": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4842": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4844": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4845": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "4847": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4848": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4849": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4850": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4851": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4852": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4854": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4855": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "4857": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4858": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4859": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4860": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4861": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4862": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4864": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4865": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "4867": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4868": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4869": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4870": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4871": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4872": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4874": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4875": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4877": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4878": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4879": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4880": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4881": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4882": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4884": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4885": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4887": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4888": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4889": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4890": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4891": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4892": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4894": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4895": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "4897": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4898": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ADD",
      "path": "22"
    },
    "4899": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4901": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4902": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4903": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4904": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "4907": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "EXP",
      "path": "22"
    },
    "4908": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4909": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DIV",
      "path": "22"
    },
    "4910": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "4912": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "AND",
      "path": "22"
    },
    "4913": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4915": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4916": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "GT",
      "path": "22"
    },
    "4917": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4918": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1341"
    },
    "4921": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4922": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1341"
    },
    "4925": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "4928": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4929": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4930": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4932": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4933": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "GT",
      "path": "22"
    },
    "4934": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4935": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1352"
    },
    "4938": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4939": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1352"
    },
    "4942": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x244B"
    },
    "4945": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4946": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4947": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4948": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4949": {
      "op": "POP"
    },
    "4950": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2185,
        2217
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4951": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2094,
        2225
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4952": {
      "op": "POP"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "o",
      "offset": [
        2094,
        2225
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4955": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4956": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4958": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x1"
    },
    "4960": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4961": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4962": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x805"
    },
    "4965": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4966": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B5C"
    },
    "4969": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4970": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4971": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4973": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "SUB"
    },
    "4982": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4983": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4984": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4985": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1394"
    },
    "4988": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4989": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4991": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4998": {
      "op": "SHL"
    },
    "4999": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5000": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5001": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5003": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "5004": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FD"
    },
    "5007": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5008": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C89"
    },
    "5011": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5012": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5019": {
      "op": "SHL"
    },
    "5020": {
      "op": "SUB"
    },
    "5021": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 43
    },
    "5022": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "AND",
      "path": "22"
    },
    "5023": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5024": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5025": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5026": {
      "branch": 117,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11112
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5027": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11137
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13BA"
    },
    "5030": {
      "branch": 117,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11137
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5034": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11129,
        11137
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5041": {
      "op": "SHL"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11116,
        11137
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5044": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11116,
        11137
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5045": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11116,
        11137
      ],
      "op": "AND",
      "path": "22"
    },
    "5046": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11129,
        11137
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5047": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11129,
        11137
      ],
      "op": "AND",
      "path": "22"
    },
    "5048": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11116,
        11137
      ],
      "op": "EQ",
      "path": "22"
    },
    "5049": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11116,
        11137
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5050": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11089,
        11137
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5051": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1401"
    },
    "5054": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5055": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5057": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5064": {
      "op": "SHL"
    },
    "5065": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5066": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5069": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5071": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5072": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "ADD",
      "path": "22"
    },
    "5073": {
      "op": "MSTORE"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5078": {
      "op": "DUP3"
    },
    "5079": {
      "op": "ADD"
    },
    "5080": {
      "op": "MSTORE"
    },
    "5081": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5111": {
      "op": "DUP3"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "5120": {
      "op": "JUMP"
    },
    "5121": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11081,
        11166
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5122": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11185
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0xD"
    },
    "5124": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5125": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5132": {
      "op": "SHL"
    },
    "5133": {
      "op": "SUB"
    },
    "5134": {
      "op": "NOT"
    },
    "5135": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "AND",
      "path": "22"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "op": "SUB"
    },
    "5144": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5145": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "AND",
      "path": "22"
    },
    "5146": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5147": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5148": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "OR",
      "path": "22"
    },
    "5149": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5150": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5151": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11177,
        11197
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5152": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 45,
      "value": "0x40"
    },
    "5154": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5155": {
      "op": "SWAP1"
    },
    "5156": {
      "op": "DUP2"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "5191": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5194": {
      "op": "ADD"
    },
    "5195": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5196": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5198": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5199": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5200": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5201": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "SUB",
      "path": "22"
    },
    "5202": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5203": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11213,
        11235
      ],
      "op": "LOG1",
      "path": "22"
    },
    "5204": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11008,
        11243
      ],
      "op": "POP",
      "path": "22"
    },
    "5205": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        11008,
        11243
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5206": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "op": "SUB"
    },
    "5215": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 46
    },
    "5216": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "6"
    },
    "5217": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5218": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "EQ",
      "path": "6"
    },
    "5219": {
      "branch": 127,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5220": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14AF"
    },
    "5223": {
      "branch": 127,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5224": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5227": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5233": {
      "op": "SHL"
    },
    "5234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5235": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "6"
    },
    "5242": {
      "op": "MSTORE"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5247": {
      "op": "DUP3"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "MSTORE"
    },
    "5250": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "5283": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5285": {
      "op": "DUP3"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "MSTORE"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "5294": {
      "op": "JUMP"
    },
    "5295": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5296": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5297": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 47,
      "value": "0x0"
    },
    "5299": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "5304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5320": {
      "op": "SHL"
    },
    "5321": {
      "op": "SUB"
    },
    "5322": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "6"
    },
    "5324": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5325": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5326": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5328": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5329": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5330": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5331": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5332": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5333": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5334": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5335": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5338": {
      "op": "NOT"
    },
    "5339": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "6"
    },
    "5340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5342": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "6"
    },
    "5346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 48
    },
    "5350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5351": {
      "op": "SWAP1"
    },
    "5352": {
      "op": "DUP2"
    },
    "5353": {
      "op": "MSTORE"
    },
    "5354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5355": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5356": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5390": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5391": {
      "op": "ADD"
    },
    "5392": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5394": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5396": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5397": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "6"
    },
    "5398": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5399": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "6"
    },
    "5400": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "5401": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "5402": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5404": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 49,
      "value": "0x1525"
    },
    "5407": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5408": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1953"
    },
    "5412": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5413": {
      "branch": 128,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5414": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1541"
    },
    "5417": {
      "branch": 128,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5418": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5427": {
      "op": "SHL"
    },
    "5428": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5432": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "6"
    },
    "5433": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "5436": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C22"
    },
    "5440": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5441": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 50,
      "value": "0x154D"
    },
    "5445": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5446": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5449": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C43"
    },
    "5452": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5453": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5456": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5457": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5458": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5459": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5924,
        6282
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5460": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5462": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5463": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5464": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5465": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5467": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5469": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5470": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5472": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5473": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5474": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5475": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5998,
        6011
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5477": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5998,
        6011
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5484": {
      "op": "SHL"
    },
    "5485": {
      "op": "SUB"
    },
    "5486": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "5487": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 51,
      "value": "0x15D2"
    },
    "5490": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5491": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5493": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5500": {
      "op": "SHL"
    },
    "5501": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5502": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5505": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5507": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5508": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "ADD",
      "path": "22"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "ADD"
    },
    "5516": {
      "op": "MSTORE"
    },
    "5517": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "5550": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5552": {
      "op": "DUP3"
    },
    "5553": {
      "op": "ADD"
    },
    "5554": {
      "op": "MSTORE"
    },
    "5555": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5573": {
      "op": "SHL"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5576": {
      "op": "DUP3"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "MSTORE"
    },
    "5579": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5581": {
      "op": "ADD"
    },
    "5582": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "5585": {
      "op": "JUMP"
    },
    "5586": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6024,
        6101
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5587": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 52,
      "value": "0x5DD"
    },
    "5590": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6167,
        6175
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5591": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5593": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5594": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5595": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "5597": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "ADD",
      "path": "22"
    },
    "5598": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5600": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5601": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5602": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5E"
    },
    "5604": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5605": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5606": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5608": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "ADD",
      "path": "22"
    },
    "5609": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2DB3"
    },
    "5612": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5E"
    },
    "5614": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5615": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6274
      ],
      "op": "CODECOPY",
      "path": "22"
    },
    "5616": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6152,
        6166
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5E3"
    },
    "5619": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6152,
        6274
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5620": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10774,
        11000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5621": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "5623": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5630": {
      "op": "SHL"
    },
    "5631": {
      "op": "SUB"
    },
    "5632": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "5633": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5634": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "5635": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x161E"
    },
    "5638": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5639": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5641": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5648": {
      "op": "SHL"
    },
    "5649": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5650": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5651": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5653": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "5654": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FD"
    },
    "5657": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5658": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C89"
    },
    "5661": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5662": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5669": {
      "op": "SHL"
    },
    "5670": {
      "op": "SUB"
    },
    "5671": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 53
    },
    "5672": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "AND",
      "path": "22"
    },
    "5673": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5674": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5675": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5676": {
      "branch": 119,
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10875
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5677": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10898
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1644"
    },
    "5680": {
      "branch": 119,
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10898
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5681": {
      "op": "POP"
    },
    "5682": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10891,
        10898
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5684": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10891,
        10898
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5691": {
      "op": "SHL"
    },
    "5692": {
      "op": "SUB"
    },
    "5693": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10879,
        10898
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5694": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10879,
        10898
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5695": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10879,
        10898
      ],
      "op": "AND",
      "path": "22"
    },
    "5696": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10891,
        10898
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5697": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10891,
        10898
      ],
      "op": "AND",
      "path": "22"
    },
    "5698": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10879,
        10898
      ],
      "op": "EQ",
      "path": "22"
    },
    "5699": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        10879,
        10898
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5700": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10853,
        10898
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5701": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x168B"
    },
    "5704": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5705": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5707": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5716": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5719": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5721": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5722": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "ADD",
      "path": "22"
    },
    "5723": {
      "op": "MSTORE"
    },
    "5724": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5728": {
      "op": "DUP3"
    },
    "5729": {
      "op": "ADD"
    },
    "5730": {
      "op": "MSTORE"
    },
    "5731": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5758": {
      "op": "SHL"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5761": {
      "op": "DUP3"
    },
    "5762": {
      "op": "ADD"
    },
    "5763": {
      "op": "MSTORE"
    },
    "5764": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8FD"
    },
    "5770": {
      "op": "JUMP"
    },
    "5771": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10845,
        10927
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5772": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10945
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 54,
      "value": "0xC"
    },
    "5774": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5775": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "op": "SUB"
    },
    "5784": {
      "op": "NOT"
    },
    "5785": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "AND",
      "path": "22"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5792": {
      "op": "SHL"
    },
    "5793": {
      "op": "SUB"
    },
    "5794": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5795": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "AND",
      "path": "22"
    },
    "5796": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5797": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5798": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "OR",
      "path": "22"
    },
    "5799": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5800": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5801": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10938,
        10956
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5802": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10972,
        10992
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 55,
      "value": "0x40"
    },
    "5804": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10972,
        10992
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5805": {
      "op": "SWAP1"
    },
    "5806": {
      "op": "DUP2"
    },
    "5807": {
      "op": "MSTORE"
    },
    "5808": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10972,
        10992
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "5841": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10972,
        10992
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5844": {
      "op": "ADD"
    },
    "5845": {
      "fn": "Wizards.updateBattler",
      "offset": [
        10972,
        10992
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x144B"
    },
    "5848": {
      "op": "JUMP"
    },
    "5849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5850": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "5852": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5859": {
      "op": "SHL"
    },
    "5860": {
      "op": "SUB"
    },
    "5861": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "5862": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5863": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "5864": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1703"
    },
    "5867": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5868": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5870": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5877": {
      "op": "SHL"
    },
    "5878": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5879": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5880": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5882": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "5883": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FD"
    },
    "5886": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5887": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C89"
    },
    "5890": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5891": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5898": {
      "op": "SHL"
    },
    "5899": {
      "op": "SUB"
    },
    "5900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 56
    },
    "5901": {
      "branch": 141,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "8"
    },
    "5902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1768"
    },
    "5905": {
      "branch": 141,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5909": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5915": {
      "op": "SHL"
    },
    "5916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "8"
    },
    "5924": {
      "op": "MSTORE"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5929": {
      "op": "DUP3"
    },
    "5930": {
      "op": "ADD"
    },
    "5931": {
      "op": "MSTORE"
    },
    "5932": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5965": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5967": {
      "op": "DUP3"
    },
    "5968": {
      "op": "ADD"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5979": {
      "op": "SHL"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5982": {
      "op": "DUP3"
    },
    "5983": {
      "op": "ADD"
    },
    "5984": {
      "op": "MSTORE"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8FD"
    },
    "5991": {
      "op": "JUMP"
    },
    "5992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 57,
      "value": "0xA78"
    },
    "5996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BF1"
    },
    "6000": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6001": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6002": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6010": {
      "op": "SHL"
    },
    "6011": {
      "op": "SUB"
    },
    "6012": {
      "op": "NOT"
    },
    "6013": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 58
    },
    "6014": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "6015": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6022": {
      "op": "SHL"
    },
    "6023": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "6"
    },
    "6024": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6025": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17A2"
    },
    "6028": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6029": {
      "op": "POP"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6036": {
      "op": "SHL"
    },
    "6037": {
      "op": "SUB"
    },
    "6038": {
      "op": "NOT"
    },
    "6039": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6040": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "6"
    },
    "6041": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "6"
    },
    "6050": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6051": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6052": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DD"
    },
    "6055": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6056": {
      "op": "POP"
    },
    "6057": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6064": {
      "op": "SHL"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6071": {
      "op": "SHL"
    },
    "6072": {
      "op": "SUB"
    },
    "6073": {
      "op": "NOT"
    },
    "6074": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 59
    },
    "6075": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "6076": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "4"
    },
    "6077": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DD"
    },
    "6080": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6081": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6082": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "6084": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6085": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17E5"
    },
    "6088": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6089": {
      "op": "POP"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 60,
      "value": "0x40"
    },
    "6093": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6094": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6095": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6096": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6097": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "6098": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6099": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6100": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6101": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "6103": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6104": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6105": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "6109": {
      "op": "SHL"
    },
    "6110": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6112": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6113": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "6114": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6115": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6116": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6117": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6118": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6119": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6121": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6122": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6123": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6124": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x180F"
    },
    "6127": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6128": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 61
    },
    "6129": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17F9"
    },
    "6132": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6133": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2CBE"
    },
    "6136": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6137": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6138": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 62,
      "value": "0x1808"
    },
    "6143": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6144": {
      "op": "POP"
    },
    "6145": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6147": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6148": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2BEF"
    },
    "6151": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6152": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6153": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6154": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "21"
    },
    "6155": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x17E9"
    },
    "6158": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6159": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6160": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6162": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6163": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6172": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6173": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "21"
    },
    "6174": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6175": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x182A"
    },
    "6178": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6179": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x182A"
    },
    "6182": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x21F6"
    },
    "6185": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6186": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6187": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6189": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6190": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6191": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6192": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6193": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6194": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6195": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "6197": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6198": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "6200": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "21"
    },
    "6201": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "21"
    },
    "6202": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6204": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6205": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6206": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6207": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6209": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6210": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6211": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6212": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1854"
    },
    "6215": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6216": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6218": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6219": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6220": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6221": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6222": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "6223": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6224": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "21"
    },
    "6225": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6226": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6227": {
      "op": "POP"
    },
    "6228": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6229": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "6230": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6231": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "6232": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6233": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "21"
    },
    "6234": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6235": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x18BF"
    },
    "6238": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6239": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 63,
      "value": "0x1869"
    },
    "6242": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "6244": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6245": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2CD9"
    },
    "6248": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6249": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6250": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6251": {
      "op": "POP"
    },
    "6252": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 64,
      "value": "0x1876"
    },
    "6255": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6257": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "21"
    },
    "6258": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2BAD"
    },
    "6261": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6262": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6263": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1881"
    },
    "6266": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6267": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x30"
    },
    "6269": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2BD7"
    },
    "6272": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6273": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6274": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "6276": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "21"
    },
    "6277": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6278": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6279": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6280": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6281": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6282": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "21"
    },
    "6283": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1896"
    },
    "6286": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6287": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1896"
    },
    "6290": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2C73"
    },
    "6293": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6294": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6295": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6297": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "6298": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "6299": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6306": {
      "op": "SHL"
    },
    "6307": {
      "op": "SUB"
    },
    "6308": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "21"
    },
    "6309": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "21"
    },
    "6310": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6311": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6312": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6314": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "21"
    },
    "6315": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6316": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "6317": {
      "op": "POP"
    },
    "6318": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 65,
      "value": "0x18B8"
    },
    "6321": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6323": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "21"
    },
    "6324": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2BEF"
    },
    "6327": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6328": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6329": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "6330": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "21"
    },
    "6331": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1858"
    },
    "6334": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6335": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6336": {
      "fn": "Strings.toString",
      "offset": [
        994,
        1000
      ],
      "op": "SWAP5",
      "path": "21",
      "statement": 66
    },
    "6337": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "6338": {
      "op": "POP"
    },
    "6339": {
      "op": "POP"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "POP"
    },
    "6342": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6343": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6344": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 67,
      "value": "0x0"
    },
    "6346": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6347": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6348": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6349": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6351": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6353": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6354": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6356": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6357": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6358": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6359": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6366": {
      "op": "SHL"
    },
    "6367": {
      "op": "SUB"
    },
    "6368": {
      "op": "NOT"
    },
    "6369": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6376": {
      "op": "SHL"
    },
    "6377": {
      "op": "SUB"
    },
    "6378": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6379": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "6380": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6381": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6382": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "6"
    },
    "6383": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6384": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6385": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6386": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6387": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6388": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 68,
      "value": "0x18FC"
    },
    "6391": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6392": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC8"
    },
    "6395": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6396": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6403": {
      "op": "SHL"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "6"
    },
    "6406": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6439": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6441": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6442": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6444": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6445": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6446": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6447": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "6"
    },
    "6448": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6449": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "6"
    },
    "6450": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "6451": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "6452": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6453": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6454": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 69,
      "value": "0x194F"
    },
    "6457": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6458": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6459": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6461": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6462": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6463": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6465": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "6"
    },
    "6466": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6468": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6469": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6470": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6472": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6473": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6474": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "6"
    },
    "6475": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C76"
    },
    "6478": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6479": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6480": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "6481": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "6482": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6483": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6484": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6486": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6487": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6488": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6489": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "6491": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6493": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6494": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6496": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6497": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6498": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6505": {
      "op": "SHL"
    },
    "6506": {
      "op": "SUB"
    },
    "6507": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "6508": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x19CC"
    },
    "6511": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6512": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6514": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6521": {
      "op": "SHL"
    },
    "6522": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6523": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6529": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "6"
    },
    "6530": {
      "op": "MSTORE"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6535": {
      "op": "DUP3"
    },
    "6536": {
      "op": "ADD"
    },
    "6537": {
      "op": "MSTORE"
    },
    "6538": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6573": {
      "op": "DUP3"
    },
    "6574": {
      "op": "ADD"
    },
    "6575": {
      "op": "MSTORE"
    },
    "6576": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "6591": {
      "op": "SHL"
    },
    "6592": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6594": {
      "op": "DUP3"
    },
    "6595": {
      "op": "ADD"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6599": {
      "op": "ADD"
    },
    "6600": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "6603": {
      "op": "JUMP"
    },
    "6604": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6605": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6607": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19D7"
    },
    "6610": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6611": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC8"
    },
    "6614": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6615": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6616": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6617": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "6"
    },
    "6618": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 71
    },
    "6619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "op": "SUB"
    },
    "6627": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "6628": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6635": {
      "op": "SHL"
    },
    "6636": {
      "op": "SUB"
    },
    "6637": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "6638": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "6"
    },
    "6639": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6640": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A12"
    },
    "6643": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6644": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "6"
    },
    "6645": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6652": {
      "op": "SHL"
    },
    "6653": {
      "op": "SUB"
    },
    "6654": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "6655": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A07"
    },
    "6658": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6659": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x888"
    },
    "6662": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6663": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6670": {
      "op": "SHL"
    },
    "6671": {
      "op": "SUB"
    },
    "6672": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "6673": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "6"
    },
    "6674": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6675": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6676": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18BF"
    },
    "6679": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6680": {
      "op": "POP"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6687": {
      "op": "SHL"
    },
    "6688": {
      "op": "SUB"
    },
    "6689": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6690": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6691": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "6692": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6694": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6695": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6696": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6697": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "6699": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6701": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6702": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6703": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6704": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6706": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6707": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6708": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6709": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6710": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "6"
    },
    "6711": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "6712": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6713": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6714": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6715": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6716": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6717": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6718": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6719": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "6721": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "6722": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18BF"
    },
    "6725": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6726": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6727": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 72
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6734": {
      "op": "SHL"
    },
    "6735": {
      "op": "SUB"
    },
    "6736": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "6737": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A59"
    },
    "6740": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6741": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC8"
    },
    "6744": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6745": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6752": {
      "op": "SHL"
    },
    "6753": {
      "op": "SUB"
    },
    "6754": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "6755": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "6"
    },
    "6756": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AC1"
    },
    "6759": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6760": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6762": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6771": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6774": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6776": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6777": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "6"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6821": {
      "op": "DUP3"
    },
    "6822": {
      "op": "ADD"
    },
    "6823": {
      "op": "MSTORE"
    },
    "6824": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "6834": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6836": {
      "op": "SHL"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6839": {
      "op": "DUP3"
    },
    "6840": {
      "op": "ADD"
    },
    "6841": {
      "op": "MSTORE"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6844": {
      "op": "ADD"
    },
    "6845": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "6848": {
      "op": "JUMP"
    },
    "6849": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6856": {
      "op": "SHL"
    },
    "6857": {
      "op": "SUB"
    },
    "6858": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 73
    },
    "6859": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "6"
    },
    "6860": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B23"
    },
    "6863": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6864": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6866": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6873": {
      "op": "SHL"
    },
    "6874": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6875": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6878": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6880": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6881": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "6"
    },
    "6882": {
      "op": "MSTORE"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6885": {
      "op": "DUP1"
    },
    "6886": {
      "op": "DUP3"
    },
    "6887": {
      "op": "ADD"
    },
    "6888": {
      "op": "MSTORE"
    },
    "6889": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6924": {
      "op": "DUP3"
    },
    "6925": {
      "op": "ADD"
    },
    "6926": {
      "op": "MSTORE"
    },
    "6927": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6934": {
      "op": "SHL"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6937": {
      "op": "DUP3"
    },
    "6938": {
      "op": "ADD"
    },
    "6939": {
      "op": "MSTORE"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "6946": {
      "op": "JUMP"
    },
    "6947": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6948": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 74,
      "value": "0x1B2E"
    },
    "6951": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6952": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6953": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6954": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA9"
    },
    "6957": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6958": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6959": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 75,
      "value": "0x1B39"
    },
    "6962": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6964": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6965": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18C7"
    },
    "6968": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6969": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6976": {
      "op": "SHL"
    },
    "6977": {
      "op": "SUB"
    },
    "6978": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 76
    },
    "6979": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "6"
    },
    "6980": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6982": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6983": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6984": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6985": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6987": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6989": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6990": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6992": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6993": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6994": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6995": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6996": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6998": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6999": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7000": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B62"
    },
    "7003": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7004": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7005": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7006": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CD9"
    },
    "7009": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7010": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7011": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7012": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7013": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7014": {
      "op": "POP"
    },
    "7015": {
      "op": "POP"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7022": {
      "op": "SHL"
    },
    "7023": {
      "op": "SUB"
    },
    "7024": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 77
    },
    "7025": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "6"
    },
    "7026": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7028": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7029": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7030": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7031": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "7033": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7035": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7036": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7038": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7039": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7040": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7041": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7042": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7044": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7045": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7046": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B90"
    },
    "7049": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7050": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7051": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7052": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BD7"
    },
    "7055": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7056": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7057": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7058": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7059": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7060": {
      "op": "POP"
    },
    "7061": {
      "op": "POP"
    },
    "7062": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 78,
      "value": "0x0"
    },
    "7064": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7065": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7066": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7067": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "7069": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7071": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7072": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7074": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7075": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7076": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7077": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7078": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7085": {
      "op": "SHL"
    },
    "7086": {
      "op": "SUB"
    },
    "7087": {
      "op": "NOT"
    },
    "7088": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7095": {
      "op": "SHL"
    },
    "7096": {
      "op": "SUB"
    },
    "7097": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7098": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7099": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "7100": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7101": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7102": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "6"
    },
    "7103": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7104": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7105": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7106": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 79
    },
    "7107": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7108": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7109": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7110": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7111": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7112": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "6"
    },
    "7113": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7114": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7147": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7148": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "6"
    },
    "7149": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7150": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7151": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7152": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7153": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7154": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "7156": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7157": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7164": {
      "op": "SHL"
    },
    "7165": {
      "op": "SUB"
    },
    "7166": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 80
    },
    "7167": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7168": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7175": {
      "op": "SHL"
    },
    "7176": {
      "op": "SUB"
    },
    "7177": {
      "op": "NOT"
    },
    "7178": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7179": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "7180": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7181": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "8"
    },
    "7182": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7183": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7184": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7185": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 81,
      "value": "0x40"
    },
    "7187": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7188": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7189": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "8"
    },
    "7190": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7191": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7192": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7193": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7194": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7227": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7228": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7230": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7231": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "8"
    },
    "7232": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "7233": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "7234": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7235": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7236": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 82,
      "value": "0x1C4E"
    },
    "7239": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7240": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7241": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7242": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A46"
    },
    "7245": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7246": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7247": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 83,
      "value": "0x1C5A"
    },
    "7250": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7251": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7252": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7253": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7254": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "7257": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7258": {
      "branch": 131,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7259": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x154D"
    },
    "7262": {
      "branch": 131,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7263": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7265": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7272": {
      "op": "SHL"
    },
    "7273": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7274": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7275": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7277": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "6"
    },
    "7278": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "7281": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7282": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CF0"
    },
    "7285": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7286": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7287": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 84,
      "value": "0x1C80"
    },
    "7290": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7291": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7292": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E5F"
    },
    "7295": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7296": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7297": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 85,
      "value": "0x1C8D"
    },
    "7300": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7302": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7303": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7304": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7305": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D61"
    },
    "7308": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7309": {
      "branch": 132,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7310": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA33"
    },
    "7313": {
      "branch": 132,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7314": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7316": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7323": {
      "op": "SHL"
    },
    "7324": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7325": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7326": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7328": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "6"
    },
    "7329": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "7332": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7333": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CF0"
    },
    "7336": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7337": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "op": "SUB"
    },
    "7346": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7347": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "7"
    },
    "7348": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D04"
    },
    "7351": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7352": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 86,
      "value": "0x1CFF"
    },
    "7355": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7356": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 87,
      "value": "0x8"
    },
    "7358": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7359": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7360": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7362": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7363": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7364": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7365": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "7367": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7369": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7370": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7372": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7373": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7374": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7375": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7376": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7377": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 88,
      "value": "0x1"
    },
    "7379": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7380": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "7381": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7382": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7383": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7384": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7385": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7386": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7387": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7420": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "7421": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7422": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7423": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7424": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D27"
    },
    "7427": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7428": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7429": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7436": {
      "op": "SHL"
    },
    "7437": {
      "op": "SUB"
    },
    "7438": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "7439": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "op": "SUB"
    },
    "7448": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "7449": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "7"
    },
    "7450": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D27"
    },
    "7453": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7454": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 89,
      "value": "0x1D27"
    },
    "7457": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7458": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7459": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FAD"
    },
    "7462": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7463": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7470": {
      "op": "SHL"
    },
    "7471": {
      "op": "SUB"
    },
    "7472": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7473": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "7"
    },
    "7474": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D3E"
    },
    "7477": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7478": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 90,
      "value": "0xA33"
    },
    "7481": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7482": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x204A"
    },
    "7485": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7486": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7487": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "op": "SUB"
    },
    "7496": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "7497": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "op": "SUB"
    },
    "7506": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "7507": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "7"
    },
    "7508": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA33"
    },
    "7511": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7512": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 91,
      "value": "0xA33"
    },
    "7515": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7516": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7517": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20F9"
    },
    "7520": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7530": {
      "op": "SHL"
    },
    "7531": {
      "op": "SUB"
    },
    "7532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "6"
    },
    "7534": {
      "op": "EXTCODESIZE"
    },
    "7535": {
      "op": "ISZERO"
    },
    "7536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E54"
    },
    "7539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7543": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7550": {
      "op": "SHL"
    },
    "7551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7559": {
      "op": "SHL"
    },
    "7560": {
      "op": "SUB"
    },
    "7561": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "6"
    },
    "7563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x150B7A02"
    },
    "7569": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DA5"
    },
    "7573": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7574": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7575": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7576": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "6"
    },
    "7577": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "6"
    },
    "7579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7580": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "6"
    },
    "7581": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7582": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7584": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "7585": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D42"
    },
    "7588": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7589": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7590": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7592": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7596": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "6"
    },
    "7598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7599": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7601": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "6"
    },
    "7603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "6"
    },
    "7604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "7606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "7607": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "7608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DE0"
    },
    "7613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7614": {
      "op": "POP"
    },
    "7615": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7618": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7619": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7621": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7622": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7623": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7624": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7627": {
      "op": "NOT"
    },
    "7628": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "6"
    },
    "7629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7630": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "7631": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7633": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7634": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DDD"
    },
    "7637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "7640": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D7F"
    },
    "7644": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7645": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7646": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7648": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7649": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E3A"
    },
    "7652": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7653": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7654": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7655": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7656": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7657": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E0E"
    },
    "7660": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7661": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7663": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7664": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7665": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "7666": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "7668": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "6"
    },
    "7669": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "7671": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7672": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "7673": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "6"
    },
    "7674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7675": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "7676": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7678": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7679": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7680": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "7683": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7685": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7687": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7688": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "7689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "7690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E13"
    },
    "7693": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7694": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7695": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7698": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "7699": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7700": {
      "op": "POP"
    },
    "7701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7702": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7703": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E32"
    },
    "7706": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 92,
      "value": "0x40"
    },
    "7709": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7716": {
      "op": "SHL"
    },
    "7717": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7718": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7719": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7721": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "6"
    },
    "7722": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "7725": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CF0"
    },
    "7729": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7730": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7731": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7732": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7733": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7736": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "6"
    },
    "7737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7738": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7745": {
      "op": "SHL"
    },
    "7746": {
      "op": "SUB"
    },
    "7747": {
      "op": "NOT"
    },
    "7748": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "6",
      "statement": 93
    },
    "7749": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7754": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7756": {
      "op": "SHL"
    },
    "7757": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "6"
    },
    "7758": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18BF"
    },
    "7763": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7765": {
      "op": "POP"
    },
    "7766": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 94,
      "value": "0x1"
    },
    "7768": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "7769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "7771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "7772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "7773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "7774": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7775": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 95
    },
    "7785": {
      "branch": 133,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "6"
    },
    "7786": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EB5"
    },
    "7789": {
      "branch": 133,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7790": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7792": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7793": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7797": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7799": {
      "op": "SHL"
    },
    "7800": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7801": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7804": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7806": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7807": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "6"
    },
    "7808": {
      "op": "DUP2"
    },
    "7809": {
      "op": "SWAP1"
    },
    "7810": {
      "op": "MSTORE"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7813": {
      "op": "DUP3"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "op": "MSTORE"
    },
    "7816": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7851": {
      "op": "DUP3"
    },
    "7852": {
      "op": "ADD"
    },
    "7853": {
      "op": "MSTORE"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "7860": {
      "op": "JUMP"
    },
    "7861": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7862": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7864": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7865": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7866": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7867": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "7869": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7871": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7872": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7874": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7875": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7876": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7883": {
      "op": "SHL"
    },
    "7884": {
      "op": "SUB"
    },
    "7885": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "7886": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7887": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 96,
      "value": "0x1F1A"
    },
    "7890": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7891": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7893": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7900": {
      "op": "SHL"
    },
    "7901": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7902": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7905": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7907": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7908": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "6"
    },
    "7909": {
      "op": "MSTORE"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "ADD"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7952": {
      "op": "DUP3"
    },
    "7953": {
      "op": "ADD"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FD"
    },
    "7961": {
      "op": "JUMP"
    },
    "7962": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7963": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 97,
      "value": "0x1F26"
    },
    "7966": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7968": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7969": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7970": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CA9"
    },
    "7973": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7974": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7981": {
      "op": "SHL"
    },
    "7982": {
      "op": "SUB"
    },
    "7983": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 98
    },
    "7984": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "6"
    },
    "7985": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7987": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7988": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7989": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7990": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "7992": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7994": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7995": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7997": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7998": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7999": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8000": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8001": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8003": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8004": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8005": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F4F"
    },
    "8008": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8009": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8010": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8011": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BD7"
    },
    "8014": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8015": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8016": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8017": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8018": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "op": "POP"
    },
    "8021": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 99,
      "value": "0x0"
    },
    "8023": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8024": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8025": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8026": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8028": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8030": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8031": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8033": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8034": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8035": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8036": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8037": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8044": {
      "op": "SHL"
    },
    "8045": {
      "op": "SUB"
    },
    "8046": {
      "op": "NOT"
    },
    "8047": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8054": {
      "op": "SHL"
    },
    "8055": {
      "op": "SUB"
    },
    "8056": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8057": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "8058": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8059": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8060": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "6"
    },
    "8061": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8062": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8063": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8064": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 100
    },
    "8065": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8066": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8067": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8068": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8069": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8102": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8103": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8104": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8105": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "6"
    },
    "8106": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "8107": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "8108": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8109": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8110": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8112": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8114": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FBA"
    },
    "8117": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8118": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3F"
    },
    "8121": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8122": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8123": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FC4"
    },
    "8126": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8127": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8128": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CD9"
    },
    "8131": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8132": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8133": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8135": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8136": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8137": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8138": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8140": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8142": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8143": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8145": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8146": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8147": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8148": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8149": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8150": {
      "op": "POP"
    },
    "8151": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8152": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8153": {
      "branch": 140,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "7"
    },
    "8154": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2017"
    },
    "8157": {
      "branch": 140,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8164": {
      "op": "SHL"
    },
    "8165": {
      "op": "SUB"
    },
    "8166": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8167": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "7"
    },
    "8168": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8170": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8171": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8172": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8173": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "8175": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8177": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8178": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8179": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8180": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8182": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8183": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8184": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8185": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "7"
    },
    "8186": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8187": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8188": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8189": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8190": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8191": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8192": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8193": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8194": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 101
    },
    "8195": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8196": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8197": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8198": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8199": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8200": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8201": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8202": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8203": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 102
    },
    "8204": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8205": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8207": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8208": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8209": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8210": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8211": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8212": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8213": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8214": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8215": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8216": {
      "op": "POP"
    },
    "8217": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 103,
      "value": "0x0"
    },
    "8219": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8220": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8221": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8222": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8224": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8226": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8227": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8228": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8229": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8231": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8232": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8233": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8234": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8235": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8236": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8243": {
      "op": "SHL"
    },
    "8244": {
      "op": "SUB"
    },
    "8245": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 104
    },
    "8246": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8247": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "7"
    },
    "8248": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8249": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8250": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "8252": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8253": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8254": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8255": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8256": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8257": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8258": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8259": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8260": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8261": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8262": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8263": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8264": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8265": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8266": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8267": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8269": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8272": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8273": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x205C"
    },
    "8276": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8277": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8279": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8280": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CD9"
    },
    "8283": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8284": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8285": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8287": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8288": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8289": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8290": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "8292": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8294": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8295": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8297": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8298": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8299": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8300": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8302": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8303": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8304": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8305": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8306": {
      "op": "POP"
    },
    "8307": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8308": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8309": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8310": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8311": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8312": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "7"
    },
    "8313": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2084"
    },
    "8316": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8317": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2084"
    },
    "8320": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C73"
    },
    "8323": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8324": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8325": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8326": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8328": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8329": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8331": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8333": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8334": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "7"
    },
    "8335": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8336": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8337": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "7"
    },
    "8338": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 105
    },
    "8339": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8341": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8342": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8343": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8344": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8345": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "7"
    },
    "8346": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A5"
    },
    "8349": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8350": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A5"
    },
    "8353": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C73"
    },
    "8356": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8357": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8358": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8360": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8361": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8362": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8363": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8365": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8366": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8367": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8368": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8369": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8370": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "7"
    },
    "8371": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8372": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8373": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8374": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8375": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 106
    },
    "8376": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8377": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8378": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "8380": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8381": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8382": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8383": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8385": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8386": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8387": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8388": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8389": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8390": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8391": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 107
    },
    "8392": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8393": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8394": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8395": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8396": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8397": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 108,
      "value": "0x8"
    },
    "8399": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8400": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8401": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8402": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20DD"
    },
    "8405": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8406": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20DD"
    },
    "8409": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D9C"
    },
    "8412": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8413": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8414": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8416": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8417": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "7"
    },
    "8418": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8419": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8420": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8421": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8423": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8424": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8426": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8428": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8429": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "7"
    },
    "8430": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8432": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8433": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8434": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8435": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8436": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "8437": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "8438": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "8439": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "8440": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8441": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8442": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8444": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2104"
    },
    "8447": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8448": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3F"
    },
    "8451": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8452": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8459": {
      "op": "SHL"
    },
    "8460": {
      "op": "SUB"
    },
    "8461": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 109
    },
    "8462": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8463": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "7"
    },
    "8464": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8466": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8467": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8468": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8469": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "8471": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8473": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8474": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8475": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8476": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8478": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8479": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8480": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8481": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "7"
    },
    "8482": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8483": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8484": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8485": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8486": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8487": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8488": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8489": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "7"
    },
    "8490": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8491": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8492": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 110
    },
    "8493": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8494": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8495": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8497": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8498": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8499": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8500": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8501": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8502": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8503": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8504": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8505": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8506": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8509": {
      "op": "JUMPDEST"
    },
    "8510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8512": {
      "op": "MLOAD"
    },
    "8513": {
      "op": "DUP1"
    },
    "8514": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8520": {
      "op": "MSTORE"
    },
    "8521": {
      "op": "DUP1"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8524": {
      "op": "DUP2"
    },
    "8525": {
      "op": "MSTORE"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8528": {
      "op": "ADD"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8531": {
      "op": "DUP2"
    },
    "8532": {
      "op": "MSTORE"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8535": {
      "op": "ADD"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8538": {
      "op": "DUP2"
    },
    "8539": {
      "op": "MSTORE"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8542": {
      "op": "ADD"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8545": {
      "op": "DUP2"
    },
    "8546": {
      "op": "MSTORE"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8549": {
      "op": "ADD"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8552": {
      "op": "DUP2"
    },
    "8553": {
      "op": "MSTORE"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8556": {
      "op": "ADD"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8559": {
      "op": "DUP2"
    },
    "8560": {
      "op": "MSTORE"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8563": {
      "op": "ADD"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8566": {
      "op": "DUP2"
    },
    "8567": {
      "op": "MSTORE"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8570": {
      "op": "ADD"
    },
    "8571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8573": {
      "op": "DUP2"
    },
    "8574": {
      "op": "MSTORE"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8577": {
      "op": "ADD"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8580": {
      "op": "DUP2"
    },
    "8581": {
      "op": "MSTORE"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8584": {
      "op": "ADD"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8587": {
      "op": "DUP2"
    },
    "8588": {
      "op": "MSTORE"
    },
    "8589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8591": {
      "op": "ADD"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8594": {
      "op": "DUP2"
    },
    "8595": {
      "op": "MSTORE"
    },
    "8596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8598": {
      "op": "ADD"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8601": {
      "op": "DUP2"
    },
    "8602": {
      "op": "MSTORE"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8605": {
      "op": "ADD"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8608": {
      "op": "DUP2"
    },
    "8609": {
      "op": "MSTORE"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8612": {
      "op": "ADD"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8617": {
      "op": "DUP2"
    },
    "8618": {
      "op": "GT"
    },
    "8619": {
      "op": "ISZERO"
    },
    "8620": {
      "op": "PUSH2",
      "value": "0x21B7"
    },
    "8623": {
      "op": "JUMPI"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x21B7"
    },
    "8627": {
      "op": "PUSH2",
      "value": "0x244B"
    },
    "8630": {
      "jump": "i",
      "op": "JUMP"
    },
    "8631": {
      "op": "JUMPDEST"
    },
    "8632": {
      "op": "SWAP1"
    },
    "8633": {
      "op": "MSTORE"
    },
    "8634": {
      "op": "SWAP1"
    },
    "8635": {
      "jump": "o",
      "op": "JUMP"
    },
    "8636": {
      "op": "JUMPDEST"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8643": {
      "op": "SHL"
    },
    "8644": {
      "op": "SUB"
    },
    "8645": {
      "op": "NOT"
    },
    "8646": {
      "op": "DUP2"
    },
    "8647": {
      "op": "AND"
    },
    "8648": {
      "op": "DUP2"
    },
    "8649": {
      "op": "EQ"
    },
    "8650": {
      "op": "PUSH2",
      "value": "0xA78"
    },
    "8653": {
      "op": "JUMPI"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8656": {
      "op": "DUP1"
    },
    "8657": {
      "op": "REVERT"
    },
    "8658": {
      "op": "JUMPDEST"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8663": {
      "op": "DUP3"
    },
    "8664": {
      "op": "DUP5"
    },
    "8665": {
      "op": "SUB"
    },
    "8666": {
      "op": "SLT"
    },
    "8667": {
      "op": "ISZERO"
    },
    "8668": {
      "op": "PUSH2",
      "value": "0x21E4"
    },
    "8671": {
      "op": "JUMPI"
    },
    "8672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8674": {
      "op": "DUP1"
    },
    "8675": {
      "op": "REVERT"
    },
    "8676": {
      "op": "JUMPDEST"
    },
    "8677": {
      "op": "DUP2"
    },
    "8678": {
      "op": "CALLDATALOAD"
    },
    "8679": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "8682": {
      "op": "DUP2"
    },
    "8683": {
      "op": "PUSH2",
      "value": "0x21BC"
    },
    "8686": {
      "jump": "i",
      "op": "JUMP"
    },
    "8687": {
      "op": "JUMPDEST"
    },
    "8688": {
      "op": "SWAP4"
    },
    "8689": {
      "op": "SWAP3"
    },
    "8690": {
      "op": "POP"
    },
    "8691": {
      "op": "POP"
    },
    "8692": {
      "op": "POP"
    },
    "8693": {
      "jump": "o",
      "op": "JUMP"
    },
    "8694": {
      "op": "JUMPDEST"
    },
    "8695": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8702": {
      "op": "SHL"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8705": {
      "op": "MSTORE"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8710": {
      "op": "MSTORE"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8715": {
      "op": "REVERT"
    },
    "8716": {
      "op": "JUMPDEST"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8719": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8728": {
      "op": "DUP1"
    },
    "8729": {
      "op": "DUP5"
    },
    "8730": {
      "op": "GT"
    },
    "8731": {
      "op": "ISZERO"
    },
    "8732": {
      "op": "PUSH2",
      "value": "0x2227"
    },
    "8735": {
      "op": "JUMPI"
    },
    "8736": {
      "op": "PUSH2",
      "value": "0x2227"
    },
    "8739": {
      "op": "PUSH2",
      "value": "0x21F6"
    },
    "8742": {
      "jump": "i",
      "op": "JUMP"
    },
    "8743": {
      "op": "JUMPDEST"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8746": {
      "op": "MLOAD"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8749": {
      "op": "DUP6"
    },
    "8750": {
      "op": "ADD"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8753": {
      "op": "NOT"
    },
    "8754": {
      "op": "SWAP1"
    },
    "8755": {
      "op": "DUP2"
    },
    "8756": {
      "op": "AND"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8759": {
      "op": "ADD"
    },
    "8760": {
      "op": "AND"
    },
    "8761": {
      "op": "DUP2"
    },
    "8762": {
      "op": "ADD"
    },
    "8763": {
      "op": "SWAP1"
    },
    "8764": {
      "op": "DUP3"
    },
    "8765": {
      "op": "DUP3"
    },
    "8766": {
      "op": "GT"
    },
    "8767": {
      "op": "DUP2"
    },
    "8768": {
      "op": "DUP4"
    },
    "8769": {
      "op": "LT"
    },
    "8770": {
      "op": "OR"
    },
    "8771": {
      "op": "ISZERO"
    },
    "8772": {
      "op": "PUSH2",
      "value": "0x224F"
    },
    "8775": {
      "op": "JUMPI"
    },
    "8776": {
      "op": "PUSH2",
      "value": "0x224F"
    },
    "8779": {
      "op": "PUSH2",
      "value": "0x21F6"
    },
    "8782": {
      "jump": "i",
      "op": "JUMP"
    },
    "8783": {
      "op": "JUMPDEST"
    },
    "8784": {
      "op": "DUP2"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8787": {
      "op": "MSTORE"
    },
    "8788": {
      "op": "DUP1"
    },
    "8789": {
      "op": "SWAP4"
    },
    "8790": {
      "op": "POP"
    },
    "8791": {
      "op": "DUP6"
    },
    "8792": {
      "op": "DUP2"
    },
    "8793": {
      "op": "MSTORE"
    },
    "8794": {
      "op": "DUP7"
    },
    "8795": {
      "op": "DUP7"
    },
    "8796": {
      "op": "DUP7"
    },
    "8797": {
      "op": "ADD"
    },
    "8798": {
      "op": "GT"
    },
    "8799": {
      "op": "ISZERO"
    },
    "8800": {
      "op": "PUSH2",
      "value": "0x2268"
    },
    "8803": {
      "op": "JUMPI"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8806": {
      "op": "DUP1"
    },
    "8807": {
      "op": "REVERT"
    },
    "8808": {
      "op": "JUMPDEST"
    },
    "8809": {
      "op": "DUP6"
    },
    "8810": {
      "op": "DUP6"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8813": {
      "op": "DUP4"
    },
    "8814": {
      "op": "ADD"
    },
    "8815": {
      "op": "CALLDATACOPY"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8820": {
      "op": "DUP8"
    },
    "8821": {
      "op": "DUP4"
    },
    "8822": {
      "op": "ADD"
    },
    "8823": {
      "op": "ADD"
    },
    "8824": {
      "op": "MSTORE"
    },
    "8825": {
      "op": "POP"
    },
    "8826": {
      "op": "POP"
    },
    "8827": {
      "op": "POP"
    },
    "8828": {
      "op": "SWAP4"
    },
    "8829": {
      "op": "SWAP3"
    },
    "8830": {
      "op": "POP"
    },
    "8831": {
      "op": "POP"
    },
    "8832": {
      "op": "POP"
    },
    "8833": {
      "jump": "o",
      "op": "JUMP"
    },
    "8834": {
      "op": "JUMPDEST"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8837": {
      "op": "DUP1"
    },
    "8838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8840": {
      "op": "DUP4"
    },
    "8841": {
      "op": "DUP6"
    },
    "8842": {
      "op": "SUB"
    },
    "8843": {
      "op": "SLT"
    },
    "8844": {
      "op": "ISZERO"
    },
    "8845": {
      "op": "PUSH2",
      "value": "0x2295"
    },
    "8848": {
      "op": "JUMPI"
    },
    "8849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8851": {
      "op": "DUP1"
    },
    "8852": {
      "op": "REVERT"
    },
    "8853": {
      "op": "JUMPDEST"
    },
    "8854": {
      "op": "DUP3"
    },
    "8855": {
      "op": "CALLDATALOAD"
    },
    "8856": {
      "op": "SWAP2"
    },
    "8857": {
      "op": "POP"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8860": {
      "op": "DUP4"
    },
    "8861": {
      "op": "ADD"
    },
    "8862": {
      "op": "CALLDATALOAD"
    },
    "8863": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8872": {
      "op": "DUP2"
    },
    "8873": {
      "op": "GT"
    },
    "8874": {
      "op": "ISZERO"
    },
    "8875": {
      "op": "PUSH2",
      "value": "0x22B3"
    },
    "8878": {
      "op": "JUMPI"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8881": {
      "op": "DUP1"
    },
    "8882": {
      "op": "REVERT"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "DUP4"
    },
    "8885": {
      "op": "ADD"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8888": {
      "op": "DUP2"
    },
    "8889": {
      "op": "ADD"
    },
    "8890": {
      "op": "DUP6"
    },
    "8891": {
      "op": "SGT"
    },
    "8892": {
      "op": "PUSH2",
      "value": "0x22C4"
    },
    "8895": {
      "op": "JUMPI"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8898": {
      "op": "DUP1"
    },
    "8899": {
      "op": "REVERT"
    },
    "8900": {
      "op": "JUMPDEST"
    },
    "8901": {
      "op": "PUSH2",
      "value": "0x22D3"
    },
    "8904": {
      "op": "DUP6"
    },
    "8905": {
      "op": "DUP3"
    },
    "8906": {
      "op": "CALLDATALOAD"
    },
    "8907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8909": {
      "op": "DUP5"
    },
    "8910": {
      "op": "ADD"
    },
    "8911": {
      "op": "PUSH2",
      "value": "0x220C"
    },
    "8914": {
      "jump": "i",
      "op": "JUMP"
    },
    "8915": {
      "op": "JUMPDEST"
    },
    "8916": {
      "op": "SWAP2"
    },
    "8917": {
      "op": "POP"
    },
    "8918": {
      "op": "POP"
    },
    "8919": {
      "op": "SWAP3"
    },
    "8920": {
      "op": "POP"
    },
    "8921": {
      "op": "SWAP3"
    },
    "8922": {
      "op": "SWAP1"
    },
    "8923": {
      "op": "POP"
    },
    "8924": {
      "jump": "o",
      "op": "JUMP"
    },
    "8925": {
      "op": "JUMPDEST"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8928": {
      "op": "JUMPDEST"
    },
    "8929": {
      "op": "DUP4"
    },
    "8930": {
      "op": "DUP2"
    },
    "8931": {
      "op": "LT"
    },
    "8932": {
      "op": "ISZERO"
    },
    "8933": {
      "op": "PUSH2",
      "value": "0x22F8"
    },
    "8936": {
      "op": "JUMPI"
    },
    "8937": {
      "op": "DUP2"
    },
    "8938": {
      "op": "DUP2"
    },
    "8939": {
      "op": "ADD"
    },
    "8940": {
      "op": "MLOAD"
    },
    "8941": {
      "op": "DUP4"
    },
    "8942": {
      "op": "DUP3"
    },
    "8943": {
      "op": "ADD"
    },
    "8944": {
      "op": "MSTORE"
    },
    "8945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8947": {
      "op": "ADD"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22E0"
    },
    "8951": {
      "op": "JUMP"
    },
    "8952": {
      "op": "JUMPDEST"
    },
    "8953": {
      "op": "DUP4"
    },
    "8954": {
      "op": "DUP2"
    },
    "8955": {
      "op": "GT"
    },
    "8956": {
      "op": "ISZERO"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x154D"
    },
    "8960": {
      "op": "JUMPI"
    },
    "8961": {
      "op": "POP"
    },
    "8962": {
      "op": "POP"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8965": {
      "op": "SWAP2"
    },
    "8966": {
      "op": "ADD"
    },
    "8967": {
      "op": "MSTORE"
    },
    "8968": {
      "jump": "o",
      "op": "JUMP"
    },
    "8969": {
      "op": "JUMPDEST"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8972": {
      "op": "DUP2"
    },
    "8973": {
      "op": "MLOAD"
    },
    "8974": {
      "op": "DUP1"
    },
    "8975": {
      "op": "DUP5"
    },
    "8976": {
      "op": "MSTORE"
    },
    "8977": {
      "op": "PUSH2",
      "value": "0x2321"
    },
    "8980": {
      "op": "DUP2"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8983": {
      "op": "DUP7"
    },
    "8984": {
      "op": "ADD"
    },
    "8985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8987": {
      "op": "DUP7"
    },
    "8988": {
      "op": "ADD"
    },
    "8989": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "8992": {
      "jump": "i",
      "op": "JUMP"
    },
    "8993": {
      "op": "JUMPDEST"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8999": {
      "op": "NOT"
    },
    "9000": {
      "op": "AND"
    },
    "9001": {
      "op": "SWAP3"
    },
    "9002": {
      "op": "SWAP1"
    },
    "9003": {
      "op": "SWAP3"
    },
    "9004": {
      "op": "ADD"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9007": {
      "op": "ADD"
    },
    "9008": {
      "op": "SWAP3"
    },
    "9009": {
      "op": "SWAP2"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "op": "POP"
    },
    "9012": {
      "jump": "o",
      "op": "JUMP"
    },
    "9013": {
      "op": "JUMPDEST"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9016": {
      "op": "DUP2"
    },
    "9017": {
      "op": "MSTORE"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9020": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9025": {
      "op": "DUP4"
    },
    "9026": {
      "op": "ADD"
    },
    "9027": {
      "op": "DUP5"
    },
    "9028": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "9031": {
      "jump": "i",
      "op": "JUMP"
    },
    "9032": {
      "op": "JUMPDEST"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9037": {
      "op": "DUP3"
    },
    "9038": {
      "op": "DUP5"
    },
    "9039": {
      "op": "SUB"
    },
    "9040": {
      "op": "SLT"
    },
    "9041": {
      "op": "ISZERO"
    },
    "9042": {
      "op": "PUSH2",
      "value": "0x235A"
    },
    "9045": {
      "op": "JUMPI"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9048": {
      "op": "DUP1"
    },
    "9049": {
      "op": "REVERT"
    },
    "9050": {
      "op": "JUMPDEST"
    },
    "9051": {
      "op": "POP"
    },
    "9052": {
      "op": "CALLDATALOAD"
    },
    "9053": {
      "op": "SWAP2"
    },
    "9054": {
      "op": "SWAP1"
    },
    "9055": {
      "op": "POP"
    },
    "9056": {
      "jump": "o",
      "op": "JUMP"
    },
    "9057": {
      "op": "JUMPDEST"
    },
    "9058": {
      "op": "DUP1"
    },
    "9059": {
      "op": "CALLDATALOAD"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9066": {
      "op": "SHL"
    },
    "9067": {
      "op": "SUB"
    },
    "9068": {
      "op": "DUP2"
    },
    "9069": {
      "op": "AND"
    },
    "9070": {
      "op": "DUP2"
    },
    "9071": {
      "op": "EQ"
    },
    "9072": {
      "op": "PUSH2",
      "value": "0x2378"
    },
    "9075": {
      "op": "JUMPI"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9078": {
      "op": "DUP1"
    },
    "9079": {
      "op": "REVERT"
    },
    "9080": {
      "op": "JUMPDEST"
    },
    "9081": {
      "op": "SWAP2"
    },
    "9082": {
      "op": "SWAP1"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "jump": "o",
      "op": "JUMP"
    },
    "9085": {
      "op": "JUMPDEST"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9088": {
      "op": "DUP1"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9091": {
      "op": "DUP4"
    },
    "9092": {
      "op": "DUP6"
    },
    "9093": {
      "op": "SUB"
    },
    "9094": {
      "op": "SLT"
    },
    "9095": {
      "op": "ISZERO"
    },
    "9096": {
      "op": "PUSH2",
      "value": "0x2390"
    },
    "9099": {
      "op": "JUMPI"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9102": {
      "op": "DUP1"
    },
    "9103": {
      "op": "REVERT"
    },
    "9104": {
      "op": "JUMPDEST"
    },
    "9105": {
      "op": "PUSH2",
      "value": "0x2399"
    },
    "9108": {
      "op": "DUP4"
    },
    "9109": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9112": {
      "jump": "i",
      "op": "JUMP"
    },
    "9113": {
      "op": "JUMPDEST"
    },
    "9114": {
      "op": "SWAP5"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9117": {
      "op": "SWAP4"
    },
    "9118": {
      "op": "SWAP1"
    },
    "9119": {
      "op": "SWAP4"
    },
    "9120": {
      "op": "ADD"
    },
    "9121": {
      "op": "CALLDATALOAD"
    },
    "9122": {
      "op": "SWAP4"
    },
    "9123": {
      "op": "POP"
    },
    "9124": {
      "op": "POP"
    },
    "9125": {
      "op": "POP"
    },
    "9126": {
      "jump": "o",
      "op": "JUMP"
    },
    "9127": {
      "op": "JUMPDEST"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9130": {
      "op": "DUP1"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9135": {
      "op": "DUP5"
    },
    "9136": {
      "op": "DUP7"
    },
    "9137": {
      "op": "SUB"
    },
    "9138": {
      "op": "SLT"
    },
    "9139": {
      "op": "ISZERO"
    },
    "9140": {
      "op": "PUSH2",
      "value": "0x23BC"
    },
    "9143": {
      "op": "JUMPI"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9146": {
      "op": "DUP1"
    },
    "9147": {
      "op": "REVERT"
    },
    "9148": {
      "op": "JUMPDEST"
    },
    "9149": {
      "op": "PUSH2",
      "value": "0x23C5"
    },
    "9152": {
      "op": "DUP5"
    },
    "9153": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9156": {
      "jump": "i",
      "op": "JUMP"
    },
    "9157": {
      "op": "JUMPDEST"
    },
    "9158": {
      "op": "SWAP3"
    },
    "9159": {
      "op": "POP"
    },
    "9160": {
      "op": "PUSH2",
      "value": "0x23D3"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9165": {
      "op": "DUP6"
    },
    "9166": {
      "op": "ADD"
    },
    "9167": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9170": {
      "jump": "i",
      "op": "JUMP"
    },
    "9171": {
      "op": "JUMPDEST"
    },
    "9172": {
      "op": "SWAP2"
    },
    "9173": {
      "op": "POP"
    },
    "9174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9176": {
      "op": "DUP5"
    },
    "9177": {
      "op": "ADD"
    },
    "9178": {
      "op": "CALLDATALOAD"
    },
    "9179": {
      "op": "SWAP1"
    },
    "9180": {
      "op": "POP"
    },
    "9181": {
      "op": "SWAP3"
    },
    "9182": {
      "op": "POP"
    },
    "9183": {
      "op": "SWAP3"
    },
    "9184": {
      "op": "POP"
    },
    "9185": {
      "op": "SWAP3"
    },
    "9186": {
      "jump": "o",
      "op": "JUMP"
    },
    "9187": {
      "op": "JUMPDEST"
    },
    "9188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9192": {
      "op": "DUP3"
    },
    "9193": {
      "op": "DUP5"
    },
    "9194": {
      "op": "SUB"
    },
    "9195": {
      "op": "SLT"
    },
    "9196": {
      "op": "ISZERO"
    },
    "9197": {
      "op": "PUSH2",
      "value": "0x23F5"
    },
    "9200": {
      "op": "JUMPI"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9203": {
      "op": "DUP1"
    },
    "9204": {
      "op": "REVERT"
    },
    "9205": {
      "op": "JUMPDEST"
    },
    "9206": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "9209": {
      "op": "DUP3"
    },
    "9210": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9213": {
      "jump": "i",
      "op": "JUMP"
    },
    "9214": {
      "op": "JUMPDEST"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9217": {
      "op": "DUP1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9220": {
      "op": "DUP1"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9225": {
      "op": "DUP7"
    },
    "9226": {
      "op": "DUP9"
    },
    "9227": {
      "op": "SUB"
    },
    "9228": {
      "op": "SLT"
    },
    "9229": {
      "op": "ISZERO"
    },
    "9230": {
      "op": "PUSH2",
      "value": "0x2416"
    },
    "9233": {
      "op": "JUMPI"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9236": {
      "op": "DUP1"
    },
    "9237": {
      "op": "REVERT"
    },
    "9238": {
      "op": "JUMPDEST"
    },
    "9239": {
      "op": "DUP6"
    },
    "9240": {
      "op": "CALLDATALOAD"
    },
    "9241": {
      "op": "SWAP5"
    },
    "9242": {
      "op": "POP"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9245": {
      "op": "DUP7"
    },
    "9246": {
      "op": "ADD"
    },
    "9247": {
      "op": "CALLDATALOAD"
    },
    "9248": {
      "op": "SWAP4"
    },
    "9249": {
      "op": "POP"
    },
    "9250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9252": {
      "op": "DUP7"
    },
    "9253": {
      "op": "ADD"
    },
    "9254": {
      "op": "CALLDATALOAD"
    },
    "9255": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9257": {
      "op": "DUP2"
    },
    "9258": {
      "op": "LT"
    },
    "9259": {
      "op": "PUSH2",
      "value": "0x2433"
    },
    "9262": {
      "op": "JUMPI"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9265": {
      "op": "DUP1"
    },
    "9266": {
      "op": "REVERT"
    },
    "9267": {
      "op": "JUMPDEST"
    },
    "9268": {
      "op": "SWAP5"
    },
    "9269": {
      "op": "SWAP8"
    },
    "9270": {
      "op": "SWAP4"
    },
    "9271": {
      "op": "SWAP7"
    },
    "9272": {
      "op": "POP"
    },
    "9273": {
      "op": "SWAP4"
    },
    "9274": {
      "op": "SWAP5"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9277": {
      "op": "DUP2"
    },
    "9278": {
      "op": "ADD"
    },
    "9279": {
      "op": "CALLDATALOAD"
    },
    "9280": {
      "op": "SWAP5"
    },
    "9281": {
      "op": "POP"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9284": {
      "op": "ADD"
    },
    "9285": {
      "op": "CALLDATALOAD"
    },
    "9286": {
      "op": "SWAP3"
    },
    "9287": {
      "op": "SWAP2"
    },
    "9288": {
      "op": "POP"
    },
    "9289": {
      "op": "POP"
    },
    "9290": {
      "jump": "o",
      "op": "JUMP"
    },
    "9291": {
      "op": "JUMPDEST"
    },
    "9292": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9299": {
      "op": "SHL"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9302": {
      "op": "MSTORE"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9307": {
      "op": "MSTORE"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9312": {
      "op": "REVERT"
    },
    "9313": {
      "op": "JUMPDEST"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9316": {
      "op": "DUP2"
    },
    "9317": {
      "op": "LT"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x247F"
    },
    "9321": {
      "op": "JUMPI"
    },
    "9322": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9329": {
      "op": "SHL"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9332": {
      "op": "MSTORE"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9337": {
      "op": "MSTORE"
    },
    "9338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9342": {
      "op": "REVERT"
    },
    "9343": {
      "op": "JUMPDEST"
    },
    "9344": {
      "op": "SWAP1"
    },
    "9345": {
      "op": "MSTORE"
    },
    "9346": {
      "jump": "o",
      "op": "JUMP"
    },
    "9347": {
      "op": "JUMPDEST"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9350": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "9353": {
      "op": "DUP3"
    },
    "9354": {
      "op": "ADD"
    },
    "9355": {
      "op": "SWAP1"
    },
    "9356": {
      "op": "POP"
    },
    "9357": {
      "op": "DUP3"
    },
    "9358": {
      "op": "MLOAD"
    },
    "9359": {
      "op": "DUP3"
    },
    "9360": {
      "op": "MSTORE"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9363": {
      "op": "DUP4"
    },
    "9364": {
      "op": "ADD"
    },
    "9365": {
      "op": "MLOAD"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9368": {
      "op": "DUP4"
    },
    "9369": {
      "op": "ADD"
    },
    "9370": {
      "op": "MSTORE"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9373": {
      "op": "DUP4"
    },
    "9374": {
      "op": "ADD"
    },
    "9375": {
      "op": "MLOAD"
    },
    "9376": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9378": {
      "op": "DUP4"
    },
    "9379": {
      "op": "ADD"
    },
    "9380": {
      "op": "MSTORE"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9383": {
      "op": "DUP4"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MLOAD"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9388": {
      "op": "DUP4"
    },
    "9389": {
      "op": "ADD"
    },
    "9390": {
      "op": "MSTORE"
    },
    "9391": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9393": {
      "op": "DUP4"
    },
    "9394": {
      "op": "ADD"
    },
    "9395": {
      "op": "MLOAD"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9398": {
      "op": "DUP4"
    },
    "9399": {
      "op": "ADD"
    },
    "9400": {
      "op": "MSTORE"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9403": {
      "op": "DUP4"
    },
    "9404": {
      "op": "ADD"
    },
    "9405": {
      "op": "MLOAD"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9408": {
      "op": "DUP4"
    },
    "9409": {
      "op": "ADD"
    },
    "9410": {
      "op": "MSTORE"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9413": {
      "op": "DUP4"
    },
    "9414": {
      "op": "ADD"
    },
    "9415": {
      "op": "MLOAD"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9418": {
      "op": "DUP4"
    },
    "9419": {
      "op": "ADD"
    },
    "9420": {
      "op": "MSTORE"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9423": {
      "op": "DUP4"
    },
    "9424": {
      "op": "ADD"
    },
    "9425": {
      "op": "MLOAD"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9428": {
      "op": "DUP4"
    },
    "9429": {
      "op": "ADD"
    },
    "9430": {
      "op": "MSTORE"
    },
    "9431": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9434": {
      "op": "DUP1"
    },
    "9435": {
      "op": "DUP5"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "op": "MLOAD"
    },
    "9438": {
      "op": "DUP2"
    },
    "9439": {
      "op": "DUP5"
    },
    "9440": {
      "op": "ADD"
    },
    "9441": {
      "op": "MSTORE"
    },
    "9442": {
      "op": "POP"
    },
    "9443": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9446": {
      "op": "DUP1"
    },
    "9447": {
      "op": "DUP5"
    },
    "9448": {
      "op": "ADD"
    },
    "9449": {
      "op": "MLOAD"
    },
    "9450": {
      "op": "DUP2"
    },
    "9451": {
      "op": "DUP5"
    },
    "9452": {
      "op": "ADD"
    },
    "9453": {
      "op": "MSTORE"
    },
    "9454": {
      "op": "POP"
    },
    "9455": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9458": {
      "op": "DUP1"
    },
    "9459": {
      "op": "DUP5"
    },
    "9460": {
      "op": "ADD"
    },
    "9461": {
      "op": "MLOAD"
    },
    "9462": {
      "op": "DUP2"
    },
    "9463": {
      "op": "DUP5"
    },
    "9464": {
      "op": "ADD"
    },
    "9465": {
      "op": "MSTORE"
    },
    "9466": {
      "op": "POP"
    },
    "9467": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9470": {
      "op": "DUP1"
    },
    "9471": {
      "op": "DUP5"
    },
    "9472": {
      "op": "ADD"
    },
    "9473": {
      "op": "MLOAD"
    },
    "9474": {
      "op": "DUP2"
    },
    "9475": {
      "op": "DUP5"
    },
    "9476": {
      "op": "ADD"
    },
    "9477": {
      "op": "MSTORE"
    },
    "9478": {
      "op": "POP"
    },
    "9479": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9482": {
      "op": "DUP1"
    },
    "9483": {
      "op": "DUP5"
    },
    "9484": {
      "op": "ADD"
    },
    "9485": {
      "op": "MLOAD"
    },
    "9486": {
      "op": "DUP2"
    },
    "9487": {
      "op": "DUP5"
    },
    "9488": {
      "op": "ADD"
    },
    "9489": {
      "op": "MSTORE"
    },
    "9490": {
      "op": "POP"
    },
    "9491": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "9494": {
      "op": "DUP1"
    },
    "9495": {
      "op": "DUP5"
    },
    "9496": {
      "op": "ADD"
    },
    "9497": {
      "op": "MLOAD"
    },
    "9498": {
      "op": "PUSH2",
      "value": "0x2525"
    },
    "9501": {
      "op": "DUP3"
    },
    "9502": {
      "op": "DUP6"
    },
    "9503": {
      "op": "ADD"
    },
    "9504": {
      "op": "DUP3"
    },
    "9505": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9508": {
      "jump": "i",
      "op": "JUMP"
    },
    "9509": {
      "op": "JUMPDEST"
    },
    "9510": {
      "op": "POP"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "op": "SWAP3"
    },
    "9513": {
      "op": "SWAP2"
    },
    "9514": {
      "op": "POP"
    },
    "9515": {
      "op": "POP"
    },
    "9516": {
      "jump": "o",
      "op": "JUMP"
    },
    "9517": {
      "op": "JUMPDEST"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9520": {
      "op": "DUP1"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9523": {
      "op": "DUP4"
    },
    "9524": {
      "op": "DUP6"
    },
    "9525": {
      "op": "SUB"
    },
    "9526": {
      "op": "SLT"
    },
    "9527": {
      "op": "ISZERO"
    },
    "9528": {
      "op": "PUSH2",
      "value": "0x2540"
    },
    "9531": {
      "op": "JUMPI"
    },
    "9532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9534": {
      "op": "DUP1"
    },
    "9535": {
      "op": "REVERT"
    },
    "9536": {
      "op": "JUMPDEST"
    },
    "9537": {
      "op": "PUSH2",
      "value": "0x2549"
    },
    "9540": {
      "op": "DUP4"
    },
    "9541": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9544": {
      "jump": "i",
      "op": "JUMP"
    },
    "9545": {
      "op": "JUMPDEST"
    },
    "9546": {
      "op": "SWAP2"
    },
    "9547": {
      "op": "POP"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9550": {
      "op": "DUP4"
    },
    "9551": {
      "op": "ADD"
    },
    "9552": {
      "op": "CALLDATALOAD"
    },
    "9553": {
      "op": "DUP1"
    },
    "9554": {
      "op": "ISZERO"
    },
    "9555": {
      "op": "ISZERO"
    },
    "9556": {
      "op": "DUP2"
    },
    "9557": {
      "op": "EQ"
    },
    "9558": {
      "op": "PUSH2",
      "value": "0x255E"
    },
    "9561": {
      "op": "JUMPI"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9564": {
      "op": "DUP1"
    },
    "9565": {
      "op": "REVERT"
    },
    "9566": {
      "op": "JUMPDEST"
    },
    "9567": {
      "op": "DUP1"
    },
    "9568": {
      "op": "SWAP2"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "POP"
    },
    "9571": {
      "op": "SWAP3"
    },
    "9572": {
      "op": "POP"
    },
    "9573": {
      "op": "SWAP3"
    },
    "9574": {
      "op": "SWAP1"
    },
    "9575": {
      "op": "POP"
    },
    "9576": {
      "jump": "o",
      "op": "JUMP"
    },
    "9577": {
      "op": "JUMPDEST"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9580": {
      "op": "DUP1"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9583": {
      "op": "DUP1"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9586": {
      "op": "DUP6"
    },
    "9587": {
      "op": "DUP8"
    },
    "9588": {
      "op": "SUB"
    },
    "9589": {
      "op": "SLT"
    },
    "9590": {
      "op": "ISZERO"
    },
    "9591": {
      "op": "PUSH2",
      "value": "0x257F"
    },
    "9594": {
      "op": "JUMPI"
    },
    "9595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9597": {
      "op": "DUP1"
    },
    "9598": {
      "op": "REVERT"
    },
    "9599": {
      "op": "JUMPDEST"
    },
    "9600": {
      "op": "PUSH2",
      "value": "0x2588"
    },
    "9603": {
      "op": "DUP6"
    },
    "9604": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9607": {
      "jump": "i",
      "op": "JUMP"
    },
    "9608": {
      "op": "JUMPDEST"
    },
    "9609": {
      "op": "SWAP4"
    },
    "9610": {
      "op": "POP"
    },
    "9611": {
      "op": "PUSH2",
      "value": "0x2596"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9616": {
      "op": "DUP7"
    },
    "9617": {
      "op": "ADD"
    },
    "9618": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9621": {
      "jump": "i",
      "op": "JUMP"
    },
    "9622": {
      "op": "JUMPDEST"
    },
    "9623": {
      "op": "SWAP3"
    },
    "9624": {
      "op": "POP"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9627": {
      "op": "DUP6"
    },
    "9628": {
      "op": "ADD"
    },
    "9629": {
      "op": "CALLDATALOAD"
    },
    "9630": {
      "op": "SWAP2"
    },
    "9631": {
      "op": "POP"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9634": {
      "op": "DUP6"
    },
    "9635": {
      "op": "ADD"
    },
    "9636": {
      "op": "CALLDATALOAD"
    },
    "9637": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9646": {
      "op": "DUP2"
    },
    "9647": {
      "op": "GT"
    },
    "9648": {
      "op": "ISZERO"
    },
    "9649": {
      "op": "PUSH2",
      "value": "0x25B9"
    },
    "9652": {
      "op": "JUMPI"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9655": {
      "op": "DUP1"
    },
    "9656": {
      "op": "REVERT"
    },
    "9657": {
      "op": "JUMPDEST"
    },
    "9658": {
      "op": "DUP6"
    },
    "9659": {
      "op": "ADD"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9662": {
      "op": "DUP2"
    },
    "9663": {
      "op": "ADD"
    },
    "9664": {
      "op": "DUP8"
    },
    "9665": {
      "op": "SGT"
    },
    "9666": {
      "op": "PUSH2",
      "value": "0x25CA"
    },
    "9669": {
      "op": "JUMPI"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9672": {
      "op": "DUP1"
    },
    "9673": {
      "op": "REVERT"
    },
    "9674": {
      "op": "JUMPDEST"
    },
    "9675": {
      "op": "PUSH2",
      "value": "0x25D9"
    },
    "9678": {
      "op": "DUP8"
    },
    "9679": {
      "op": "DUP3"
    },
    "9680": {
      "op": "CALLDATALOAD"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9683": {
      "op": "DUP5"
    },
    "9684": {
      "op": "ADD"
    },
    "9685": {
      "op": "PUSH2",
      "value": "0x220C"
    },
    "9688": {
      "jump": "i",
      "op": "JUMP"
    },
    "9689": {
      "op": "JUMPDEST"
    },
    "9690": {
      "op": "SWAP2"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "op": "POP"
    },
    "9693": {
      "op": "SWAP3"
    },
    "9694": {
      "op": "SWAP6"
    },
    "9695": {
      "op": "SWAP2"
    },
    "9696": {
      "op": "SWAP5"
    },
    "9697": {
      "op": "POP"
    },
    "9698": {
      "op": "SWAP3"
    },
    "9699": {
      "op": "POP"
    },
    "9700": {
      "jump": "o",
      "op": "JUMP"
    },
    "9701": {
      "op": "JUMPDEST"
    },
    "9702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9704": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "9707": {
      "op": "DUP3"
    },
    "9708": {
      "op": "ADD"
    },
    "9709": {
      "op": "SWAP1"
    },
    "9710": {
      "op": "POP"
    },
    "9711": {
      "op": "DUP16"
    },
    "9712": {
      "op": "DUP3"
    },
    "9713": {
      "op": "MSTORE"
    },
    "9714": {
      "op": "DUP15"
    },
    "9715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9717": {
      "op": "DUP4"
    },
    "9718": {
      "op": "ADD"
    },
    "9719": {
      "op": "MSTORE"
    },
    "9720": {
      "op": "DUP14"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9723": {
      "op": "DUP4"
    },
    "9724": {
      "op": "ADD"
    },
    "9725": {
      "op": "MSTORE"
    },
    "9726": {
      "op": "DUP13"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9729": {
      "op": "DUP4"
    },
    "9730": {
      "op": "ADD"
    },
    "9731": {
      "op": "MSTORE"
    },
    "9732": {
      "op": "DUP12"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9735": {
      "op": "DUP4"
    },
    "9736": {
      "op": "ADD"
    },
    "9737": {
      "op": "MSTORE"
    },
    "9738": {
      "op": "DUP11"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9741": {
      "op": "DUP4"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "DUP10"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9747": {
      "op": "DUP4"
    },
    "9748": {
      "op": "ADD"
    },
    "9749": {
      "op": "MSTORE"
    },
    "9750": {
      "op": "DUP9"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9753": {
      "op": "DUP4"
    },
    "9754": {
      "op": "ADD"
    },
    "9755": {
      "op": "MSTORE"
    },
    "9756": {
      "op": "DUP8"
    },
    "9757": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9760": {
      "op": "DUP4"
    },
    "9761": {
      "op": "ADD"
    },
    "9762": {
      "op": "MSTORE"
    },
    "9763": {
      "op": "DUP7"
    },
    "9764": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9767": {
      "op": "DUP4"
    },
    "9768": {
      "op": "ADD"
    },
    "9769": {
      "op": "MSTORE"
    },
    "9770": {
      "op": "DUP6"
    },
    "9771": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9774": {
      "op": "DUP4"
    },
    "9775": {
      "op": "ADD"
    },
    "9776": {
      "op": "MSTORE"
    },
    "9777": {
      "op": "DUP5"
    },
    "9778": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9781": {
      "op": "DUP4"
    },
    "9782": {
      "op": "ADD"
    },
    "9783": {
      "op": "MSTORE"
    },
    "9784": {
      "op": "DUP4"
    },
    "9785": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9788": {
      "op": "DUP4"
    },
    "9789": {
      "op": "ADD"
    },
    "9790": {
      "op": "MSTORE"
    },
    "9791": {
      "op": "PUSH2",
      "value": "0x264C"
    },
    "9794": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "9797": {
      "op": "DUP4"
    },
    "9798": {
      "op": "ADD"
    },
    "9799": {
      "op": "DUP5"
    },
    "9800": {
      "op": "PUSH2",
      "value": "0x2461"
    },
    "9803": {
      "jump": "i",
      "op": "JUMP"
    },
    "9804": {
      "op": "JUMPDEST"
    },
    "9805": {
      "op": "SWAP16"
    },
    "9806": {
      "op": "SWAP15"
    },
    "9807": {
      "op": "POP"
    },
    "9808": {
      "op": "POP"
    },
    "9809": {
      "op": "POP"
    },
    "9810": {
      "op": "POP"
    },
    "9811": {
      "op": "POP"
    },
    "9812": {
      "op": "POP"
    },
    "9813": {
      "op": "POP"
    },
    "9814": {
      "op": "POP"
    },
    "9815": {
      "op": "POP"
    },
    "9816": {
      "op": "POP"
    },
    "9817": {
      "op": "POP"
    },
    "9818": {
      "op": "POP"
    },
    "9819": {
      "op": "POP"
    },
    "9820": {
      "op": "POP"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "jump": "o",
      "op": "JUMP"
    },
    "9823": {
      "op": "JUMPDEST"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9826": {
      "op": "DUP1"
    },
    "9827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9829": {
      "op": "DUP4"
    },
    "9830": {
      "op": "DUP6"
    },
    "9831": {
      "op": "SUB"
    },
    "9832": {
      "op": "SLT"
    },
    "9833": {
      "op": "ISZERO"
    },
    "9834": {
      "op": "PUSH2",
      "value": "0x2672"
    },
    "9837": {
      "op": "JUMPI"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9840": {
      "op": "DUP1"
    },
    "9841": {
      "op": "REVERT"
    },
    "9842": {
      "op": "JUMPDEST"
    },
    "9843": {
      "op": "PUSH2",
      "value": "0x267B"
    },
    "9846": {
      "op": "DUP4"
    },
    "9847": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9850": {
      "jump": "i",
      "op": "JUMP"
    },
    "9851": {
      "op": "JUMPDEST"
    },
    "9852": {
      "op": "SWAP2"
    },
    "9853": {
      "op": "POP"
    },
    "9854": {
      "op": "PUSH2",
      "value": "0x2689"
    },
    "9857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9859": {
      "op": "DUP5"
    },
    "9860": {
      "op": "ADD"
    },
    "9861": {
      "op": "PUSH2",
      "value": "0x2361"
    },
    "9864": {
      "jump": "i",
      "op": "JUMP"
    },
    "9865": {
      "op": "JUMPDEST"
    },
    "9866": {
      "op": "SWAP1"
    },
    "9867": {
      "op": "POP"
    },
    "9868": {
      "op": "SWAP3"
    },
    "9869": {
      "op": "POP"
    },
    "9870": {
      "op": "SWAP3"
    },
    "9871": {
      "op": "SWAP1"
    },
    "9872": {
      "op": "POP"
    },
    "9873": {
      "jump": "o",
      "op": "JUMP"
    },
    "9874": {
      "op": "JUMPDEST"
    },
    "9875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9877": {
      "op": "DUP2"
    },
    "9878": {
      "op": "MLOAD"
    },
    "9879": {
      "op": "PUSH2",
      "value": "0x26A4"
    },
    "9882": {
      "op": "DUP2"
    },
    "9883": {
      "op": "DUP6"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9886": {
      "op": "DUP7"
    },
    "9887": {
      "op": "ADD"
    },
    "9888": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "9891": {
      "jump": "i",
      "op": "JUMP"
    },
    "9892": {
      "op": "JUMPDEST"
    },
    "9893": {
      "op": "SWAP3"
    },
    "9894": {
      "op": "SWAP1"
    },
    "9895": {
      "op": "SWAP3"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "SWAP3"
    },
    "9898": {
      "op": "SWAP2"
    },
    "9899": {
      "op": "POP"
    },
    "9900": {
      "op": "POP"
    },
    "9901": {
      "jump": "o",
      "op": "JUMP"
    },
    "9902": {
      "op": "JUMPDEST"
    },
    "9903": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "9936": {
      "op": "DUP2"
    },
    "9937": {
      "op": "MSTORE"
    },
    "9938": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9973": {
      "op": "DUP3"
    },
    "9974": {
      "op": "ADD"
    },
    "9975": {
      "op": "MSTORE"
    },
    "9976": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "10011": {
      "op": "DUP3"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10023": {
      "op": "SHL"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "10026": {
      "op": "DUP3"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "MSTORE"
    },
    "10029": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10044": {
      "op": "SHL"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10047": {
      "op": "DUP3"
    },
    "10048": {
      "op": "ADD"
    },
    "10049": {
      "op": "MSTORE"
    },
    "10050": {
      "op": "DUP3"
    },
    "10051": {
      "op": "MLOAD"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10054": {
      "op": "SWAP1"
    },
    "10055": {
      "op": "PUSH2",
      "value": "0x2757"
    },
    "10058": {
      "op": "DUP2"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10061": {
      "op": "DUP6"
    },
    "10062": {
      "op": "ADD"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10065": {
      "op": "DUP9"
    },
    "10066": {
      "op": "ADD"
    },
    "10067": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10070": {
      "jump": "i",
      "op": "JUMP"
    },
    "10071": {
      "op": "JUMPDEST"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10076": {
      "op": "SHL"
    },
    "10077": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10079": {
      "op": "SWAP2"
    },
    "10080": {
      "op": "DUP5"
    },
    "10081": {
      "op": "ADD"
    },
    "10082": {
      "op": "SWAP2"
    },
    "10083": {
      "op": "DUP3"
    },
    "10084": {
      "op": "ADD"
    },
    "10085": {
      "op": "MSTORE"
    },
    "10086": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "10105": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "10107": {
      "op": "SHL"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "10110": {
      "op": "DUP3"
    },
    "10111": {
      "op": "ADD"
    },
    "10112": {
      "op": "MSTORE"
    },
    "10113": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10148": {
      "op": "DUP3"
    },
    "10149": {
      "op": "ADD"
    },
    "10150": {
      "op": "MSTORE"
    },
    "10151": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10186": {
      "op": "DUP3"
    },
    "10187": {
      "op": "ADD"
    },
    "10188": {
      "op": "MSTORE"
    },
    "10189": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "10204": {
      "op": "SHL"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10207": {
      "op": "DUP3"
    },
    "10208": {
      "op": "ADD"
    },
    "10209": {
      "op": "MSTORE"
    },
    "10210": {
      "op": "PUSH2",
      "value": "0x27FF"
    },
    "10213": {
      "op": "PUSH2",
      "value": "0x27F1"
    },
    "10216": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10218": {
      "op": "DUP4"
    },
    "10219": {
      "op": "ADD"
    },
    "10220": {
      "op": "DUP7"
    },
    "10221": {
      "op": "PUSH2",
      "value": "0x2692"
    },
    "10224": {
      "jump": "i",
      "op": "JUMP"
    },
    "10225": {
      "op": "JUMPDEST"
    },
    "10226": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10229": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10231": {
      "op": "SHL"
    },
    "10232": {
      "op": "DUP2"
    },
    "10233": {
      "op": "MSTORE"
    },
    "10234": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10236": {
      "op": "ADD"
    },
    "10237": {
      "op": "SWAP1"
    },
    "10238": {
      "op": "JUMP"
    },
    "10239": {
      "op": "JUMPDEST"
    },
    "10240": {
      "op": "SWAP6"
    },
    "10241": {
      "op": "SWAP5"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "op": "POP"
    },
    "10244": {
      "op": "POP"
    },
    "10245": {
      "op": "POP"
    },
    "10246": {
      "op": "POP"
    },
    "10247": {
      "jump": "o",
      "op": "JUMP"
    },
    "10248": {
      "op": "JUMPDEST"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10251": {
      "op": "DUP6"
    },
    "10252": {
      "op": "MLOAD"
    },
    "10253": {
      "op": "PUSH2",
      "value": "0x281A"
    },
    "10256": {
      "op": "DUP2"
    },
    "10257": {
      "op": "DUP5"
    },
    "10258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10260": {
      "op": "DUP11"
    },
    "10261": {
      "op": "ADD"
    },
    "10262": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10265": {
      "jump": "i",
      "op": "JUMP"
    },
    "10266": {
      "op": "JUMPDEST"
    },
    "10267": {
      "op": "DUP1"
    },
    "10268": {
      "op": "DUP4"
    },
    "10269": {
      "op": "ADD"
    },
    "10270": {
      "op": "SWAP1"
    },
    "10271": {
      "op": "POP"
    },
    "10272": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "10305": {
      "op": "DUP1"
    },
    "10306": {
      "op": "DUP3"
    },
    "10307": {
      "op": "MSTORE"
    },
    "10308": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10343": {
      "op": "DUP4"
    },
    "10344": {
      "op": "ADD"
    },
    "10345": {
      "op": "MSTORE"
    },
    "10346": {
      "op": "DUP7"
    },
    "10347": {
      "op": "MLOAD"
    },
    "10348": {
      "op": "PUSH2",
      "value": "0x287C"
    },
    "10351": {
      "op": "DUP2"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "10354": {
      "op": "DUP6"
    },
    "10355": {
      "op": "ADD"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10358": {
      "op": "DUP12"
    },
    "10359": {
      "op": "ADD"
    },
    "10360": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10363": {
      "jump": "i",
      "op": "JUMP"
    },
    "10364": {
      "op": "JUMPDEST"
    },
    "10365": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10368": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10370": {
      "op": "SHL"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "10373": {
      "op": "SWAP4"
    },
    "10374": {
      "op": "SWAP1"
    },
    "10375": {
      "op": "SWAP2"
    },
    "10376": {
      "op": "ADD"
    },
    "10377": {
      "op": "SWAP3"
    },
    "10378": {
      "op": "DUP4"
    },
    "10379": {
      "op": "ADD"
    },
    "10380": {
      "op": "DUP2"
    },
    "10381": {
      "op": "SWAP1"
    },
    "10382": {
      "op": "MSTORE"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "10385": {
      "op": "DUP4"
    },
    "10386": {
      "op": "ADD"
    },
    "10387": {
      "op": "DUP3"
    },
    "10388": {
      "op": "SWAP1"
    },
    "10389": {
      "op": "MSTORE"
    },
    "10390": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "10425": {
      "op": "DUP5"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "MSTORE"
    },
    "10428": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "10436": {
      "op": "SHL"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "10439": {
      "op": "DUP5"
    },
    "10440": {
      "op": "ADD"
    },
    "10441": {
      "op": "MSTORE"
    },
    "10442": {
      "op": "DUP7"
    },
    "10443": {
      "op": "MLOAD"
    },
    "10444": {
      "op": "PUSH2",
      "value": "0x28DC"
    },
    "10447": {
      "op": "DUP2"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10450": {
      "op": "DUP7"
    },
    "10451": {
      "op": "ADD"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10454": {
      "op": "DUP12"
    },
    "10455": {
      "op": "ADD"
    },
    "10456": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10459": {
      "jump": "i",
      "op": "JUMP"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10463": {
      "op": "SWAP4"
    },
    "10464": {
      "op": "ADD"
    },
    "10465": {
      "op": "SWAP3"
    },
    "10466": {
      "op": "DUP4"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "MSTORE"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "10471": {
      "op": "DUP3"
    },
    "10472": {
      "op": "ADD"
    },
    "10473": {
      "op": "MSTORE"
    },
    "10474": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0xA3"
    },
    "10509": {
      "op": "DUP3"
    },
    "10510": {
      "op": "ADD"
    },
    "10511": {
      "op": "MSTORE"
    },
    "10512": {
      "op": "PUSH7",
      "value": "0x30B63AB2911D1"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10522": {
      "op": "SHL"
    },
    "10523": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "10525": {
      "op": "DUP3"
    },
    "10526": {
      "op": "ADD"
    },
    "10527": {
      "op": "MSTORE"
    },
    "10528": {
      "op": "PUSH2",
      "value": "0x292F"
    },
    "10531": {
      "op": "PUSH2",
      "value": "0x27F1"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "10536": {
      "op": "DUP4"
    },
    "10537": {
      "op": "ADD"
    },
    "10538": {
      "op": "DUP7"
    },
    "10539": {
      "op": "PUSH2",
      "value": "0x2692"
    },
    "10542": {
      "jump": "i",
      "op": "JUMP"
    },
    "10543": {
      "op": "JUMPDEST"
    },
    "10544": {
      "op": "SWAP8"
    },
    "10545": {
      "op": "SWAP7"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "POP"
    },
    "10548": {
      "op": "POP"
    },
    "10549": {
      "op": "POP"
    },
    "10550": {
      "op": "POP"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "jump": "o",
      "op": "JUMP"
    },
    "10554": {
      "op": "JUMPDEST"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10557": {
      "op": "DUP5"
    },
    "10558": {
      "op": "MLOAD"
    },
    "10559": {
      "op": "PUSH2",
      "value": "0x294C"
    },
    "10562": {
      "op": "DUP2"
    },
    "10563": {
      "op": "DUP5"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10566": {
      "op": "DUP10"
    },
    "10567": {
      "op": "ADD"
    },
    "10568": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10571": {
      "jump": "i",
      "op": "JUMP"
    },
    "10572": {
      "op": "JUMPDEST"
    },
    "10573": {
      "op": "DUP1"
    },
    "10574": {
      "op": "DUP4"
    },
    "10575": {
      "op": "ADD"
    },
    "10576": {
      "op": "SWAP1"
    },
    "10577": {
      "op": "POP"
    },
    "10578": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "10611": {
      "op": "DUP1"
    },
    "10612": {
      "op": "DUP3"
    },
    "10613": {
      "op": "MSTORE"
    },
    "10614": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20227370656564222C202276616C7565223A20000000"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10649": {
      "op": "DUP4"
    },
    "10650": {
      "op": "ADD"
    },
    "10651": {
      "op": "MSTORE"
    },
    "10652": {
      "op": "DUP6"
    },
    "10653": {
      "op": "MLOAD"
    },
    "10654": {
      "op": "PUSH2",
      "value": "0x29AE"
    },
    "10657": {
      "op": "DUP2"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "10660": {
      "op": "DUP6"
    },
    "10661": {
      "op": "ADD"
    },
    "10662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10664": {
      "op": "DUP11"
    },
    "10665": {
      "op": "ADD"
    },
    "10666": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10669": {
      "jump": "i",
      "op": "JUMP"
    },
    "10670": {
      "op": "JUMPDEST"
    },
    "10671": {
      "op": "DUP1"
    },
    "10672": {
      "op": "DUP4"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "SWAP3"
    },
    "10675": {
      "op": "POP"
    },
    "10676": {
      "op": "POP"
    },
    "10677": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10682": {
      "op": "SHL"
    },
    "10683": {
      "op": "DUP1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "10686": {
      "op": "DUP5"
    },
    "10687": {
      "op": "ADD"
    },
    "10688": {
      "op": "MSTORE"
    },
    "10689": {
      "op": "DUP2"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10692": {
      "op": "DUP5"
    },
    "10693": {
      "op": "ADD"
    },
    "10694": {
      "op": "MSTORE"
    },
    "10695": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "10730": {
      "op": "DUP5"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "MSTORE"
    },
    "10733": {
      "op": "DUP6"
    },
    "10734": {
      "op": "MLOAD"
    },
    "10735": {
      "op": "SWAP2"
    },
    "10736": {
      "op": "POP"
    },
    "10737": {
      "op": "PUSH2",
      "value": "0x2A01"
    },
    "10740": {
      "op": "DUP3"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10743": {
      "op": "DUP6"
    },
    "10744": {
      "op": "ADD"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10747": {
      "op": "DUP10"
    },
    "10748": {
      "op": "ADD"
    },
    "10749": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10752": {
      "jump": "i",
      "op": "JUMP"
    },
    "10753": {
      "op": "JUMPDEST"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10756": {
      "op": "SWAP3"
    },
    "10757": {
      "op": "SWAP1"
    },
    "10758": {
      "op": "SWAP2"
    },
    "10759": {
      "op": "ADD"
    },
    "10760": {
      "op": "SWAP2"
    },
    "10761": {
      "op": "DUP3"
    },
    "10762": {
      "op": "ADD"
    },
    "10763": {
      "op": "MSTORE"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "10766": {
      "op": "ADD"
    },
    "10767": {
      "op": "SWAP6"
    },
    "10768": {
      "op": "SWAP5"
    },
    "10769": {
      "op": "POP"
    },
    "10770": {
      "op": "POP"
    },
    "10771": {
      "op": "POP"
    },
    "10772": {
      "op": "POP"
    },
    "10773": {
      "op": "POP"
    },
    "10774": {
      "jump": "o",
      "op": "JUMP"
    },
    "10775": {
      "op": "JUMPDEST"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10778": {
      "op": "DUP6"
    },
    "10779": {
      "op": "MLOAD"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x2A29"
    },
    "10783": {
      "op": "DUP2"
    },
    "10784": {
      "op": "DUP5"
    },
    "10785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10787": {
      "op": "DUP11"
    },
    "10788": {
      "op": "ADD"
    },
    "10789": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10792": {
      "jump": "i",
      "op": "JUMP"
    },
    "10793": {
      "op": "JUMPDEST"
    },
    "10794": {
      "op": "DUP1"
    },
    "10795": {
      "op": "DUP4"
    },
    "10796": {
      "op": "ADD"
    },
    "10797": {
      "op": "SWAP1"
    },
    "10798": {
      "op": "POP"
    },
    "10799": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "10832": {
      "op": "DUP1"
    },
    "10833": {
      "op": "DUP3"
    },
    "10834": {
      "op": "MSTORE"
    },
    "10835": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10870": {
      "op": "DUP4"
    },
    "10871": {
      "op": "ADD"
    },
    "10872": {
      "op": "MSTORE"
    },
    "10873": {
      "op": "DUP7"
    },
    "10874": {
      "op": "MLOAD"
    },
    "10875": {
      "op": "PUSH2",
      "value": "0x2A8B"
    },
    "10878": {
      "op": "DUP2"
    },
    "10879": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "10881": {
      "op": "DUP6"
    },
    "10882": {
      "op": "ADD"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10885": {
      "op": "DUP12"
    },
    "10886": {
      "op": "ADD"
    },
    "10887": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10890": {
      "jump": "i",
      "op": "JUMP"
    },
    "10891": {
      "op": "JUMPDEST"
    },
    "10892": {
      "op": "DUP1"
    },
    "10893": {
      "op": "DUP4"
    },
    "10894": {
      "op": "ADD"
    },
    "10895": {
      "op": "SWAP3"
    },
    "10896": {
      "op": "POP"
    },
    "10897": {
      "op": "POP"
    },
    "10898": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10901": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10903": {
      "op": "SHL"
    },
    "10904": {
      "op": "DUP1"
    },
    "10905": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "10907": {
      "op": "DUP5"
    },
    "10908": {
      "op": "ADD"
    },
    "10909": {
      "op": "MSTORE"
    },
    "10910": {
      "op": "DUP2"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10913": {
      "op": "DUP5"
    },
    "10914": {
      "op": "ADD"
    },
    "10915": {
      "op": "MSTORE"
    },
    "10916": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10951": {
      "op": "DUP5"
    },
    "10952": {
      "op": "ADD"
    },
    "10953": {
      "op": "MSTORE"
    },
    "10954": {
      "op": "DUP7"
    },
    "10955": {
      "op": "MLOAD"
    },
    "10956": {
      "op": "PUSH2",
      "value": "0x2ADC"
    },
    "10959": {
      "op": "DUP2"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10962": {
      "op": "DUP7"
    },
    "10963": {
      "op": "ADD"
    },
    "10964": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10966": {
      "op": "DUP12"
    },
    "10967": {
      "op": "ADD"
    },
    "10968": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "10971": {
      "jump": "i",
      "op": "JUMP"
    },
    "10972": {
      "op": "JUMPDEST"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10975": {
      "op": "SWAP4"
    },
    "10976": {
      "op": "ADD"
    },
    "10977": {
      "op": "SWAP3"
    },
    "10978": {
      "op": "DUP4"
    },
    "10979": {
      "op": "ADD"
    },
    "10980": {
      "op": "MSTORE"
    },
    "10981": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10983": {
      "op": "DUP3"
    },
    "10984": {
      "op": "ADD"
    },
    "10985": {
      "op": "MSTORE"
    },
    "10986": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "11021": {
      "op": "DUP3"
    },
    "11022": {
      "op": "ADD"
    },
    "11023": {
      "op": "MSTORE"
    },
    "11024": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "11030": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "11032": {
      "op": "SHL"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11035": {
      "op": "DUP3"
    },
    "11036": {
      "op": "ADD"
    },
    "11037": {
      "op": "MSTORE"
    },
    "11038": {
      "op": "PUSH2",
      "value": "0x292F"
    },
    "11041": {
      "op": "PUSH2",
      "value": "0x27F1"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "11046": {
      "op": "DUP4"
    },
    "11047": {
      "op": "ADD"
    },
    "11048": {
      "op": "DUP7"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x2692"
    },
    "11052": {
      "jump": "i",
      "op": "JUMP"
    },
    "11053": {
      "op": "JUMPDEST"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11056": {
      "op": "DUP3"
    },
    "11057": {
      "op": "MLOAD"
    },
    "11058": {
      "op": "PUSH2",
      "value": "0x2B3F"
    },
    "11061": {
      "op": "DUP2"
    },
    "11062": {
      "op": "DUP5"
    },
    "11063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11065": {
      "op": "DUP8"
    },
    "11066": {
      "op": "ADD"
    },
    "11067": {
      "op": "PUSH2",
      "value": "0x22DD"
    },
    "11070": {
      "jump": "i",
      "op": "JUMP"
    },
    "11071": {
      "op": "JUMPDEST"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "11074": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11076": {
      "op": "SHL"
    },
    "11077": {
      "op": "SWAP3"
    },
    "11078": {
      "op": "ADD"
    },
    "11079": {
      "op": "SWAP2"
    },
    "11080": {
      "op": "DUP3"
    },
    "11081": {
      "op": "MSTORE"
    },
    "11082": {
      "op": "POP"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "11085": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11087": {
      "op": "SHL"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11090": {
      "op": "DUP3"
    },
    "11091": {
      "op": "ADD"
    },
    "11092": {
      "op": "MSTORE"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11095": {
      "op": "ADD"
    },
    "11096": {
      "op": "SWAP2"
    },
    "11097": {
      "op": "SWAP1"
    },
    "11098": {
      "op": "POP"
    },
    "11099": {
      "jump": "o",
      "op": "JUMP"
    },
    "11100": {
      "op": "JUMPDEST"
    },
    "11101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11103": {
      "op": "DUP2"
    },
    "11104": {
      "op": "DUP2"
    },
    "11105": {
      "op": "SHR"
    },
    "11106": {
      "op": "SWAP1"
    },
    "11107": {
      "op": "DUP3"
    },
    "11108": {
      "op": "AND"
    },
    "11109": {
      "op": "DUP1"
    },
    "11110": {
      "op": "PUSH2",
      "value": "0x2B70"
    },
    "11113": {
      "op": "JUMPI"
    },
    "11114": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11116": {
      "op": "DUP3"
    },
    "11117": {
      "op": "AND"
    },
    "11118": {
      "op": "SWAP2"
    },
    "11119": {
      "op": "POP"
    },
    "11120": {
      "op": "JUMPDEST"
    },
    "11121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11123": {
      "op": "DUP3"
    },
    "11124": {
      "op": "LT"
    },
    "11125": {
      "op": "DUP2"
    },
    "11126": {
      "op": "EQ"
    },
    "11127": {
      "op": "ISZERO"
    },
    "11128": {
      "op": "PUSH2",
      "value": "0x2B91"
    },
    "11131": {
      "op": "JUMPI"
    },
    "11132": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11137": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11139": {
      "op": "SHL"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11142": {
      "op": "MSTORE"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11147": {
      "op": "MSTORE"
    },
    "11148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11152": {
      "op": "REVERT"
    },
    "11153": {
      "op": "JUMPDEST"
    },
    "11154": {
      "op": "POP"
    },
    "11155": {
      "op": "SWAP2"
    },
    "11156": {
      "op": "SWAP1"
    },
    "11157": {
      "op": "POP"
    },
    "11158": {
      "jump": "o",
      "op": "JUMP"
    },
    "11159": {
      "op": "JUMPDEST"
    },
    "11160": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11167": {
      "op": "SHL"
    },
    "11168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11170": {
      "op": "MSTORE"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11175": {
      "op": "MSTORE"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11180": {
      "op": "REVERT"
    },
    "11181": {
      "op": "JUMPDEST"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11184": {
      "op": "DUP3"
    },
    "11185": {
      "op": "PUSH2",
      "value": "0x2BBC"
    },
    "11188": {
      "op": "JUMPI"
    },
    "11189": {
      "op": "PUSH2",
      "value": "0x2BBC"
    },
    "11192": {
      "op": "PUSH2",
      "value": "0x2B97"
    },
    "11195": {
      "jump": "i",
      "op": "JUMP"
    },
    "11196": {
      "op": "JUMPDEST"
    },
    "11197": {
      "op": "POP"
    },
    "11198": {
      "op": "MOD"
    },
    "11199": {
      "op": "SWAP1"
    },
    "11200": {
      "jump": "o",
      "op": "JUMP"
    },
    "11201": {
      "op": "JUMPDEST"
    },
    "11202": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11209": {
      "op": "SHL"
    },
    "11210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11212": {
      "op": "MSTORE"
    },
    "11213": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11217": {
      "op": "MSTORE"
    },
    "11218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11222": {
      "op": "REVERT"
    },
    "11223": {
      "op": "JUMPDEST"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11226": {
      "op": "DUP3"
    },
    "11227": {
      "op": "NOT"
    },
    "11228": {
      "op": "DUP3"
    },
    "11229": {
      "op": "GT"
    },
    "11230": {
      "op": "ISZERO"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11234": {
      "op": "JUMPI"
    },
    "11235": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11238": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11241": {
      "jump": "i",
      "op": "JUMP"
    },
    "11242": {
      "op": "JUMPDEST"
    },
    "11243": {
      "op": "POP"
    },
    "11244": {
      "op": "ADD"
    },
    "11245": {
      "op": "SWAP1"
    },
    "11246": {
      "jump": "o",
      "op": "JUMP"
    },
    "11247": {
      "op": "JUMPDEST"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11250": {
      "op": "DUP3"
    },
    "11251": {
      "op": "PUSH2",
      "value": "0x2BFE"
    },
    "11254": {
      "op": "JUMPI"
    },
    "11255": {
      "op": "PUSH2",
      "value": "0x2BFE"
    },
    "11258": {
      "op": "PUSH2",
      "value": "0x2B97"
    },
    "11261": {
      "jump": "i",
      "op": "JUMP"
    },
    "11262": {
      "op": "JUMPDEST"
    },
    "11263": {
      "op": "POP"
    },
    "11264": {
      "op": "DIV"
    },
    "11265": {
      "op": "SWAP1"
    },
    "11266": {
      "jump": "o",
      "op": "JUMP"
    },
    "11267": {
      "op": "JUMPDEST"
    },
    "11268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11270": {
      "op": "DUP2"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11273": {
      "op": "NOT"
    },
    "11274": {
      "op": "DIV"
    },
    "11275": {
      "op": "DUP4"
    },
    "11276": {
      "op": "GT"
    },
    "11277": {
      "op": "DUP3"
    },
    "11278": {
      "op": "ISZERO"
    },
    "11279": {
      "op": "ISZERO"
    },
    "11280": {
      "op": "AND"
    },
    "11281": {
      "op": "ISZERO"
    },
    "11282": {
      "op": "PUSH2",
      "value": "0x2C1D"
    },
    "11285": {
      "op": "JUMPI"
    },
    "11286": {
      "op": "PUSH2",
      "value": "0x2C1D"
    },
    "11289": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11292": {
      "jump": "i",
      "op": "JUMP"
    },
    "11293": {
      "op": "JUMPDEST"
    },
    "11294": {
      "op": "POP"
    },
    "11295": {
      "op": "MUL"
    },
    "11296": {
      "op": "SWAP1"
    },
    "11297": {
      "jump": "o",
      "op": "JUMP"
    },
    "11298": {
      "op": "JUMPDEST"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11301": {
      "op": "DUP1"
    },
    "11302": {
      "op": "DUP3"
    },
    "11303": {
      "op": "MSTORE"
    },
    "11304": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11306": {
      "op": "SWAP1"
    },
    "11307": {
      "op": "DUP3"
    },
    "11308": {
      "op": "ADD"
    },
    "11309": {
      "op": "MSTORE"
    },
    "11310": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11345": {
      "op": "DUP3"
    },
    "11346": {
      "op": "ADD"
    },
    "11347": {
      "op": "MSTORE"
    },
    "11348": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "11366": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "11368": {
      "op": "SHL"
    },
    "11369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11371": {
      "op": "DUP3"
    },
    "11372": {
      "op": "ADD"
    },
    "11373": {
      "op": "MSTORE"
    },
    "11374": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "SWAP1"
    },
    "11378": {
      "jump": "o",
      "op": "JUMP"
    },
    "11379": {
      "op": "JUMPDEST"
    },
    "11380": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11387": {
      "op": "SHL"
    },
    "11388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11390": {
      "op": "MSTORE"
    },
    "11391": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11395": {
      "op": "MSTORE"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11400": {
      "op": "REVERT"
    },
    "11401": {
      "op": "JUMPDEST"
    },
    "11402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11404": {
      "op": "DUP1"
    },
    "11405": {
      "op": "DUP3"
    },
    "11406": {
      "op": "MSTORE"
    },
    "11407": {
      "op": "DUP2"
    },
    "11408": {
      "op": "DUP2"
    },
    "11409": {
      "op": "ADD"
    },
    "11410": {
      "op": "MSTORE"
    },
    "11411": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11444": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11446": {
      "op": "DUP3"
    },
    "11447": {
      "op": "ADD"
    },
    "11448": {
      "op": "MSTORE"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11451": {
      "op": "ADD"
    },
    "11452": {
      "op": "SWAP1"
    },
    "11453": {
      "jump": "o",
      "op": "JUMP"
    },
    "11454": {
      "op": "JUMPDEST"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11459": {
      "op": "NOT"
    },
    "11460": {
      "op": "DUP3"
    },
    "11461": {
      "op": "EQ"
    },
    "11462": {
      "op": "ISZERO"
    },
    "11463": {
      "op": "PUSH2",
      "value": "0x2CD2"
    },
    "11466": {
      "op": "JUMPI"
    },
    "11467": {
      "op": "PUSH2",
      "value": "0x2CD2"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11473": {
      "jump": "i",
      "op": "JUMP"
    },
    "11474": {
      "op": "JUMPDEST"
    },
    "11475": {
      "op": "POP"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11478": {
      "op": "ADD"
    },
    "11479": {
      "op": "SWAP1"
    },
    "11480": {
      "jump": "o",
      "op": "JUMP"
    },
    "11481": {
      "op": "JUMPDEST"
    },
    "11482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11484": {
      "op": "DUP3"
    },
    "11485": {
      "op": "DUP3"
    },
    "11486": {
      "op": "LT"
    },
    "11487": {
      "op": "ISZERO"
    },
    "11488": {
      "op": "PUSH2",
      "value": "0x2CEB"
    },
    "11491": {
      "op": "JUMPI"
    },
    "11492": {
      "op": "PUSH2",
      "value": "0x2CEB"
    },
    "11495": {
      "op": "PUSH2",
      "value": "0x2BC1"
    },
    "11498": {
      "jump": "i",
      "op": "JUMP"
    },
    "11499": {
      "op": "JUMPDEST"
    },
    "11500": {
      "op": "POP"
    },
    "11501": {
      "op": "SUB"
    },
    "11502": {
      "op": "SWAP1"
    },
    "11503": {
      "jump": "o",
      "op": "JUMP"
    },
    "11504": {
      "op": "JUMPDEST"
    },
    "11505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11507": {
      "op": "DUP1"
    },
    "11508": {
      "op": "DUP3"
    },
    "11509": {
      "op": "MSTORE"
    },
    "11510": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11512": {
      "op": "SWAP1"
    },
    "11513": {
      "op": "DUP3"
    },
    "11514": {
      "op": "ADD"
    },
    "11515": {
      "op": "MSTORE"
    },
    "11516": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11551": {
      "op": "DUP3"
    },
    "11552": {
      "op": "ADD"
    },
    "11553": {
      "op": "MSTORE"
    },
    "11554": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "11573": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "11575": {
      "op": "SHL"
    },
    "11576": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11578": {
      "op": "DUP3"
    },
    "11579": {
      "op": "ADD"
    },
    "11580": {
      "op": "MSTORE"
    },
    "11581": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11583": {
      "op": "ADD"
    },
    "11584": {
      "op": "SWAP1"
    },
    "11585": {
      "jump": "o",
      "op": "JUMP"
    },
    "11586": {
      "op": "JUMPDEST"
    },
    "11587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11593": {
      "op": "SHL"
    },
    "11594": {
      "op": "SUB"
    },
    "11595": {
      "op": "DUP6"
    },
    "11596": {
      "op": "DUP2"
    },
    "11597": {
      "op": "AND"
    },
    "11598": {
      "op": "DUP3"
    },
    "11599": {
      "op": "MSTORE"
    },
    "11600": {
      "op": "DUP5"
    },
    "11601": {
      "op": "AND"
    },
    "11602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11604": {
      "op": "DUP3"
    },
    "11605": {
      "op": "ADD"
    },
    "11606": {
      "op": "MSTORE"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11609": {
      "op": "DUP2"
    },
    "11610": {
      "op": "ADD"
    },
    "11611": {
      "op": "DUP4"
    },
    "11612": {
      "op": "SWAP1"
    },
    "11613": {
      "op": "MSTORE"
    },
    "11614": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11618": {
      "op": "DUP3"
    },
    "11619": {
      "op": "ADD"
    },
    "11620": {
      "op": "DUP2"
    },
    "11621": {
      "op": "SWAP1"
    },
    "11622": {
      "op": "MSTORE"
    },
    "11623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11625": {
      "op": "SWAP1"
    },
    "11626": {
      "op": "PUSH2",
      "value": "0x2D75"
    },
    "11629": {
      "op": "SWAP1"
    },
    "11630": {
      "op": "DUP4"
    },
    "11631": {
      "op": "ADD"
    },
    "11632": {
      "op": "DUP5"
    },
    "11633": {
      "op": "PUSH2",
      "value": "0x2309"
    },
    "11636": {
      "jump": "i",
      "op": "JUMP"
    },
    "11637": {
      "op": "JUMPDEST"
    },
    "11638": {
      "op": "SWAP7"
    },
    "11639": {
      "op": "SWAP6"
    },
    "11640": {
      "op": "POP"
    },
    "11641": {
      "op": "POP"
    },
    "11642": {
      "op": "POP"
    },
    "11643": {
      "op": "POP"
    },
    "11644": {
      "op": "POP"
    },
    "11645": {
      "op": "POP"
    },
    "11646": {
      "jump": "o",
      "op": "JUMP"
    },
    "11647": {
      "op": "JUMPDEST"
    },
    "11648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11652": {
      "op": "DUP3"
    },
    "11653": {
      "op": "DUP5"
    },
    "11654": {
      "op": "SUB"
    },
    "11655": {
      "op": "SLT"
    },
    "11656": {
      "op": "ISZERO"
    },
    "11657": {
      "op": "PUSH2",
      "value": "0x2D91"
    },
    "11660": {
      "op": "JUMPI"
    },
    "11661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11663": {
      "op": "DUP1"
    },
    "11664": {
      "op": "REVERT"
    },
    "11665": {
      "op": "JUMPDEST"
    },
    "11666": {
      "op": "DUP2"
    },
    "11667": {
      "op": "MLOAD"
    },
    "11668": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "11671": {
      "op": "DUP2"
    },
    "11672": {
      "op": "PUSH2",
      "value": "0x21BC"
    },
    "11675": {
      "jump": "i",
      "op": "JUMP"
    },
    "11676": {
      "op": "JUMPDEST"
    },
    "11677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11684": {
      "op": "SHL"
    },
    "11685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11687": {
      "op": "MSTORE"
    },
    "11688": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11692": {
      "op": "MSTORE"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11697": {
      "op": "REVERT"
    }
  },
  "sha1": "274422b039e538ccf2b7d5ee60f41f46918bf2fe",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n    enum OUTCOME {LOSS, WIN, TIE, CAPTURE}\n\n    // todo -- add level (will affect dApp)\n    struct Stats { // todo refine and move to bitencoding\n        uint256 level;\n        uint256 hp;\n        uint256 magicalPower;\n        uint256 magicalDefense;\n        uint256 speed;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n    function getStatsGivenId(uint256 _wizardId) external view returns(Stats memory) {\n        return tokenIdToStats[_wizardId];\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        // todo -- randomly create stats\n        //\n        // hp, base = 25\n        // mp base = 25\n\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp)));\n//        uint256 addOn = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp))) % 26;\n        uint256 hp = 25 + pseudoRandNum % 26;\n        uint256 magicalPower = 25 + (pseudoRandNum/100) % 26;\n        uint256 magicalDefense = 10 + (pseudoRandNum/10*4) % 10;\n        uint256 speed = 10 + (pseudoRandNum/10*5) % 10;\n        ELEMENT element = ELEMENT((pseudoRandNum/10*6) % 4);\n\n        Stats memory myStats =  Stats(1, hp, magicalPower, magicalDefense, speed, 0, 0, 0, 0, 0, 0, 0, 0, element);\n        tokenIdToStats[totalSupply()] = myStats;\n        _safeMint(msg.sender, totalSupply());\n//        unchecked { totalSupply() += 1; }\n    }\n\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n\n        emit Initiated(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, OUTCOME outcome, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        if(outcome == OUTCOME.WIN){\n            tokenIdToStats[_attackerId].wins += 1;\n            tokenIdToStats[_defenderId].losses += 1;\n\n        }\n        else if(outcome == OUTCOME.LOSS){\n            tokenIdToStats[_attackerId].losses += 1;\n            tokenIdToStats[_defenderId].wins += 1;\n        }\n\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n\n        // todo -- tokens waged?\n//        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n        // todo -- add stat for last time attacked to limit attack frequency?\n\n        // we switched to ETH\n//        if(_won==OUTCOME.LOSS) {\n//            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n//        }\n    }\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public returns(uint256) {\n\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId) external onlyVerifier {\n    }\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        return formatTokenURI(_tokenId, \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\");\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        Stats memory myStats = tokenIdToStats[_tokenId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(myStats.hp),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": ',\n            Strings.toString(myStats.magicalPower),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": ',\n            Strings.toString(myStats.magicalDefense),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": ',\n            Strings.toString(myStats.speed),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n            Strings.toString(myStats.wins),   ' }'\n        ));\n\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(myStats.losses),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(myStats.battles),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "359:10889:22:-:0;;;2334:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1459:13:6;;2415:5:22;;2422:7;;1459:13:6;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1483:17:6;;;;:7;;:17;;;;;:::i;:::-;;1392:116;;889:23:8;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;2471:5:22::1;2442:26:::0;:34;2521:1:::1;2487:31:::0;:35;2561:1:::1;2442:16;2533:29:::0;2644:6:::1;2601:40:::0;:49;2689:38;:49;;-1:-1:-1;;;;;;2689:49:22::1;-1:-1:-1::0;;;;;2689:49:22;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;359:10889:22;;-1:-1:-1;359:10889:22;599:98:3;679:10;;599:98::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;359:10889:22:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:10889:22;;;-1:-1:-1;359:10889:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:23;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:23;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:23;-1:-1:-1;;;;;;1685:31:23;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;:::-;359:10889:22;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}