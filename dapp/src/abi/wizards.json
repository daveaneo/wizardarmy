{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_won",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/interfaces/IERC165.sol",
    "14": "contracts/interfaces/IERC721.sol",
    "15": "contracts/interfaces/IERC721Enumerable.sol",
    "16": "contracts/interfaces/IERC721Metadata.sol",
    "19": "contracts/libraries/Strings.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "4": "contracts/helpers/ERC165.sol",
    "5": "contracts/helpers/ERC721.sol",
    "6": "contracts/helpers/ERC721Enumerable.sol",
    "7": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        5097
      ],
      "Context": [
        3328
      ],
      "ERC165": [
        4756
      ],
      "ERC721": [
        4701
      ],
      "ERC721Enumerable": [
        3679
      ],
      "IERC165": [
        3340
      ],
      "IERC721": [
        2623
      ],
      "IERC721Enumerable": [
        4732
      ],
      "IERC721Metadata": [
        4783
      ],
      "IERC721Receiver": [
        4801
      ],
      "Ownable": [
        2394
      ],
      "Strings": [
        3882
      ],
      "Wizards": [
        3278
      ]
    },
    "id": 3279,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2625,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 2626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3279,
        "sourceUnit": 2395,
        "src": "94:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 2627,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3279,
        "sourceUnit": 3680,
        "src": "127:40:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 2628,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3279,
        "sourceUnit": 3883,
        "src": "169:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2629,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3679,
              "src": "379:16:20"
            },
            "id": 2630,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:20"
          },
          {
            "baseName": {
              "id": 2631,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2394,
              "src": "397:7:20"
            },
            "id": 2632,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:20"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3278,
        "linearizedBaseContracts": [
          3278,
          2394,
          3679,
          4732,
          4701,
          4783,
          2623,
          4756,
          3340,
          3328
        ],
        "name": "Wizards",
        "nameLocation": "368:7:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 2637,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "527:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 3278,
            "src": "493:48:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 2636,
              "keyType": {
                "id": 2633,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 2635,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2634,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2673,
                  "src": "513:5:20"
                },
                "referencedDeclaration": 2673,
                "src": "513:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 2639,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "563:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 3278,
            "src": "548:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2638,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 2640,
              "nodeType": "StructuredDocumentation",
              "src": "572:36:20",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 2642,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "629:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 3278,
            "src": "614:23:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2641,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 2647,
            "members": [
              {
                "id": 2643,
                "name": "FIRE",
                "nameLocation": "697:4:20",
                "nodeType": "EnumValue",
                "src": "697:4:20"
              },
              {
                "id": 2644,
                "name": "WIND",
                "nameLocation": "703:4:20",
                "nodeType": "EnumValue",
                "src": "703:4:20"
              },
              {
                "id": 2645,
                "name": "WATER",
                "nameLocation": "709:5:20",
                "nodeType": "EnumValue",
                "src": "709:5:20"
              },
              {
                "id": 2646,
                "name": "EARTH",
                "nameLocation": "716:5:20",
                "nodeType": "EnumValue",
                "src": "716:5:20"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "688:7:20",
            "nodeType": "EnumDefinition",
            "src": "683:39:20"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 2673,
            "members": [
              {
                "constant": false,
                "id": 2649,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "846:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "838:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2648,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2651,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "870:2:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "862:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2650,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "862:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2653,
                "mutability": "mutable",
                "name": "mp",
                "nameLocation": "891:2:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "883:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2652,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "883:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2655,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "912:4:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "904:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2654,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "904:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2657,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "935:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "927:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2656,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "927:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2659,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "960:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "952:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2658,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2661,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "986:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "978:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2660,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "978:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2663,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "1018:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "1010:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2662,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2665,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "1045:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "1037:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2664,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1037:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2667,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1071:19:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "1063:27:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2666,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1063:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2669,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1129:23:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "1121:31:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2668,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1121:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2672,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1215:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 2673,
                "src": "1207:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$2647",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 2671,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2670,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2647,
                    "src": "1207:7:20"
                  },
                  "referencedDeclaration": 2647,
                  "src": "1207:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$2647",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "782:5:20",
            "nodeType": "StructDefinition",
            "scope": 3278,
            "src": "775:455:20",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 2684,
            "members": [
              {
                "constant": false,
                "id": 2675,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1296:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 2684,
                "src": "1288:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2674,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1288:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2677,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1323:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 2684,
                "src": "1315:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2676,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1315:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2679,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1356:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 2684,
                "src": "1348:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2678,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1348:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2681,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1384:23:20",
                "nodeType": "VariableDeclaration",
                "scope": 2684,
                "src": "1376:31:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2680,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1376:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2683,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1426:21:20",
                "nodeType": "VariableDeclaration",
                "scope": 2684,
                "src": "1418:29:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2682,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1418:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1245:16:20",
            "nodeType": "StructDefinition",
            "scope": 3278,
            "src": "1238:217:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 2687,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1487:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 3278,
            "src": "1463:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 2686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2685,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2684,
                "src": "1463:16:20"
              },
              "referencedDeclaration": 2684,
              "src": "1463:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$2684_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2691,
            "name": "NewVerifier",
            "nameLocation": "1575:11:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1595:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "1587:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1586:17:20"
            },
            "src": "1569:35:20"
          },
          {
            "anonymous": false,
            "id": 2695,
            "name": "NewBattler",
            "nameLocation": "1616:10:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1635:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2695,
                  "src": "1627:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:18:20"
            },
            "src": "1610:35:20"
          },
          {
            "anonymous": false,
            "id": 2703,
            "name": "Initiated",
            "nameLocation": "1657:9:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2697,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1675:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "1667:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2699,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "1702:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "1686:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2701,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1720:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "1712:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:64:20"
            },
            "src": "1651:80:20"
          },
          {
            "body": {
              "id": 2718,
              "nodeType": "Block",
              "src": "1882:93:20",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2710,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "1900:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2712,
                        "indexExpression": {
                          "id": 2711,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2705,
                          "src": "1915:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1900:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2669,
                      "src": "1900:49:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 2714,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1952:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1952:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1900:67:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2709,
                  "id": 2717,
                  "nodeType": "Return",
                  "src": "1893:74:20"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 2719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "1828:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "1845:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2719,
                  "src": "1837:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1837:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1836:19:20"
            },
            "returnParameters": {
              "id": 2709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2719,
                  "src": "1876:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2707,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1875:6:20"
            },
            "scope": 3278,
            "src": "1819:156:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2762,
              "nodeType": "Block",
              "src": "2181:343:20",
              "statements": [
                {
                  "expression": {
                    "id": 2736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2732,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "2192:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 2734,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2679,
                      "src": "2192:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 2735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2221:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2192:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2737,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:34:20"
                },
                {
                  "expression": {
                    "id": 2742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2738,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "2237:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 2740,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2677,
                      "src": "2237:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2271:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2237:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2743,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:35:20"
                },
                {
                  "expression": {
                    "id": 2748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2744,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "2283:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 2746,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2675,
                      "src": "2283:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2311:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2283:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2749,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:29:20"
                },
                {
                  "expression": {
                    "id": 2754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2750,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "2351:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2681,
                      "src": "2351:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2394:6:20",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "2351:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2755,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:49:20"
                },
                {
                  "expression": {
                    "id": 2760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2756,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "2439:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 2758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2683,
                      "src": "2439:38:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2759,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2725,
                      "src": "2480:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2439:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2761,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:49:20"
                }
              ]
            },
            "id": 2763,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2728,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2721,
                    "src": "2165:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2729,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2723,
                    "src": "2172:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2730,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2727,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4701,
                  "src": "2158:6:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2158:22:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2110:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "2096:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2131:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "2117:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2148:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2763,
                  "src": "2140:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:62:20"
            },
            "returnParameters": {
              "id": 2731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:20"
            },
            "scope": 3278,
            "src": "2084:440:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2863,
              "nodeType": "Block",
              "src": "2557:733:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2767,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3430,
                            "src": "2576:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2576:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 2769,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2687,
                            "src": "2592:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 2770,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2679,
                          "src": "2592:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2576:42:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 2772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2620:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 2766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2568:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2568:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2774,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:69:20"
                },
                {
                  "assignments": [
                    2776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2776,
                      "mutability": "mutable",
                      "name": "addOn",
                      "nameLocation": "2763:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2863,
                      "src": "2755:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2775,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2755:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2793,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2782,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3430,
                                    "src": "2806:11:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 2783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2806:13:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2784,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2821:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2821:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2786,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2833:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "2833:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 2780,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2789:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2789:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2789:60:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2779,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2779:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 2789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:71:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 2778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2771:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2777,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2771:80:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "3236",
                      "id": 2791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2854:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_26_by_1",
                        "typeString": "int_const 26"
                      },
                      "value": "26"
                    },
                    "src": "2771:85:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2755:101:20"
                },
                {
                  "assignments": [
                    2795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2795,
                      "mutability": "mutable",
                      "name": "hp",
                      "nameLocation": "2875:2:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2863,
                      "src": "2867:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2867:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2799,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 2796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2880:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2797,
                      "name": "addOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "2885:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2880:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2867:23:20"
                },
                {
                  "assignments": [
                    2801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2801,
                      "mutability": "mutable",
                      "name": "mp",
                      "nameLocation": "2909:2:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2863,
                      "src": "2901:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2800,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2901:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2805,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 2802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2914:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2803,
                      "name": "addOn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2776,
                      "src": "2919:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2914:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2901:23:20"
                },
                {
                  "assignments": [
                    2808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2808,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "2945:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2863,
                      "src": "2937:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$2647",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 2807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2806,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2647,
                          "src": "2937:7:20"
                        },
                        "referencedDeclaration": 2647,
                        "src": "2937:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$2647",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2830,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2815,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3430,
                                        "src": "2998:11:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 2816,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2998:13:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 2817,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3013:3:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3013:10:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2822,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 2819,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "3025:5:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2820,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "3025:15:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 2821,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3041:1:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3025:17:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 2823,
                                      "name": "hp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2795,
                                      "src": "3044:2:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2813,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "2981:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2814,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "2981:16:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2824,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2981:66:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2812,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "2971:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 2825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2971:77:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2963:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2810,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2963:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2963:86:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3052:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "2963:90:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2809,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2647,
                      "src": "2955:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$2647_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 2829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2955:99:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$2647",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2937:117:20"
                },
                {
                  "assignments": [
                    2833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2833,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3080:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2863,
                      "src": "3067:20:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 2832,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2831,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2673,
                          "src": "3067:5:20"
                        },
                        "referencedDeclaration": 2673,
                        "src": "3067:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2848,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 2835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3097:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 2836,
                        "name": "hp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "3100:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2837,
                        "name": "mp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2801,
                        "src": "3104:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 2838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3108:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3111:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3114:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3117:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3123:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3126:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 2846,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2808,
                        "src": "3132:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$2647",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$2647",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 2834,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2673,
                      "src": "3091:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$2673_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3091:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3067:73:20"
                },
                {
                  "expression": {
                    "id": 2854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2849,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2637,
                        "src": "3151:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 2852,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2850,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "3166:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3166:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3151:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$2673_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2853,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2833,
                      "src": "3183:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "3151:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$2673_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 2855,
                  "nodeType": "ExpressionStatement",
                  "src": "3151:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2857,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3211:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3211:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2859,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3430,
                          "src": "3223:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 2860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3223:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2856,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4395,
                        4424
                      ],
                      "referencedDeclaration": 4395,
                      "src": "3201:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2862,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:36:20"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 2864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2541:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2545:2:20"
            },
            "returnParameters": {
              "id": 2765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:20"
            },
            "scope": 3278,
            "src": "2532:758:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2922,
              "nodeType": "Block",
              "src": "3410:484:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2872,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "3437:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2871,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4029,
                            "src": "3429:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3429:17:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2874,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3450:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3450:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3429:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3462:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 2870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3421:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3421:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2879,
                  "nodeType": "ExpressionStatement",
                  "src": "3421:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2881,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2637,
                              "src": "3497:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 2883,
                            "indexExpression": {
                              "id": 2882,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "3512:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3497:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$2673_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2667,
                          "src": "3497:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3545:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3497:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 2887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3548:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 2880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3489:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3489:79:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2889,
                  "nodeType": "ExpressionStatement",
                  "src": "3489:79:20"
                },
                {
                  "assignments": [
                    2892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2892,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3627:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 2922,
                      "src": "3613:21:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 2891,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2890,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2673,
                          "src": "3613:5:20"
                        },
                        "referencedDeclaration": 2673,
                        "src": "3613:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2896,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2893,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2637,
                      "src": "3637:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 2895,
                    "indexExpression": {
                      "id": 2894,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "3652:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3637:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$2673_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3613:48:20"
                },
                {
                  "expression": {
                    "id": 2902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2897,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "3672:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 2899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2667,
                      "src": "3672:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2900,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3702:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3702:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3672:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2903,
                  "nodeType": "ExpressionStatement",
                  "src": "3672:45:20"
                },
                {
                  "expression": {
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2904,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2892,
                        "src": "3728:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 2906,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2669,
                      "src": "3728:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2907,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3762:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3762:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 2909,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2687,
                          "src": "3780:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$2684_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 2910,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2681,
                        "src": "3780:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3762:58:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3728:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "3728:92:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2915,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3848:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3848:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2917,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "3860:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2918,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3870:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3870:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2914,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "3838:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3838:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2921,
                  "nodeType": "EmitStatement",
                  "src": "3833:53:20"
                }
              ]
            },
            "documentation": {
              "id": 2865,
              "nodeType": "StructuredDocumentation",
              "src": "3300:59:20",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 2923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "3374:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3391:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "3383:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3383:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3382:18:20"
            },
            "returnParameters": {
              "id": 2869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3410:0:20"
            },
            "scope": 3278,
            "src": "3365:529:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3002,
              "nodeType": "Block",
              "src": "4052:626:20",
              "statements": [
                {
                  "expression": {
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2938,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4063:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2940,
                        "indexExpression": {
                          "id": 2939,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2925,
                          "src": "4078:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4063:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2655,
                      "src": "4063:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2942,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "4099:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4063:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2944,
                  "nodeType": "ExpressionStatement",
                  "src": "4063:40:20"
                },
                {
                  "expression": {
                    "id": 2955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2945,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4114:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2947,
                        "indexExpression": {
                          "id": 2946,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2925,
                          "src": "4129:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4114:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2948,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "losses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2657,
                      "src": "4114:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2949,
                          "name": "_won",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2929,
                          "src": "4152:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4158:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4152:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 2953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4166:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 2954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4152:15:20",
                      "trueExpression": {
                        "hexValue": "31",
                        "id": 2952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4162:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4114:53:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2956,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:53:20"
                },
                {
                  "expression": {
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2957,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4178:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2959,
                        "indexExpression": {
                          "id": 2958,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2925,
                          "src": "4193:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4178:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2661,
                      "src": "4178:41:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2961,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2931,
                      "src": "4223:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4178:55:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2963,
                  "nodeType": "ExpressionStatement",
                  "src": "4178:55:20"
                },
                {
                  "expression": {
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2964,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4278:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2966,
                        "indexExpression": {
                          "id": 2965,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2927,
                          "src": "4293:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4278:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2967,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2655,
                      "src": "4278:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2968,
                          "name": "_won",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2929,
                          "src": "4314:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4320:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4314:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 2972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4328:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 2973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4314:15:20",
                      "trueExpression": {
                        "hexValue": "31",
                        "id": 2971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4324:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4278:51:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "4278:51:20"
                },
                {
                  "expression": {
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2976,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4340:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2978,
                        "indexExpression": {
                          "id": 2977,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2927,
                          "src": "4355:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4340:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2979,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "losses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2657,
                      "src": "4340:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2980,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "4378:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4340:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "4340:42:20"
                },
                {
                  "expression": {
                    "id": 2988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2983,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2637,
                          "src": "4393:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 2985,
                        "indexExpression": {
                          "id": 2984,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2927,
                          "src": "4408:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4393:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 2986,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2661,
                      "src": "4393:41:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2987,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2931,
                      "src": "4438:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4393:55:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2989,
                  "nodeType": "ExpressionStatement",
                  "src": "4393:55:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2990,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "4543:4:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4549:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4543:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3001,
                  "nodeType": "IfStatement",
                  "src": "4540:131:20",
                  "trueBody": {
                    "id": 3000,
                    "nodeType": "Block",
                    "src": "4552:119:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 2998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2993,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2637,
                                "src": "4567:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 2995,
                              "indexExpression": {
                                "id": 2994,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "4582:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4567:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$2673_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 2996,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tokensClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2661,
                            "src": "4567:41:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2997,
                            "name": "_tokensWaged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2933,
                            "src": "4612:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4567:57:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2999,
                        "nodeType": "ExpressionStatement",
                        "src": "4567:57:20"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7539cc7f",
            "id": 3003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2935,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3217,
                  "src": "4040:11:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "4040:11:20"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "3911:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2925,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "3932:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3924:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "3953:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3945:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "_won",
                  "nameLocation": "3974:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3966:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2931,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "3988:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3980:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3980:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2933,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "4017:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "4009:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:107:20"
            },
            "returnParameters": {
              "id": 2937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4052:0:20"
            },
            "scope": 3278,
            "src": "3902:776:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3011,
              "nodeType": "Block",
              "src": "4797:10:20",
              "statements": []
            },
            "documentation": {
              "id": 3004,
              "nodeType": "StructuredDocumentation",
              "src": "4686:43:20",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 3012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "4744:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3006,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4763:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3012,
                  "src": "4755:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4755:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4754:18:20"
            },
            "returnParameters": {
              "id": 3010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3012,
                  "src": "4788:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4788:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4787:9:20"
            },
            "scope": 3278,
            "src": "4735:72:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3020,
              "nodeType": "Block",
              "src": "4955:10:20",
              "statements": []
            },
            "documentation": {
              "id": 3013,
              "nodeType": "StructuredDocumentation",
              "src": "4815:72:20",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 3021,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "4902:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4924:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3021,
                  "src": "4916:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4916:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4915:18:20"
            },
            "returnParameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3021,
                  "src": "4949:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4949:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4948:6:20"
            },
            "scope": 3278,
            "src": "4893:72:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3029,
              "nodeType": "Block",
              "src": "5104:8:20",
              "statements": []
            },
            "documentation": {
              "id": 3022,
              "nodeType": "StructuredDocumentation",
              "src": "4973:65:20",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "0c457ce4",
            "id": 3030,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3027,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3026,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3190,
                  "src": "5091:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5091:12:20"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "5053:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3024,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5072:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3030,
                  "src": "5064:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5064:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5063:18:20"
            },
            "returnParameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5104:0:20"
            },
            "scope": 3278,
            "src": "5044:68:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3038,
              "nodeType": "Block",
              "src": "5266:8:20",
              "statements": []
            },
            "documentation": {
              "id": 3031,
              "nodeType": "StructuredDocumentation",
              "src": "5120:87:20",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 3039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3035,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3205,
                  "src": "5246:10:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5246:10:20"
              }
            ],
            "name": "crush",
            "nameLocation": "5222:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3033,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5236:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3039,
                  "src": "5228:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5227:18:20"
            },
            "returnParameters": {
              "id": 3037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5266:0:20"
            },
            "scope": 3278,
            "src": "5213:61:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4091
            ],
            "body": {
              "id": 3059,
              "nodeType": "Block",
              "src": "5373:269:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3049,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3041,
                            "src": "5400:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3048,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4339,
                          "src": "5392:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5392:17:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5411:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 3047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5384:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5384:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "5384:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3055,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3041,
                        "src": "5527:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067",
                        "id": 3056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5537:96:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        },
                        "value": "https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        }
                      ],
                      "id": 3054,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3175,
                      "src": "5512:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 3057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5512:122:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3046,
                  "id": 3058,
                  "nodeType": "Return",
                  "src": "5505:129:20"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5293:8:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5340:8:20"
            },
            "parameters": {
              "id": 3042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3041,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5310:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3060,
                  "src": "5302:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5301:18:20"
            },
            "returnParameters": {
              "id": 3046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3060,
                  "src": "5358:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5358:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5357:15:20"
            },
            "scope": 3278,
            "src": "5284:358:20",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3174,
              "nodeType": "Block",
              "src": "5752:2709:20",
              "statements": [
                {
                  "assignments": [
                    3071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3071,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "5831:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3174,
                      "src": "5818:20:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3069,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2673,
                          "src": "5818:5:20"
                        },
                        "referencedDeclaration": 2673,
                        "src": "5818:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$2673_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3075,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3072,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2637,
                      "src": "5841:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$2673_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3074,
                    "indexExpression": {
                      "id": 3073,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3062,
                      "src": "5856:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5841:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$2673_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5818:47:20"
                },
                {
                  "assignments": [
                    3077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3077,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "5892:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3174,
                      "src": "5878:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3076,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5878:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3097,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 3082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5941:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 3083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5986:72:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 3084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6073:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 3085,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3064,
                            "src": "6103:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 3086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6113:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6131:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 3088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6193:78:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3091,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "6303:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 3092,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2649,
                                "src": "6303:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3089,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3882,
                                "src": "6286:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3764,
                              "src": "6286:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6286:31:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 3094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6319:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 3080,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5910:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5910:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5910:424:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5903:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3078,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5903:6:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5903:432:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5878:457:20"
                },
                {
                  "expression": {
                    "id": 3127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3098,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "6400:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3103,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3077,
                              "src": "6435:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 3104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6458:60:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3107,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "6550:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3108,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2651,
                                  "src": "6550:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3105,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "6533:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "6533:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6533:28:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6565:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d70222c202276616c7565223a20",
                              "id": 3111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6584:60:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3114,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "6676:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3115,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2653,
                                  "src": "6676:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3112,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "6659:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "6659:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6659:28:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6691:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a202277696e73222c202276616c7565223a20",
                              "id": 3118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6714:62:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3121,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "6808:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3122,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2655,
                                  "src": "6808:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3119,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "6791:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "6791:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6791:30:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6825:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3101,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6418:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6418:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6418:422:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6411:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3099,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6411:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6411:430:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6400:441:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3128,
                  "nodeType": "ExpressionStatement",
                  "src": "6400:441:20"
                },
                {
                  "expression": {
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3129,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "6906:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3134,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3077,
                              "src": "6941:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 3135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6964:64:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3138,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "7060:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3139,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "losses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2657,
                                  "src": "7060:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3136,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "7043:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "7043:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7043:32:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7079:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 3142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7098:65:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3145,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "7195:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3146,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "battles",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2659,
                                  "src": "7195:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3143,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "7178:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "7178:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7178:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7215:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 3149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7238:71:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3152,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3071,
                                    "src": "7341:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$2673_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3153,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2661,
                                  "src": "7341:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3150,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3882,
                                  "src": "7324:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$3882_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3764,
                                "src": "7324:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7324:39:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7367:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3132,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6924:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6924:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6924:458:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6917:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3130,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6917:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6917:466:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6906:477:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "6906:477:20"
                },
                {
                  "expression": {
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3160,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "7419:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3165,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3077,
                              "src": "7454:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 3166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7464:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 3167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7468:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 3163,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7437:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7437:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7437:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7430:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3161,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7430:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7430:43:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7419:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "7419:54:20"
                },
                {
                  "expression": {
                    "id": 3172,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3077,
                    "src": "8445:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3068,
                  "id": 3173,
                  "nodeType": "Return",
                  "src": "8438:15:20"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 3175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "5659:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3062,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5682:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3175,
                  "src": "5674:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5674:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3064,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "5706:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3175,
                  "src": "5692:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3063,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5692:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5673:42:20"
            },
            "returnParameters": {
              "id": 3068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3175,
                  "src": "5737:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5736:15:20"
            },
            "scope": 3278,
            "src": "5650:2811:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3189,
              "nodeType": "Block",
              "src": "9124:141:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3178,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9143:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9143:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3182,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9165:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3278",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3278",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9157:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3180,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9157:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9157:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9143:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9172:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9135:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9135:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "9135:53:20"
                },
                {
                  "id": 3188,
                  "nodeType": "PlaceholderStatement",
                  "src": "9256:1:20"
                }
              ]
            },
            "id": 3190,
            "name": "onlyVerifier",
            "nameLocation": "9109:12:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9121:2:20"
            },
            "src": "9100:165:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3204,
              "nodeType": "Block",
              "src": "9295:141:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9314:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9314:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3197,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9336:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3278",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3278",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9328:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9328:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9328:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9314:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9343:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9306:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9306:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3202,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:53:20"
                },
                {
                  "id": 3203,
                  "nodeType": "PlaceholderStatement",
                  "src": "9427:1:20"
                }
              ]
            },
            "id": 3205,
            "name": "onlyHolder",
            "nameLocation": "9282:10:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9292:2:20"
            },
            "src": "9273:163:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3216,
              "nodeType": "Block",
              "src": "9467:138:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3208,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9500:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9500:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3210,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2639,
                          "src": "9514:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9500:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 3212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9536:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 3207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9478:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9478:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3214,
                  "nodeType": "ExpressionStatement",
                  "src": "9478:107:20"
                },
                {
                  "id": 3215,
                  "nodeType": "PlaceholderStatement",
                  "src": "9596:1:20"
                }
              ]
            },
            "id": 3217,
            "name": "onlyBattler",
            "nameLocation": "9453:11:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9464:2:20"
            },
            "src": "9444:161:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3246,
              "nodeType": "Block",
              "src": "9770:166:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3225,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3219,
                            "src": "9789:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9809:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9801:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3226,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9801:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9801:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9789:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3231,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3219,
                            "src": "9815:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3232,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2639,
                            "src": "9827:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9789:45:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9836:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9781:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9781:82:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3237,
                  "nodeType": "ExpressionStatement",
                  "src": "9781:82:20"
                },
                {
                  "expression": {
                    "id": 3240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3238,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2639,
                      "src": "9874:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3239,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3219,
                      "src": "9884:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9874:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3241,
                  "nodeType": "ExpressionStatement",
                  "src": "9874:18:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3243,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3219,
                        "src": "9919:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3242,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2695,
                      "src": "9908:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9908:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3245,
                  "nodeType": "EmitStatement",
                  "src": "9903:25:20"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 3247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3221,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2337,
                  "src": "9760:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "9760:9:20"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "9719:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3219,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "9741:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3247,
                  "src": "9733:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9733:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9732:18:20"
            },
            "returnParameters": {
              "id": 3223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9770:0:20"
            },
            "scope": 3278,
            "src": "9710:226:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3276,
              "nodeType": "Block",
              "src": "10006:173:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3255,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3249,
                            "src": "10025:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10046:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10038:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3256,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10038:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10038:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10025:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3261,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3249,
                            "src": "10052:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3262,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2642,
                            "src": "10065:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10052:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10025:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10075:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10017:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10017:85:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3267,
                  "nodeType": "ExpressionStatement",
                  "src": "10017:85:20"
                },
                {
                  "expression": {
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3268,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2642,
                      "src": "10113:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3269,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "10124:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10113:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3271,
                  "nodeType": "ExpressionStatement",
                  "src": "10113:20:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "10161:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3272,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2691,
                      "src": "10149:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10149:22:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3275,
                  "nodeType": "EmitStatement",
                  "src": "10144:27:20"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 3277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3252,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3251,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2337,
                  "src": "9996:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "9996:9:20"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "9953:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3249,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "9976:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3277,
                  "src": "9968:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9968:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9967:19:20"
            },
            "returnParameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10006:0:20"
            },
            "scope": 3278,
            "src": "9944:235:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3279,
        "src": "359:9825:20",
        "usedErrors": []
      }
    ],
    "src": "33:10151:20"
  },
  "bytecode": "",
  "bytecodeSha1": "a1198c8ca5ed31ad1f64838fa07be9451e3d8fcb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "11": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {
        "Strings.toString": {
          "143": [
            563,
            573,
            false
          ]
        }
      },
      "20": {
        "Wizards.initiate": {
          "116": [
            3429,
            3460,
            true
          ],
          "117": [
            3497,
            3546,
            true
          ]
        },
        "Wizards.mint": {
          "112": [
            2576,
            2618,
            true
          ]
        },
        "Wizards.reportBattle": {
          "113": [
            4152,
            4159,
            true
          ],
          "114": [
            4314,
            4321,
            true
          ],
          "115": [
            4543,
            4550,
            false
          ]
        },
        "Wizards.updateBattler": {
          "120": [
            9789,
            9811,
            false
          ],
          "121": [
            9815,
            9834,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "118": [
            10025,
            10048,
            false
          ],
          "119": [
            10052,
            10073,
            true
          ]
        },
        "Wizards.verifyDuty": {
          "111": [
            9143,
            9170,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC721._mint": {
          "134": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "133": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "132": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "130": [
            10896,
            10927,
            true
          ],
          "131": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "122": [
            3746,
            3757,
            true
          ],
          "123": [
            3830,
            3851,
            true
          ],
          "124": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "127": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.ownerOf": {
          "126": [
            2362,
            2381,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "129": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "128": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "125": [
            5169,
            5210,
            true
          ]
        }
      },
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "137": [
            2870,
            2888,
            false
          ],
          "138": [
            2967,
            2977,
            false
          ],
          "139": [
            3067,
            3083,
            false
          ],
          "140": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "141": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "136": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "135": [
            1421,
            1452,
            true
          ]
        }
      },
      "7": {
        "Ownable.transferOwnership": {
          "142": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {
        "Strings.toString": {
          "60": [
            590,
            600
          ],
          "61": [
            711,
            719
          ],
          "62": [
            734,
            744
          ],
          "63": [
            850,
            861
          ],
          "64": [
            876,
            932
          ],
          "65": [
            947,
            958
          ],
          "66": [
            980,
            1001
          ]
        }
      },
      "20": {
        "Wizards.formatTokenURI": {
          "5": [
            6400,
            6841
          ],
          "6": [
            6906,
            7383
          ],
          "7": [
            7419,
            7473
          ]
        },
        "Wizards.initiate": {
          "37": [
            3421,
            3478
          ],
          "38": [
            3489,
            3568
          ],
          "39": [
            3672,
            3717
          ],
          "40": [
            3728,
            3820
          ],
          "41": [
            3833,
            3886
          ]
        },
        "Wizards.isActive": {
          "1": [
            1893,
            1967
          ]
        },
        "Wizards.mint": {
          "16": [
            2568,
            2637
          ],
          "17": [
            3151,
            3190
          ],
          "18": [
            3201,
            3237
          ]
        },
        "Wizards.reportBattle": {
          "30": [
            4063,
            4103
          ],
          "31": [
            4114,
            4167
          ],
          "32": [
            4178,
            4233
          ],
          "33": [
            4278,
            4329
          ],
          "34": [
            4340,
            4382
          ],
          "35": [
            4393,
            4448
          ],
          "36": [
            4567,
            4624
          ]
        },
        "Wizards.tokenURI": {
          "51": [
            5384,
            5461
          ],
          "52": [
            5505,
            5634
          ]
        },
        "Wizards.updateBattler": {
          "53": [
            9781,
            9863
          ],
          "54": [
            9874,
            9892
          ],
          "55": [
            9903,
            9928
          ]
        },
        "Wizards.updateVerifier": {
          "43": [
            10017,
            10102
          ],
          "44": [
            10113,
            10133
          ],
          "45": [
            10144,
            10171
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "13": [
            672,
            689
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "59": [
            901,
            948
          ]
        }
      },
      "5": {
        "ERC721._approve": {
          "67": [
            11535,
            11564
          ],
          "68": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "92": [
            12700,
            12760
          ],
          "93": [
            12527,
            12589
          ],
          "94": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "9": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "70": [
            7882,
            7955
          ],
          "71": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "95": [
            9528,
            9589
          ],
          "96": [
            9600,
            9658
          ],
          "97": [
            9671,
            9716
          ],
          "98": [
            9729,
            9747
          ],
          "99": [
            9758,
            9779
          ],
          "100": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "69": [
            8538,
            8564
          ],
          "84": [
            8929,
            8947
          ],
          "85": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "82": [
            7007,
            7035
          ],
          "83": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "72": [
            10888,
            10973
          ],
          "73": [
            10984,
            11049
          ],
          "74": [
            11062,
            11101
          ],
          "75": [
            11166,
            11195
          ],
          "76": [
            11208,
            11228
          ],
          "77": [
            11239,
            11257
          ],
          "78": [
            11268,
            11289
          ],
          "79": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "12": [
            3738,
            3795
          ],
          "14": [
            3808,
            3976
          ],
          "15": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "27": [
            2041,
            2115
          ],
          "28": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "10": [
            4180,
            4253
          ],
          "11": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "8": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "26": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "23": [
            5522,
            5561
          ],
          "49": [
            5807,
            5910
          ],
          "50": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "46": [
            4472,
            4534
          ],
          "47": [
            4547,
            4600
          ],
          "48": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "58": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "42": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "19": [
            5161,
            5264
          ],
          "20": [
            5277,
            5305
          ]
        }
      },
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "87": [
            4053,
            4097
          ],
          "88": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "109": [
            3687,
            3721
          ],
          "110": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "86": [
            2905,
            2945
          ],
          "89": [
            2994,
            3041
          ],
          "90": [
            3100,
            3145
          ],
          "91": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "105": [
            6793,
            6829
          ],
          "106": [
            6898,
            6939
          ],
          "107": [
            7063,
            7094
          ],
          "108": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "101": [
            5367,
            5411
          ],
          "102": [
            5484,
            5527
          ],
          "103": [
            5662,
            5695
          ],
          "104": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "24": [
            1913,
            2008
          ],
          "25": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "21": [
            1413,
            1500
          ],
          "22": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "7": {
        "Ownable._setOwner": {
          "80": [
            2193,
            2210
          ],
          "81": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "29": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "56": [
            1982,
            2055
          ],
          "57": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461043e578063db2a0a55146104c6578063e52e32491461051a578063e985e9c51461052d578063f2fde38b1461056957600080fd5b8063a22cb465146103f2578063b88d4fde14610405578063bc0b0d8814610418578063c87b56dd1461042b57600080fd5b806382afd23b116100e957806382afd23b146103a15780638da5cb5b146103c657806395d89b41146103d757806397fc007c146103df57600080fd5b806370a0823114610360578063715018a6146103735780637539cc7f1461037b5780637901ea781461038e57600080fd5b80631249c58b1161019d5780632f745c591161016c5780632f745c591461031457806342842e0e14610327578063437454b9146102cb5780634f6ccce71461033a5780636352211e1461034d57600080fd5b80631249c58b146102de57806318160ddd146102e657806323b872dd146102ee5780632b7ac3f31461030157600080fd5b8063081812fc116101d9578063081812fc1461027d578063095ea7b3146102a85780630a363d08146102bd5780630c457ce4146102cb57600080fd5b806301ffc9a71461020b5780630419e31414610233578063051063531461025357806306fdde0314610275575b600080fd5b61021e610219366004611fd2565b61057c565b60405190151581526020015b60405180910390f35b610246610241366004612082565b6105a7565b60405161022a9190612135565b610267610261366004612148565b50600090565b60405190815260200161022a565b610246610767565b61029061028b366004612148565b6107f9565b6040516001600160a01b03909116815260200161022a565b6102bb6102b636600461217d565b610893565b005b61021e610261366004612148565b6102bb6102d9366004612148565b6109a9565b6102bb6109ec565b600854610267565b6102bb6102fc3660046121a7565b610c7f565b600d54610290906001600160a01b031681565b61026761032236600461217d565b610cb0565b6102bb6103353660046121a7565b610d46565b610267610348366004612148565b610d61565b61029061035b366004612148565b610df4565b61026761036e3660046121e3565b610e6b565b6102bb610ef2565b6102bb6103893660046121fe565b610f28565b6102bb61039c366004612148565b6110d2565b61021e6103af366004612148565b6000908152600b60205260409020600a0154421090565b600a546001600160a01b0316610290565b6102466111da565b6102bb6103ed3660046121e3565b6111e9565b6102bb610400366004612239565b6112d5565b6102bb610413366004612275565b61139a565b600c54610290906001600160a01b031681565b610246610439366004612148565b6113d2565b6104ae61044c366004612148565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549a909b0154989a9799969895979496939592949193909260ff168c565b60405161022a9c9b9a99989796959493929190612307565b600e54600f546010546011546012546104e994939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00161022a565b6102bb6105283660046121e3565b611473565b61021e61053b366004612388565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102bb6105773660046121e3565b611558565b60006001600160e01b0319821663780e9d6360e01b14806105a157506105a1826115f0565b92915050565b60606000600b60008581526020019081526020016000206040518061018001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b820160009054906101000a900460ff16600381111561065c5761065c6122f1565b600381111561066d5761066d6122f1565b8152505090506000836106838360000151611640565b6040516020016106949291906123d7565b6040516020818303038152906040529050806106b38360200151611640565b6106c08460400151611640565b6106cd8560600151611640565b6040516020016106e09493929190612531565b6040516020818303038152906040529050806106ff8360800151611640565b61070c8460a00151611640565b6107198560c00151611640565b60405160200161072c949392919061265f565b60405160208183030381529060405290508060405160200161074e9190612780565b60408051808303601f1901815291905295945050505050565b606060008054610776906127af565b80601f01602080910402602001604051908101604052809291908181526020018280546107a2906127af565b80156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166108775760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061089e82610df4565b9050806001600160a01b0316836001600160a01b0316141561090c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161086e565b336001600160a01b03821614806109285750610928813361053b565b61099a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161086e565b6109a48383611746565b505050565b333014156109e95760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b604482015260640161086e565b50565b60105460085410610a305760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b604482015260640161086e565b6000601a610a3d60085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b16908201524260548201526074016040516020818303038152906040528051906020012060001c610a8c9190612800565b90506000610a9b82601961282a565b90506000610aaa836032612842565b905060006004610ab960085490565b33610ac542600161282a565b86604051602001610b01949392919093845260609290921b6bffffffffffffffffffffffff191660208401526034830152605482015260740190565b6040516020818303038152906040528051906020012060001c610b249190612800565b6003811115610b3557610b356122f1565b90506000604051806101800160405280600181526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610ba257610ba26122f1565b9052905080600b6000610bb460085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690836003811115610c5e57610c5e6122f1565b0217905550905050610c7833610c7360085490565b6117b4565b5050505050565b610c8933826117d2565b610ca55760405162461bcd60e51b815260040161086e90612859565b6109a48383836118c5565b6000610cbb83610e6b565b8210610d1d5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161086e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6109a48383836040518060200160405280600081525061139a565b6000610d6c60085490565b8210610dcf5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161086e565b60088281548110610de257610de26128aa565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105a15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161086e565b60006001600160a01b038216610ed65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161086e565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610f1c5760405162461bcd60e51b815260040161086e906128c0565b610f266000611a70565b565b600c546001600160a01b03163314610f8e5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b606482015260840161086e565b6000858152600b602052604081206003018054859290610faf90849061282a565b90915550508215610fc1576000610fc4565b60015b60ff16600b60008781526020019081526020016000206004016000828254610fec919061282a565b90915550506000858152600b60205260408120600601805484929061101290849061282a565b90915550508215611024576000611027565b60015b60ff16600b6000868152602001908152602001600020600301600082825461104f919061282a565b90915550506000848152600b60205260408120600401805485929061107590849061282a565b90915550506000848152600b60205260408120600601805484929061109b90849061282a565b909155505082610c78576000848152600b6020526040812060060180548392906110c690849061282a565b90915550505050505050565b336110dc82610df4565b6001600160a01b0316146111225760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b604482015260640161086e565b6000818152600b6020526040902060090154156111755760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b604482015260640161086e565b6000818152600b6020526040902042600982018190556011546111979161282a565b600a8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b606060018054610776906127af565b600a546001600160a01b031633146112135760405162461bcd60e51b815260040161086e906128c0565b6001600160a01b038116158015906112395750600d546001600160a01b03828116911614155b6112805760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161086e565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b6001600160a01b03821633141561132e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161086e565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6113a433836117d2565b6113c05760405162461bcd60e51b815260040161086e90612859565b6113cc84848484611ac2565b50505050565b6000818152600260205260409020546060906001600160a01b03166114515760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161086e565b6105a1826040518060800160405280605e81526020016129e7605e91396105a7565b600a546001600160a01b0316331461149d5760405162461bcd60e51b815260040161086e906128c0565b6001600160a01b038116158015906114c35750600c546001600160a01b03828116911614155b61150a5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161086e565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4906020016112ca565b600a546001600160a01b031633146115825760405162461bcd60e51b815260040161086e906128c0565b6001600160a01b0381166115e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161086e565b6109e981611a70565b60006001600160e01b031982166380ac58cd60e01b148061162157506001600160e01b03198216635b5e139f60e01b145b806105a157506301ffc9a760e01b6001600160e01b03198316146105a1565b6060816116645750506040805180820190915260018152600360fc1b602082015290565b8160005b811561168e5780611678816128f5565b91506116879050600a83612910565b9150611668565b60008167ffffffffffffffff8111156116a9576116a9611ff6565b6040519080825280601f01601f1916602001820160405280156116d3576020820181803683370190505b5090505b841561173e576116e8600183612842565b91506116f5600a86612800565b61170090603061282a565b60f81b818381518110611715576117156128aa565b60200101906001600160f81b031916908160001a905350611737600a86612910565b94506116d7565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061177b82610df4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6117ce828260405180602001604052806000815250611af5565b5050565b6000818152600260205260408120546001600160a01b031661184b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161086e565b600061185683610df4565b9050806001600160a01b0316846001600160a01b031614806118915750836001600160a01b0316611886846107f9565b6001600160a01b0316145b8061173e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661173e565b826001600160a01b03166118d882610df4565b6001600160a01b0316146119405760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161086e565b6001600160a01b0382166119a25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161086e565b6119ad838383611b28565b6119b8600082611746565b6001600160a01b03831660009081526003602052604081208054600192906119e1908490612842565b90915550506001600160a01b0382166000908152600360205260408120805460019290611a0f90849061282a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611acd8484846118c5565b611ad984848484611be0565b6113cc5760405162461bcd60e51b815260040161086e90612924565b611aff8383611cde565b611b0c6000848484611be0565b6109a45760405162461bcd60e51b815260040161086e90612924565b6001600160a01b038316611b8357611b7e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611ba6565b816001600160a01b0316836001600160a01b031614611ba657611ba68382611e2c565b6001600160a01b038216611bbd576109a481611ec9565b826001600160a01b0316826001600160a01b0316146109a4576109a48282611f78565b60006001600160a01b0384163b15611cd357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c24903390899088908890600401612976565b6020604051808303816000875af1925050508015611c5f575060408051601f3d908101601f19168201909252611c5c918101906129b3565b60015b611cb9573d808015611c8d576040519150601f19603f3d011682016040523d82523d6000602084013e611c92565b606091505b508051611cb15760405162461bcd60e51b815260040161086e90612924565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061173e565b506001949350505050565b6001600160a01b038216611d345760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161086e565b6000818152600260205260409020546001600160a01b031615611d995760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161086e565b611da560008383611b28565b6001600160a01b0382166000908152600360205260408120805460019290611dce90849061282a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611e3984610e6b565b611e439190612842565b600083815260076020526040902054909150808214611e96576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611edb90600190612842565b60008381526009602052604081205460088054939450909284908110611f0357611f036128aa565b906000526020600020015490508060088381548110611f2457611f246128aa565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f5c57611f5c6129d0565b6001900381819060005260206000200160009055905550505050565b6000611f8383610e6b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146109e957600080fd5b600060208284031215611fe457600080fd5b8135611fef81611fbc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561202757612027611ff6565b604051601f8501601f19908116603f0116810190828211818310171561204f5761204f611ff6565b8160405280935085815286868601111561206857600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561209557600080fd5b82359150602083013567ffffffffffffffff8111156120b357600080fd5b8301601f810185136120c457600080fd5b6120d38582356020840161200c565b9150509250929050565b60005b838110156120f85781810151838201526020016120e0565b838111156113cc5750506000910152565b600081518084526121218160208601602086016120dd565b601f01601f19169290920160200192915050565b602081526000611fef6020830184612109565b60006020828403121561215a57600080fd5b5035919050565b80356001600160a01b038116811461217857600080fd5b919050565b6000806040838503121561219057600080fd5b61219983612161565b946020939093013593505050565b6000806000606084860312156121bc57600080fd5b6121c584612161565b92506121d360208501612161565b9150604084013590509250925092565b6000602082840312156121f557600080fd5b611fef82612161565b600080600080600060a0868803121561221657600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561224c57600080fd5b61225583612161565b91506020830135801515811461226a57600080fd5b809150509250929050565b6000806000806080858703121561228b57600080fd5b61229485612161565b93506122a260208601612161565b925060408501359150606085013567ffffffffffffffff8111156122c557600080fd5b8501601f810187136122d657600080fd5b6122e58782356020840161200c565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b6000610180820190508d82528c60208301528b60408301528a60608301528960808301528860a08301528760c08301528660e08301528561010083015284610120830152836101408301526004831061237057634e487b7160e01b600052602160045260246000fd5b826101608301529d9c50505050505050505050505050565b6000806040838503121561239b57600080fd5b6123a483612161565b91506123b260208401612161565b90509250929050565b600081516123cd8185602086016120dd565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b6062820152825160009061248081606e8501602088016120dd565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c182015261252861251a60cd8301866123bb565b61207d60f01b815260020190565b95945050505050565b60008551612543818460208a016120dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a20000000000000602083015286516125a581603a850160208b016120dd565b80830192505061207d60f01b80603a84015281603c8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605c84015286516125f6816076860160208b016120dd565b607693019283015260788201527f6169745f74797065223a202277696e73222c202276616c7565223a20000000006098820152835161263c8160b48401602088016120dd565b61265360b48284010161207d60f01b815260020190565b98975050505050505050565b60008551612671818460208a016120dd565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a200000602083015286516126d381603e850160208b016120dd565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a20006060840152865161272481607f860160208b016120dd565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c182015261277561251a60c68301866123bb565b979650505050505050565b600082516127928184602087016120dd565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c908216806127c357607f821691505b602082108114156127e457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b60008261280f5761280f6127ea565b500690565b634e487b7160e01b600052601160045260246000fd5b6000821982111561283d5761283d612814565b500190565b60008282101561285457612854612814565b500390565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060001982141561290957612909612814565b5060010190565b60008261291f5761291f6127ea565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906129a990830184612109565b9695505050505050565b6000602082840312156129c557600080fd5b8151611fef81611fbc565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067a264697066735822122081de2e83f18872f0dccff9302b8cac47e56a80c6048c54877dfd2eeeada32b2264736f6c634300080c0033",
  "deployedSourceMap": "359:9825:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:6;;;;;;:::i;:::-;;:::i;:::-;;;565:14:21;;558:22;540:41;;528:2;513:18;988:224:6;;;;;;;;5650:2811:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4735:72::-;;;;;;:::i;:::-;-1:-1:-1;4788:7:20;;4735:72;;;;2989:25:21;;;2977:2;2962:18;4735:72:20;2843:177:21;2525:100:5;;;:::i;4084:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3189:32:21;;;3171:51;;3159:2;3144:18;4084:221:5;3025:203:21;3607:411:5;;;;;;:::i;:::-;;:::i;:::-;;4893:72:20;;;;;;:::i;5044:68::-;;;;;;:::i;:::-;;:::i;2532:758::-;;;:::i;1628:113:6:-;1716:10;:17;1628:113;;4974:339:5;;;;;;:::i;:::-;;:::i;614:23:20:-;;;;;-1:-1:-1;;;;;614:23:20;;;1296:256:6;;;;;;:::i;:::-;;:::i;5384:185:5:-;;;;;;:::i;:::-;;:::i;1818:233:6:-;;;;;;:::i;:::-;;:::i;2219:239:5:-;;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;:::i;:::-;;:::i;1652:94:7:-;;;:::i;3902:776:20:-;;;;;;:::i;:::-;;:::i;3365:529::-;;;;;;:::i;:::-;;:::i;1819:156::-;;;;;;:::i;:::-;1876:4;1900:25;;;:14;:25;;;;;:49;;;1952:15;-1:-1:-1;1900:67:20;1819:156;1001:87:7;1074:6;;-1:-1:-1;;;;;1074:6:7;1001:87;;2694:104:5;;;:::i;9944:235:20:-;;;;;;:::i;:::-;;:::i;4377:295:5:-;;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;:::i;:::-;;:::i;548:22:20:-;;;;;-1:-1:-1;;;;;548:22:20;;;5284:358;;;;;;:::i;:::-;;:::i;493:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1463:40::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1463:40:20;;;;;;;7208:25:21;;;7264:2;7249:18;;7242:34;;;;7292:18;;;7285:34;;;;7350:2;7335:18;;7328:34;-1:-1:-1;;;;;7399:32:21;7393:3;7378:19;;7371:61;7195:3;7180:19;1463:40:20;6949:489:21;9710:226:20;;;;;;:::i;:::-;;:::i;4743:164:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:5;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:7;;;;;;:::i;:::-;;:::i;988:224:6:-;1090:4;-1:-1:-1;;;;;;1114:50:6;;-1:-1:-1;;;1114:50:6;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:6:o;5650:2811:20:-;5737:13;5818:20;5841:14;:24;5856:8;5841:24;;;;;;;;;;;5818:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;5878:22;6103:8;6286:31;6303:7;:13;;;6286:16;:31::i;:::-;5910:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5878:457;;6435:8;6533:28;6550:7;:10;;;6533:16;:28::i;:::-;6659;6676:7;:10;;;6659:16;:28::i;:::-;6791:30;6808:7;:12;;;6791:16;:30::i;:::-;6418:422;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6400:441;;6941:8;7043:32;7060:7;:14;;;7043:16;:32::i;:::-;7178:33;7195:7;:15;;;7178:16;:33::i;:::-;7324:39;7341:7;:21;;;7324:16;:39::i;:::-;6924:458;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6906:477;;7454:8;7437:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;7437:35:20;;;;;;;5650:2811;-1:-1:-1;;;;;5650:2811:20:o;2525:100:5:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;4180:73;;;;-1:-1:-1;;;4180:73:5;;15185:2:21;4180:73:5;;;15167:21:21;15224:2;15204:18;;;15197:30;15263:34;15243:18;;;15236:62;-1:-1:-1;;;15314:18:21;;;15307:42;15366:19;;4180:73:5;;;;;;;;;-1:-1:-1;4273:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:5;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:5;:2;-1:-1:-1;;;;;3746:11:5;;;3738:57;;;;-1:-1:-1;;;3738:57:5;;15598:2:21;3738:57:5;;;15580:21:21;15637:2;15617:18;;;15610:30;15676:34;15656:18;;;15649:62;-1:-1:-1;;;15727:18:21;;;15720:31;15768:19;;3738:57:5;15396:397:21;3738:57:5;679:10:3;-1:-1:-1;;;;;3830:21:5;;;;:62;;-1:-1:-1;3855:37:5;3872:5;679:10:3;4743:164:5;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:5;;16000:2:21;3808:168:5;;;15982:21:21;16039:2;16019:18;;;16012:30;16078:34;16058:18;;;16051:62;16149:26;16129:18;;;16122:54;16193:19;;3808:168:5;15798:420:21;3808:168:5;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;5044:68:20:-;9143:10;9165:4;9143:27;;9135:53;;;;-1:-1:-1;;;9135:53:20;;16425:2:21;9135:53:20;;;16407:21:21;16464:2;16444:18;;;16437:30;-1:-1:-1;;;16483:18:21;;;16476:43;16536:18;;9135:53:20;16223:337:21;9135:53:20;5044:68;:::o;2532:758::-;2592:26;;1716:10:6;:17;2576:42:20;2568:69;;;;-1:-1:-1;;;2568:69:20;;16767:2:21;2568:69:20;;;16749:21:21;16806:2;16786:18;;;16779:30;-1:-1:-1;;;16825:18:21;;;16818:44;16879:18;;2568:69:20;16565:338:21;2568:69:20;2755:13;2854:2;2806:13;1716:10:6;:17;;1628:113;2806:13:20;2789:60;;;;;;17093:19:21;;;;-1:-1:-1;;2821:10:20;17150:2:21;17146:15;17142:53;17128:12;;;17121:75;2833:15:20;17212:12:21;;;17205:28;17249:12;;2789:60:20;;;;;;;;;;;;2779:71;;;;;;2771:80;;:85;;;;:::i;:::-;2755:101;-1:-1:-1;2867:10:20;2880;2755:101;2880:2;:10;:::i;:::-;2867:23;-1:-1:-1;2901:10:20;2914;2919:5;2914:2;:10;:::i;:::-;2901:23;;2937:15;3052:1;2998:13;1716:10:6;:17;;1628:113;2998:13:20;3013:10;3025:17;:15;3041:1;3025:17;:::i;:::-;3044:2;2981:66;;;;;;;;;;18129:19:21;;;18186:2;18182:15;;;;-1:-1:-1;;18178:53:21;18173:2;18164:12;;18157:75;18257:2;18248:12;;18241:28;18294:2;18285:12;;18278:28;18331:3;18322:13;;17916:425;2981:66:20;;;;;;;;;;;;;2971:77;;;;;;2963:86;;:90;;;;:::i;:::-;2955:99;;;;;;;;:::i;:::-;2937:117;;3067:20;3091:49;;;;;;;;3097:1;3091:49;;;;3100:2;3091:49;;;;3104:2;3091:49;;;;3108:1;3091:49;;;;3111:1;3091:49;;;;3114:1;3091:49;;;;3117:1;3091:49;;;;3120:1;3091:49;;;;3123:1;3091:49;;;;3126:1;3091:49;;;;3129:1;3091:49;;;;3132:7;3091:49;;;;;;;;:::i;:::-;;;3067:73;-1:-1:-1;3067:73:20;3151:14;:29;3166:13;1716:10:6;:17;;1628:113;3166:13:20;3151:29;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3201:36;3211:10;3223:13;1716:10:6;:17;;1628:113;3223:13:20;3201:9;:36::i;:::-;2557:733;;;;;2532:758::o;4974:339:5:-;5169:41;679:10:3;5202:7:5;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:5;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:6:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:6;;18966:2:21;1413:87:6;;;18948:21:21;19005:2;18985:18;;;18978:30;19044:34;19024:18;;;19017:62;-1:-1:-1;;;19095:18:21;;;19088:41;19146:19;;1413:87:6;18764:407:21;1413:87:6;-1:-1:-1;;;;;;1518:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;5384:185:5:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;1818:233:6:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:6;;19378:2:21;1913:95:6;;;19360:21:21;19417:2;19397:18;;;19390:30;19456:34;19436:18;;;19429:62;-1:-1:-1;;;19507:18:21;;;19500:42;19559:19;;1913:95:6;19176:408:21;1913:95:6;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:5:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:5;2362:19;2354:73;;;;-1:-1:-1;;;2354:73:5;;19923:2:21;2354:73:5;;;19905:21:21;19962:2;19942:18;;;19935:30;20001:34;19981:18;;;19974:62;-1:-1:-1;;;20052:18:21;;;20045:39;20101:19;;2354:73:5;19721:405:21;1949:208:5;2021:7;-1:-1:-1;;;;;2049:19:5;;2041:74;;;;-1:-1:-1;;;2041:74:5;;20333:2:21;2041:74:5;;;20315:21:21;20372:2;20352:18;;;20345:30;20411:34;20391:18;;;20384:62;-1:-1:-1;;;20462:18:21;;;20455:40;20512:19;;2041:74:5;20131:406:21;2041:74:5;-1:-1:-1;;;;;;2133:16:5;;;;;:9;:16;;;;;;;1949:208::o;1652:94:7:-;1074:6;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;3902:776:20:-;9514:7;;-1:-1:-1;;;;;9514:7:20;9500:10;:21;9478:107;;;;-1:-1:-1;;;9478:107:20;;21105:2:21;9478:107:20;;;21087:21:21;21144:2;21124:18;;;21117:30;21183:34;21163:18;;;21156:62;-1:-1:-1;;;21234:18:21;;;21227:34;21278:19;;9478:107:20;20903:400:21;9478:107:20;4063:27:::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:40:::0;;4099:4;;4063:27;:40:::1;::::0;4099:4;;4063:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;4152:7:20;;:15:::1;;4166:1;4152:15;;;4162:1;4152:15;4114:53;;:14;:27;4129:11;4114:27;;;;;;;;;;;:34;;;:53;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4178:27:20::1;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;4223:10;;4178:27;:55:::1;::::0;4223:10;;4178:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;4314:7:20;;:15:::1;;4328:1;4314:15;;;4324:1;4314:15;4278:51;;:14;:27;4293:11;4278:27;;;;;;;;;;;:32;;;:51;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4340:27:20::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:42:::0;;4378:4;;4340:27;:42:::1;::::0;4378:4;;4340:42:::1;:::i;:::-;::::0;;;-1:-1:-1;;4393:27:20::1;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;4438:10;;4393:27;:55:::1;::::0;4438:10;;4393:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;4543:7:20;4540:131:::1;;4567:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:57:::0;;4612:12;;4567:27;:57:::1;::::0;4612:12;;4567:57:::1;:::i;:::-;::::0;;;-1:-1:-1;;3902:776:20;;;;;:::o;3365:529::-;3450:10;3429:17;3437:8;3429:7;:17::i;:::-;-1:-1:-1;;;;;3429:31:20;;3421:57;;;;-1:-1:-1;;;3421:57:20;;21510:2:21;3421:57:20;;;21492:21:21;21549:2;21529:18;;;21522:30;-1:-1:-1;;;21568:18:21;;;21561:43;21621:18;;3421:57:20;21308:337:21;3421:57:20;3497:24;;;;:14;:24;;;;;:44;;;:49;3489:79;;;;-1:-1:-1;;;3489:79:20;;21852:2:21;3489:79:20;;;21834:21:21;21891:2;21871:18;;;21864:30;-1:-1:-1;;;21910:18:21;;;21903:47;21967:18;;3489:79:20;21650:341:21;3489:79:20;3613:21;3637:24;;;:14;:24;;;;;3702:15;3672:27;;;:45;;;3780:40;;3762:58;;;:::i;:::-;3728:31;;;:92;3838:48;;;3848:10;22170:51:21;;3870:15:20;22252:2:21;22237:18;;22230:34;3860:8:20;;3838:48;;22143:18:21;3838:48:20;;;;;;;3410:484;3365:529;:::o;2694:104:5:-;2750:13;2783:7;2776:14;;;;;:::i;9944:235:20:-;1074:6:7;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;10025:23:20;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;10065:8:20::1;::::0;-1:-1:-1;;;;;10052:21:20;;::::1;10065:8:::0;::::1;10052:21;;10025:48;10017:85;;;::::0;-1:-1:-1;;;10017:85:20;;22477:2:21;10017:85:20::1;::::0;::::1;22459:21:21::0;22516:2;22496:18;;;22489:30;-1:-1:-1;;;22535:18:21;;;22528:54;22599:18;;10017:85:20::1;22275:348:21::0;10017:85:20::1;10113:8;:20:::0;;-1:-1:-1;;;;;;10113:20:20::1;-1:-1:-1::0;;;;;10113:20:20;::::1;::::0;;::::1;::::0;;;10149:22:::1;::::0;3171:51:21;;;10149:22:20::1;::::0;3159:2:21;3144:18;10149:22:20::1;;;;;;;;9944:235:::0;:::o;4377:295:5:-;-1:-1:-1;;;;;4480:24:5;;679:10:3;4480:24:5;;4472:62;;;;-1:-1:-1;;;4472:62:5;;22830:2:21;4472:62:5;;;22812:21:21;22869:2;22849:18;;;22842:30;22908:27;22888:18;;;22881:55;22953:18;;4472:62:5;22628:349:21;4472:62:5;679:10:3;4547:32:5;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:5;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:5;;;;;;;;;;4616:48;;540:41:21;;;4547:42:5;;679:10:3;4616:48:5;;513:18:21;4616:48:5;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:3;5848:7:5;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:5;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;5284:358:20:-;7543:4:5;7567:16;;;:7;:16;;;;;;5358:13:20;;-1:-1:-1;;;;;7567:16:5;5384:77:20;;;;-1:-1:-1;;;5384:77:20;;23184:2:21;5384:77:20;;;23166:21:21;23223:2;23203:18;;;23196:30;23262:34;23242:18;;;23235:62;-1:-1:-1;;;23313:18:21;;;23306:45;23368:19;;5384:77:20;22982:411:21;5384:77:20;5512:122;5527:8;5512:122;;;;;;;;;;;;;;;;;:14;:122::i;9710:226::-;1074:6:7;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;9789:22:20;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;9827:7:20::1;::::0;-1:-1:-1;;;;;9815:19:20;;::::1;9827:7:::0;::::1;9815:19;;9789:45;9781:82;;;::::0;-1:-1:-1;;;9781:82:20;;22477:2:21;9781:82:20::1;::::0;::::1;22459:21:21::0;22516:2;22496:18;;;22489:30;-1:-1:-1;;;22535:18:21;;;22528:54;22599:18;;9781:82:20::1;22275:348:21::0;9781:82:20::1;9874:7;:18:::0;;-1:-1:-1;;;;;;9874:18:20::1;-1:-1:-1::0;;;;;9874:18:20;::::1;::::0;;::::1;::::0;;;9908:20:::1;::::0;3171:51:21;;;9908:20:20::1;::::0;3159:2:21;3144:18;9908:20:20::1;3025:203:21::0;1901:192:7;1074:6;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:7;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:7;;23600:2:21;1982:73:7::1;::::0;::::1;23582:21:21::0;23639:2;23619:18;;;23612:30;23678:34;23658:18;;;23651:62;-1:-1:-1;;;23729:18:21;;;23722:36;23775:19;;1982:73:7::1;23398:402:21::0;1982:73:7::1;2066:19;2076:8;2066:9;:19::i;1580:305:5:-:0;1682:4;-1:-1:-1;;;;;;1719:40:5;;-1:-1:-1;;;1719:40:5;;:105;;-1:-1:-1;;;;;;;1776:48:5;;-1:-1:-1;;;1776:48:5;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:4;;;1841:36:5;799:157:4;286:723:19;342:13;563:10;559:53;;-1:-1:-1;;590:10:19;;;;;;;;;;;;-1:-1:-1;;;590:10:19;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:19;;-1:-1:-1;742:2:19;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:19;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:19;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:19;;;;;;;;-1:-1:-1;947:11:19;956:2;947:11;;:::i;:::-;;;816:154;;;994:6;286:723;-1:-1:-1;;;;286:723:19:o;11460:174:5:-;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:5;-1:-1:-1;;;;;11535:29:5;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:5;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;7882:73;;;;-1:-1:-1;;;7882:73:5;;24272:2:21;7882:73:5;;;24254:21:21;24311:2;24291:18;;;24284:30;24350:34;24330:18;;;24323:62;-1:-1:-1;;;24401:18:21;;;24394:42;24453:19;;7882:73:5;24070:408:21;7882:73:5;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:5;:7;-1:-1:-1;;;;;8024:16:5;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:5;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:5;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:5;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:5;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:5;;10888:85;;;;-1:-1:-1;;;10888:85:5;;24685:2:21;10888:85:5;;;24667:21:21;24724:2;24704:18;;;24697:30;24763:34;24743:18;;;24736:62;-1:-1:-1;;;24814:18:21;;;24807:39;24863:19;;10888:85:5;24483:405:21;10888:85:5;-1:-1:-1;;;;;10992:16:5;;10984:65;;;;-1:-1:-1;;;10984:65:5;;25095:2:21;10984:65:5;;;25077:21:21;25134:2;25114:18;;;25107:30;25173:34;25153:18;;;25146:62;-1:-1:-1;;;25224:18:21;;;25217:34;25268:19;;10984:65:5;24893:400:21;10984:65:5;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:5;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:5;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:5;-1:-1:-1;;;;;11268:21:5;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:7:-;2176:6;;;-1:-1:-1;;;;;2193:17:7;;;-1:-1:-1;;;;;;2193:17:7;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:5:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:5;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:5;;;;;;;:::i;2664:589:6:-;-1:-1:-1;;;;;2870:18:6;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:6;:4;-1:-1:-1;;;;;2967:10:6;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:6;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:6;:2;-1:-1:-1;;;;;3167:10:6;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:5:-;12354:4;-1:-1:-1;;;;;12375:13:5;;1064:20:18;1112:8;12371:624:5;;12411:72;;-1:-1:-1;;;12411:72:5;;-1:-1:-1;;;;;12411:36:5;;;;;:72;;679:10:3;;12462:4:5;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:5;;;;;;;;-1:-1:-1;;12411:72:5;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12657:13:5;;12653:272;;12700:60;;-1:-1:-1;;;12700:60:5;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:5;-1:-1:-1;;;12534:55:5;;-1:-1:-1;12527:62:5;;12371:624;-1:-1:-1;12979:4:5;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:5;;9528:61;;;;-1:-1:-1;;;9528:61:5;;26678:2:21;9528:61:5;;;26660:21:21;;;26697:18;;;26690:30;26756:34;26736:18;;;26729:62;26808:18;;9528:61:5;26476:356:21;9528:61:5;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;:30;9600:58;;;;-1:-1:-1;;;9600:58:5;;27039:2:21;9600:58:5;;;27021:21:21;27078:2;27058:18;;;27051:30;27117;27097:18;;;27090:58;27165:18;;9600:58:5;26837:352:21;9600:58:5;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:5;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:5;-1:-1:-1;;;;;9758:21:5;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:6:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:6;;;5245:328;;-1:-1:-1;;;;;5316:18:6;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:6;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:6;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:6;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:6:o;14:131:21:-;-1:-1:-1;;;;;;88:32:21;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:21:o;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:21;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:519::-;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1552:9;1539:23;1529:33;;1613:2;1602:9;1598:18;1585:32;1640:18;1632:6;1629:30;1626:50;;;1672:1;1669;1662:12;1626:50;1695:22;;1748:4;1740:13;;1736:27;-1:-1:-1;1726:55:21;;1777:1;1774;1767:12;1726:55;1800:74;1866:7;1861:2;1848:16;1843:2;1839;1835:11;1800:74;:::i;:::-;1790:84;;;1361:519;;;;;:::o;1885:258::-;1957:1;1967:113;1981:6;1978:1;1975:13;1967:113;;;2057:11;;;2051:18;2038:11;;;2031:39;2003:2;1996:10;1967:113;;;2098:6;2095:1;2092:13;2089:48;;;-1:-1:-1;;2133:1:21;2115:16;;2108:27;1885:258::o;2148:269::-;2201:3;2239:5;2233:12;2266:6;2261:3;2254:19;2282:63;2338:6;2331:4;2326:3;2322:14;2315:4;2308:5;2304:16;2282:63;:::i;:::-;2399:2;2378:15;-1:-1:-1;;2374:29:21;2365:39;;;;2406:4;2361:50;;2148:269;-1:-1:-1;;2148:269:21:o;2422:231::-;2571:2;2560:9;2553:21;2534:4;2591:56;2643:2;2632:9;2628:18;2620:6;2591:56;:::i;2658:180::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;-1:-1:-1;2809:23:21;;2658:180;-1:-1:-1;2658:180:21:o;3233:173::-;3301:20;;-1:-1:-1;;;;;3350:31:21;;3340:42;;3330:70;;3396:1;3393;3386:12;3330:70;3233:173;;;:::o;3411:254::-;3479:6;3487;3540:2;3528:9;3519:7;3515:23;3511:32;3508:52;;;3556:1;3553;3546:12;3508:52;3579:29;3598:9;3579:29;:::i;:::-;3569:39;3655:2;3640:18;;;;3627:32;;-1:-1:-1;;;3411:254:21:o;3670:328::-;3747:6;3755;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;;3903:38;3937:2;3926:9;3922:18;3903:38;:::i;:::-;3893:48;;3988:2;3977:9;3973:18;3960:32;3950:42;;3670:328;;;;;:::o;4003:186::-;4062:6;4115:2;4103:9;4094:7;4090:23;4086:32;4083:52;;;4131:1;4128;4121:12;4083:52;4154:29;4173:9;4154:29;:::i;4194:454::-;4289:6;4297;4305;4313;4321;4374:3;4362:9;4353:7;4349:23;4345:33;4342:53;;;4391:1;4388;4381:12;4342:53;-1:-1:-1;;4414:23:21;;;4484:2;4469:18;;4456:32;;-1:-1:-1;4535:2:21;4520:18;;4507:32;;4586:2;4571:18;;4558:32;;-1:-1:-1;4637:3:21;4622:19;4609:33;;-1:-1:-1;4194:454:21;-1:-1:-1;4194:454:21:o;4653:347::-;4718:6;4726;4779:2;4767:9;4758:7;4754:23;4750:32;4747:52;;;4795:1;4792;4785:12;4747:52;4818:29;4837:9;4818:29;:::i;:::-;4808:39;;4897:2;4886:9;4882:18;4869:32;4944:5;4937:13;4930:21;4923:5;4920:32;4910:60;;4966:1;4963;4956:12;4910:60;4989:5;4979:15;;;4653:347;;;;;:::o;5005:667::-;5100:6;5108;5116;5124;5177:3;5165:9;5156:7;5152:23;5148:33;5145:53;;;5194:1;5191;5184:12;5145:53;5217:29;5236:9;5217:29;:::i;:::-;5207:39;;5265:38;5299:2;5288:9;5284:18;5265:38;:::i;:::-;5255:48;;5350:2;5339:9;5335:18;5322:32;5312:42;;5405:2;5394:9;5390:18;5377:32;5432:18;5424:6;5421:30;5418:50;;;5464:1;5461;5454:12;5418:50;5487:22;;5540:4;5532:13;;5528:27;-1:-1:-1;5518:55:21;;5569:1;5566;5559:12;5518:55;5592:74;5658:7;5653:2;5640:16;5635:2;5631;5627:11;5592:74;:::i;:::-;5582:84;;;5005:667;;;;;;;:::o;5677:127::-;5738:10;5733:3;5729:20;5726:1;5719:31;5769:4;5766:1;5759:15;5793:4;5790:1;5783:15;5809:1135;6221:4;6263:3;6252:9;6248:19;6240:27;;6294:6;6283:9;6276:25;6337:6;6332:2;6321:9;6317:18;6310:34;6380:6;6375:2;6364:9;6360:18;6353:34;6423:6;6418:2;6407:9;6403:18;6396:34;6467:6;6461:3;6450:9;6446:19;6439:35;6511:6;6505:3;6494:9;6490:19;6483:35;6555:6;6549:3;6538:9;6534:19;6527:35;6599:6;6593:3;6582:9;6578:19;6571:35;6643:6;6637:3;6626:9;6622:19;6615:35;6687:6;6681:3;6670:9;6666:19;6659:35;6731:7;6725:3;6714:9;6710:19;6703:36;6770:1;6761:7;6758:14;6748:145;;6815:10;6810:3;6806:20;6803:1;6796:31;6850:4;6847:1;6840:15;6878:4;6875:1;6868:15;6748:145;6930:7;6924:3;6913:9;6909:19;6902:36;5809:1135;;;;;;;;;;;;;;;:::o;7443:260::-;7511:6;7519;7572:2;7560:9;7551:7;7547:23;7543:32;7540:52;;;7588:1;7585;7578:12;7540:52;7611:29;7630:9;7611:29;:::i;:::-;7601:39;;7659:38;7693:2;7682:9;7678:18;7659:38;:::i;:::-;7649:48;;7443:260;;;;;:::o;7708:185::-;7750:3;7788:5;7782:12;7803:52;7848:6;7843:3;7836:4;7829:5;7825:16;7803:52;:::i;:::-;7871:16;;;;;7708:185;-1:-1:-1;;7708:185:21:o;8018:1883::-;8934:66;8922:79;;9031:66;9026:2;9017:12;;9010:88;9128:34;9123:2;9114:12;;9107:56;-1:-1:-1;;;9188:2:21;9179:12;;9172:46;-1:-1:-1;;;9243:2:21;9234:12;;9227:58;9308:13;;-1:-1:-1;;9330:61:21;9308:13;9378:3;9369:13;;9364:2;9352:15;;9330:61;:::i;:::-;-1:-1:-1;;;9450:3:21;9410:16;;;9442:12;;;9435:34;-1:-1:-1;;;9493:3:21;9485:12;;9478:70;9578:66;9572:3;9564:12;;9557:88;9675:66;9669:3;9661:12;;9654:88;-1:-1:-1;;;9766:3:21;9758:12;;9751:58;9825:70;9855:39;9889:3;9881:12;;9873:6;9855:39;:::i;:::-;-1:-1:-1;;;7963:17:21;;8005:1;7996:11;;7898:115;9825:70;9818:77;8018:1883;-1:-1:-1;;;;;8018:1883:21:o;9906:2074::-;10787:3;10825:6;10819:13;10841:53;10887:6;10882:3;10875:4;10867:6;10863:17;10841:53;:::i;:::-;10925:6;10920:3;10916:16;10903:29;;10951:66;11040:2;11033:5;11026:17;11077:66;11070:4;11063:5;11059:16;11052:92;11175:6;11169:13;11191:66;11248:8;11243:2;11236:5;11232:14;11225:4;11217:6;11213:17;11191:66;:::i;:::-;11287:8;11280:5;11276:20;11266:30;;;-1:-1:-1;;;11348:2:21;11343;11339;11335:11;11328:23;11380:2;11375;11371;11367:11;11360:23;11412:66;11407:2;11403;11399:11;11392:87;11510:6;11504:13;11526:64;11581:8;11575:3;11571:2;11567:12;11560:4;11552:6;11548:17;11526:64;:::i;:::-;11650:3;11609:17;;11642:12;;;11635:24;11683:3;11675:12;;11668:24;11722:66;11716:3;11708:12;;11701:88;11814:13;;11836:64;11814:13;11885:3;11877:12;;11870:4;11858:17;;11836:64;:::i;:::-;11916:58;11969:3;11958:8;11954:2;11950:17;11946:27;-1:-1:-1;;;7963:17:21;;8005:1;7996:11;;7898:115;11916:58;11909:65;9906:2074;-1:-1:-1;;;;;;;;9906:2074:21:o;11985:2028::-;12866:3;12904:6;12898:13;12920:53;12966:6;12961:3;12954:4;12946:6;12942:17;12920:53;:::i;:::-;13004:6;12999:3;12995:16;12982:29;;13030:66;13119:2;13112:5;13105:17;13156:66;13149:4;13142:5;13138:16;13131:92;13254:6;13248:13;13270:66;13327:8;13322:2;13315:5;13311:14;13304:4;13296:6;13292:17;13270:66;:::i;:::-;13366:8;13359:5;13355:20;13345:30;;;-1:-1:-1;;;13427:2:21;13422;13418;13414:11;13407:23;13459:2;13454;13450;13446:11;13439:23;13491:66;13486:2;13482;13478:11;13471:87;13589:6;13583:13;13605:64;13660:8;13654:3;13650:2;13646:12;13639:4;13631:6;13627:17;13605:64;:::i;:::-;13729:3;13688:17;;13721:12;;;13714:24;13762:3;13754:12;;13747:24;13801:66;13795:3;13787:12;;13780:88;-1:-1:-1;;;13892:3:21;13884:12;;13877:44;13937:70;13967:39;14001:3;13993:12;;13985:6;13967:39;:::i;13937:70::-;13930:77;11985:2028;-1:-1:-1;;;;;;;11985:2028:21:o;14018:575::-;14351:3;14389:6;14383:13;14405:53;14451:6;14446:3;14439:4;14431:6;14427:17;14405:53;:::i;:::-;-1:-1:-1;;;14480:16:21;;14505:18;;;-1:-1:-1;;;;14550:1:21;14539:13;;14532:26;14585:1;14574:13;;14018:575;-1:-1:-1;14018:575:21:o;14598:380::-;14677:1;14673:12;;;;14720;;;14741:61;;14795:4;14787:6;14783:17;14773:27;;14741:61;14848:2;14840:6;14837:14;14817:18;14814:38;14811:161;;;14894:10;14889:3;14885:20;14882:1;14875:31;14929:4;14926:1;14919:15;14957:4;14954:1;14947:15;14811:161;;14598:380;;;:::o;17272:127::-;17333:10;17328:3;17324:20;17321:1;17314:31;17364:4;17361:1;17354:15;17388:4;17385:1;17378:15;17404:112;17436:1;17462;17452:35;;17467:18;;:::i;:::-;-1:-1:-1;17501:9:21;;17404:112::o;17521:127::-;17582:10;17577:3;17573:20;17570:1;17563:31;17613:4;17610:1;17603:15;17637:4;17634:1;17627:15;17653:128;17693:3;17724:1;17720:6;17717:1;17714:13;17711:39;;;17730:18;;:::i;:::-;-1:-1:-1;17766:9:21;;17653:128::o;17786:125::-;17826:4;17854:1;17851;17848:8;17845:34;;;17859:18;;:::i;:::-;-1:-1:-1;17896:9:21;;17786:125::o;18346:413::-;18548:2;18530:21;;;18587:2;18567:18;;;18560:30;18626:34;18621:2;18606:18;;18599:62;-1:-1:-1;;;18692:2:21;18677:18;;18670:47;18749:3;18734:19;;18346:413::o;19589:127::-;19650:10;19645:3;19641:20;19638:1;19631:31;19681:4;19678:1;19671:15;19705:4;19702:1;19695:15;20542:356;20744:2;20726:21;;;20763:18;;;20756:30;20822:34;20817:2;20802:18;;20795:62;20889:2;20874:18;;20542:356::o;23805:135::-;23844:3;-1:-1:-1;;23865:17:21;;23862:43;;;23885:18;;:::i;:::-;-1:-1:-1;23932:1:21;23921:13;;23805:135::o;23945:120::-;23985:1;24011;24001:35;;24016:18;;:::i;:::-;-1:-1:-1;24050:9:21;;23945:120::o;25298:414::-;25500:2;25482:21;;;25539:2;25519:18;;;25512:30;25578:34;25573:2;25558:18;;25551:62;-1:-1:-1;;;25644:2:21;25629:18;;25622:48;25702:3;25687:19;;25298:414::o;25717:500::-;-1:-1:-1;;;;;25986:15:21;;;25968:34;;26038:15;;26033:2;26018:18;;26011:43;26085:2;26070:18;;26063:34;;;26133:3;26128:2;26113:18;;26106:31;;;25911:4;;26154:57;;26191:19;;26183:6;26154:57;:::i;:::-;26146:65;25717:500;-1:-1:-1;;;;;;25717:500:21:o;26222:249::-;26291:6;26344:2;26332:9;26323:7;26319:23;26315:32;26312:52;;;26360:1;26357;26350:12;26312:52;26392:9;26386:16;26411:30;26435:5;26411:30;:::i;27194:127::-;27255:10;27250:3;27246:20;27243:1;27236:31;27286:4;27283:1;27276:15;27310:4;27307:1;27300:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    359,
    10184
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87BFC7F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82AFD23B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x7539CC7F EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC457CE4 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x246 PUSH2 0x767 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x217D JUMP JUMPDEST PUSH2 0x893 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x267 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x217D JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2BB PUSH2 0xEF2 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FE JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x290 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x400 CALLDATASIZE PUSH1 0x4 PUSH2 0x2239 JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x2275 JUMP JUMPDEST PUSH2 0x139A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD SWAP11 SWAP1 SWAP12 ADD SLOAD SWAP9 SWAP11 SWAP8 SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF AND DUP13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x4E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E3 JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5A1 JUMPI POP PUSH2 0x5A1 DUP3 PUSH2 0x15F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x65C JUMPI PUSH2 0x65C PUSH2 0x22F1 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x22F1 JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x683 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x694 SWAP3 SWAP2 SWAP1 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x6B3 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x6C0 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x6CD DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x6FF DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x70C DUP5 PUSH1 0xA0 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x719 DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x2780 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89E DUP3 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x928 JUMPI POP PUSH2 0x928 DUP2 CALLER PUSH2 0x53B JUMP JUMPDEST PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH2 0x9A4 DUP4 DUP4 PUSH2 0x1746 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ ISZERO PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1A PUSH2 0xA3D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x2800 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA9B DUP3 PUSH1 0x19 PUSH2 0x282A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAAA DUP4 PUSH1 0x32 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xAB9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH2 0xAC5 TIMESTAMP PUSH1 0x1 PUSH2 0x282A JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB01 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x34 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x2800 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB35 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBA2 JUMPI PUSH2 0xBA2 PUSH2 0x22F1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xBB4 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC5E JUMPI PUSH2 0xC5E PUSH2 0x22F1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xC78 CALLER PUSH2 0xC73 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC89 CALLER DUP3 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x2859 JUMP JUMPDEST PUSH2 0x9A4 DUP4 DUP4 DUP4 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB DUP4 PUSH2 0xE6B JUMP JUMPDEST DUP3 LT PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9A4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x139A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDE2 JUMPI PUSH2 0xDE2 PUSH2 0x28AA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH2 0xF26 PUSH1 0x0 PUSH2 0x1A70 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xFAF SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x0 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1012 SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x104F SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x1075 SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x109B SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 PUSH2 0xC78 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x10C6 SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x10DC DUP3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x9 ADD SLOAD ISZERO PUSH2 0x1175 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x9 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH2 0x1197 SWAP2 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xA DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x776 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1239 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x132E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13A4 CALLER DUP4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x2859 JUMP JUMPDEST PUSH2 0x13CC DUP5 DUP5 DUP5 DUP5 PUSH2 0x1AC2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH2 0x5A1 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29E7 PUSH1 0x5E SWAP2 CODECOPY PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x14C3 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0x12CA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH2 0x9E9 DUP2 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1621 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5A1 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1664 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x168E JUMPI DUP1 PUSH2 0x1678 DUP2 PUSH2 0x28F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1687 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2910 JUMP JUMPDEST SWAP2 POP PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A9 JUMPI PUSH2 0x16A9 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16D3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x173E JUMPI PUSH2 0x16E8 PUSH1 0x1 DUP4 PUSH2 0x2842 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F5 PUSH1 0xA DUP7 PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x1700 SWAP1 PUSH1 0x30 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1715 JUMPI PUSH2 0x1715 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1737 PUSH1 0xA DUP7 PUSH2 0x2910 JUMP JUMPDEST SWAP5 POP PUSH2 0x16D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x177B DUP3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AF5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x184B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1856 DUP4 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1891 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1886 DUP5 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x173E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x173E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D8 DUP3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86E JUMP JUMPDEST PUSH2 0x19AD DUP4 DUP4 DUP4 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x19B8 PUSH1 0x0 DUP3 PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x19E1 SWAP1 DUP5 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1A0F SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1ACD DUP5 DUP5 DUP5 PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x1AD9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH2 0x1AFF DUP4 DUP4 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0x1B0C PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x2924 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B83 JUMPI PUSH2 0x1B7E DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1BA6 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1BA6 JUMPI PUSH2 0x1BA6 DUP4 DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BBD JUMPI PUSH2 0x9A4 DUP2 PUSH2 0x1EC9 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9A4 JUMPI PUSH2 0x9A4 DUP3 DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1C24 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C5F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C5C SWAP2 DUP2 ADD SWAP1 PUSH2 0x29B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1CB9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1C8D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1CB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x2924 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x173E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1D99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86E JUMP JUMPDEST PUSH2 0x1DA5 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1DCE SWAP1 DUP5 SWAP1 PUSH2 0x282A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1E39 DUP5 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x1E43 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1E96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1EDB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1F03 JUMPI PUSH2 0x1F03 PUSH2 0x28AA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F24 JUMPI PUSH2 0x1F24 PUSH2 0x28AA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1F5C JUMPI PUSH2 0x1F5C PUSH2 0x29D0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F83 DUP4 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FEF DUP2 PUSH2 0x1FBC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2027 JUMPI PUSH2 0x2027 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x204F JUMPI PUSH2 0x204F PUSH2 0x1FF6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x20C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D3 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x200C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20F8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x20E0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13CC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2121 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1FEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2199 DUP4 PUSH2 0x2161 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21C5 DUP5 PUSH2 0x2161 JUMP JUMPDEST SWAP3 POP PUSH2 0x21D3 PUSH1 0x20 DUP6 ADD PUSH2 0x2161 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FEF DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2255 DUP4 PUSH2 0x2161 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x226A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x228B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2294 DUP6 PUSH2 0x2161 JUMP JUMPDEST SWAP4 POP PUSH2 0x22A2 PUSH1 0x20 DUP7 ADD PUSH2 0x2161 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x22D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22E5 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x200C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP DUP14 DUP3 MSTORE DUP13 PUSH1 0x20 DUP4 ADD MSTORE DUP12 PUSH1 0x40 DUP4 ADD MSTORE DUP11 PUSH1 0x60 DUP4 ADD MSTORE DUP10 PUSH1 0x80 DUP4 ADD MSTORE DUP9 PUSH1 0xA0 DUP4 ADD MSTORE DUP8 PUSH1 0xC0 DUP4 ADD MSTORE DUP7 PUSH1 0xE0 DUP4 ADD MSTORE DUP6 PUSH2 0x100 DUP4 ADD MSTORE DUP5 PUSH2 0x120 DUP4 ADD MSTORE DUP4 PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x4 DUP4 LT PUSH2 0x2370 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH2 0x160 DUP4 ADD MSTORE SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x239B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A4 DUP4 PUSH2 0x2161 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B2 PUSH1 0x20 DUP5 ADD PUSH2 0x2161 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x23CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2480 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x2528 PUSH2 0x251A PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x23BB JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2543 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x20DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x25A5 DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x20DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3A DUP5 ADD MSTORE DUP2 PUSH1 0x3C DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000 PUSH1 0x5C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x25F6 DUP2 PUSH1 0x76 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x76 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x78 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000 PUSH1 0x98 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x263C DUP2 PUSH1 0xB4 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x2653 PUSH1 0xB4 DUP3 DUP5 ADD ADD PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2671 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x20DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x26D3 DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x20DD JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x2724 DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x2775 PUSH2 0x251A PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x23BB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2792 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x20DD JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x27C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x27E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x280F JUMPI PUSH2 0x280F PUSH2 0x27EA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x283D JUMPI PUSH2 0x283D PUSH2 0x2814 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2854 JUMPI PUSH2 0x2854 PUSH2 0x2814 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2909 JUMPI PUSH2 0x2909 PUSH2 0x2814 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x291F JUMPI PUSH2 0x291F PUSH2 0x27EA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x29A9 SWAP1 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1FEF DUP2 PUSH2 0x1FBC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6173 ORIGIN 0x2E PUSH7 0x7463646E2E6E65 PUSH21 0x2F76322F6A70672F30332F31322F37372F30332F31 ADDRESS ADDRESS ADDRESS 0x5F CHAINID 0x5F CALLER BALANCE ORIGIN CALLDATACOPY CALLDATACOPY ADDRESS CALLER CALLVALUE CODECOPY 0x5F CALLVALUE PUSH13 0x6B464E336532556C4F34336B51 PUSH13 0x46656D464E4970566B47355A77 PUSH26 0x74712E6A7067A264697066735822122081DE2E83F18872F0DCCF 0xF9 ADDRESS 0x2B DUP13 0xAC SELFBALANCE 0xE5 PUSH11 0x80C6048C54877DFD2EEEAD LOG3 0x2B 0x22 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87BFC7F"
    },
    "60": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87BFC7F"
    },
    "71": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43E"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDB2A0A55"
    },
    "82": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4C6"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE52E3249"
    },
    "93": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51A"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52D"
    },
    "108": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "116": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x569"
    },
    "119": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "120": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA22CB465"
    },
    "131": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "132": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F2"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB88D4FDE"
    },
    "142": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x405"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xBC0B0D88"
    },
    "153": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x418"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87B56DD"
    },
    "164": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42B"
    },
    "168": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "172": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "175": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x82AFD23B"
    },
    "180": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "186": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x82AFD23B"
    },
    "191": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A1"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C6"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "213": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D7"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x97FC007C"
    },
    "224": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DF"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "232": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "233": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "234": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "235": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "240": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "241": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x360"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "246": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "251": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "252": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x373"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "257": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7539CC7F"
    },
    "262": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7901EA78"
    },
    "273": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38E"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "281": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "282": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "283": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "284": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1249C58B"
    },
    "289": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "290": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "295": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F745C59"
    },
    "300": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "301": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "306": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F745C59"
    },
    "311": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "312": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x314"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "317": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x42842E0E"
    },
    "322": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x327"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "328": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x437454B9"
    },
    "333": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "334": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CB"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "338": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "339": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F6CCCE7"
    },
    "344": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "345": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33A"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "349": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "350": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6352211E"
    },
    "355": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "356": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34D"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "360": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "363": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "364": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "365": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "366": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1249C58B"
    },
    "371": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "372": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DE"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "377": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "382": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "383": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E6"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "388": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "393": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "394": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "399": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2B7AC3F3"
    },
    "404": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "405": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x301"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "412": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "414": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "415": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x81812FC"
    },
    "420": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "GT",
      "path": "20"
    },
    "421": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "425": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "426": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x81812FC"
    },
    "431": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "432": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27D"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "437": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "442": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "443": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A8"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "448": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA363D08"
    },
    "453": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "454": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BD"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "459": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC457CE4"
    },
    "464": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "465": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CB"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "472": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "474": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "475": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FFC9A7"
    },
    "480": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "481": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "485": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "486": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x419E314"
    },
    "491": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "492": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x233"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "497": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5106353"
    },
    "502": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "503": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x253"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "508": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "513": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "EQ",
      "path": "20"
    },
    "514": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x275"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "519": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "DUP1",
      "path": "20"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        10184
      ],
      "op": "REVERT",
      "path": "20"
    },
    "523": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "524": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21E"
    },
    "527": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x219"
    },
    "530": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "531": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "533": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD2"
    },
    "536": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "537": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "538": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x57C"
    },
    "541": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "542": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "543": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "545": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "546": {
      "op": "SWAP1"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "DUP2"
    },
    "550": {
      "op": "MSTORE"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "op": "ADD"
    },
    "554": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "555": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "557": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "558": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "6"
    },
    "559": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "560": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "6"
    },
    "561": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "562": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "6"
    },
    "563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "564": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246"
    },
    "567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x241"
    },
    "570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2082"
    },
    "576": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "577": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A7"
    },
    "581": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22A"
    },
    "589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "591": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2135"
    },
    "594": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "595": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "596": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x267"
    },
    "599": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x261"
    },
    "602": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "603": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "605": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "608": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        4735,
        4807
      ],
      "op": "JUMP",
      "path": "20"
    },
    "609": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4788,
        4795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "613": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4788,
        4795
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "614": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "JUMP",
      "path": "20"
    },
    "615": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "616": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "618": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "619": {
      "op": "SWAP1"
    },
    "620": {
      "op": "DUP2"
    },
    "621": {
      "op": "MSTORE"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "624": {
      "op": "ADD"
    },
    "625": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        4735,
        4807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22A"
    },
    "628": {
      "op": "JUMP"
    },
    "629": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x246"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "636": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "637": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "638": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x290"
    },
    "641": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28B"
    },
    "644": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "645": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "647": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2148"
    },
    "650": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "651": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "652": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F9"
    },
    "655": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "656": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "657": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "659": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "op": "SWAP1"
    },
    "669": {
      "op": "SWAP2"
    },
    "670": {
      "op": "AND"
    },
    "671": {
      "op": "DUP2"
    },
    "672": {
      "op": "MSTORE"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22A"
    },
    "679": {
      "op": "JUMP"
    },
    "680": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "681": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "684": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B6"
    },
    "687": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "688": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "690": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x217D"
    },
    "693": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "694": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "695": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x893"
    },
    "698": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "699": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "700": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "5"
    },
    "701": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "702": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21E"
    },
    "705": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x261"
    },
    "708": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "709": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "711": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        4893,
        4965
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "714": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        4893,
        4965
      ],
      "op": "JUMP",
      "path": "20"
    },
    "715": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "716": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "719": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D9"
    },
    "722": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "723": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "725": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "728": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "729": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "730": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A9"
    },
    "733": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "734": {
      "fn": "Wizards.mint",
      "offset": [
        2532,
        3290
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "735": {
      "fn": "Wizards.mint",
      "offset": [
        2532,
        3290
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "738": {
      "fn": "Wizards.mint",
      "offset": [
        2532,
        3290
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9EC"
    },
    "741": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2532,
        3290
      ],
      "op": "JUMP",
      "path": "20"
    },
    "742": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "743": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "745": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "746": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x267"
    },
    "749": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "750": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FC"
    },
    "757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A7"
    },
    "763": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "765": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7F"
    },
    "768": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "769": {
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "772": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "773": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x290"
    },
    "776": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "offset": [
        614,
        637
      ],
      "op": "AND",
      "path": "20"
    },
    "786": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP2",
      "path": "20"
    },
    "787": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMP",
      "path": "20"
    },
    "788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "789": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x267"
    },
    "792": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x322"
    },
    "795": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "796": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "798": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x217D"
    },
    "801": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "802": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "803": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB0"
    },
    "806": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "811": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x335"
    },
    "814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "815": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A7"
    },
    "820": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "5"
    },
    "821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD46"
    },
    "825": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "5"
    },
    "826": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "827": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x267"
    },
    "830": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x348"
    },
    "833": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "834": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "836": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2148"
    },
    "839": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "840": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD61"
    },
    "844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "845": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "846": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x290"
    },
    "849": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35B"
    },
    "852": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "853": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2148"
    },
    "858": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "859": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "863": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "864": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "865": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x267"
    },
    "868": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36E"
    },
    "871": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "872": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21E3"
    },
    "877": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "878": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE6B"
    },
    "882": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BB"
    },
    "887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF2"
    },
    "890": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "891": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "892": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "895": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x389"
    },
    "898": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "899": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "901": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21FE"
    },
    "904": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMP",
      "path": "20"
    },
    "905": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "906": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF28"
    },
    "909": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMP",
      "path": "20"
    },
    "910": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "911": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "914": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x39C"
    },
    "917": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "918": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "920": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "923": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMP",
      "path": "20"
    },
    "924": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "925": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10D2"
    },
    "928": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMP",
      "path": "20"
    },
    "929": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "930": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21E"
    },
    "933": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AF"
    },
    "936": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "937": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "939": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "942": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        1819,
        1975
      ],
      "op": "JUMP",
      "path": "20"
    },
    "943": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "944": {
      "fn": "Wizards.isActive",
      "offset": [
        1876,
        1880
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "946": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 1
    },
    "947": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "DUP2",
      "path": "20"
    },
    "948": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "949": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1914
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "951": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "953": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "954": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "956": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "957": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1925
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "958": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1949
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "960": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1949
      ],
      "op": "ADD",
      "path": "20"
    },
    "961": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1949
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "962": {
      "fn": "Wizards.isActive",
      "offset": [
        1952,
        1967
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "963": {
      "op": "LT"
    },
    "964": {
      "fn": "Wizards.isActive",
      "offset": [
        1900,
        1967
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "965": {
      "fn": "Wizards.isActive",
      "offset": [
        1819,
        1975
      ],
      "op": "JUMP",
      "path": "20"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "967": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0xA"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x290"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "983": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "984": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x246"
    },
    "987": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11DA"
    },
    "990": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "5"
    },
    "991": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "992": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "995": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3ED"
    },
    "998": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "999": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1001": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21E3"
    },
    "1004": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1005": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1006": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11E9"
    },
    "1009": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1010": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1011": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1014": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x400"
    },
    "1017": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1018": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1020": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2239"
    },
    "1023": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1024": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1025": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12D5"
    },
    "1028": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BB"
    },
    "1033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x413"
    },
    "1036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1037": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2275"
    },
    "1042": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1043": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x139A"
    },
    "1047": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1048": {
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "1051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1052": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x290"
    },
    "1055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "offset": [
        548,
        570
      ],
      "op": "AND",
      "path": "20"
    },
    "1065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1067": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1068": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x246"
    },
    "1071": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x439"
    },
    "1074": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1075": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1077": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "1080": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        5284,
        5642
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1081": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1082": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13D2"
    },
    "1085": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        5284,
        5642
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1086": {
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1087": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4AE"
    },
    "1090": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x44C"
    },
    "1093": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1094": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1096": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2148"
    },
    "1099": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1100": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1101": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1103": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1105": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1106": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1107": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1108": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1110": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1111": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1112": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1113": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1115": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1116": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1118": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1119": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1122": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1123": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1124": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1125": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1127": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1128": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1129": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1130": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1132": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1133": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1134": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1135": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1137": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1138": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1140": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1142": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1145": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1147": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1148": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1150": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1152": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1153": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1154": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1155": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1157": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP10",
      "path": "20"
    },
    "1158": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1159": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1160": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1162": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP11",
      "path": "20"
    },
    "1163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1164": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "20"
    },
    "1168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1169": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1171": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1172": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1176": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1177": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1179": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1180": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1181": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1183": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1184": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1188": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1189": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1190": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "AND",
      "path": "20"
    },
    "1196": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP13",
      "path": "20"
    },
    "1197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1198": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1199": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22A"
    },
    "1205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "20"
    },
    "1206": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1209": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1211": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1213": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1214": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1215": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1216": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1218": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2307"
    },
    "1221": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1222": {
      "offset": [
        1463,
        1503
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1223": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "1225": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1226": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "1228": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "1231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "1234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1235": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "1237": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1238": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4E9"
    },
    "1241": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1242": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1243": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1244": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1245": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "SUB"
    },
    "1254": {
      "offset": [
        1463,
        1503
      ],
      "op": "AND",
      "path": "20"
    },
    "1255": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1256": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1257": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1258": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1260": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1261": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1463,
        1503
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1262": {
      "op": "SWAP6"
    },
    "1263": {
      "op": "DUP7"
    },
    "1264": {
      "op": "MSTORE"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1267": {
      "op": "DUP7"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "SWAP5"
    },
    "1270": {
      "op": "SWAP1"
    },
    "1271": {
      "op": "SWAP5"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "SWAP3"
    },
    "1274": {
      "op": "DUP5"
    },
    "1275": {
      "op": "ADD"
    },
    "1276": {
      "op": "SWAP2"
    },
    "1277": {
      "op": "SWAP1"
    },
    "1278": {
      "op": "SWAP2"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1282": {
      "op": "DUP4"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "MSTORE"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1291": {
      "op": "SHL"
    },
    "1292": {
      "op": "SUB"
    },
    "1293": {
      "op": "AND"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "offset": [
        1463,
        1503
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22A"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1307": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB"
    },
    "1310": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x528"
    },
    "1313": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1314": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1316": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21E3"
    },
    "1319": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        9710,
        9936
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1320": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1321": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1473"
    },
    "1324": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        9710,
        9936
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21E"
    },
    "1329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53B"
    },
    "1332": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1333": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1335": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2388"
    },
    "1338": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1339": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1346": {
      "op": "SHL"
    },
    "1347": {
      "op": "SUB"
    },
    "1348": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 3
    },
    "1349": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1350": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "1351": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1353": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1354": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1355": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1356": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1361": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1362": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1363": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1365": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1366": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1367": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1368": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1369": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1370": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1371": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "1372": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1373": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1374": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1375": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1376": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1379": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1380": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1382": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "1383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1385": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BB"
    },
    "1389": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x577"
    },
    "1392": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1393": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1395": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E3"
    },
    "1398": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1399": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1558"
    },
    "1403": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1404": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1405": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1413": {
      "op": "SHL"
    },
    "1414": {
      "op": "SUB"
    },
    "1415": {
      "op": "NOT"
    },
    "1416": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 4
    },
    "1417": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "6"
    },
    "1418": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "6"
    },
    "1427": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1428": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A1"
    },
    "1431": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1432": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "6"
    },
    "1433": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A1"
    },
    "1436": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1437": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F0"
    },
    "1440": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1441": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1442": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1443": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1447": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1448": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5737,
        5750
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "1450": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5838
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1452": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1454": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1456": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5856,
        5864
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1457": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1458": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1459": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1461": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1462": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1463": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1464": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1465": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1467": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1468": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1470": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5841,
        5865
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1471": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1473": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1474": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1475": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "1478": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1479": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1481": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1482": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1483": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1484": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1486": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1487": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1488": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1489": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1490": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1491": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1493": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1494": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1496": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1497": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1498": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1499": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1500": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1501": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1503": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1504": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1506": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1507": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1509": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1510": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1511": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1513": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1514": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1516": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1517": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1518": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1519": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1520": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1521": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1523": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1524": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1526": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1528": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1529": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1530": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1531": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1534": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1536": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1537": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1538": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1539": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1540": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1541": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1543": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1544": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1546": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1547": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1548": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1549": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1550": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1551": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1553": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1554": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1556": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1557": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1558": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1559": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1560": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1561": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1564": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1566": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1568": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1569": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1574": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1576": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1577": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1579": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1580": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1581": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1584": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1587": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1591": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1594": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ADD",
      "path": "20"
    },
    "1598": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1602": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "1606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "EXP",
      "path": "20"
    },
    "1607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DIV",
      "path": "20"
    },
    "1609": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1611": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "AND",
      "path": "20"
    },
    "1612": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1614": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1615": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "GT",
      "path": "20"
    },
    "1616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1617": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x65C"
    },
    "1620": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1621": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x65C"
    },
    "1624": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F1"
    },
    "1627": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1628": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1631": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1632": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "GT",
      "path": "20"
    },
    "1633": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1634": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x66D"
    },
    "1637": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1638": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x66D"
    },
    "1641": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F1"
    },
    "1644": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1645": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1646": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1647": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1648": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "POP",
      "path": "20"
    },
    "1649": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "POP",
      "path": "20"
    },
    "1650": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1651": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5818,
        5865
      ],
      "op": "POP",
      "path": "20"
    },
    "1652": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5878,
        5900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1654": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6103,
        6111
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1655": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6286,
        6317
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x683"
    },
    "1658": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6303,
        6310
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1659": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6303,
        6316
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1661": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6303,
        6316
      ],
      "op": "ADD",
      "path": "20"
    },
    "1662": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6303,
        6316
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6286,
        6302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1666": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6286,
        6317
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1667": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6286,
        6317
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1668": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1670": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1671": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "ADD",
      "path": "20"
    },
    "1674": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x694"
    },
    "1677": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1678": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1679": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1680": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23D7"
    },
    "1683": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5910,
        6334
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1684": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1685": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1687": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1688": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1690": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1691": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1692": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SUB",
      "path": "20"
    },
    "1693": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SUB",
      "path": "20"
    },
    "1694": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1695": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1696": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1697": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1699": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5910,
        6334
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1700": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5878,
        6335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1701": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5878,
        6335
      ],
      "op": "POP",
      "path": "20"
    },
    "1702": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6435,
        6443
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 5
    },
    "1703": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6533,
        6561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6B3"
    },
    "1706": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6557
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1707": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6560
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1709": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6560
      ],
      "op": "ADD",
      "path": "20"
    },
    "1710": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6550,
        6560
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1711": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6533,
        6549
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1714": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6533,
        6561
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1715": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6533,
        6561
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1716": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6659,
        6687
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6C0"
    },
    "1719": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6676,
        6683
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1720": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6676,
        6686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1722": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6676,
        6686
      ],
      "op": "ADD",
      "path": "20"
    },
    "1723": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6676,
        6686
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1724": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6659,
        6675
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1727": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6659,
        6687
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1728": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6659,
        6687
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1729": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6791,
        6821
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6CD"
    },
    "1732": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6808,
        6815
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1733": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6808,
        6820
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "1735": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6808,
        6820
      ],
      "op": "ADD",
      "path": "20"
    },
    "1736": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6808,
        6820
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1737": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6791,
        6807
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1740": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6791,
        6821
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1741": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6791,
        6821
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1742": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1744": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1745": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1747": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "ADD",
      "path": "20"
    },
    "1748": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E0"
    },
    "1751": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1752": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1753": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1754": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1755": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1756": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2531"
    },
    "1759": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6418,
        6840
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1760": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1761": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1763": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1764": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1766": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1767": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1768": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SUB",
      "path": "20"
    },
    "1769": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SUB",
      "path": "20"
    },
    "1770": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1771": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1772": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1773": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1775": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6418,
        6840
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1776": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6400,
        6841
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1777": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6400,
        6841
      ],
      "op": "POP",
      "path": "20"
    },
    "1778": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6941,
        6949
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 6
    },
    "1779": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7043,
        7075
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6FF"
    },
    "1782": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7060,
        7067
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1783": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7060,
        7074
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "1785": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7060,
        7074
      ],
      "op": "ADD",
      "path": "20"
    },
    "1786": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7060,
        7074
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1787": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7043,
        7059
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1790": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7043,
        7075
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1791": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7043,
        7075
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1792": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7178,
        7211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x70C"
    },
    "1795": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7195,
        7202
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1796": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7195,
        7210
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "1798": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7195,
        7210
      ],
      "op": "ADD",
      "path": "20"
    },
    "1799": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7195,
        7210
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1800": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7178,
        7194
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1803": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7178,
        7211
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1804": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7178,
        7211
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1805": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7324,
        7363
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x719"
    },
    "1808": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7341,
        7348
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1809": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7341,
        7362
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "1811": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7341,
        7362
      ],
      "op": "ADD",
      "path": "20"
    },
    "1812": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7341,
        7362
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1813": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7324,
        7340
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1640"
    },
    "1816": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7324,
        7363
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1817": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7324,
        7363
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1818": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1820": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1821": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1823": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "ADD",
      "path": "20"
    },
    "1824": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x72C"
    },
    "1827": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1828": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1829": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1830": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1831": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1832": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x265F"
    },
    "1835": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6924,
        7382
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1836": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1837": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1839": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1840": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1842": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1843": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1844": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SUB",
      "path": "20"
    },
    "1845": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SUB",
      "path": "20"
    },
    "1846": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1847": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1848": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1849": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1851": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6924,
        7382
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1852": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6906,
        7383
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1853": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6906,
        7383
      ],
      "op": "POP",
      "path": "20"
    },
    "1854": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7454,
        7462
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 7
    },
    "1855": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1857": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1858": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1860": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "ADD",
      "path": "20"
    },
    "1861": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x74E"
    },
    "1864": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1865": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1866": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2780"
    },
    "1869": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7437,
        7472
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1870": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1871": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1873": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1874": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1875": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1876": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1877": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SUB",
      "path": "20"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1880": {
      "op": "NOT"
    },
    "1881": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "ADD",
      "path": "20"
    },
    "1882": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1883": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1884": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1885": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1886": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1887": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7437,
        7472
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1888": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5650,
        8461
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        5650,
        8461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1895": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1896": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1898": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x0"
    },
    "1900": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1901": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1902": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x776"
    },
    "1905": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1906": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27AF"
    },
    "1909": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1910": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1911": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1912": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1914": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1915": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1918": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1919": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "5"
    },
    "1920": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "5"
    },
    "1921": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1923": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1924": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1926": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1927": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1928": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1929": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1930": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1932": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1933": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1934": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1935": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1936": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1937": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1938": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1939": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1940": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1942": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1943": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1944": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1945": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1946": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A2"
    },
    "1949": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1950": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27AF"
    },
    "1953": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1954": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1955": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1956": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1957": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7EF"
    },
    "1960": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1961": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1962": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1964": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "5"
    },
    "1965": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C4"
    },
    "1968": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1969": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1972": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1973": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1974": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1975": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "5"
    },
    "1976": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "5"
    },
    "1977": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1978": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1979": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1980": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1982": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1983": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1984": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7EF"
    },
    "1987": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1988": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1989": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1990": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "1991": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1992": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1993": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1995": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1996": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1998": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2001": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2002": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2003": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2004": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2005": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2006": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2007": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2008": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2010": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2011": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2012": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2014": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2015": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2016": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2017": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "5"
    },
    "2018": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D2"
    },
    "2021": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2022": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2023": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2024": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "5"
    },
    "2025": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2027": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "5"
    },
    "2028": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2029": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2030": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2031": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2032": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2033": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2034": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2035": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2036": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2037": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2038": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2039": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2040": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2041": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2042": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2044": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 9
    },
    "2045": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2046": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2047": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2049": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2052": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2054": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2055": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2056": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "2066": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 10,
      "value": "0x877"
    },
    "2069": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2070": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2072": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2079": {
      "op": "SHL"
    },
    "2080": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2081": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2084": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2086": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2087": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "5"
    },
    "2088": {
      "op": "MSTORE"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "MSTORE"
    },
    "2096": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "ADD"
    },
    "2133": {
      "op": "MSTORE"
    },
    "2134": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2152": {
      "op": "DUP3"
    },
    "2153": {
      "op": "ADD"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2157": {
      "op": "ADD"
    },
    "2158": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2159": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2161": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2162": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2163": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2164": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "5"
    },
    "2165": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2166": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2167": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x0"
    },
    "2171": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2172": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2173": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2174": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2176": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2178": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2179": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2181": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2182": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2183": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "SUB"
    },
    "2192": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "5"
    },
    "2193": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2194": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2195": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2196": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2198": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89E"
    },
    "2201": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2202": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "2205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2206": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2207": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2208": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "5"
    },
    "2209": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 12
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "op": "SUB"
    },
    "2218": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "5"
    },
    "2219": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "5"
    },
    "2229": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "EQ",
      "path": "5"
    },
    "2230": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2231": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90C"
    },
    "2234": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2235": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2237": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2244": {
      "op": "SHL"
    },
    "2245": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2246": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2249": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2251": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2252": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2253": {
      "op": "MSTORE"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2258": {
      "op": "DUP3"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "MSTORE"
    },
    "2261": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2296": {
      "op": "DUP3"
    },
    "2297": {
      "op": "ADD"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2303": {
      "op": "SHL"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2306": {
      "op": "DUP3"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "MSTORE"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2311": {
      "op": "ADD"
    },
    "2312": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "2315": {
      "op": "JUMP"
    },
    "2316": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2317": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 13
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 14
    },
    "2327": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "5"
    },
    "2328": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "5"
    },
    "2329": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2330": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x928"
    },
    "2333": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x928"
    },
    "2338": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2339": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2340": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53B"
    },
    "2343": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2344": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2345": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x99A"
    },
    "2348": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2349": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2351": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2360": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2363": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2365": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2366": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "5"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2372": {
      "op": "DUP3"
    },
    "2373": {
      "op": "ADD"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "MSTORE"
    },
    "2413": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2448": {
      "op": "DUP3"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "op": "MSTORE"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2453": {
      "op": "ADD"
    },
    "2454": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "2457": {
      "op": "JUMP"
    },
    "2458": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2459": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x9A4"
    },
    "2462": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2463": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2464": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1746"
    },
    "2467": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2468": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2469": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2470": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2471": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2472": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2473": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2474": {
      "offset": [
        9143,
        9153
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2475": {
      "offset": [
        9165,
        9169
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "2476": {
      "offset": [
        9143,
        9170
      ],
      "op": "EQ",
      "path": "20"
    },
    "2477": {
      "branch": 111,
      "fn": "Wizards.verifyDuty",
      "offset": [
        9143,
        9170
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2478": {
      "offset": [
        9135,
        9188
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9E9"
    },
    "2481": {
      "branch": 111,
      "offset": [
        9135,
        9188
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2482": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9135,
        9188
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2484": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9135,
        9188
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "offset": [
        9135,
        9188
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2493": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9135,
        9188
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2496": {
      "offset": [
        9135,
        9188
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2498": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9135,
        9188
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2499": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9135,
        9188
      ],
      "op": "ADD",
      "path": "20"
    },
    "2500": {
      "op": "MSTORE"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2505": {
      "op": "DUP3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "offset": [
        9135,
        9188
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "2536": {
      "op": "JUMP"
    },
    "2537": {
      "offset": [
        9135,
        9188
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2538": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5044,
        5112
      ],
      "op": "POP",
      "path": "20"
    },
    "2539": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        5044,
        5112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2540": {
      "fn": "Wizards.mint",
      "offset": [
        2532,
        3290
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2541": {
      "fn": "Wizards.mint",
      "offset": [
        2592,
        2618
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 16,
      "value": "0x10"
    },
    "2543": {
      "fn": "Wizards.mint",
      "offset": [
        2592,
        2618
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2544": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2546": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2547": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2576,
        2618
      ],
      "op": "LT",
      "path": "20"
    },
    "2548": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "2551": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2552": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2554": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2561": {
      "op": "SHL"
    },
    "2562": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2563": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2566": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2568": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2569": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "ADD",
      "path": "20"
    },
    "2570": {
      "op": "MSTORE"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2575": {
      "op": "DUP3"
    },
    "2576": {
      "op": "ADD"
    },
    "2577": {
      "op": "MSTORE"
    },
    "2578": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2595": {
      "op": "SHL"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2598": {
      "op": "DUP3"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "2607": {
      "op": "JUMP"
    },
    "2608": {
      "fn": "Wizards.mint",
      "offset": [
        2568,
        2637
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2609": {
      "fn": "Wizards.mint",
      "offset": [
        2755,
        2768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2611": {
      "fn": "Wizards.mint",
      "offset": [
        2854,
        2856
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "2613": {
      "fn": "Wizards.mint",
      "offset": [
        2806,
        2819
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA3D"
    },
    "2616": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2618": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2619": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2620": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2621": {
      "fn": "Wizards.mint",
      "offset": [
        2806,
        2819
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2622": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2624": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2625": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2626": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2628": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2629": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "ADD",
      "path": "20"
    },
    "2630": {
      "op": "SWAP3"
    },
    "2631": {
      "op": "SWAP1"
    },
    "2632": {
      "op": "SWAP3"
    },
    "2633": {
      "op": "MSTORE"
    },
    "2634": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2647": {
      "op": "NOT"
    },
    "2648": {
      "fn": "Wizards.mint",
      "offset": [
        2821,
        2831
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "AND"
    },
    "2653": {
      "op": "SWAP1"
    },
    "2654": {
      "op": "DUP3"
    },
    "2655": {
      "op": "ADD"
    },
    "2656": {
      "op": "MSTORE"
    },
    "2657": {
      "fn": "Wizards.mint",
      "offset": [
        2833,
        2848
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2660": {
      "op": "DUP3"
    },
    "2661": {
      "op": "ADD"
    },
    "2662": {
      "op": "MSTORE"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2665": {
      "op": "ADD"
    },
    "2666": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2668": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2669": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2671": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2672": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2673": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "SUB",
      "path": "20"
    },
    "2674": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "SUB",
      "path": "20"
    },
    "2675": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2676": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2677": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2678": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2680": {
      "fn": "Wizards.mint",
      "offset": [
        2789,
        2849
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2681": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2682": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2683": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2684": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2686": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "ADD",
      "path": "20"
    },
    "2687": {
      "fn": "Wizards.mint",
      "offset": [
        2779,
        2850
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2688": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2851
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2690": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2851
      ],
      "op": "SHR",
      "path": "20"
    },
    "2691": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2856
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA8C"
    },
    "2694": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2856
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2695": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2856
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2696": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2856
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2800"
    },
    "2699": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2771,
        2856
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2700": {
      "fn": "Wizards.mint",
      "offset": [
        2771,
        2856
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2701": {
      "fn": "Wizards.mint",
      "offset": [
        2755,
        2856
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2702": {
      "op": "POP"
    },
    "2703": {
      "fn": "Wizards.mint",
      "offset": [
        2867,
        2877
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2705": {
      "fn": "Wizards.mint",
      "offset": [
        2880,
        2890
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA9B"
    },
    "2708": {
      "fn": "Wizards.mint",
      "offset": [
        2755,
        2856
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2709": {
      "fn": "Wizards.mint",
      "offset": [
        2880,
        2882
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x19"
    },
    "2711": {
      "fn": "Wizards.mint",
      "offset": [
        2880,
        2890
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "2714": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2880,
        2890
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2715": {
      "fn": "Wizards.mint",
      "offset": [
        2880,
        2890
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2716": {
      "fn": "Wizards.mint",
      "offset": [
        2867,
        2890
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2717": {
      "op": "POP"
    },
    "2718": {
      "fn": "Wizards.mint",
      "offset": [
        2901,
        2911
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2720": {
      "fn": "Wizards.mint",
      "offset": [
        2914,
        2924
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAAA"
    },
    "2723": {
      "fn": "Wizards.mint",
      "offset": [
        2919,
        2924
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2724": {
      "fn": "Wizards.mint",
      "offset": [
        2914,
        2916
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x32"
    },
    "2726": {
      "fn": "Wizards.mint",
      "offset": [
        2914,
        2924
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2842"
    },
    "2729": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2914,
        2924
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2730": {
      "fn": "Wizards.mint",
      "offset": [
        2914,
        2924
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2731": {
      "fn": "Wizards.mint",
      "offset": [
        2901,
        2924
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2732": {
      "fn": "Wizards.mint",
      "offset": [
        2901,
        2924
      ],
      "op": "POP",
      "path": "20"
    },
    "2733": {
      "fn": "Wizards.mint",
      "offset": [
        2937,
        2952
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2735": {
      "fn": "Wizards.mint",
      "offset": [
        3052,
        3053
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2737": {
      "fn": "Wizards.mint",
      "offset": [
        2998,
        3011
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAB9"
    },
    "2740": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2742": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2743": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2744": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2745": {
      "fn": "Wizards.mint",
      "offset": [
        2998,
        3011
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2746": {
      "fn": "Wizards.mint",
      "offset": [
        3013,
        3023
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2747": {
      "fn": "Wizards.mint",
      "offset": [
        3025,
        3042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAC5"
    },
    "2750": {
      "fn": "Wizards.mint",
      "offset": [
        3025,
        3040
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "2751": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3042
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2753": {
      "fn": "Wizards.mint",
      "offset": [
        3025,
        3042
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "2756": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3025,
        3042
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2757": {
      "fn": "Wizards.mint",
      "offset": [
        3025,
        3042
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2758": {
      "fn": "Wizards.mint",
      "offset": [
        3044,
        3046
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2759": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2761": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2762": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2764": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "ADD",
      "path": "20"
    },
    "2765": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB01"
    },
    "2768": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2769": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2770": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2771": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2772": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2773": {
      "op": "SWAP4"
    },
    "2774": {
      "op": "DUP5"
    },
    "2775": {
      "op": "MSTORE"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2778": {
      "op": "SWAP3"
    },
    "2779": {
      "op": "SWAP1"
    },
    "2780": {
      "op": "SWAP3"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2795": {
      "op": "NOT"
    },
    "2796": {
      "op": "AND"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2799": {
      "op": "DUP5"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2804": {
      "op": "DUP4"
    },
    "2805": {
      "op": "ADD"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2809": {
      "op": "DUP3"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2814": {
      "op": "ADD"
    },
    "2815": {
      "op": "SWAP1"
    },
    "2816": {
      "op": "JUMP"
    },
    "2817": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2818": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2820": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2821": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2823": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2824": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2825": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SUB",
      "path": "20"
    },
    "2826": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SUB",
      "path": "20"
    },
    "2827": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2828": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2829": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2830": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2832": {
      "fn": "Wizards.mint",
      "offset": [
        2981,
        3047
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2833": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2834": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2835": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2836": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2838": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "ADD",
      "path": "20"
    },
    "2839": {
      "fn": "Wizards.mint",
      "offset": [
        2971,
        3048
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2840": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3049
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2842": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3049
      ],
      "op": "SHR",
      "path": "20"
    },
    "2843": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB24"
    },
    "2846": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3053
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2847": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3053
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2848": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2800"
    },
    "2851": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2852": {
      "fn": "Wizards.mint",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2853": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2855": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2856": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "GT",
      "path": "20"
    },
    "2857": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2858": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB35"
    },
    "2861": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2862": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB35"
    },
    "2865": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F1"
    },
    "2868": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2955,
        3054
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2869": {
      "fn": "Wizards.mint",
      "offset": [
        2955,
        3054
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2870": {
      "fn": "Wizards.mint",
      "offset": [
        2937,
        3054
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2871": {
      "fn": "Wizards.mint",
      "offset": [
        2937,
        3054
      ],
      "op": "POP",
      "path": "20"
    },
    "2872": {
      "fn": "Wizards.mint",
      "offset": [
        3067,
        3087
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2874": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2876": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2877": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2878": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "2881": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2882": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2884": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2885": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2886": {
      "fn": "Wizards.mint",
      "offset": [
        3097,
        3098
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2888": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2889": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2890": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2892": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2893": {
      "fn": "Wizards.mint",
      "offset": [
        3100,
        3102
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2894": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2895": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2896": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2898": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2899": {
      "fn": "Wizards.mint",
      "offset": [
        3104,
        3106
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2900": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2901": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2902": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2904": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2905": {
      "fn": "Wizards.mint",
      "offset": [
        3108,
        3109
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2907": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2908": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2909": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2911": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2912": {
      "fn": "Wizards.mint",
      "offset": [
        3111,
        3112
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2914": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2915": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2916": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2918": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2919": {
      "fn": "Wizards.mint",
      "offset": [
        3114,
        3115
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2921": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2922": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2923": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2925": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2926": {
      "fn": "Wizards.mint",
      "offset": [
        3117,
        3118
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2928": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2929": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2930": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2932": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2933": {
      "fn": "Wizards.mint",
      "offset": [
        3120,
        3121
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2935": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2936": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2937": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2939": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2940": {
      "fn": "Wizards.mint",
      "offset": [
        3123,
        3124
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2942": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2943": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2944": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2946": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2947": {
      "fn": "Wizards.mint",
      "offset": [
        3126,
        3127
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2949": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2950": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2951": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2953": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2954": {
      "fn": "Wizards.mint",
      "offset": [
        3129,
        3130
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2956": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2957": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2958": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2960": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ADD",
      "path": "20"
    },
    "2961": {
      "fn": "Wizards.mint",
      "offset": [
        3132,
        3139
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2962": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2964": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2965": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "GT",
      "path": "20"
    },
    "2966": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2967": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA2"
    },
    "2970": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2971": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA2"
    },
    "2974": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F1"
    },
    "2977": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3091,
        3140
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2978": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2979": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2980": {
      "fn": "Wizards.mint",
      "offset": [
        3091,
        3140
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2981": {
      "fn": "Wizards.mint",
      "offset": [
        3067,
        3140
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2982": {
      "op": "POP"
    },
    "2983": {
      "fn": "Wizards.mint",
      "offset": [
        3067,
        3140
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2984": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3165
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 17,
      "value": "0xB"
    },
    "2986": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2988": {
      "fn": "Wizards.mint",
      "offset": [
        3166,
        3179
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB4"
    },
    "2991": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2993": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2994": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2995": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2996": {
      "fn": "Wizards.mint",
      "offset": [
        3166,
        3179
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2997": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2998": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2999": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3001": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "ADD",
      "path": "20"
    },
    "3002": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3003": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3004": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3005": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3007": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "ADD",
      "path": "20"
    },
    "3008": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3010": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3180
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3011": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3013": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3014": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3015": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3016": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3017": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3019": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3020": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3021": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3023": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3024": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3025": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3026": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3027": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3029": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3030": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3031": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3033": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3034": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3035": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3036": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3037": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3039": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3040": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3041": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3043": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3044": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3045": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3046": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3047": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3049": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3050": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3051": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3053": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3054": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3055": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3056": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3057": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3059": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3060": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3061": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "3063": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3064": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3065": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3066": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3067": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "3069": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3070": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3071": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "3073": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3074": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3075": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3076": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3077": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "3079": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3080": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3081": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "3083": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3084": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3085": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3086": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3087": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "3089": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3090": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3091": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3094": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3095": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3096": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3097": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3098": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3100": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3101": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3102": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120"
    },
    "3105": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3106": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3107": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3108": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3109": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "3111": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3112": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3113": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "3116": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3117": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3118": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3119": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3120": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3122": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3123": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3124": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "3127": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3128": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3129": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3130": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3131": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "3133": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ADD",
      "path": "20"
    },
    "3134": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3136": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3139": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "EXP",
      "path": "20"
    },
    "3140": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3141": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3142": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3143": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3145": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MUL",
      "path": "20"
    },
    "3146": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "NOT",
      "path": "20"
    },
    "3147": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "AND",
      "path": "20"
    },
    "3148": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3149": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3150": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3152": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3153": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "GT",
      "path": "20"
    },
    "3154": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3155": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC5E"
    },
    "3158": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3159": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC5E"
    },
    "3162": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22F1"
    },
    "3165": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3151,
        3190
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3166": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3167": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "MUL",
      "path": "20"
    },
    "3168": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "OR",
      "path": "20"
    },
    "3169": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3170": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3171": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "POP",
      "path": "20"
    },
    "3172": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3173": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "POP",
      "path": "20"
    },
    "3174": {
      "fn": "Wizards.mint",
      "offset": [
        3151,
        3190
      ],
      "op": "POP",
      "path": "20"
    },
    "3175": {
      "fn": "Wizards.mint",
      "offset": [
        3201,
        3237
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 18,
      "value": "0xC78"
    },
    "3178": {
      "fn": "Wizards.mint",
      "offset": [
        3211,
        3221
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3179": {
      "fn": "Wizards.mint",
      "offset": [
        3223,
        3236
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC73"
    },
    "3182": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3184": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3185": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3186": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3187": {
      "fn": "Wizards.mint",
      "offset": [
        3223,
        3236
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3188": {
      "fn": "Wizards.mint",
      "offset": [
        3201,
        3210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17B4"
    },
    "3191": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3201,
        3237
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3192": {
      "fn": "Wizards.mint",
      "offset": [
        3201,
        3237
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3193": {
      "fn": "Wizards.mint",
      "offset": [
        2557,
        3290
      ],
      "op": "POP",
      "path": "20"
    },
    "3194": {
      "fn": "Wizards.mint",
      "offset": [
        2557,
        3290
      ],
      "op": "POP",
      "path": "20"
    },
    "3195": {
      "fn": "Wizards.mint",
      "offset": [
        2557,
        3290
      ],
      "op": "POP",
      "path": "20"
    },
    "3196": {
      "fn": "Wizards.mint",
      "offset": [
        2557,
        3290
      ],
      "op": "POP",
      "path": "20"
    },
    "3197": {
      "fn": "Wizards.mint",
      "offset": [
        2557,
        3290
      ],
      "op": "POP",
      "path": "20"
    },
    "3198": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        2532,
        3290
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0xC89"
    },
    "3203": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17D2"
    },
    "3208": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3209": {
      "branch": 125,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3210": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA5"
    },
    "3213": {
      "branch": 125,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3214": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3223": {
      "op": "SHL"
    },
    "3224": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3225": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "5"
    },
    "3229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "3232": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3233": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2859"
    },
    "3236": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 20,
      "value": "0x9A4"
    },
    "3241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3243": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C5"
    },
    "3247": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3248": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3249": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3251": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xCBB"
    },
    "3254": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3255": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6B"
    },
    "3258": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3259": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3260": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3261": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "6"
    },
    "3262": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD1D"
    },
    "3265": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3266": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3268": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3277": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3280": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3282": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3283": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "6"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3289": {
      "op": "DUP3"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3347": {
      "op": "DUP3"
    },
    "3348": {
      "op": "ADD"
    },
    "3349": {
      "op": "MSTORE"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86E"
    },
    "3356": {
      "op": "JUMP"
    },
    "3357": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 22
    },
    "3368": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3369": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3370": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "6"
    },
    "3371": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3373": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3374": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3375": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3376": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3378": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3380": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3381": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3382": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3383": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3385": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3386": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3387": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3388": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3389": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3390": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3391": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3392": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3393": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3394": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3395": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3396": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3397": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3398": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3399": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 23,
      "value": "0x9A4"
    },
    "3402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3403": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3404": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3405": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3408": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3409": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3411": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3412": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3414": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3415": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3418": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3419": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "5"
    },
    "3421": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x139A"
    },
    "3424": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3425": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3426": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3428": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xD6C"
    },
    "3431": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3433": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3434": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3435": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3436": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3437": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3438": {
      "branch": 136,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "6"
    },
    "3439": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDCF"
    },
    "3442": {
      "branch": 136,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3454": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3457": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3459": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3460": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "6"
    },
    "3461": {
      "op": "MSTORE"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "ADD"
    },
    "3468": {
      "op": "MSTORE"
    },
    "3469": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3504": {
      "op": "DUP3"
    },
    "3505": {
      "op": "ADD"
    },
    "3506": {
      "op": "MSTORE"
    },
    "3507": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3522": {
      "op": "SHL"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "MSTORE"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86E"
    },
    "3534": {
      "op": "JUMP"
    },
    "3535": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3536": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x8"
    },
    "3538": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3539": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3540": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3541": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3542": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "6"
    },
    "3543": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE2"
    },
    "3546": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3547": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE2"
    },
    "3550": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AA"
    },
    "3553": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3554": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3555": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3556": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3558": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3559": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3561": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3563": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3564": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "6"
    },
    "3565": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3566": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3567": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "6"
    },
    "3568": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3569": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3570": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "6"
    },
    "3571": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3572": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3573": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3575": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3576": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3577": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3578": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3580": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3582": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3583": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3585": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "5"
    },
    "3597": {
      "branch": 126,
      "fn": "ERC721.ownerOf",
      "offset": [
        2362,
        2381
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 26
    },
    "3598": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A1"
    },
    "3601": {
      "branch": 126,
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3602": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3604": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3613": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3616": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3618": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3619": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "5"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3625": {
      "op": "DUP3"
    },
    "3626": {
      "op": "ADD"
    },
    "3627": {
      "op": "MSTORE"
    },
    "3628": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "op": "MSTORE"
    },
    "3666": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3678": {
      "op": "SHL"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3681": {
      "op": "DUP3"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "3690": {
      "op": "JUMP"
    },
    "3691": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3692": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 27
    },
    "3703": {
      "branch": 127,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "5"
    },
    "3704": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xED6"
    },
    "3707": {
      "branch": 127,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3708": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3710": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3711": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3717": {
      "op": "SHL"
    },
    "3718": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3719": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3722": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3724": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3725": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "5"
    },
    "3726": {
      "op": "MSTORE"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3731": {
      "op": "DUP3"
    },
    "3732": {
      "op": "ADD"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "op": "MSTORE"
    },
    "3772": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3788": {
      "op": "DUP3"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "MSTORE"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "3797": {
      "op": "JUMP"
    },
    "3798": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "5",
      "statement": 28
    },
    "3809": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3813": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3818": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3819": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3821": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3822": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3823": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3825": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3827": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3829": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3836": {
      "op": "SHL"
    },
    "3837": {
      "op": "SUB"
    },
    "3838": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "3839": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3840": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "3841": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF1C"
    },
    "3844": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3845": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3847": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3854": {
      "op": "SHL"
    },
    "3855": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3856": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3857": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3859": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "3860": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86E"
    },
    "3863": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3864": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28C0"
    },
    "3867": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3868": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3869": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 29,
      "value": "0xF26"
    },
    "3872": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A70"
    },
    "3877": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3879": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3880": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3881": {
      "offset": [
        9514,
        9521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "3883": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9514,
        9521
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "op": "SUB"
    },
    "3892": {
      "offset": [
        9514,
        9521
      ],
      "op": "AND",
      "path": "20"
    },
    "3893": {
      "offset": [
        9500,
        9510
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3894": {
      "offset": [
        9500,
        9521
      ],
      "op": "EQ",
      "path": "20"
    },
    "3895": {
      "offset": [
        9478,
        9585
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF8E"
    },
    "3898": {
      "offset": [
        9478,
        9585
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3899": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9478,
        9585
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3901": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9478,
        9585
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3908": {
      "op": "SHL"
    },
    "3909": {
      "offset": [
        9478,
        9585
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3910": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9478,
        9585
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3913": {
      "offset": [
        9478,
        9585
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3915": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9478,
        9585
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3916": {
      "fn": "Wizards.reportBattle",
      "offset": [
        9478,
        9585
      ],
      "op": "ADD",
      "path": "20"
    },
    "3917": {
      "op": "MSTORE"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3920": {
      "op": "DUP1"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3969": {
      "op": "SHL"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3972": {
      "op": "DUP3"
    },
    "3973": {
      "op": "ADD"
    },
    "3974": {
      "op": "MSTORE"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3977": {
      "op": "ADD"
    },
    "3978": {
      "offset": [
        9478,
        9585
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "3981": {
      "op": "JUMP"
    },
    "3982": {
      "offset": [
        9478,
        9585
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3983": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 30,
      "value": "0x0"
    },
    "3985": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3986": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3987": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3988": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4077
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "3990": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3992": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3993": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3995": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3996": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3997": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4095
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3999": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4095
      ],
      "op": "ADD",
      "path": "20"
    },
    "4000": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4001": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4002": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4099,
        4103
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4003": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4099,
        4103
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4004": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4090
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4005": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFAF"
    },
    "4008": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4009": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4099,
        4103
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4010": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4099,
        4103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4011": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4014": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4063,
        4103
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4015": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4016": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4017": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4018": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4063,
        4103
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4159
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 31
    },
    "4022": {
      "branch": 113,
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4159
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4023": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFC1"
    },
    "4026": {
      "branch": 113,
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4027": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4166,
        4167
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4029": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFC4"
    },
    "4032": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4033": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4034": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4162,
        4163
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4036": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4152,
        4167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4037": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4039": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "AND",
      "path": "20"
    },
    "4040": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4128
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4042": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4044": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4129,
        4140
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4045": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4046": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4047": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4049": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "ADD",
      "path": "20"
    },
    "4050": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4051": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4052": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4053": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4055": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "ADD",
      "path": "20"
    },
    "4056": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4058": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4141
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4059": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4148
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4061": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4148
      ],
      "op": "ADD",
      "path": "20"
    },
    "4062": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4148
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4064": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4065": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4066": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4067": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFEC"
    },
    "4070": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4071": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4072": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4075": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4114,
        4167
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4076": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4077": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4078": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4079": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4114,
        4167
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 32,
      "value": "0x0"
    },
    "4084": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4085": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4086": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4087": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4192
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4089": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4091": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4092": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4094": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4095": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4096": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4219
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4098": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4219
      ],
      "op": "ADD",
      "path": "20"
    },
    "4099": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4100": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4101": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4223,
        4233
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4102": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4223,
        4233
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4103": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4205
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4104": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1012"
    },
    "4107": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4108": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4223,
        4233
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4109": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4223,
        4233
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4110": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4113": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4178,
        4233
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4114": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4115": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4116": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4117": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4178,
        4233
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "op": "POP"
    },
    "4120": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4321
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 33
    },
    "4121": {
      "branch": 114,
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4321
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4122": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1024"
    },
    "4125": {
      "branch": 114,
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4126": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4328,
        4329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4128": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1027"
    },
    "4131": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4132": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4133": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4324,
        4325
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4135": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4314,
        4329
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4136": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4138": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "AND",
      "path": "20"
    },
    "4139": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4292
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4141": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4143": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4293,
        4304
      ],
      "op": "DUP7",
      "path": "20"
    },
    "4144": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4145": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4146": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4148": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "ADD",
      "path": "20"
    },
    "4149": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4150": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4151": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4152": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4154": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "ADD",
      "path": "20"
    },
    "4155": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4157": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4305
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4158": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4160": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4310
      ],
      "op": "ADD",
      "path": "20"
    },
    "4161": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4310
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4163": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4164": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4165": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4166": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x104F"
    },
    "4169": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4170": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4171": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4174": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4278,
        4329
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4175": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4176": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4177": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4178": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4278,
        4329
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "op": "POP"
    },
    "4181": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 34,
      "value": "0x0"
    },
    "4183": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4184": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4185": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4186": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4354
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4188": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4190": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4191": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4193": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4194": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4195": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4374
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4197": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4374
      ],
      "op": "ADD",
      "path": "20"
    },
    "4198": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4199": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4200": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4378,
        4382
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4201": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4378,
        4382
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4202": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4367
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4203": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1075"
    },
    "4206": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4207": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4378,
        4382
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4208": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4378,
        4382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4209": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4212": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4340,
        4382
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4213": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4214": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4215": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4216": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4340,
        4382
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4217": {
      "op": "POP"
    },
    "4218": {
      "op": "POP"
    },
    "4219": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 35,
      "value": "0x0"
    },
    "4221": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4222": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4223": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4224": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4407
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4226": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4228": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4229": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4231": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4232": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4233": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4434
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4235": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4434
      ],
      "op": "ADD",
      "path": "20"
    },
    "4236": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4237": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4238": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4438,
        4448
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4239": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4438,
        4448
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4240": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4420
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4241": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x109B"
    },
    "4244": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4245": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4438,
        4448
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4246": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4438,
        4448
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4247": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4250": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4393,
        4448
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4251": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4252": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4253": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4254": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4393,
        4448
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4543,
        4550
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4258": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4540,
        4671
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC78"
    },
    "4261": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4540,
        4671
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4262": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x0"
    },
    "4264": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4265": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4266": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4267": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4581
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4269": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4271": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4272": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4274": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4275": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4276": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4278": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4608
      ],
      "op": "ADD",
      "path": "20"
    },
    "4279": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4280": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4281": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4612,
        4624
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4282": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4612,
        4624
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4283": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4594
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4284": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10C6"
    },
    "4287": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4288": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4612,
        4624
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4289": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4612,
        4624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4290": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4293": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4567,
        4624
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4294": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4295": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4296": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4297": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4567,
        4624
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4298": {
      "op": "POP"
    },
    "4299": {
      "op": "POP"
    },
    "4300": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "POP",
      "path": "20"
    },
    "4301": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "POP",
      "path": "20"
    },
    "4302": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "POP",
      "path": "20"
    },
    "4303": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "POP",
      "path": "20"
    },
    "4304": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3902,
        4678
      ],
      "op": "POP",
      "path": "20"
    },
    "4305": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        3902,
        4678
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4306": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4307": {
      "fn": "Wizards.initiate",
      "offset": [
        3450,
        3460
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 37
    },
    "4308": {
      "fn": "Wizards.initiate",
      "offset": [
        3429,
        3446
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10DC"
    },
    "4311": {
      "fn": "Wizards.initiate",
      "offset": [
        3437,
        3445
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4312": {
      "fn": "Wizards.initiate",
      "offset": [
        3429,
        3436
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDF4"
    },
    "4315": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3429,
        3446
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4316": {
      "fn": "Wizards.initiate",
      "offset": [
        3429,
        3446
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4323": {
      "op": "SHL"
    },
    "4324": {
      "op": "SUB"
    },
    "4325": {
      "fn": "Wizards.initiate",
      "offset": [
        3429,
        3460
      ],
      "op": "AND",
      "path": "20"
    },
    "4326": {
      "branch": 116,
      "fn": "Wizards.initiate",
      "offset": [
        3429,
        3460
      ],
      "op": "EQ",
      "path": "20"
    },
    "4327": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1122"
    },
    "4330": {
      "branch": 116,
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4331": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4333": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4340": {
      "op": "SHL"
    },
    "4341": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4342": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4345": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4347": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4348": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "ADD",
      "path": "20"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4381": {
      "op": "ADD"
    },
    "4382": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "4385": {
      "op": "JUMP"
    },
    "4386": {
      "fn": "Wizards.initiate",
      "offset": [
        3421,
        3478
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4387": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 38,
      "value": "0x0"
    },
    "4389": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4390": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4391": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4392": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4394": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4396": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4397": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4399": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4400": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3521
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4401": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "4403": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3541
      ],
      "op": "ADD",
      "path": "20"
    },
    "4404": {
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4405": {
      "branch": 117,
      "fn": "Wizards.initiate",
      "offset": [
        3497,
        3546
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4406": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1175"
    },
    "4409": {
      "branch": 117,
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4410": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4412": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4419": {
      "op": "SHL"
    },
    "4420": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4421": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4424": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4426": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4427": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "ADD",
      "path": "20"
    },
    "4428": {
      "op": "MSTORE"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "ADD"
    },
    "4435": {
      "op": "MSTORE"
    },
    "4436": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4456": {
      "op": "SHL"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4459": {
      "op": "DUP3"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "MSTORE"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "4468": {
      "op": "JUMP"
    },
    "4469": {
      "fn": "Wizards.initiate",
      "offset": [
        3489,
        3568
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4470": {
      "fn": "Wizards.initiate",
      "offset": [
        3613,
        3634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4472": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4473": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4474": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4475": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3651
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4477": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4479": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4480": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4482": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4483": {
      "fn": "Wizards.initiate",
      "offset": [
        3637,
        3661
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4484": {
      "fn": "Wizards.initiate",
      "offset": [
        3702,
        3717
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 39
    },
    "4485": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3699
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "4487": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3699
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4488": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3699
      ],
      "op": "ADD",
      "path": "20"
    },
    "4489": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3717
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4490": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4491": {
      "fn": "Wizards.initiate",
      "offset": [
        3672,
        3717
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4492": {
      "fn": "Wizards.initiate",
      "offset": [
        3780,
        3820
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x11"
    },
    "4494": {
      "fn": "Wizards.initiate",
      "offset": [
        3780,
        3820
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4495": {
      "fn": "Wizards.initiate",
      "offset": [
        3762,
        3820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1197"
    },
    "4498": {
      "fn": "Wizards.initiate",
      "offset": [
        3762,
        3820
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4499": {
      "fn": "Wizards.initiate",
      "offset": [
        3762,
        3820
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x282A"
    },
    "4502": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3762,
        3820
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4503": {
      "fn": "Wizards.initiate",
      "offset": [
        3762,
        3820
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4504": {
      "fn": "Wizards.initiate",
      "offset": [
        3728,
        3759
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "4506": {
      "fn": "Wizards.initiate",
      "offset": [
        3728,
        3759
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4507": {
      "fn": "Wizards.initiate",
      "offset": [
        3728,
        3759
      ],
      "op": "ADD",
      "path": "20"
    },
    "4508": {
      "fn": "Wizards.initiate",
      "offset": [
        3728,
        3820
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4509": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x40"
    },
    "4511": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4512": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4513": {
      "fn": "Wizards.initiate",
      "offset": [
        3848,
        3858
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4514": {
      "op": "DUP2"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "fn": "Wizards.initiate",
      "offset": [
        3870,
        3885
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4519": {
      "op": "DUP3"
    },
    "4520": {
      "op": "ADD"
    },
    "4521": {
      "op": "MSTORE"
    },
    "4522": {
      "fn": "Wizards.initiate",
      "offset": [
        3860,
        3868
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4523": {
      "fn": "Wizards.initiate",
      "offset": [
        3860,
        3868
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4524": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "4557": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4561": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4562": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4563": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4564": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "SUB",
      "path": "20"
    },
    "4565": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4566": {
      "fn": "Wizards.initiate",
      "offset": [
        3838,
        3886
      ],
      "op": "LOG2",
      "path": "20"
    },
    "4567": {
      "fn": "Wizards.initiate",
      "offset": [
        3410,
        3894
      ],
      "op": "POP",
      "path": "20"
    },
    "4568": {
      "fn": "Wizards.initiate",
      "offset": [
        3365,
        3894
      ],
      "op": "POP",
      "path": "20"
    },
    "4569": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        3365,
        3894
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4570": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4571": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4573": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x1"
    },
    "4575": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4576": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4577": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x776"
    },
    "4580": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4581": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27AF"
    },
    "4584": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4585": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4586": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4588": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "op": "SUB"
    },
    "4597": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "4598": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4599": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "4600": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1213"
    },
    "4603": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4604": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4606": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4613": {
      "op": "SHL"
    },
    "4614": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4615": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4616": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4618": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "4619": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86E"
    },
    "4622": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4623": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28C0"
    },
    "4626": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4627": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4634": {
      "op": "SHL"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 43
    },
    "4637": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "AND",
      "path": "20"
    },
    "4638": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4639": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4640": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4641": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10048
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4642": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10073
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1239"
    },
    "4645": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10073
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10065,
        10073
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "4649": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10065,
        10073
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4656": {
      "op": "SHL"
    },
    "4657": {
      "op": "SUB"
    },
    "4658": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10052,
        10073
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4659": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10052,
        10073
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4660": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10052,
        10073
      ],
      "op": "AND",
      "path": "20"
    },
    "4661": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10065,
        10073
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4662": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10065,
        10073
      ],
      "op": "AND",
      "path": "20"
    },
    "4663": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10052,
        10073
      ],
      "op": "EQ",
      "path": "20"
    },
    "4664": {
      "branch": 119,
      "fn": "Wizards.updateVerifier",
      "offset": [
        10052,
        10073
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4665": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10025,
        10073
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4666": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1280"
    },
    "4669": {
      "branch": 119,
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4670": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4672": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4681": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4684": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4686": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4687": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "ADD",
      "path": "20"
    },
    "4688": {
      "op": "MSTORE"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4693": {
      "op": "DUP3"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "MSTORE"
    },
    "4696": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4723": {
      "op": "SHL"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4726": {
      "op": "DUP3"
    },
    "4727": {
      "op": "ADD"
    },
    "4728": {
      "op": "MSTORE"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4731": {
      "op": "ADD"
    },
    "4732": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "4735": {
      "op": "JUMP"
    },
    "4736": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10017,
        10102
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4737": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10121
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 44,
      "value": "0xD"
    },
    "4739": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4740": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4747": {
      "op": "SHL"
    },
    "4748": {
      "op": "SUB"
    },
    "4749": {
      "op": "NOT"
    },
    "4750": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "AND",
      "path": "20"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4757": {
      "op": "SHL"
    },
    "4758": {
      "op": "SUB"
    },
    "4759": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4760": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "AND",
      "path": "20"
    },
    "4761": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4762": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4763": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "OR",
      "path": "20"
    },
    "4764": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4765": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4766": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10113,
        10133
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4767": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0x40"
    },
    "4769": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4770": {
      "op": "SWAP1"
    },
    "4771": {
      "op": "DUP2"
    },
    "4772": {
      "op": "MSTORE"
    },
    "4773": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "4806": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4809": {
      "op": "ADD"
    },
    "4810": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4811": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4813": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4814": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4815": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4816": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "SUB",
      "path": "20"
    },
    "4817": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4818": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        10149,
        10171
      ],
      "op": "LOG1",
      "path": "20"
    },
    "4819": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        9944,
        10179
      ],
      "op": "POP",
      "path": "20"
    },
    "4820": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        9944,
        10179
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4821": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4828": {
      "op": "SHL"
    },
    "4829": {
      "op": "SUB"
    },
    "4830": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 46
    },
    "4831": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "5"
    },
    "4832": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4833": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "EQ",
      "path": "5"
    },
    "4834": {
      "branch": 128,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4835": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x132E"
    },
    "4838": {
      "branch": 128,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4839": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4841": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4842": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4848": {
      "op": "SHL"
    },
    "4849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4850": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4853": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4855": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4856": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "5"
    },
    "4857": {
      "op": "MSTORE"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4862": {
      "op": "DUP3"
    },
    "4863": {
      "op": "ADD"
    },
    "4864": {
      "op": "MSTORE"
    },
    "4865": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4900": {
      "op": "DUP3"
    },
    "4901": {
      "op": "ADD"
    },
    "4902": {
      "op": "MSTORE"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "4909": {
      "op": "JUMP"
    },
    "4910": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4911": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4912": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 47,
      "value": "0x0"
    },
    "4914": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4915": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4916": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4917": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4919": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4921": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4922": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4923": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4924": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4926": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4927": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4928": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4938": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "5"
    },
    "4939": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4940": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4941": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4942": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4943": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4944": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4945": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4946": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4947": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4948": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4949": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4950": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4953": {
      "op": "NOT"
    },
    "4954": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "5"
    },
    "4955": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4956": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4957": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4958": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4959": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4960": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "5"
    },
    "4961": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4962": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4963": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4964": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 48
    },
    "4965": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4966": {
      "op": "SWAP1"
    },
    "4967": {
      "op": "DUP2"
    },
    "4968": {
      "op": "MSTORE"
    },
    "4969": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4970": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4971": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4972": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5005": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5006": {
      "op": "ADD"
    },
    "5007": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5009": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5010": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5011": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5012": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "5"
    },
    "5013": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5014": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5015": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "5"
    },
    "5016": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "5"
    },
    "5017": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 49,
      "value": "0x13A4"
    },
    "5022": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17D2"
    },
    "5027": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5028": {
      "branch": 129,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13C0"
    },
    "5032": {
      "branch": 129,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5042": {
      "op": "SHL"
    },
    "5043": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5045": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5047": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "5"
    },
    "5048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "5051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5052": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2859"
    },
    "5055": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 50,
      "value": "0x13CC"
    },
    "5060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5063": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC2"
    },
    "5067": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5072": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5073": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5074": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5284,
        5642
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5075": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5077": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5078": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5079": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5080": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5082": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5084": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5085": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5087": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5088": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5089": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5090": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5358,
        5371
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "5092": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5358,
        5371
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5099": {
      "op": "SHL"
    },
    "5100": {
      "op": "SUB"
    },
    "5101": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "5102": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 51,
      "value": "0x1451"
    },
    "5105": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5106": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5108": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5109": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5115": {
      "op": "SHL"
    },
    "5116": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5122": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5123": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "ADD",
      "path": "20"
    },
    "5124": {
      "op": "MSTORE"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5129": {
      "op": "DUP3"
    },
    "5130": {
      "op": "ADD"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5167": {
      "op": "DUP3"
    },
    "5168": {
      "op": "ADD"
    },
    "5169": {
      "op": "MSTORE"
    },
    "5170": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5188": {
      "op": "SHL"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5191": {
      "op": "DUP3"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "MSTORE"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5196": {
      "op": "ADD"
    },
    "5197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "5200": {
      "op": "JUMP"
    },
    "5201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5384,
        5461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 52,
      "value": "0x5A1"
    },
    "5205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5527,
        5535
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5206": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5209": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "5212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "ADD",
      "path": "20"
    },
    "5213": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5215": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5216": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5E"
    },
    "5219": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5223": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "ADD",
      "path": "20"
    },
    "5224": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29E7"
    },
    "5227": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5E"
    },
    "5229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5230": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5634
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "5231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        5512,
        5526
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A7"
    },
    "5234": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        5512,
        5634
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5235": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9710,
        9936
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5236": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5238": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5245": {
      "op": "SHL"
    },
    "5246": {
      "op": "SUB"
    },
    "5247": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "5248": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5249": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "5250": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x149D"
    },
    "5253": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5254": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5256": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5263": {
      "op": "SHL"
    },
    "5264": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5265": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5266": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5268": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "5269": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86E"
    },
    "5272": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5273": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28C0"
    },
    "5276": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5277": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5284": {
      "op": "SHL"
    },
    "5285": {
      "op": "SUB"
    },
    "5286": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 53
    },
    "5287": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "AND",
      "path": "20"
    },
    "5288": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5289": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5290": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5291": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9811
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5292": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9834
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14C3"
    },
    "5295": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9834
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5296": {
      "op": "POP"
    },
    "5297": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9827,
        9834
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "5299": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9827,
        9834
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "SUB"
    },
    "5308": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9815,
        9834
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5309": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9815,
        9834
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5310": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9815,
        9834
      ],
      "op": "AND",
      "path": "20"
    },
    "5311": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9827,
        9834
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5312": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9827,
        9834
      ],
      "op": "AND",
      "path": "20"
    },
    "5313": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9815,
        9834
      ],
      "op": "EQ",
      "path": "20"
    },
    "5314": {
      "branch": 121,
      "fn": "Wizards.updateBattler",
      "offset": [
        9815,
        9834
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5315": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9789,
        9834
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5316": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x150A"
    },
    "5319": {
      "branch": 121,
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5320": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5322": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5329": {
      "op": "SHL"
    },
    "5330": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5331": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5334": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5336": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5337": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "ADD",
      "path": "20"
    },
    "5338": {
      "op": "MSTORE"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5343": {
      "op": "DUP3"
    },
    "5344": {
      "op": "ADD"
    },
    "5345": {
      "op": "MSTORE"
    },
    "5346": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5376": {
      "op": "DUP3"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "MSTORE"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x86E"
    },
    "5385": {
      "op": "JUMP"
    },
    "5386": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9781,
        9863
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5387": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9881
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 54,
      "value": "0xC"
    },
    "5389": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5390": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5397": {
      "op": "SHL"
    },
    "5398": {
      "op": "SUB"
    },
    "5399": {
      "op": "NOT"
    },
    "5400": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "AND",
      "path": "20"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5407": {
      "op": "SHL"
    },
    "5408": {
      "op": "SUB"
    },
    "5409": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5410": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "AND",
      "path": "20"
    },
    "5411": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5412": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5413": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "OR",
      "path": "20"
    },
    "5414": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5415": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5416": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9874,
        9892
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5417": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9908,
        9928
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0x40"
    },
    "5419": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9908,
        9928
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5420": {
      "op": "SWAP1"
    },
    "5421": {
      "op": "DUP2"
    },
    "5422": {
      "op": "MSTORE"
    },
    "5423": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9908,
        9928
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "5456": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9908,
        9928
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5459": {
      "op": "ADD"
    },
    "5460": {
      "fn": "Wizards.updateBattler",
      "offset": [
        9908,
        9928
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12CA"
    },
    "5463": {
      "op": "JUMP"
    },
    "5464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5465": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5467": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5474": {
      "op": "SHL"
    },
    "5475": {
      "op": "SUB"
    },
    "5476": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "5477": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5478": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "5479": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1582"
    },
    "5482": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5483": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5485": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5492": {
      "op": "SHL"
    },
    "5493": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5494": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5495": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5497": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "5498": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86E"
    },
    "5501": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5502": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28C0"
    },
    "5505": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5506": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5513": {
      "op": "SHL"
    },
    "5514": {
      "op": "SUB"
    },
    "5515": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 56
    },
    "5516": {
      "branch": 142,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "7"
    },
    "5517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15E7"
    },
    "5520": {
      "branch": 142,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "7"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5544": {
      "op": "DUP3"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "ADD"
    },
    "5584": {
      "op": "MSTORE"
    },
    "5585": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5597": {
      "op": "DUP3"
    },
    "5598": {
      "op": "ADD"
    },
    "5599": {
      "op": "MSTORE"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x86E"
    },
    "5606": {
      "op": "JUMP"
    },
    "5607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 57,
      "value": "0x9E9"
    },
    "5611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5612": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A70"
    },
    "5615": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5616": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5617": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5625": {
      "op": "SHL"
    },
    "5626": {
      "op": "SUB"
    },
    "5627": {
      "op": "NOT"
    },
    "5628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 58
    },
    "5629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "5"
    },
    "5630": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "5"
    },
    "5639": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5640": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1621"
    },
    "5643": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5644": {
      "op": "POP"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5651": {
      "op": "SHL"
    },
    "5652": {
      "op": "SUB"
    },
    "5653": {
      "op": "NOT"
    },
    "5654": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5655": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "5"
    },
    "5656": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5663": {
      "op": "SHL"
    },
    "5664": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "5"
    },
    "5665": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5666": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5667": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A1"
    },
    "5670": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5671": {
      "op": "POP"
    },
    "5672": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5679": {
      "op": "SHL"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5686": {
      "op": "SHL"
    },
    "5687": {
      "op": "SUB"
    },
    "5688": {
      "op": "NOT"
    },
    "5689": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 59
    },
    "5690": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "5691": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "4"
    },
    "5692": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A1"
    },
    "5695": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5696": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5697": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5699": {
      "branch": 143,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5700": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1664"
    },
    "5703": {
      "branch": 143,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5704": {
      "op": "POP"
    },
    "5705": {
      "op": "POP"
    },
    "5706": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 60,
      "value": "0x40"
    },
    "5708": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5709": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5710": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5711": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5712": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "19"
    },
    "5713": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5714": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5715": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5716": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5718": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5719": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "5724": {
      "op": "SHL"
    },
    "5725": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5727": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5728": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "19"
    },
    "5729": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5730": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5731": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5732": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5733": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5734": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5736": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5737": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5738": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5739": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x168E"
    },
    "5742": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5743": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 61
    },
    "5744": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1678"
    },
    "5747": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5748": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x28F5"
    },
    "5751": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5752": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5753": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 62,
      "value": "0x1687"
    },
    "5758": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5759": {
      "op": "POP"
    },
    "5760": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5762": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5763": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2910"
    },
    "5766": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5767": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5768": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5769": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "19"
    },
    "5770": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1668"
    },
    "5773": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5774": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5775": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5777": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5778": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5787": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5788": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "19"
    },
    "5789": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5790": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A9"
    },
    "5793": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5794": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A9"
    },
    "5797": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1FF6"
    },
    "5800": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5801": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5802": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5804": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5805": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5806": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5807": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5808": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5809": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5810": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5812": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "5813": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "5815": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "19"
    },
    "5816": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "19"
    },
    "5817": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5819": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "5820": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5821": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "5822": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5824": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5825": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5826": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5827": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D3"
    },
    "5830": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5831": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5833": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5834": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "5835": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5836": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5837": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "5838": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5839": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "5840": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "5841": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5842": {
      "op": "POP"
    },
    "5843": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5844": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "19"
    },
    "5845": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5846": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "19"
    },
    "5847": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5848": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5849": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5850": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x173E"
    },
    "5853": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5854": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 63,
      "value": "0x16E8"
    },
    "5857": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5859": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5860": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2842"
    },
    "5863": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5864": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5865": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5866": {
      "op": "POP"
    },
    "5867": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 64,
      "value": "0x16F5"
    },
    "5870": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5872": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5873": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2800"
    },
    "5876": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5877": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5878": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1700"
    },
    "5881": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5882": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x30"
    },
    "5884": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x282A"
    },
    "5887": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5888": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5889": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF8"
    },
    "5891": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "19"
    },
    "5892": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5893": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5894": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5895": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5896": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5897": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "19"
    },
    "5898": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1715"
    },
    "5901": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5902": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1715"
    },
    "5905": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x28AA"
    },
    "5908": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5909": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5910": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5912": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "19"
    },
    "5913": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "19"
    },
    "5914": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5921": {
      "op": "SHL"
    },
    "5922": {
      "op": "SUB"
    },
    "5923": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "19"
    },
    "5924": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "19"
    },
    "5925": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5926": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5927": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5929": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "19"
    },
    "5930": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5931": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "19"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 65,
      "value": "0x1737"
    },
    "5936": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "5938": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5939": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2910"
    },
    "5942": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5943": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5944": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5945": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "5946": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D7"
    },
    "5949": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5950": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5951": {
      "fn": "Strings.toString",
      "offset": [
        994,
        1000
      ],
      "op": "SWAP5",
      "path": "19",
      "statement": 66
    },
    "5952": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "op": "POP"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5958": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5959": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 67,
      "value": "0x0"
    },
    "5961": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5962": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5963": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5964": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5966": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5968": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5969": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5971": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5972": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5973": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5974": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5981": {
      "op": "SHL"
    },
    "5982": {
      "op": "SUB"
    },
    "5983": {
      "op": "NOT"
    },
    "5984": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "5"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "op": "SUB"
    },
    "5993": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5994": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "5"
    },
    "5995": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5996": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5997": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "5"
    },
    "5998": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5999": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6000": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6001": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6002": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6003": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 68,
      "value": "0x177B"
    },
    "6006": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6007": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "6010": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6011": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6018": {
      "op": "SHL"
    },
    "6019": {
      "op": "SUB"
    },
    "6020": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "5"
    },
    "6021": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6054": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6056": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6057": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6059": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6060": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6061": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6062": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "5"
    },
    "6063": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6064": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "5"
    },
    "6065": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "5"
    },
    "6066": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "5"
    },
    "6067": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6068": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6069": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 69,
      "value": "0x17CE"
    },
    "6072": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6073": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6074": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6076": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6077": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6078": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6080": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "5"
    },
    "6081": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6083": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6084": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6085": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6087": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6088": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6089": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "5"
    },
    "6090": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF5"
    },
    "6093": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6094": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6095": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "5"
    },
    "6096": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "5"
    },
    "6097": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6099": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6101": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6102": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6103": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6104": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6106": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6108": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6109": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6111": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6112": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6113": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6120": {
      "op": "SHL"
    },
    "6121": {
      "op": "SUB"
    },
    "6122": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "6123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 70,
      "value": "0x184B"
    },
    "6126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6136": {
      "op": "SHL"
    },
    "6137": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6138": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6143": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "5"
    },
    "6145": {
      "op": "MSTORE"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "6148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6150": {
      "op": "DUP3"
    },
    "6151": {
      "op": "ADD"
    },
    "6152": {
      "op": "MSTORE"
    },
    "6153": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6188": {
      "op": "DUP3"
    },
    "6189": {
      "op": "ADD"
    },
    "6190": {
      "op": "MSTORE"
    },
    "6191": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "6206": {
      "op": "SHL"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6209": {
      "op": "DUP3"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "MSTORE"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6214": {
      "op": "ADD"
    },
    "6215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "6218": {
      "op": "JUMP"
    },
    "6219": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6222": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1856"
    },
    "6225": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6226": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "6229": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6232": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "5"
    },
    "6233": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 71
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6240": {
      "op": "SHL"
    },
    "6241": {
      "op": "SUB"
    },
    "6242": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "5"
    },
    "6243": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6250": {
      "op": "SHL"
    },
    "6251": {
      "op": "SUB"
    },
    "6252": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "5"
    },
    "6253": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "5"
    },
    "6254": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6255": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1891"
    },
    "6258": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6259": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "5"
    },
    "6260": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6267": {
      "op": "SHL"
    },
    "6268": {
      "op": "SUB"
    },
    "6269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "5"
    },
    "6270": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1886"
    },
    "6273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F9"
    },
    "6277": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6285": {
      "op": "SHL"
    },
    "6286": {
      "op": "SUB"
    },
    "6287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "5"
    },
    "6288": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "5"
    },
    "6289": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6290": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6291": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x173E"
    },
    "6294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6302": {
      "op": "SHL"
    },
    "6303": {
      "op": "SUB"
    },
    "6304": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6306": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "6307": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6310": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6312": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6314": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6316": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6317": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6318": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6319": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6321": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6322": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6323": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6324": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "5"
    },
    "6326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "6327": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6328": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6330": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6331": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6332": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6333": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6334": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6336": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "6337": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x173E"
    },
    "6340": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6341": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6342": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 72
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6349": {
      "op": "SHL"
    },
    "6350": {
      "op": "SUB"
    },
    "6351": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "5"
    },
    "6352": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D8"
    },
    "6355": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6356": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "6359": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6360": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6367": {
      "op": "SHL"
    },
    "6368": {
      "op": "SUB"
    },
    "6369": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "5"
    },
    "6370": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "5"
    },
    "6371": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1940"
    },
    "6374": {
      "branch": 130,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6375": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6377": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6384": {
      "op": "SHL"
    },
    "6385": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6386": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6389": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6391": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6392": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "5"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6398": {
      "op": "DUP3"
    },
    "6399": {
      "op": "ADD"
    },
    "6400": {
      "op": "MSTORE"
    },
    "6401": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6436": {
      "op": "DUP3"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "MSTORE"
    },
    "6439": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6451": {
      "op": "SHL"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6454": {
      "op": "DUP3"
    },
    "6455": {
      "op": "ADD"
    },
    "6456": {
      "op": "MSTORE"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6459": {
      "op": "ADD"
    },
    "6460": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "6463": {
      "op": "JUMP"
    },
    "6464": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6471": {
      "op": "SHL"
    },
    "6472": {
      "op": "SUB"
    },
    "6473": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 73
    },
    "6474": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "5"
    },
    "6475": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A2"
    },
    "6478": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6479": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6481": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6482": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6488": {
      "op": "SHL"
    },
    "6489": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6490": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6493": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6495": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6496": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "5"
    },
    "6497": {
      "op": "MSTORE"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6500": {
      "op": "DUP1"
    },
    "6501": {
      "op": "DUP3"
    },
    "6502": {
      "op": "ADD"
    },
    "6503": {
      "op": "MSTORE"
    },
    "6504": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6539": {
      "op": "DUP3"
    },
    "6540": {
      "op": "ADD"
    },
    "6541": {
      "op": "MSTORE"
    },
    "6542": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6549": {
      "op": "SHL"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6552": {
      "op": "DUP3"
    },
    "6553": {
      "op": "ADD"
    },
    "6554": {
      "op": "MSTORE"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6557": {
      "op": "ADD"
    },
    "6558": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "6561": {
      "op": "JUMP"
    },
    "6562": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6563": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 74,
      "value": "0x19AD"
    },
    "6566": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6567": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6568": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6569": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B28"
    },
    "6572": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6573": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6574": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 75,
      "value": "0x19B8"
    },
    "6577": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6579": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6580": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1746"
    },
    "6583": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6584": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6591": {
      "op": "SHL"
    },
    "6592": {
      "op": "SUB"
    },
    "6593": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 76
    },
    "6594": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "5"
    },
    "6595": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6597": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6598": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6599": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6600": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6602": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6604": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6605": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6607": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6608": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6609": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6610": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6611": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6613": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6614": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6615": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19E1"
    },
    "6618": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6619": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6620": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6621": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2842"
    },
    "6624": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6625": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6626": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6627": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6628": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6629": {
      "op": "POP"
    },
    "6630": {
      "op": "POP"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6637": {
      "op": "SHL"
    },
    "6638": {
      "op": "SUB"
    },
    "6639": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 77
    },
    "6640": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "5"
    },
    "6641": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6643": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6644": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6645": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6646": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6648": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6650": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6651": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6653": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6654": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6655": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6656": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6657": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6659": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6660": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6661": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A0F"
    },
    "6664": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6665": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6666": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6667": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x282A"
    },
    "6670": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6671": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6672": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6673": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6674": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "op": "POP"
    },
    "6677": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 78,
      "value": "0x0"
    },
    "6679": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6680": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6681": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6682": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6684": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6686": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6687": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6689": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6690": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6691": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6692": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6693": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6700": {
      "op": "SHL"
    },
    "6701": {
      "op": "SUB"
    },
    "6702": {
      "op": "NOT"
    },
    "6703": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "5"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6710": {
      "op": "SHL"
    },
    "6711": {
      "op": "SUB"
    },
    "6712": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6713": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6714": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "5"
    },
    "6715": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6716": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6717": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "5"
    },
    "6718": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6719": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6720": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6721": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 79
    },
    "6722": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6723": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6724": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6725": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6726": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "5"
    },
    "6727": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "5"
    },
    "6728": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6729": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6762": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6763": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "5"
    },
    "6764": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "6765": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "6766": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "6767": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6768": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6769": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6771": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6772": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6779": {
      "op": "SHL"
    },
    "6780": {
      "op": "SUB"
    },
    "6781": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 80
    },
    "6782": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6783": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "7"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6790": {
      "op": "SHL"
    },
    "6791": {
      "op": "SUB"
    },
    "6792": {
      "op": "NOT"
    },
    "6793": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6794": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "7"
    },
    "6795": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6796": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "7"
    },
    "6797": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6798": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "6799": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6800": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 81,
      "value": "0x40"
    },
    "6802": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6803": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6804": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "7"
    },
    "6805": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6806": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6807": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6808": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6809": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6842": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6843": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6845": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6846": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "7"
    },
    "6847": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "7"
    },
    "6848": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "7"
    },
    "6849": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 82,
      "value": "0x1ACD"
    },
    "6854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18C5"
    },
    "6860": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6861": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 83,
      "value": "0x1AD9"
    },
    "6865": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6866": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6867": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6869": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BE0"
    },
    "6872": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6873": {
      "branch": 132,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6874": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13CC"
    },
    "6877": {
      "branch": 132,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6887": {
      "op": "SHL"
    },
    "6888": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6889": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6890": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6892": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "5"
    },
    "6893": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "6896": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6897": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2924"
    },
    "6900": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6901": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6902": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 84,
      "value": "0x1AFF"
    },
    "6905": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6906": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6907": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CDE"
    },
    "6910": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6911": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6912": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 85,
      "value": "0x1B0C"
    },
    "6915": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6917": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6918": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6919": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6920": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BE0"
    },
    "6923": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6924": {
      "branch": 133,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6925": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A4"
    },
    "6928": {
      "branch": 133,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6929": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6931": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6938": {
      "op": "SHL"
    },
    "6939": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6940": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6941": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6943": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "5"
    },
    "6944": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "6947": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6948": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2924"
    },
    "6951": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6952": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6959": {
      "op": "SHL"
    },
    "6960": {
      "op": "SUB"
    },
    "6961": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6962": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "6"
    },
    "6963": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B83"
    },
    "6966": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6967": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 86,
      "value": "0x1B7E"
    },
    "6970": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6971": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 87,
      "value": "0x8"
    },
    "6973": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6974": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6975": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6977": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6978": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6979": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6980": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "6982": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6984": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6985": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6987": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6988": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6989": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6990": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6991": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6992": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 88,
      "value": "0x1"
    },
    "6994": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6995": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "6"
    },
    "6996": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6997": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6998": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6999": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7000": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7001": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7002": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7035": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "6"
    },
    "7036": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7037": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7038": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7039": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BA6"
    },
    "7042": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7043": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7044": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7051": {
      "op": "SHL"
    },
    "7052": {
      "op": "SUB"
    },
    "7053": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "6"
    },
    "7054": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7061": {
      "op": "SHL"
    },
    "7062": {
      "op": "SUB"
    },
    "7063": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "6"
    },
    "7064": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "6"
    },
    "7065": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BA6"
    },
    "7068": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7069": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 89,
      "value": "0x1BA6"
    },
    "7072": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7073": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7074": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E2C"
    },
    "7077": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7078": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7085": {
      "op": "SHL"
    },
    "7086": {
      "op": "SUB"
    },
    "7087": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7088": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "6"
    },
    "7089": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BBD"
    },
    "7092": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7093": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 90,
      "value": "0x9A4"
    },
    "7096": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7097": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EC9"
    },
    "7100": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7101": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7102": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7109": {
      "op": "SHL"
    },
    "7110": {
      "op": "SUB"
    },
    "7111": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "6"
    },
    "7112": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7119": {
      "op": "SHL"
    },
    "7120": {
      "op": "SUB"
    },
    "7121": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "6"
    },
    "7122": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "6"
    },
    "7123": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9A4"
    },
    "7126": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7127": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 91,
      "value": "0x9A4"
    },
    "7130": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7131": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7132": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F78"
    },
    "7135": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7145": {
      "op": "SHL"
    },
    "7146": {
      "op": "SUB"
    },
    "7147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "5"
    },
    "7149": {
      "op": "EXTCODESIZE"
    },
    "7150": {
      "op": "ISZERO"
    },
    "7151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD3"
    },
    "7154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7158": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7165": {
      "op": "SHL"
    },
    "7166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7174": {
      "op": "SHL"
    },
    "7175": {
      "op": "SUB"
    },
    "7176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "5"
    },
    "7178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "7184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C24"
    },
    "7188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7189": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7190": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "5"
    },
    "7192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "5"
    },
    "7194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "5"
    },
    "7196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2976"
    },
    "7203": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "5"
    },
    "7213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "5"
    },
    "7218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "5"
    },
    "7219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C5F"
    },
    "7228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7229": {
      "op": "POP"
    },
    "7230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7242": {
      "op": "NOT"
    },
    "7243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "5"
    },
    "7244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C5C"
    },
    "7252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29B3"
    },
    "7259": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CB9"
    },
    "7267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8D"
    },
    "7275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "5"
    },
    "7281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "5"
    },
    "7284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "7286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "5"
    },
    "7289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "7305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C92"
    },
    "7308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "5"
    },
    "7314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7315": {
      "op": "POP"
    },
    "7316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CB1"
    },
    "7321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 92,
      "value": "0x40"
    },
    "7324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7331": {
      "op": "SHL"
    },
    "7332": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7334": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "5"
    },
    "7337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "7340": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2924"
    },
    "7344": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "5"
    },
    "7352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7360": {
      "op": "SHL"
    },
    "7361": {
      "op": "SUB"
    },
    "7362": {
      "op": "NOT"
    },
    "7363": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "5",
      "statement": 93
    },
    "7364": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "5"
    },
    "7373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x173E"
    },
    "7378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7380": {
      "op": "POP"
    },
    "7381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 94,
      "value": "0x1"
    },
    "7383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7389": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7390": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7397": {
      "op": "SHL"
    },
    "7398": {
      "op": "SUB"
    },
    "7399": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 95
    },
    "7400": {
      "branch": 134,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "5"
    },
    "7401": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D34"
    },
    "7404": {
      "branch": 134,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7405": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7407": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7414": {
      "op": "SHL"
    },
    "7415": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7416": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7419": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7421": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7422": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "5"
    },
    "7423": {
      "op": "DUP2"
    },
    "7424": {
      "op": "SWAP1"
    },
    "7425": {
      "op": "MSTORE"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7428": {
      "op": "DUP3"
    },
    "7429": {
      "op": "ADD"
    },
    "7430": {
      "op": "MSTORE"
    },
    "7431": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7466": {
      "op": "DUP3"
    },
    "7467": {
      "op": "ADD"
    },
    "7468": {
      "op": "MSTORE"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7471": {
      "op": "ADD"
    },
    "7472": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "7475": {
      "op": "JUMP"
    },
    "7476": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7477": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7479": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7480": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7481": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7482": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7484": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7486": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7487": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7489": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7490": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7491": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7498": {
      "op": "SHL"
    },
    "7499": {
      "op": "SUB"
    },
    "7500": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "7501": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7502": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 96,
      "value": "0x1D99"
    },
    "7505": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7506": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7508": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7515": {
      "op": "SHL"
    },
    "7516": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7517": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7520": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7522": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7523": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "5"
    },
    "7524": {
      "op": "MSTORE"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7529": {
      "op": "DUP3"
    },
    "7530": {
      "op": "ADD"
    },
    "7531": {
      "op": "MSTORE"
    },
    "7532": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7567": {
      "op": "DUP3"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "MSTORE"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7572": {
      "op": "ADD"
    },
    "7573": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x86E"
    },
    "7576": {
      "op": "JUMP"
    },
    "7577": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7578": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 97,
      "value": "0x1DA5"
    },
    "7581": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7583": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7584": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7585": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B28"
    },
    "7588": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7589": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7596": {
      "op": "SHL"
    },
    "7597": {
      "op": "SUB"
    },
    "7598": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 98
    },
    "7599": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "5"
    },
    "7600": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7602": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7603": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7604": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7605": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7607": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7609": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7610": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7612": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7613": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7614": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7615": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7616": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7618": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7619": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7620": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DCE"
    },
    "7623": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7624": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7625": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7626": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x282A"
    },
    "7629": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7630": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7631": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7632": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7633": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7634": {
      "op": "POP"
    },
    "7635": {
      "op": "POP"
    },
    "7636": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 99,
      "value": "0x0"
    },
    "7638": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7639": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7640": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7641": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7643": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7645": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7646": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7648": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7649": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7650": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7651": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7652": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7659": {
      "op": "SHL"
    },
    "7660": {
      "op": "SUB"
    },
    "7661": {
      "op": "NOT"
    },
    "7662": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "5"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7669": {
      "op": "SHL"
    },
    "7670": {
      "op": "SUB"
    },
    "7671": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7672": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "5"
    },
    "7673": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7674": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7675": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "5"
    },
    "7676": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7677": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7678": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7679": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 100
    },
    "7680": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7681": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7682": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7683": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7684": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7717": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7718": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7719": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7720": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7721": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "5"
    },
    "7722": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "5"
    },
    "7723": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E39"
    },
    "7732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6B"
    },
    "7736": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7738": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E43"
    },
    "7741": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7743": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2842"
    },
    "7746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7748": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7750": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7752": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7753": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "7755": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7760": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7765": {
      "op": "POP"
    },
    "7766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7768": {
      "branch": 141,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "6"
    },
    "7769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E96"
    },
    "7772": {
      "branch": 141,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7779": {
      "op": "SHL"
    },
    "7780": {
      "op": "SUB"
    },
    "7781": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "6"
    },
    "7783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "7790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7797": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7798": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7801": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7802": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7803": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7804": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7805": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7806": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7807": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7808": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7809": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 101
    },
    "7810": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7811": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7812": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7813": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7814": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7815": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7816": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7817": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7818": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 102
    },
    "7819": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7820": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "7822": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7823": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7824": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7825": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7826": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7827": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7828": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7829": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7830": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7831": {
      "op": "POP"
    },
    "7832": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 103,
      "value": "0x0"
    },
    "7834": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7835": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7836": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7837": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "7839": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7841": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7842": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7843": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7844": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7846": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7847": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7848": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7849": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7850": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7851": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7858": {
      "op": "SHL"
    },
    "7859": {
      "op": "SUB"
    },
    "7860": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 104
    },
    "7861": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "7862": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "6"
    },
    "7863": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7864": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7865": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "7867": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7868": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7869": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7870": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7871": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7872": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7873": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7874": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7875": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7876": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7877": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7878": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7879": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7880": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7884": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EDB"
    },
    "7891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7892": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2842"
    },
    "7898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "7907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7909": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "7921": {
      "op": "POP"
    },
    "7922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "6"
    },
    "7928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F03"
    },
    "7931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F03"
    },
    "7935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AA"
    },
    "7938": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7943": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "6"
    },
    "7950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "6"
    },
    "7953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 105
    },
    "7954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "7956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7957": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "6"
    },
    "7961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F24"
    },
    "7964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F24"
    },
    "7968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28AA"
    },
    "7971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7975": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7976": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7977": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7978": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7980": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7981": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7982": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7983": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7984": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7985": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "6"
    },
    "7986": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7987": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7988": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7989": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7990": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 106
    },
    "7991": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7992": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7993": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "7995": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7996": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7997": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7998": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8000": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8001": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8002": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8003": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8004": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8005": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8006": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 107
    },
    "8007": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8008": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8009": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8010": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8011": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8012": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 108,
      "value": "0x8"
    },
    "8014": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8015": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8016": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8017": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5C"
    },
    "8020": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8021": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5C"
    },
    "8024": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29D0"
    },
    "8027": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8028": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8029": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8031": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8032": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "6"
    },
    "8033": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8034": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8035": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8036": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8038": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8039": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8041": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8043": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8044": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "6"
    },
    "8045": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8047": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8048": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8049": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8050": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8051": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8052": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8053": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8054": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8055": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8056": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8057": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8059": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F83"
    },
    "8062": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8063": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6B"
    },
    "8066": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8067": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8074": {
      "op": "SHL"
    },
    "8075": {
      "op": "SUB"
    },
    "8076": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 109
    },
    "8077": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8078": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "6"
    },
    "8079": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8081": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8082": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8083": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8084": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "8086": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8088": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8089": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8090": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8091": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8093": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8094": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8095": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8096": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8097": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8098": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8099": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8100": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8101": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8102": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8103": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8104": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8105": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8106": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8107": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 110
    },
    "8108": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8109": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8110": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "8112": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8113": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8114": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8115": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8116": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8117": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8118": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8119": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8120": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8121": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8122": {
      "op": "POP"
    },
    "8123": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8124": {
      "op": "JUMPDEST"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8131": {
      "op": "SHL"
    },
    "8132": {
      "op": "SUB"
    },
    "8133": {
      "op": "NOT"
    },
    "8134": {
      "op": "DUP2"
    },
    "8135": {
      "op": "AND"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "EQ"
    },
    "8138": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "8141": {
      "op": "JUMPI"
    },
    "8142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8144": {
      "op": "DUP1"
    },
    "8145": {
      "op": "REVERT"
    },
    "8146": {
      "op": "JUMPDEST"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8151": {
      "op": "DUP3"
    },
    "8152": {
      "op": "DUP5"
    },
    "8153": {
      "op": "SUB"
    },
    "8154": {
      "op": "SLT"
    },
    "8155": {
      "op": "ISZERO"
    },
    "8156": {
      "op": "PUSH2",
      "value": "0x1FE4"
    },
    "8159": {
      "op": "JUMPI"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8162": {
      "op": "DUP1"
    },
    "8163": {
      "op": "REVERT"
    },
    "8164": {
      "op": "JUMPDEST"
    },
    "8165": {
      "op": "DUP2"
    },
    "8166": {
      "op": "CALLDATALOAD"
    },
    "8167": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "8170": {
      "op": "DUP2"
    },
    "8171": {
      "op": "PUSH2",
      "value": "0x1FBC"
    },
    "8174": {
      "jump": "i",
      "op": "JUMP"
    },
    "8175": {
      "op": "JUMPDEST"
    },
    "8176": {
      "op": "SWAP4"
    },
    "8177": {
      "op": "SWAP3"
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "op": "POP"
    },
    "8180": {
      "op": "POP"
    },
    "8181": {
      "jump": "o",
      "op": "JUMP"
    },
    "8182": {
      "op": "JUMPDEST"
    },
    "8183": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8190": {
      "op": "SHL"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8193": {
      "op": "MSTORE"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8198": {
      "op": "MSTORE"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8203": {
      "op": "REVERT"
    },
    "8204": {
      "op": "JUMPDEST"
    },
    "8205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8216": {
      "op": "DUP1"
    },
    "8217": {
      "op": "DUP5"
    },
    "8218": {
      "op": "GT"
    },
    "8219": {
      "op": "ISZERO"
    },
    "8220": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8223": {
      "op": "JUMPI"
    },
    "8224": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8227": {
      "op": "PUSH2",
      "value": "0x1FF6"
    },
    "8230": {
      "jump": "i",
      "op": "JUMP"
    },
    "8231": {
      "op": "JUMPDEST"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8234": {
      "op": "MLOAD"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8237": {
      "op": "DUP6"
    },
    "8238": {
      "op": "ADD"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8241": {
      "op": "NOT"
    },
    "8242": {
      "op": "SWAP1"
    },
    "8243": {
      "op": "DUP2"
    },
    "8244": {
      "op": "AND"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8247": {
      "op": "ADD"
    },
    "8248": {
      "op": "AND"
    },
    "8249": {
      "op": "DUP2"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "SWAP1"
    },
    "8252": {
      "op": "DUP3"
    },
    "8253": {
      "op": "DUP3"
    },
    "8254": {
      "op": "GT"
    },
    "8255": {
      "op": "DUP2"
    },
    "8256": {
      "op": "DUP4"
    },
    "8257": {
      "op": "LT"
    },
    "8258": {
      "op": "OR"
    },
    "8259": {
      "op": "ISZERO"
    },
    "8260": {
      "op": "PUSH2",
      "value": "0x204F"
    },
    "8263": {
      "op": "JUMPI"
    },
    "8264": {
      "op": "PUSH2",
      "value": "0x204F"
    },
    "8267": {
      "op": "PUSH2",
      "value": "0x1FF6"
    },
    "8270": {
      "jump": "i",
      "op": "JUMP"
    },
    "8271": {
      "op": "JUMPDEST"
    },
    "8272": {
      "op": "DUP2"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8275": {
      "op": "MSTORE"
    },
    "8276": {
      "op": "DUP1"
    },
    "8277": {
      "op": "SWAP4"
    },
    "8278": {
      "op": "POP"
    },
    "8279": {
      "op": "DUP6"
    },
    "8280": {
      "op": "DUP2"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "op": "DUP7"
    },
    "8283": {
      "op": "DUP7"
    },
    "8284": {
      "op": "DUP7"
    },
    "8285": {
      "op": "ADD"
    },
    "8286": {
      "op": "GT"
    },
    "8287": {
      "op": "ISZERO"
    },
    "8288": {
      "op": "PUSH2",
      "value": "0x2068"
    },
    "8291": {
      "op": "JUMPI"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8294": {
      "op": "DUP1"
    },
    "8295": {
      "op": "REVERT"
    },
    "8296": {
      "op": "JUMPDEST"
    },
    "8297": {
      "op": "DUP6"
    },
    "8298": {
      "op": "DUP6"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8301": {
      "op": "DUP4"
    },
    "8302": {
      "op": "ADD"
    },
    "8303": {
      "op": "CALLDATACOPY"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8308": {
      "op": "DUP8"
    },
    "8309": {
      "op": "DUP4"
    },
    "8310": {
      "op": "ADD"
    },
    "8311": {
      "op": "ADD"
    },
    "8312": {
      "op": "MSTORE"
    },
    "8313": {
      "op": "POP"
    },
    "8314": {
      "op": "POP"
    },
    "8315": {
      "op": "POP"
    },
    "8316": {
      "op": "SWAP4"
    },
    "8317": {
      "op": "SWAP3"
    },
    "8318": {
      "op": "POP"
    },
    "8319": {
      "op": "POP"
    },
    "8320": {
      "op": "POP"
    },
    "8321": {
      "jump": "o",
      "op": "JUMP"
    },
    "8322": {
      "op": "JUMPDEST"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8325": {
      "op": "DUP1"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8328": {
      "op": "DUP4"
    },
    "8329": {
      "op": "DUP6"
    },
    "8330": {
      "op": "SUB"
    },
    "8331": {
      "op": "SLT"
    },
    "8332": {
      "op": "ISZERO"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x2095"
    },
    "8336": {
      "op": "JUMPI"
    },
    "8337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8339": {
      "op": "DUP1"
    },
    "8340": {
      "op": "REVERT"
    },
    "8341": {
      "op": "JUMPDEST"
    },
    "8342": {
      "op": "DUP3"
    },
    "8343": {
      "op": "CALLDATALOAD"
    },
    "8344": {
      "op": "SWAP2"
    },
    "8345": {
      "op": "POP"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8348": {
      "op": "DUP4"
    },
    "8349": {
      "op": "ADD"
    },
    "8350": {
      "op": "CALLDATALOAD"
    },
    "8351": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8360": {
      "op": "DUP2"
    },
    "8361": {
      "op": "GT"
    },
    "8362": {
      "op": "ISZERO"
    },
    "8363": {
      "op": "PUSH2",
      "value": "0x20B3"
    },
    "8366": {
      "op": "JUMPI"
    },
    "8367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8369": {
      "op": "DUP1"
    },
    "8370": {
      "op": "REVERT"
    },
    "8371": {
      "op": "JUMPDEST"
    },
    "8372": {
      "op": "DUP4"
    },
    "8373": {
      "op": "ADD"
    },
    "8374": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8376": {
      "op": "DUP2"
    },
    "8377": {
      "op": "ADD"
    },
    "8378": {
      "op": "DUP6"
    },
    "8379": {
      "op": "SGT"
    },
    "8380": {
      "op": "PUSH2",
      "value": "0x20C4"
    },
    "8383": {
      "op": "JUMPI"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8386": {
      "op": "DUP1"
    },
    "8387": {
      "op": "REVERT"
    },
    "8388": {
      "op": "JUMPDEST"
    },
    "8389": {
      "op": "PUSH2",
      "value": "0x20D3"
    },
    "8392": {
      "op": "DUP6"
    },
    "8393": {
      "op": "DUP3"
    },
    "8394": {
      "op": "CALLDATALOAD"
    },
    "8395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8397": {
      "op": "DUP5"
    },
    "8398": {
      "op": "ADD"
    },
    "8399": {
      "op": "PUSH2",
      "value": "0x200C"
    },
    "8402": {
      "jump": "i",
      "op": "JUMP"
    },
    "8403": {
      "op": "JUMPDEST"
    },
    "8404": {
      "op": "SWAP2"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "op": "POP"
    },
    "8407": {
      "op": "SWAP3"
    },
    "8408": {
      "op": "POP"
    },
    "8409": {
      "op": "SWAP3"
    },
    "8410": {
      "op": "SWAP1"
    },
    "8411": {
      "op": "POP"
    },
    "8412": {
      "jump": "o",
      "op": "JUMP"
    },
    "8413": {
      "op": "JUMPDEST"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8416": {
      "op": "JUMPDEST"
    },
    "8417": {
      "op": "DUP4"
    },
    "8418": {
      "op": "DUP2"
    },
    "8419": {
      "op": "LT"
    },
    "8420": {
      "op": "ISZERO"
    },
    "8421": {
      "op": "PUSH2",
      "value": "0x20F8"
    },
    "8424": {
      "op": "JUMPI"
    },
    "8425": {
      "op": "DUP2"
    },
    "8426": {
      "op": "DUP2"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "op": "MLOAD"
    },
    "8429": {
      "op": "DUP4"
    },
    "8430": {
      "op": "DUP3"
    },
    "8431": {
      "op": "ADD"
    },
    "8432": {
      "op": "MSTORE"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8435": {
      "op": "ADD"
    },
    "8436": {
      "op": "PUSH2",
      "value": "0x20E0"
    },
    "8439": {
      "op": "JUMP"
    },
    "8440": {
      "op": "JUMPDEST"
    },
    "8441": {
      "op": "DUP4"
    },
    "8442": {
      "op": "DUP2"
    },
    "8443": {
      "op": "GT"
    },
    "8444": {
      "op": "ISZERO"
    },
    "8445": {
      "op": "PUSH2",
      "value": "0x13CC"
    },
    "8448": {
      "op": "JUMPI"
    },
    "8449": {
      "op": "POP"
    },
    "8450": {
      "op": "POP"
    },
    "8451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8453": {
      "op": "SWAP2"
    },
    "8454": {
      "op": "ADD"
    },
    "8455": {
      "op": "MSTORE"
    },
    "8456": {
      "jump": "o",
      "op": "JUMP"
    },
    "8457": {
      "op": "JUMPDEST"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8460": {
      "op": "DUP2"
    },
    "8461": {
      "op": "MLOAD"
    },
    "8462": {
      "op": "DUP1"
    },
    "8463": {
      "op": "DUP5"
    },
    "8464": {
      "op": "MSTORE"
    },
    "8465": {
      "op": "PUSH2",
      "value": "0x2121"
    },
    "8468": {
      "op": "DUP2"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8471": {
      "op": "DUP7"
    },
    "8472": {
      "op": "ADD"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8475": {
      "op": "DUP7"
    },
    "8476": {
      "op": "ADD"
    },
    "8477": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "8480": {
      "jump": "i",
      "op": "JUMP"
    },
    "8481": {
      "op": "JUMPDEST"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8487": {
      "op": "NOT"
    },
    "8488": {
      "op": "AND"
    },
    "8489": {
      "op": "SWAP3"
    },
    "8490": {
      "op": "SWAP1"
    },
    "8491": {
      "op": "SWAP3"
    },
    "8492": {
      "op": "ADD"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8495": {
      "op": "ADD"
    },
    "8496": {
      "op": "SWAP3"
    },
    "8497": {
      "op": "SWAP2"
    },
    "8498": {
      "op": "POP"
    },
    "8499": {
      "op": "POP"
    },
    "8500": {
      "jump": "o",
      "op": "JUMP"
    },
    "8501": {
      "op": "JUMPDEST"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8504": {
      "op": "DUP2"
    },
    "8505": {
      "op": "MSTORE"
    },
    "8506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8508": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8513": {
      "op": "DUP4"
    },
    "8514": {
      "op": "ADD"
    },
    "8515": {
      "op": "DUP5"
    },
    "8516": {
      "op": "PUSH2",
      "value": "0x2109"
    },
    "8519": {
      "jump": "i",
      "op": "JUMP"
    },
    "8520": {
      "op": "JUMPDEST"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8525": {
      "op": "DUP3"
    },
    "8526": {
      "op": "DUP5"
    },
    "8527": {
      "op": "SUB"
    },
    "8528": {
      "op": "SLT"
    },
    "8529": {
      "op": "ISZERO"
    },
    "8530": {
      "op": "PUSH2",
      "value": "0x215A"
    },
    "8533": {
      "op": "JUMPI"
    },
    "8534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8536": {
      "op": "DUP1"
    },
    "8537": {
      "op": "REVERT"
    },
    "8538": {
      "op": "JUMPDEST"
    },
    "8539": {
      "op": "POP"
    },
    "8540": {
      "op": "CALLDATALOAD"
    },
    "8541": {
      "op": "SWAP2"
    },
    "8542": {
      "op": "SWAP1"
    },
    "8543": {
      "op": "POP"
    },
    "8544": {
      "jump": "o",
      "op": "JUMP"
    },
    "8545": {
      "op": "JUMPDEST"
    },
    "8546": {
      "op": "DUP1"
    },
    "8547": {
      "op": "CALLDATALOAD"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8554": {
      "op": "SHL"
    },
    "8555": {
      "op": "SUB"
    },
    "8556": {
      "op": "DUP2"
    },
    "8557": {
      "op": "AND"
    },
    "8558": {
      "op": "DUP2"
    },
    "8559": {
      "op": "EQ"
    },
    "8560": {
      "op": "PUSH2",
      "value": "0x2178"
    },
    "8563": {
      "op": "JUMPI"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8566": {
      "op": "DUP1"
    },
    "8567": {
      "op": "REVERT"
    },
    "8568": {
      "op": "JUMPDEST"
    },
    "8569": {
      "op": "SWAP2"
    },
    "8570": {
      "op": "SWAP1"
    },
    "8571": {
      "op": "POP"
    },
    "8572": {
      "jump": "o",
      "op": "JUMP"
    },
    "8573": {
      "op": "JUMPDEST"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8576": {
      "op": "DUP1"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8579": {
      "op": "DUP4"
    },
    "8580": {
      "op": "DUP6"
    },
    "8581": {
      "op": "SUB"
    },
    "8582": {
      "op": "SLT"
    },
    "8583": {
      "op": "ISZERO"
    },
    "8584": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8587": {
      "op": "JUMPI"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8590": {
      "op": "DUP1"
    },
    "8591": {
      "op": "REVERT"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "PUSH2",
      "value": "0x2199"
    },
    "8596": {
      "op": "DUP4"
    },
    "8597": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8600": {
      "jump": "i",
      "op": "JUMP"
    },
    "8601": {
      "op": "JUMPDEST"
    },
    "8602": {
      "op": "SWAP5"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8605": {
      "op": "SWAP4"
    },
    "8606": {
      "op": "SWAP1"
    },
    "8607": {
      "op": "SWAP4"
    },
    "8608": {
      "op": "ADD"
    },
    "8609": {
      "op": "CALLDATALOAD"
    },
    "8610": {
      "op": "SWAP4"
    },
    "8611": {
      "op": "POP"
    },
    "8612": {
      "op": "POP"
    },
    "8613": {
      "op": "POP"
    },
    "8614": {
      "jump": "o",
      "op": "JUMP"
    },
    "8615": {
      "op": "JUMPDEST"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8618": {
      "op": "DUP1"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8623": {
      "op": "DUP5"
    },
    "8624": {
      "op": "DUP7"
    },
    "8625": {
      "op": "SUB"
    },
    "8626": {
      "op": "SLT"
    },
    "8627": {
      "op": "ISZERO"
    },
    "8628": {
      "op": "PUSH2",
      "value": "0x21BC"
    },
    "8631": {
      "op": "JUMPI"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8634": {
      "op": "DUP1"
    },
    "8635": {
      "op": "REVERT"
    },
    "8636": {
      "op": "JUMPDEST"
    },
    "8637": {
      "op": "PUSH2",
      "value": "0x21C5"
    },
    "8640": {
      "op": "DUP5"
    },
    "8641": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8644": {
      "jump": "i",
      "op": "JUMP"
    },
    "8645": {
      "op": "JUMPDEST"
    },
    "8646": {
      "op": "SWAP3"
    },
    "8647": {
      "op": "POP"
    },
    "8648": {
      "op": "PUSH2",
      "value": "0x21D3"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8653": {
      "op": "DUP6"
    },
    "8654": {
      "op": "ADD"
    },
    "8655": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8658": {
      "jump": "i",
      "op": "JUMP"
    },
    "8659": {
      "op": "JUMPDEST"
    },
    "8660": {
      "op": "SWAP2"
    },
    "8661": {
      "op": "POP"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8664": {
      "op": "DUP5"
    },
    "8665": {
      "op": "ADD"
    },
    "8666": {
      "op": "CALLDATALOAD"
    },
    "8667": {
      "op": "SWAP1"
    },
    "8668": {
      "op": "POP"
    },
    "8669": {
      "op": "SWAP3"
    },
    "8670": {
      "op": "POP"
    },
    "8671": {
      "op": "SWAP3"
    },
    "8672": {
      "op": "POP"
    },
    "8673": {
      "op": "SWAP3"
    },
    "8674": {
      "jump": "o",
      "op": "JUMP"
    },
    "8675": {
      "op": "JUMPDEST"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8680": {
      "op": "DUP3"
    },
    "8681": {
      "op": "DUP5"
    },
    "8682": {
      "op": "SUB"
    },
    "8683": {
      "op": "SLT"
    },
    "8684": {
      "op": "ISZERO"
    },
    "8685": {
      "op": "PUSH2",
      "value": "0x21F5"
    },
    "8688": {
      "op": "JUMPI"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8691": {
      "op": "DUP1"
    },
    "8692": {
      "op": "REVERT"
    },
    "8693": {
      "op": "JUMPDEST"
    },
    "8694": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "8697": {
      "op": "DUP3"
    },
    "8698": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8701": {
      "jump": "i",
      "op": "JUMP"
    },
    "8702": {
      "op": "JUMPDEST"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8705": {
      "op": "DUP1"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8708": {
      "op": "DUP1"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8713": {
      "op": "DUP7"
    },
    "8714": {
      "op": "DUP9"
    },
    "8715": {
      "op": "SUB"
    },
    "8716": {
      "op": "SLT"
    },
    "8717": {
      "op": "ISZERO"
    },
    "8718": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8721": {
      "op": "JUMPI"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8724": {
      "op": "DUP1"
    },
    "8725": {
      "op": "REVERT"
    },
    "8726": {
      "op": "JUMPDEST"
    },
    "8727": {
      "op": "POP"
    },
    "8728": {
      "op": "POP"
    },
    "8729": {
      "op": "DUP4"
    },
    "8730": {
      "op": "CALLDATALOAD"
    },
    "8731": {
      "op": "SWAP6"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8734": {
      "op": "DUP6"
    },
    "8735": {
      "op": "ADD"
    },
    "8736": {
      "op": "CALLDATALOAD"
    },
    "8737": {
      "op": "SWAP6"
    },
    "8738": {
      "op": "POP"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8741": {
      "op": "DUP6"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "CALLDATALOAD"
    },
    "8744": {
      "op": "SWAP5"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8747": {
      "op": "DUP2"
    },
    "8748": {
      "op": "ADD"
    },
    "8749": {
      "op": "CALLDATALOAD"
    },
    "8750": {
      "op": "SWAP5"
    },
    "8751": {
      "op": "POP"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8754": {
      "op": "ADD"
    },
    "8755": {
      "op": "CALLDATALOAD"
    },
    "8756": {
      "op": "SWAP3"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "SWAP1"
    },
    "8759": {
      "op": "POP"
    },
    "8760": {
      "jump": "o",
      "op": "JUMP"
    },
    "8761": {
      "op": "JUMPDEST"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8764": {
      "op": "DUP1"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8767": {
      "op": "DUP4"
    },
    "8768": {
      "op": "DUP6"
    },
    "8769": {
      "op": "SUB"
    },
    "8770": {
      "op": "SLT"
    },
    "8771": {
      "op": "ISZERO"
    },
    "8772": {
      "op": "PUSH2",
      "value": "0x224C"
    },
    "8775": {
      "op": "JUMPI"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8778": {
      "op": "DUP1"
    },
    "8779": {
      "op": "REVERT"
    },
    "8780": {
      "op": "JUMPDEST"
    },
    "8781": {
      "op": "PUSH2",
      "value": "0x2255"
    },
    "8784": {
      "op": "DUP4"
    },
    "8785": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8788": {
      "jump": "i",
      "op": "JUMP"
    },
    "8789": {
      "op": "JUMPDEST"
    },
    "8790": {
      "op": "SWAP2"
    },
    "8791": {
      "op": "POP"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8794": {
      "op": "DUP4"
    },
    "8795": {
      "op": "ADD"
    },
    "8796": {
      "op": "CALLDATALOAD"
    },
    "8797": {
      "op": "DUP1"
    },
    "8798": {
      "op": "ISZERO"
    },
    "8799": {
      "op": "ISZERO"
    },
    "8800": {
      "op": "DUP2"
    },
    "8801": {
      "op": "EQ"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x226A"
    },
    "8805": {
      "op": "JUMPI"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8808": {
      "op": "DUP1"
    },
    "8809": {
      "op": "REVERT"
    },
    "8810": {
      "op": "JUMPDEST"
    },
    "8811": {
      "op": "DUP1"
    },
    "8812": {
      "op": "SWAP2"
    },
    "8813": {
      "op": "POP"
    },
    "8814": {
      "op": "POP"
    },
    "8815": {
      "op": "SWAP3"
    },
    "8816": {
      "op": "POP"
    },
    "8817": {
      "op": "SWAP3"
    },
    "8818": {
      "op": "SWAP1"
    },
    "8819": {
      "op": "POP"
    },
    "8820": {
      "jump": "o",
      "op": "JUMP"
    },
    "8821": {
      "op": "JUMPDEST"
    },
    "8822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8824": {
      "op": "DUP1"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8827": {
      "op": "DUP1"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8830": {
      "op": "DUP6"
    },
    "8831": {
      "op": "DUP8"
    },
    "8832": {
      "op": "SUB"
    },
    "8833": {
      "op": "SLT"
    },
    "8834": {
      "op": "ISZERO"
    },
    "8835": {
      "op": "PUSH2",
      "value": "0x228B"
    },
    "8838": {
      "op": "JUMPI"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8841": {
      "op": "DUP1"
    },
    "8842": {
      "op": "REVERT"
    },
    "8843": {
      "op": "JUMPDEST"
    },
    "8844": {
      "op": "PUSH2",
      "value": "0x2294"
    },
    "8847": {
      "op": "DUP6"
    },
    "8848": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8851": {
      "jump": "i",
      "op": "JUMP"
    },
    "8852": {
      "op": "JUMPDEST"
    },
    "8853": {
      "op": "SWAP4"
    },
    "8854": {
      "op": "POP"
    },
    "8855": {
      "op": "PUSH2",
      "value": "0x22A2"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8860": {
      "op": "DUP7"
    },
    "8861": {
      "op": "ADD"
    },
    "8862": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8865": {
      "jump": "i",
      "op": "JUMP"
    },
    "8866": {
      "op": "JUMPDEST"
    },
    "8867": {
      "op": "SWAP3"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8871": {
      "op": "DUP6"
    },
    "8872": {
      "op": "ADD"
    },
    "8873": {
      "op": "CALLDATALOAD"
    },
    "8874": {
      "op": "SWAP2"
    },
    "8875": {
      "op": "POP"
    },
    "8876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8878": {
      "op": "DUP6"
    },
    "8879": {
      "op": "ADD"
    },
    "8880": {
      "op": "CALLDATALOAD"
    },
    "8881": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8890": {
      "op": "DUP2"
    },
    "8891": {
      "op": "GT"
    },
    "8892": {
      "op": "ISZERO"
    },
    "8893": {
      "op": "PUSH2",
      "value": "0x22C5"
    },
    "8896": {
      "op": "JUMPI"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8899": {
      "op": "DUP1"
    },
    "8900": {
      "op": "REVERT"
    },
    "8901": {
      "op": "JUMPDEST"
    },
    "8902": {
      "op": "DUP6"
    },
    "8903": {
      "op": "ADD"
    },
    "8904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8906": {
      "op": "DUP2"
    },
    "8907": {
      "op": "ADD"
    },
    "8908": {
      "op": "DUP8"
    },
    "8909": {
      "op": "SGT"
    },
    "8910": {
      "op": "PUSH2",
      "value": "0x22D6"
    },
    "8913": {
      "op": "JUMPI"
    },
    "8914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8916": {
      "op": "DUP1"
    },
    "8917": {
      "op": "REVERT"
    },
    "8918": {
      "op": "JUMPDEST"
    },
    "8919": {
      "op": "PUSH2",
      "value": "0x22E5"
    },
    "8922": {
      "op": "DUP8"
    },
    "8923": {
      "op": "DUP3"
    },
    "8924": {
      "op": "CALLDATALOAD"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8927": {
      "op": "DUP5"
    },
    "8928": {
      "op": "ADD"
    },
    "8929": {
      "op": "PUSH2",
      "value": "0x200C"
    },
    "8932": {
      "jump": "i",
      "op": "JUMP"
    },
    "8933": {
      "op": "JUMPDEST"
    },
    "8934": {
      "op": "SWAP2"
    },
    "8935": {
      "op": "POP"
    },
    "8936": {
      "op": "POP"
    },
    "8937": {
      "op": "SWAP3"
    },
    "8938": {
      "op": "SWAP6"
    },
    "8939": {
      "op": "SWAP2"
    },
    "8940": {
      "op": "SWAP5"
    },
    "8941": {
      "op": "POP"
    },
    "8942": {
      "op": "SWAP3"
    },
    "8943": {
      "op": "POP"
    },
    "8944": {
      "jump": "o",
      "op": "JUMP"
    },
    "8945": {
      "op": "JUMPDEST"
    },
    "8946": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8953": {
      "op": "SHL"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8956": {
      "op": "MSTORE"
    },
    "8957": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8966": {
      "op": "REVERT"
    },
    "8967": {
      "op": "JUMPDEST"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8970": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "8973": {
      "op": "DUP3"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "SWAP1"
    },
    "8976": {
      "op": "POP"
    },
    "8977": {
      "op": "DUP14"
    },
    "8978": {
      "op": "DUP3"
    },
    "8979": {
      "op": "MSTORE"
    },
    "8980": {
      "op": "DUP13"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8983": {
      "op": "DUP4"
    },
    "8984": {
      "op": "ADD"
    },
    "8985": {
      "op": "MSTORE"
    },
    "8986": {
      "op": "DUP12"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8989": {
      "op": "DUP4"
    },
    "8990": {
      "op": "ADD"
    },
    "8991": {
      "op": "MSTORE"
    },
    "8992": {
      "op": "DUP11"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8995": {
      "op": "DUP4"
    },
    "8996": {
      "op": "ADD"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "DUP10"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9001": {
      "op": "DUP4"
    },
    "9002": {
      "op": "ADD"
    },
    "9003": {
      "op": "MSTORE"
    },
    "9004": {
      "op": "DUP9"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9007": {
      "op": "DUP4"
    },
    "9008": {
      "op": "ADD"
    },
    "9009": {
      "op": "MSTORE"
    },
    "9010": {
      "op": "DUP8"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9013": {
      "op": "DUP4"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "MSTORE"
    },
    "9016": {
      "op": "DUP7"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9019": {
      "op": "DUP4"
    },
    "9020": {
      "op": "ADD"
    },
    "9021": {
      "op": "MSTORE"
    },
    "9022": {
      "op": "DUP6"
    },
    "9023": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9026": {
      "op": "DUP4"
    },
    "9027": {
      "op": "ADD"
    },
    "9028": {
      "op": "MSTORE"
    },
    "9029": {
      "op": "DUP5"
    },
    "9030": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9033": {
      "op": "DUP4"
    },
    "9034": {
      "op": "ADD"
    },
    "9035": {
      "op": "MSTORE"
    },
    "9036": {
      "op": "DUP4"
    },
    "9037": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9040": {
      "op": "DUP4"
    },
    "9041": {
      "op": "ADD"
    },
    "9042": {
      "op": "MSTORE"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9045": {
      "op": "DUP4"
    },
    "9046": {
      "op": "LT"
    },
    "9047": {
      "op": "PUSH2",
      "value": "0x2370"
    },
    "9050": {
      "op": "JUMPI"
    },
    "9051": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9058": {
      "op": "SHL"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9061": {
      "op": "MSTORE"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9066": {
      "op": "MSTORE"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9071": {
      "op": "REVERT"
    },
    "9072": {
      "op": "JUMPDEST"
    },
    "9073": {
      "op": "DUP3"
    },
    "9074": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9077": {
      "op": "DUP4"
    },
    "9078": {
      "op": "ADD"
    },
    "9079": {
      "op": "MSTORE"
    },
    "9080": {
      "op": "SWAP14"
    },
    "9081": {
      "op": "SWAP13"
    },
    "9082": {
      "op": "POP"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "op": "POP"
    },
    "9085": {
      "op": "POP"
    },
    "9086": {
      "op": "POP"
    },
    "9087": {
      "op": "POP"
    },
    "9088": {
      "op": "POP"
    },
    "9089": {
      "op": "POP"
    },
    "9090": {
      "op": "POP"
    },
    "9091": {
      "op": "POP"
    },
    "9092": {
      "op": "POP"
    },
    "9093": {
      "op": "POP"
    },
    "9094": {
      "op": "POP"
    },
    "9095": {
      "jump": "o",
      "op": "JUMP"
    },
    "9096": {
      "op": "JUMPDEST"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9099": {
      "op": "DUP1"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9102": {
      "op": "DUP4"
    },
    "9103": {
      "op": "DUP6"
    },
    "9104": {
      "op": "SUB"
    },
    "9105": {
      "op": "SLT"
    },
    "9106": {
      "op": "ISZERO"
    },
    "9107": {
      "op": "PUSH2",
      "value": "0x239B"
    },
    "9110": {
      "op": "JUMPI"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9113": {
      "op": "DUP1"
    },
    "9114": {
      "op": "REVERT"
    },
    "9115": {
      "op": "JUMPDEST"
    },
    "9116": {
      "op": "PUSH2",
      "value": "0x23A4"
    },
    "9119": {
      "op": "DUP4"
    },
    "9120": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "9123": {
      "jump": "i",
      "op": "JUMP"
    },
    "9124": {
      "op": "JUMPDEST"
    },
    "9125": {
      "op": "SWAP2"
    },
    "9126": {
      "op": "POP"
    },
    "9127": {
      "op": "PUSH2",
      "value": "0x23B2"
    },
    "9130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9132": {
      "op": "DUP5"
    },
    "9133": {
      "op": "ADD"
    },
    "9134": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "9137": {
      "jump": "i",
      "op": "JUMP"
    },
    "9138": {
      "op": "JUMPDEST"
    },
    "9139": {
      "op": "SWAP1"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "SWAP3"
    },
    "9142": {
      "op": "POP"
    },
    "9143": {
      "op": "SWAP3"
    },
    "9144": {
      "op": "SWAP1"
    },
    "9145": {
      "op": "POP"
    },
    "9146": {
      "jump": "o",
      "op": "JUMP"
    },
    "9147": {
      "op": "JUMPDEST"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9150": {
      "op": "DUP2"
    },
    "9151": {
      "op": "MLOAD"
    },
    "9152": {
      "op": "PUSH2",
      "value": "0x23CD"
    },
    "9155": {
      "op": "DUP2"
    },
    "9156": {
      "op": "DUP6"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9159": {
      "op": "DUP7"
    },
    "9160": {
      "op": "ADD"
    },
    "9161": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9164": {
      "jump": "i",
      "op": "JUMP"
    },
    "9165": {
      "op": "JUMPDEST"
    },
    "9166": {
      "op": "SWAP3"
    },
    "9167": {
      "op": "SWAP1"
    },
    "9168": {
      "op": "SWAP3"
    },
    "9169": {
      "op": "ADD"
    },
    "9170": {
      "op": "SWAP3"
    },
    "9171": {
      "op": "SWAP2"
    },
    "9172": {
      "op": "POP"
    },
    "9173": {
      "op": "POP"
    },
    "9174": {
      "jump": "o",
      "op": "JUMP"
    },
    "9175": {
      "op": "JUMPDEST"
    },
    "9176": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "9209": {
      "op": "DUP2"
    },
    "9210": {
      "op": "MSTORE"
    },
    "9211": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9246": {
      "op": "DUP3"
    },
    "9247": {
      "op": "ADD"
    },
    "9248": {
      "op": "MSTORE"
    },
    "9249": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "9284": {
      "op": "DUP3"
    },
    "9285": {
      "op": "ADD"
    },
    "9286": {
      "op": "MSTORE"
    },
    "9287": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "9294": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "9296": {
      "op": "SHL"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "9299": {
      "op": "DUP3"
    },
    "9300": {
      "op": "ADD"
    },
    "9301": {
      "op": "MSTORE"
    },
    "9302": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9317": {
      "op": "SHL"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "9320": {
      "op": "DUP3"
    },
    "9321": {
      "op": "ADD"
    },
    "9322": {
      "op": "MSTORE"
    },
    "9323": {
      "op": "DUP3"
    },
    "9324": {
      "op": "MLOAD"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9327": {
      "op": "SWAP1"
    },
    "9328": {
      "op": "PUSH2",
      "value": "0x2480"
    },
    "9331": {
      "op": "DUP2"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "9334": {
      "op": "DUP6"
    },
    "9335": {
      "op": "ADD"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9338": {
      "op": "DUP9"
    },
    "9339": {
      "op": "ADD"
    },
    "9340": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9343": {
      "jump": "i",
      "op": "JUMP"
    },
    "9344": {
      "op": "JUMPDEST"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "9352": {
      "op": "SWAP2"
    },
    "9353": {
      "op": "DUP5"
    },
    "9354": {
      "op": "ADD"
    },
    "9355": {
      "op": "SWAP2"
    },
    "9356": {
      "op": "DUP3"
    },
    "9357": {
      "op": "ADD"
    },
    "9358": {
      "op": "MSTORE"
    },
    "9359": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "9380": {
      "op": "SHL"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "9421": {
      "op": "DUP3"
    },
    "9422": {
      "op": "ADD"
    },
    "9423": {
      "op": "MSTORE"
    },
    "9424": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9459": {
      "op": "DUP3"
    },
    "9460": {
      "op": "ADD"
    },
    "9461": {
      "op": "MSTORE"
    },
    "9462": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "9477": {
      "op": "SHL"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "9480": {
      "op": "DUP3"
    },
    "9481": {
      "op": "ADD"
    },
    "9482": {
      "op": "MSTORE"
    },
    "9483": {
      "op": "PUSH2",
      "value": "0x2528"
    },
    "9486": {
      "op": "PUSH2",
      "value": "0x251A"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "9491": {
      "op": "DUP4"
    },
    "9492": {
      "op": "ADD"
    },
    "9493": {
      "op": "DUP7"
    },
    "9494": {
      "op": "PUSH2",
      "value": "0x23BB"
    },
    "9497": {
      "jump": "i",
      "op": "JUMP"
    },
    "9498": {
      "op": "JUMPDEST"
    },
    "9499": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9504": {
      "op": "SHL"
    },
    "9505": {
      "op": "DUP2"
    },
    "9506": {
      "op": "MSTORE"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9509": {
      "op": "ADD"
    },
    "9510": {
      "op": "SWAP1"
    },
    "9511": {
      "op": "JUMP"
    },
    "9512": {
      "op": "JUMPDEST"
    },
    "9513": {
      "op": "SWAP6"
    },
    "9514": {
      "op": "SWAP5"
    },
    "9515": {
      "op": "POP"
    },
    "9516": {
      "op": "POP"
    },
    "9517": {
      "op": "POP"
    },
    "9518": {
      "op": "POP"
    },
    "9519": {
      "op": "POP"
    },
    "9520": {
      "jump": "o",
      "op": "JUMP"
    },
    "9521": {
      "op": "JUMPDEST"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9524": {
      "op": "DUP6"
    },
    "9525": {
      "op": "MLOAD"
    },
    "9526": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "9529": {
      "op": "DUP2"
    },
    "9530": {
      "op": "DUP5"
    },
    "9531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9533": {
      "op": "DUP11"
    },
    "9534": {
      "op": "ADD"
    },
    "9535": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9538": {
      "jump": "i",
      "op": "JUMP"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "DUP1"
    },
    "9541": {
      "op": "DUP4"
    },
    "9542": {
      "op": "ADD"
    },
    "9543": {
      "op": "SWAP1"
    },
    "9544": {
      "op": "POP"
    },
    "9545": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "9578": {
      "op": "DUP1"
    },
    "9579": {
      "op": "DUP3"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9616": {
      "op": "DUP4"
    },
    "9617": {
      "op": "ADD"
    },
    "9618": {
      "op": "MSTORE"
    },
    "9619": {
      "op": "DUP7"
    },
    "9620": {
      "op": "MLOAD"
    },
    "9621": {
      "op": "PUSH2",
      "value": "0x25A5"
    },
    "9624": {
      "op": "DUP2"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9627": {
      "op": "DUP6"
    },
    "9628": {
      "op": "ADD"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9631": {
      "op": "DUP12"
    },
    "9632": {
      "op": "ADD"
    },
    "9633": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9636": {
      "jump": "i",
      "op": "JUMP"
    },
    "9637": {
      "op": "JUMPDEST"
    },
    "9638": {
      "op": "DUP1"
    },
    "9639": {
      "op": "DUP4"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "SWAP3"
    },
    "9642": {
      "op": "POP"
    },
    "9643": {
      "op": "POP"
    },
    "9644": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "op": "DUP1"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9653": {
      "op": "DUP5"
    },
    "9654": {
      "op": "ADD"
    },
    "9655": {
      "op": "MSTORE"
    },
    "9656": {
      "op": "DUP2"
    },
    "9657": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "9659": {
      "op": "DUP5"
    },
    "9660": {
      "op": "ADD"
    },
    "9661": {
      "op": "MSTORE"
    },
    "9662": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "9697": {
      "op": "DUP5"
    },
    "9698": {
      "op": "ADD"
    },
    "9699": {
      "op": "MSTORE"
    },
    "9700": {
      "op": "DUP7"
    },
    "9701": {
      "op": "MLOAD"
    },
    "9702": {
      "op": "PUSH2",
      "value": "0x25F6"
    },
    "9705": {
      "op": "DUP2"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x76"
    },
    "9708": {
      "op": "DUP7"
    },
    "9709": {
      "op": "ADD"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9712": {
      "op": "DUP12"
    },
    "9713": {
      "op": "ADD"
    },
    "9714": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9717": {
      "jump": "i",
      "op": "JUMP"
    },
    "9718": {
      "op": "JUMPDEST"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x76"
    },
    "9721": {
      "op": "SWAP4"
    },
    "9722": {
      "op": "ADD"
    },
    "9723": {
      "op": "SWAP3"
    },
    "9724": {
      "op": "DUP4"
    },
    "9725": {
      "op": "ADD"
    },
    "9726": {
      "op": "MSTORE"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "9729": {
      "op": "DUP3"
    },
    "9730": {
      "op": "ADD"
    },
    "9731": {
      "op": "MSTORE"
    },
    "9732": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "9767": {
      "op": "DUP3"
    },
    "9768": {
      "op": "ADD"
    },
    "9769": {
      "op": "MSTORE"
    },
    "9770": {
      "op": "DUP4"
    },
    "9771": {
      "op": "MLOAD"
    },
    "9772": {
      "op": "PUSH2",
      "value": "0x263C"
    },
    "9775": {
      "op": "DUP2"
    },
    "9776": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "9778": {
      "op": "DUP5"
    },
    "9779": {
      "op": "ADD"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9782": {
      "op": "DUP9"
    },
    "9783": {
      "op": "ADD"
    },
    "9784": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9787": {
      "jump": "i",
      "op": "JUMP"
    },
    "9788": {
      "op": "JUMPDEST"
    },
    "9789": {
      "op": "PUSH2",
      "value": "0x2653"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "9794": {
      "op": "DUP3"
    },
    "9795": {
      "op": "DUP5"
    },
    "9796": {
      "op": "ADD"
    },
    "9797": {
      "op": "ADD"
    },
    "9798": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "9801": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9803": {
      "op": "SHL"
    },
    "9804": {
      "op": "DUP2"
    },
    "9805": {
      "op": "MSTORE"
    },
    "9806": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9808": {
      "op": "ADD"
    },
    "9809": {
      "op": "SWAP1"
    },
    "9810": {
      "op": "JUMP"
    },
    "9811": {
      "op": "JUMPDEST"
    },
    "9812": {
      "op": "SWAP9"
    },
    "9813": {
      "op": "SWAP8"
    },
    "9814": {
      "op": "POP"
    },
    "9815": {
      "op": "POP"
    },
    "9816": {
      "op": "POP"
    },
    "9817": {
      "op": "POP"
    },
    "9818": {
      "op": "POP"
    },
    "9819": {
      "op": "POP"
    },
    "9820": {
      "op": "POP"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "jump": "o",
      "op": "JUMP"
    },
    "9823": {
      "op": "JUMPDEST"
    },
    "9824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9826": {
      "op": "DUP6"
    },
    "9827": {
      "op": "MLOAD"
    },
    "9828": {
      "op": "PUSH2",
      "value": "0x2671"
    },
    "9831": {
      "op": "DUP2"
    },
    "9832": {
      "op": "DUP5"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9835": {
      "op": "DUP11"
    },
    "9836": {
      "op": "ADD"
    },
    "9837": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9840": {
      "jump": "i",
      "op": "JUMP"
    },
    "9841": {
      "op": "JUMPDEST"
    },
    "9842": {
      "op": "DUP1"
    },
    "9843": {
      "op": "DUP4"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "SWAP1"
    },
    "9846": {
      "op": "POP"
    },
    "9847": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "9880": {
      "op": "DUP1"
    },
    "9881": {
      "op": "DUP3"
    },
    "9882": {
      "op": "MSTORE"
    },
    "9883": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "9916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9918": {
      "op": "DUP4"
    },
    "9919": {
      "op": "ADD"
    },
    "9920": {
      "op": "MSTORE"
    },
    "9921": {
      "op": "DUP7"
    },
    "9922": {
      "op": "MLOAD"
    },
    "9923": {
      "op": "PUSH2",
      "value": "0x26D3"
    },
    "9926": {
      "op": "DUP2"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "9929": {
      "op": "DUP6"
    },
    "9930": {
      "op": "ADD"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9933": {
      "op": "DUP12"
    },
    "9934": {
      "op": "ADD"
    },
    "9935": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "9938": {
      "jump": "i",
      "op": "JUMP"
    },
    "9939": {
      "op": "JUMPDEST"
    },
    "9940": {
      "op": "DUP1"
    },
    "9941": {
      "op": "DUP4"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "SWAP3"
    },
    "9944": {
      "op": "POP"
    },
    "9945": {
      "op": "POP"
    },
    "9946": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9951": {
      "op": "SHL"
    },
    "9952": {
      "op": "DUP1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "9955": {
      "op": "DUP5"
    },
    "9956": {
      "op": "ADD"
    },
    "9957": {
      "op": "MSTORE"
    },
    "9958": {
      "op": "DUP2"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9961": {
      "op": "DUP5"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "MSTORE"
    },
    "9964": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "9997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9999": {
      "op": "DUP5"
    },
    "10000": {
      "op": "ADD"
    },
    "10001": {
      "op": "MSTORE"
    },
    "10002": {
      "op": "DUP7"
    },
    "10003": {
      "op": "MLOAD"
    },
    "10004": {
      "op": "PUSH2",
      "value": "0x2724"
    },
    "10007": {
      "op": "DUP2"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10010": {
      "op": "DUP7"
    },
    "10011": {
      "op": "ADD"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10014": {
      "op": "DUP12"
    },
    "10015": {
      "op": "ADD"
    },
    "10016": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "10019": {
      "jump": "i",
      "op": "JUMP"
    },
    "10020": {
      "op": "JUMPDEST"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10023": {
      "op": "SWAP4"
    },
    "10024": {
      "op": "ADD"
    },
    "10025": {
      "op": "SWAP3"
    },
    "10026": {
      "op": "DUP4"
    },
    "10027": {
      "op": "ADD"
    },
    "10028": {
      "op": "MSTORE"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10031": {
      "op": "DUP3"
    },
    "10032": {
      "op": "ADD"
    },
    "10033": {
      "op": "MSTORE"
    },
    "10034": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10069": {
      "op": "DUP3"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "10080": {
      "op": "SHL"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10083": {
      "op": "DUP3"
    },
    "10084": {
      "op": "ADD"
    },
    "10085": {
      "op": "MSTORE"
    },
    "10086": {
      "op": "PUSH2",
      "value": "0x2775"
    },
    "10089": {
      "op": "PUSH2",
      "value": "0x251A"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "10094": {
      "op": "DUP4"
    },
    "10095": {
      "op": "ADD"
    },
    "10096": {
      "op": "DUP7"
    },
    "10097": {
      "op": "PUSH2",
      "value": "0x23BB"
    },
    "10100": {
      "jump": "i",
      "op": "JUMP"
    },
    "10101": {
      "op": "JUMPDEST"
    },
    "10102": {
      "op": "SWAP8"
    },
    "10103": {
      "op": "SWAP7"
    },
    "10104": {
      "op": "POP"
    },
    "10105": {
      "op": "POP"
    },
    "10106": {
      "op": "POP"
    },
    "10107": {
      "op": "POP"
    },
    "10108": {
      "op": "POP"
    },
    "10109": {
      "op": "POP"
    },
    "10110": {
      "op": "POP"
    },
    "10111": {
      "jump": "o",
      "op": "JUMP"
    },
    "10112": {
      "op": "JUMPDEST"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10115": {
      "op": "DUP3"
    },
    "10116": {
      "op": "MLOAD"
    },
    "10117": {
      "op": "PUSH2",
      "value": "0x2792"
    },
    "10120": {
      "op": "DUP2"
    },
    "10121": {
      "op": "DUP5"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10124": {
      "op": "DUP8"
    },
    "10125": {
      "op": "ADD"
    },
    "10126": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "10129": {
      "jump": "i",
      "op": "JUMP"
    },
    "10130": {
      "op": "JUMPDEST"
    },
    "10131": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10135": {
      "op": "SHL"
    },
    "10136": {
      "op": "SWAP3"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "SWAP2"
    },
    "10139": {
      "op": "DUP3"
    },
    "10140": {
      "op": "MSTORE"
    },
    "10141": {
      "op": "POP"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10146": {
      "op": "SHL"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10149": {
      "op": "DUP3"
    },
    "10150": {
      "op": "ADD"
    },
    "10151": {
      "op": "MSTORE"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "SWAP2"
    },
    "10156": {
      "op": "SWAP1"
    },
    "10157": {
      "op": "POP"
    },
    "10158": {
      "jump": "o",
      "op": "JUMP"
    },
    "10159": {
      "op": "JUMPDEST"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10162": {
      "op": "DUP2"
    },
    "10163": {
      "op": "DUP2"
    },
    "10164": {
      "op": "SHR"
    },
    "10165": {
      "op": "SWAP1"
    },
    "10166": {
      "op": "DUP3"
    },
    "10167": {
      "op": "AND"
    },
    "10168": {
      "op": "DUP1"
    },
    "10169": {
      "op": "PUSH2",
      "value": "0x27C3"
    },
    "10172": {
      "op": "JUMPI"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10175": {
      "op": "DUP3"
    },
    "10176": {
      "op": "AND"
    },
    "10177": {
      "op": "SWAP2"
    },
    "10178": {
      "op": "POP"
    },
    "10179": {
      "op": "JUMPDEST"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10182": {
      "op": "DUP3"
    },
    "10183": {
      "op": "LT"
    },
    "10184": {
      "op": "DUP2"
    },
    "10185": {
      "op": "EQ"
    },
    "10186": {
      "op": "ISZERO"
    },
    "10187": {
      "op": "PUSH2",
      "value": "0x27E4"
    },
    "10190": {
      "op": "JUMPI"
    },
    "10191": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10198": {
      "op": "SHL"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10201": {
      "op": "MSTORE"
    },
    "10202": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10206": {
      "op": "MSTORE"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10211": {
      "op": "REVERT"
    },
    "10212": {
      "op": "JUMPDEST"
    },
    "10213": {
      "op": "POP"
    },
    "10214": {
      "op": "SWAP2"
    },
    "10215": {
      "op": "SWAP1"
    },
    "10216": {
      "op": "POP"
    },
    "10217": {
      "jump": "o",
      "op": "JUMP"
    },
    "10218": {
      "op": "JUMPDEST"
    },
    "10219": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10226": {
      "op": "SHL"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10229": {
      "op": "MSTORE"
    },
    "10230": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10234": {
      "op": "MSTORE"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10239": {
      "op": "REVERT"
    },
    "10240": {
      "op": "JUMPDEST"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10243": {
      "op": "DUP3"
    },
    "10244": {
      "op": "PUSH2",
      "value": "0x280F"
    },
    "10247": {
      "op": "JUMPI"
    },
    "10248": {
      "op": "PUSH2",
      "value": "0x280F"
    },
    "10251": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10254": {
      "jump": "i",
      "op": "JUMP"
    },
    "10255": {
      "op": "JUMPDEST"
    },
    "10256": {
      "op": "POP"
    },
    "10257": {
      "op": "MOD"
    },
    "10258": {
      "op": "SWAP1"
    },
    "10259": {
      "jump": "o",
      "op": "JUMP"
    },
    "10260": {
      "op": "JUMPDEST"
    },
    "10261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10268": {
      "op": "SHL"
    },
    "10269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10271": {
      "op": "MSTORE"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10276": {
      "op": "MSTORE"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10281": {
      "op": "REVERT"
    },
    "10282": {
      "op": "JUMPDEST"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10285": {
      "op": "DUP3"
    },
    "10286": {
      "op": "NOT"
    },
    "10287": {
      "op": "DUP3"
    },
    "10288": {
      "op": "GT"
    },
    "10289": {
      "op": "ISZERO"
    },
    "10290": {
      "op": "PUSH2",
      "value": "0x283D"
    },
    "10293": {
      "op": "JUMPI"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x283D"
    },
    "10297": {
      "op": "PUSH2",
      "value": "0x2814"
    },
    "10300": {
      "jump": "i",
      "op": "JUMP"
    },
    "10301": {
      "op": "JUMPDEST"
    },
    "10302": {
      "op": "POP"
    },
    "10303": {
      "op": "ADD"
    },
    "10304": {
      "op": "SWAP1"
    },
    "10305": {
      "jump": "o",
      "op": "JUMP"
    },
    "10306": {
      "op": "JUMPDEST"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10309": {
      "op": "DUP3"
    },
    "10310": {
      "op": "DUP3"
    },
    "10311": {
      "op": "LT"
    },
    "10312": {
      "op": "ISZERO"
    },
    "10313": {
      "op": "PUSH2",
      "value": "0x2854"
    },
    "10316": {
      "op": "JUMPI"
    },
    "10317": {
      "op": "PUSH2",
      "value": "0x2854"
    },
    "10320": {
      "op": "PUSH2",
      "value": "0x2814"
    },
    "10323": {
      "jump": "i",
      "op": "JUMP"
    },
    "10324": {
      "op": "JUMPDEST"
    },
    "10325": {
      "op": "POP"
    },
    "10326": {
      "op": "SUB"
    },
    "10327": {
      "op": "SWAP1"
    },
    "10328": {
      "jump": "o",
      "op": "JUMP"
    },
    "10329": {
      "op": "JUMPDEST"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10332": {
      "op": "DUP1"
    },
    "10333": {
      "op": "DUP3"
    },
    "10334": {
      "op": "MSTORE"
    },
    "10335": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "10337": {
      "op": "SWAP1"
    },
    "10338": {
      "op": "DUP3"
    },
    "10339": {
      "op": "ADD"
    },
    "10340": {
      "op": "MSTORE"
    },
    "10341": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "10374": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10376": {
      "op": "DUP3"
    },
    "10377": {
      "op": "ADD"
    },
    "10378": {
      "op": "MSTORE"
    },
    "10379": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "10399": {
      "op": "SHL"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10402": {
      "op": "DUP3"
    },
    "10403": {
      "op": "ADD"
    },
    "10404": {
      "op": "MSTORE"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10407": {
      "op": "ADD"
    },
    "10408": {
      "op": "SWAP1"
    },
    "10409": {
      "jump": "o",
      "op": "JUMP"
    },
    "10410": {
      "op": "JUMPDEST"
    },
    "10411": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10418": {
      "op": "SHL"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10421": {
      "op": "MSTORE"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10426": {
      "op": "MSTORE"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10431": {
      "op": "REVERT"
    },
    "10432": {
      "op": "JUMPDEST"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10435": {
      "op": "DUP1"
    },
    "10436": {
      "op": "DUP3"
    },
    "10437": {
      "op": "MSTORE"
    },
    "10438": {
      "op": "DUP2"
    },
    "10439": {
      "op": "DUP2"
    },
    "10440": {
      "op": "ADD"
    },
    "10441": {
      "op": "MSTORE"
    },
    "10442": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10477": {
      "op": "DUP3"
    },
    "10478": {
      "op": "ADD"
    },
    "10479": {
      "op": "MSTORE"
    },
    "10480": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10482": {
      "op": "ADD"
    },
    "10483": {
      "op": "SWAP1"
    },
    "10484": {
      "jump": "o",
      "op": "JUMP"
    },
    "10485": {
      "op": "JUMPDEST"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10490": {
      "op": "NOT"
    },
    "10491": {
      "op": "DUP3"
    },
    "10492": {
      "op": "EQ"
    },
    "10493": {
      "op": "ISZERO"
    },
    "10494": {
      "op": "PUSH2",
      "value": "0x2909"
    },
    "10497": {
      "op": "JUMPI"
    },
    "10498": {
      "op": "PUSH2",
      "value": "0x2909"
    },
    "10501": {
      "op": "PUSH2",
      "value": "0x2814"
    },
    "10504": {
      "jump": "i",
      "op": "JUMP"
    },
    "10505": {
      "op": "JUMPDEST"
    },
    "10506": {
      "op": "POP"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10509": {
      "op": "ADD"
    },
    "10510": {
      "op": "SWAP1"
    },
    "10511": {
      "jump": "o",
      "op": "JUMP"
    },
    "10512": {
      "op": "JUMPDEST"
    },
    "10513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10515": {
      "op": "DUP3"
    },
    "10516": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10519": {
      "op": "JUMPI"
    },
    "10520": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10523": {
      "op": "PUSH2",
      "value": "0x27EA"
    },
    "10526": {
      "jump": "i",
      "op": "JUMP"
    },
    "10527": {
      "op": "JUMPDEST"
    },
    "10528": {
      "op": "POP"
    },
    "10529": {
      "op": "DIV"
    },
    "10530": {
      "op": "SWAP1"
    },
    "10531": {
      "jump": "o",
      "op": "JUMP"
    },
    "10532": {
      "op": "JUMPDEST"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10535": {
      "op": "DUP1"
    },
    "10536": {
      "op": "DUP3"
    },
    "10537": {
      "op": "MSTORE"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10540": {
      "op": "SWAP1"
    },
    "10541": {
      "op": "DUP3"
    },
    "10542": {
      "op": "ADD"
    },
    "10543": {
      "op": "MSTORE"
    },
    "10544": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10579": {
      "op": "DUP3"
    },
    "10580": {
      "op": "ADD"
    },
    "10581": {
      "op": "MSTORE"
    },
    "10582": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "10601": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "10603": {
      "op": "SHL"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10606": {
      "op": "DUP3"
    },
    "10607": {
      "op": "ADD"
    },
    "10608": {
      "op": "MSTORE"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10611": {
      "op": "ADD"
    },
    "10612": {
      "op": "SWAP1"
    },
    "10613": {
      "jump": "o",
      "op": "JUMP"
    },
    "10614": {
      "op": "JUMPDEST"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10621": {
      "op": "SHL"
    },
    "10622": {
      "op": "SUB"
    },
    "10623": {
      "op": "DUP6"
    },
    "10624": {
      "op": "DUP2"
    },
    "10625": {
      "op": "AND"
    },
    "10626": {
      "op": "DUP3"
    },
    "10627": {
      "op": "MSTORE"
    },
    "10628": {
      "op": "DUP5"
    },
    "10629": {
      "op": "AND"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10632": {
      "op": "DUP3"
    },
    "10633": {
      "op": "ADD"
    },
    "10634": {
      "op": "MSTORE"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10637": {
      "op": "DUP2"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "DUP4"
    },
    "10640": {
      "op": "SWAP1"
    },
    "10641": {
      "op": "MSTORE"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10646": {
      "op": "DUP3"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "DUP2"
    },
    "10649": {
      "op": "SWAP1"
    },
    "10650": {
      "op": "MSTORE"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10653": {
      "op": "SWAP1"
    },
    "10654": {
      "op": "PUSH2",
      "value": "0x29A9"
    },
    "10657": {
      "op": "SWAP1"
    },
    "10658": {
      "op": "DUP4"
    },
    "10659": {
      "op": "ADD"
    },
    "10660": {
      "op": "DUP5"
    },
    "10661": {
      "op": "PUSH2",
      "value": "0x2109"
    },
    "10664": {
      "jump": "i",
      "op": "JUMP"
    },
    "10665": {
      "op": "JUMPDEST"
    },
    "10666": {
      "op": "SWAP7"
    },
    "10667": {
      "op": "SWAP6"
    },
    "10668": {
      "op": "POP"
    },
    "10669": {
      "op": "POP"
    },
    "10670": {
      "op": "POP"
    },
    "10671": {
      "op": "POP"
    },
    "10672": {
      "op": "POP"
    },
    "10673": {
      "op": "POP"
    },
    "10674": {
      "jump": "o",
      "op": "JUMP"
    },
    "10675": {
      "op": "JUMPDEST"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10680": {
      "op": "DUP3"
    },
    "10681": {
      "op": "DUP5"
    },
    "10682": {
      "op": "SUB"
    },
    "10683": {
      "op": "SLT"
    },
    "10684": {
      "op": "ISZERO"
    },
    "10685": {
      "op": "PUSH2",
      "value": "0x29C5"
    },
    "10688": {
      "op": "JUMPI"
    },
    "10689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10691": {
      "op": "DUP1"
    },
    "10692": {
      "op": "REVERT"
    },
    "10693": {
      "op": "JUMPDEST"
    },
    "10694": {
      "op": "DUP2"
    },
    "10695": {
      "op": "MLOAD"
    },
    "10696": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "10699": {
      "op": "DUP2"
    },
    "10700": {
      "op": "PUSH2",
      "value": "0x1FBC"
    },
    "10703": {
      "jump": "i",
      "op": "JUMP"
    },
    "10704": {
      "op": "JUMPDEST"
    },
    "10705": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10712": {
      "op": "SHL"
    },
    "10713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10715": {
      "op": "MSTORE"
    },
    "10716": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10720": {
      "op": "MSTORE"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10725": {
      "op": "REVERT"
    }
  },
  "sha1": "a5683843bbb7e24c850aa08b0242d098dd5ff703",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n\n    // todo -- add level (will affect dApp)\n    struct Stats { // todo refine and move to bitencoding\n        uint256 level;\n        uint256 hp;\n        uint256 mp;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        // todo -- randomly create stats\n        //\n        // hp, base = 25\n        // mp base = 25\n\n        uint256 addOn = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp))) % 26;\n        uint256 hp = 25 + addOn;\n        uint256 mp = 50 - addOn;\n\n        ELEMENT element = ELEMENT(uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp+1, hp))) % 4);\n\n        Stats memory myStats =  Stats(1, hp, mp, 0, 0, 0, 0, 0, 0, 0, 0, element);\n        tokenIdToStats[totalSupply()] = myStats;\n        _safeMint(msg.sender, totalSupply());\n//        unchecked { totalSupply() += 1; }\n    }\n\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n\n        emit Initiated(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, uint256 _won, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        tokenIdToStats[_attackerId].wins += _won;\n        tokenIdToStats[_attackerId].losses += _won==0 ? 1 : 0;\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n        // todo -- tokens waged?\n        tokenIdToStats[_defenderId].wins += _won==0 ? 1 : 0;\n        tokenIdToStats[_defenderId].losses += _won;\n        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n        // todo -- add stat for last time attacked to limit attack frequency?\n\n        if(_won==0) {\n            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n        }\n    }\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public returns(uint256) {\n\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId) external onlyVerifier {\n    }\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        return formatTokenURI(_tokenId, \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\");\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        Stats memory myStats = tokenIdToStats[_tokenId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(myStats.hp),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n            Strings.toString(myStats.mp),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n            Strings.toString(myStats.wins),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(myStats.losses),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(myStats.battles),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "359:9825:20:-:0;;;2084:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1459:13:5;;2165:5:20;;2172:7;;1459:13:5;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1483:17:5;;;;:7;;:17;;;;;:::i;:::-;;1392:116;;889:23:7;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;2221:5:20::1;2192:26:::0;:34;2271:1:::1;2237:31:::0;:35;2311:1:::1;2192:16;2283:29:::0;2394:6:::1;2351:40:::0;:49;2439:38;:49;;-1:-1:-1;;;;;;2439:49:20::1;-1:-1:-1::0;;;;;2439:49:20;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;359:9825:20;;-1:-1:-1;359:9825:20;599:98:3;679:10;;599:98::o;2101:173:7:-;2176:6;;;-1:-1:-1;;;;;2193:17:7;;;-1:-1:-1;;;;;;2193:17:7;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;359:9825:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:9825:20;;;-1:-1:-1;359:9825:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:21;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:21;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:21:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:21;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:21;-1:-1:-1;;;;;;1685:31:21;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;:::-;359:9825:20;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}