{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getStatsGivenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalDefense",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "speed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "losses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "battles",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goodness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "badness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initiationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protectedUntilTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Wizards.ELEMENT",
              "name": "element",
              "type": "uint8"
            }
          ],
          "internalType": "struct Wizards.Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.OUTCOME",
          "name": "outcome",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalPower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalDefense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeReward",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/interfaces/IERC165.sol",
    "14": "contracts/interfaces/IERC721.sol",
    "15": "contracts/interfaces/IERC721Enumerable.sol",
    "16": "contracts/interfaces/IERC721Metadata.sol",
    "19": "contracts/libraries/Strings.sol",
    "20": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "4": "contracts/helpers/ERC165.sol",
    "5": "contracts/helpers/ERC721.sol",
    "6": "contracts/helpers/ERC721Enumerable.sol",
    "7": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        5553
      ],
      "Context": [
        3784
      ],
      "ERC165": [
        5212
      ],
      "ERC721": [
        5157
      ],
      "ERC721Enumerable": [
        4135
      ],
      "IERC165": [
        3796
      ],
      "IERC721": [
        3000
      ],
      "IERC721Enumerable": [
        5188
      ],
      "IERC721Metadata": [
        5239
      ],
      "IERC721Receiver": [
        5257
      ],
      "Ownable": [
        2771
      ],
      "Strings": [
        4338
      ],
      "Wizards": [
        3734
      ]
    },
    "id": 3735,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3002,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 3003,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3735,
        "sourceUnit": 2772,
        "src": "94:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 3004,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3735,
        "sourceUnit": 4136,
        "src": "127:40:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 3005,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3735,
        "sourceUnit": 4339,
        "src": "169:33:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3006,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4135,
              "src": "379:16:20"
            },
            "id": 3007,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:20"
          },
          {
            "baseName": {
              "id": 3008,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2771,
              "src": "397:7:20"
            },
            "id": 3009,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:20"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3734,
        "linearizedBaseContracts": [
          3734,
          2771,
          4135,
          5188,
          5157,
          5239,
          3000,
          5212,
          3796,
          3784
        ],
        "name": "Wizards",
        "nameLocation": "368:7:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 3014,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "527:14:20",
            "nodeType": "VariableDeclaration",
            "scope": 3734,
            "src": "493:48:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 3013,
              "keyType": {
                "id": 3010,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 3012,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3011,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3059,
                  "src": "513:5:20"
                },
                "referencedDeclaration": 3059,
                "src": "513:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 3016,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "563:7:20",
            "nodeType": "VariableDeclaration",
            "scope": 3734,
            "src": "548:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3017,
              "nodeType": "StructuredDocumentation",
              "src": "572:36:20",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 3019,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "629:8:20",
            "nodeType": "VariableDeclaration",
            "scope": 3734,
            "src": "614:23:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3018,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 3024,
            "members": [
              {
                "id": 3020,
                "name": "FIRE",
                "nameLocation": "697:4:20",
                "nodeType": "EnumValue",
                "src": "697:4:20"
              },
              {
                "id": 3021,
                "name": "WIND",
                "nameLocation": "703:4:20",
                "nodeType": "EnumValue",
                "src": "703:4:20"
              },
              {
                "id": 3022,
                "name": "WATER",
                "nameLocation": "709:5:20",
                "nodeType": "EnumValue",
                "src": "709:5:20"
              },
              {
                "id": 3023,
                "name": "EARTH",
                "nameLocation": "716:5:20",
                "nodeType": "EnumValue",
                "src": "716:5:20"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "688:7:20",
            "nodeType": "EnumDefinition",
            "src": "683:39:20"
          },
          {
            "canonicalName": "Wizards.OUTCOME",
            "id": 3029,
            "members": [
              {
                "id": 3025,
                "name": "LOSS",
                "nameLocation": "742:4:20",
                "nodeType": "EnumValue",
                "src": "742:4:20"
              },
              {
                "id": 3026,
                "name": "WIN",
                "nameLocation": "748:3:20",
                "nodeType": "EnumValue",
                "src": "748:3:20"
              },
              {
                "id": 3027,
                "name": "TIE",
                "nameLocation": "753:3:20",
                "nodeType": "EnumValue",
                "src": "753:3:20"
              },
              {
                "id": 3028,
                "name": "CAPTURE",
                "nameLocation": "758:7:20",
                "nodeType": "EnumValue",
                "src": "758:7:20"
              }
            ],
            "name": "OUTCOME",
            "nameLocation": "733:7:20",
            "nodeType": "EnumDefinition",
            "src": "728:38:20"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 3059,
            "members": [
              {
                "constant": false,
                "id": 3031,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "884:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "876:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3030,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3033,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "908:2:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "900:10:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3032,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3035,
                "mutability": "mutable",
                "name": "magicalPower",
                "nameLocation": "929:12:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "921:20:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3034,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3037,
                "mutability": "mutable",
                "name": "magicalDefense",
                "nameLocation": "960:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "952:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3036,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3039,
                "mutability": "mutable",
                "name": "speed",
                "nameLocation": "993:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "985:13:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3038,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "985:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3041,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "1017:4:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1009:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3040,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3043,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "1040:6:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1032:14:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3042,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1032:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3045,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "1065:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1057:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3044,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1057:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3047,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1091:13:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1083:21:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3046,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1083:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3049,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "1123:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1115:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3048,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1115:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3051,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "1150:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1142:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3050,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1142:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3053,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1176:19:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1168:27:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3052,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3055,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1234:23:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1226:31:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3054,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3058,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1320:7:20",
                "nodeType": "VariableDeclaration",
                "scope": 3059,
                "src": "1312:15:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$3024",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 3057,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3056,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3024,
                    "src": "1312:7:20"
                  },
                  "referencedDeclaration": 3024,
                  "src": "1312:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$3024",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "829:5:20",
            "nodeType": "StructDefinition",
            "scope": 3734,
            "src": "822:513:20",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 3070,
            "members": [
              {
                "constant": false,
                "id": 3061,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1401:8:20",
                "nodeType": "VariableDeclaration",
                "scope": 3070,
                "src": "1393:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3060,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1393:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3063,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1428:14:20",
                "nodeType": "VariableDeclaration",
                "scope": 3070,
                "src": "1420:22:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3062,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1420:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3065,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1461:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 3070,
                "src": "1453:17:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3064,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1453:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3067,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1489:23:20",
                "nodeType": "VariableDeclaration",
                "scope": 3070,
                "src": "1481:31:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3066,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1481:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3069,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1531:21:20",
                "nodeType": "VariableDeclaration",
                "scope": 3070,
                "src": "1523:29:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3068,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:20",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1350:16:20",
            "nodeType": "StructDefinition",
            "scope": 3734,
            "src": "1343:217:20",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 3073,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1592:16:20",
            "nodeType": "VariableDeclaration",
            "scope": 3734,
            "src": "1568:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 3072,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3071,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3070,
                "src": "1568:16:20"
              },
              "referencedDeclaration": 3070,
              "src": "1568:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$3070_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5",
            "id": 3077,
            "name": "NewVerifier",
            "nameLocation": "1680:11:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3075,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1700:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3077,
                  "src": "1692:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:17:20"
            },
            "src": "1674:35:20"
          },
          {
            "anonymous": false,
            "eventSelector": "a6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4",
            "id": 3081,
            "name": "NewBattler",
            "nameLocation": "1721:10:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3079,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1740:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3081,
                  "src": "1732:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:18:20"
            },
            "src": "1715:35:20"
          },
          {
            "anonymous": false,
            "eventSelector": "1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7",
            "id": 3089,
            "name": "Initiated",
            "nameLocation": "1762:9:20",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3083,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1780:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3089,
                  "src": "1772:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1772:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3085,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "1807:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3089,
                  "src": "1791:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1825:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3089,
                  "src": "1817:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1771:64:20"
            },
            "src": "1756:80:20"
          },
          {
            "body": {
              "id": 3104,
              "nodeType": "Block",
              "src": "1987:93:20",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3096,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "2005:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3098,
                        "indexExpression": {
                          "id": 3097,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3091,
                          "src": "2020:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2005:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3055,
                      "src": "2005:49:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 3100,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2057:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2057:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2005:67:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3095,
                  "id": 3103,
                  "nodeType": "Return",
                  "src": "1998:74:20"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 3105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "1933:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3091,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "1950:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3105,
                  "src": "1942:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1942:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1941:19:20"
            },
            "returnParameters": {
              "id": 3095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3105,
                  "src": "1981:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3093,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:6:20"
            },
            "scope": 3734,
            "src": "1924:156:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3117,
              "nodeType": "Block",
              "src": "2168:51:20",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3113,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3014,
                      "src": "2186:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3115,
                    "indexExpression": {
                      "id": 3114,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "2201:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2186:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "functionReturnParameters": 3112,
                  "id": 3116,
                  "nodeType": "Return",
                  "src": "2179:32:20"
                }
              ]
            },
            "functionSelector": "8cb22518",
            "id": 3118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatsGivenId",
            "nameLocation": "2097:15:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2121:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3118,
                  "src": "2113:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:19:20"
            },
            "returnParameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3118,
                  "src": "2154:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                    "typeString": "struct Wizards.Stats"
                  },
                  "typeName": {
                    "id": 3110,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3109,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3059,
                      "src": "2154:5:20"
                    },
                    "referencedDeclaration": 3059,
                    "src": "2154:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                      "typeString": "struct Wizards.Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2153:14:20"
            },
            "scope": 3734,
            "src": "2088:131:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3161,
              "nodeType": "Block",
              "src": "2425:343:20",
              "statements": [
                {
                  "expression": {
                    "id": 3135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3131,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "2436:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "2436:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 3134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2465:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2436:34:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3136,
                  "nodeType": "ExpressionStatement",
                  "src": "2436:34:20"
                },
                {
                  "expression": {
                    "id": 3141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3137,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "2481:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3063,
                      "src": "2481:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2515:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2481:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3142,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:35:20"
                },
                {
                  "expression": {
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3143,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "2527:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3061,
                      "src": "2527:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 3146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2555:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2527:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3148,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:29:20"
                },
                {
                  "expression": {
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3149,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "2595:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3067,
                      "src": "2595:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:6:20",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "2595:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:49:20"
                },
                {
                  "expression": {
                    "id": 3159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3155,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "2683:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3069,
                      "src": "2683:38:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3158,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3124,
                      "src": "2724:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2683:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3160,
                  "nodeType": "ExpressionStatement",
                  "src": "2683:49:20"
                }
              ]
            },
            "id": 3162,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3127,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3120,
                    "src": "2409:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3128,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3122,
                    "src": "2416:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3129,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3126,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5157,
                  "src": "2402:6:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2402:22:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3120,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2354:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2340:19:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2375:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2361:21:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3121,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3124,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2392:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2384:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2339:62:20"
            },
            "returnParameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:20"
            },
            "scope": 3734,
            "src": "2328:440:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3286,
              "nodeType": "Block",
              "src": "2801:1004:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3166,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3886,
                            "src": "2820:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2820:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 3168,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3073,
                            "src": "2836:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 3169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3065,
                          "src": "2836:26:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2820:42:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 3171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2864:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 3165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2812:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:69:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3173,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:69:20"
                },
                {
                  "assignments": [
                    3175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3175,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "3007:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "2999:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2999:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3190,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3181,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3886,
                                  "src": "3058:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3058:13:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3183,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3073:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3073:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3185,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3085:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3186,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3085:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3179,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3041:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3041:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3041:60:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3178,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3031:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3031:71:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3023:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3023:7:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:80:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2999:104:20"
                },
                {
                  "assignments": [
                    3192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3192,
                      "mutability": "mutable",
                      "name": "hp",
                      "nameLocation": "3236:2:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3228:10:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3228:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3198,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3241:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3194,
                        "name": "pseudoRandNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3175,
                        "src": "3246:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3262:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3246:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3241:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3228:36:20"
                },
                {
                  "assignments": [
                    3200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3200,
                      "mutability": "mutable",
                      "name": "magicalPower",
                      "nameLocation": "3283:12:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3275:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3275:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3209,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3298:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3202,
                              "name": "pseudoRandNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3175,
                              "src": "3304:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3318:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3304:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3205,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3303:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3325:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3303:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3298:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3275:52:20"
                },
                {
                  "assignments": [
                    3211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3211,
                      "mutability": "mutable",
                      "name": "magicalDefense",
                      "nameLocation": "3346:14:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3338:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3338:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3222,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3363:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3213,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3175,
                                "src": "3369:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3383:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3369:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3386:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "3369:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3218,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3368:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3391:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3368:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3363:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3338:55:20"
                },
                {
                  "assignments": [
                    3224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3224,
                      "mutability": "mutable",
                      "name": "speed",
                      "nameLocation": "3412:5:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3404:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3404:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3235,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3420:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3226,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3175,
                                "src": "3426:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3440:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3426:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 3229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3443:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3426:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3231,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3425:20:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3448:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3425:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3420:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3404:46:20"
                },
                {
                  "assignments": [
                    3238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3238,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "3469:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3461:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$3024",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 3237,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3236,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3024,
                          "src": "3461:7:20"
                        },
                        "referencedDeclaration": 3024,
                        "src": "3461:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3024",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3249,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3240,
                                  "name": "pseudoRandNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3175,
                                  "src": "3488:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 3241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3502:2:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "3488:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 3243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3505:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "3488:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3245,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3487:20:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 3246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3510:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "3487:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3239,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3024,
                      "src": "3479:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$3024_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 3248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3479:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$3024",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3461:51:20"
                },
                {
                  "assignments": [
                    3252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3252,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3538:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3286,
                      "src": "3525:20:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3250,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3059,
                          "src": "3525:5:20"
                        },
                        "referencedDeclaration": 3059,
                        "src": "3525:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3269,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3555:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 3255,
                        "name": "hp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3192,
                        "src": "3558:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3256,
                        "name": "magicalPower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3200,
                        "src": "3562:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3257,
                        "name": "magicalDefense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3211,
                        "src": "3576:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3258,
                        "name": "speed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3224,
                        "src": "3592:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3599:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3602:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3608:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3611:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3614:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3267,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3238,
                        "src": "3623:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3024",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$3024",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 3253,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3059,
                      "src": "3549:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$3059_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:82:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3525:106:20"
                },
                {
                  "expression": {
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3270,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3014,
                        "src": "3642:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 3273,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3271,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3886,
                          "src": "3657:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 3272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3657:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3642:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3059_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3274,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3252,
                      "src": "3674:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "3642:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:39:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3278,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3702:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3702:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3280,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3886,
                            "src": "3714:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3714:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3728:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3714:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3277,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4851,
                        4880
                      ],
                      "referencedDeclaration": 4851,
                      "src": "3692:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:39:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3285,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:39:20"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 3287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2785:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:2:20"
            },
            "returnParameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2801:0:20"
            },
            "scope": 3734,
            "src": "2776:1029:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3345,
              "nodeType": "Block",
              "src": "3925:535:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3295,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3290,
                              "src": "3952:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3294,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4485,
                            "src": "3944:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3944:17:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3297,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3965:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3965:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3944:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 3300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3977:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 3293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3936:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3936:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "3936:57:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3304,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3014,
                              "src": "4012:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 3306,
                            "indexExpression": {
                              "id": 3305,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3290,
                              "src": "4027:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4012:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3059_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 3307,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3053,
                          "src": "4012:44:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4060:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4012:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 3310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4063:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 3303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4004:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:79:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3312,
                  "nodeType": "ExpressionStatement",
                  "src": "4004:79:20"
                },
                {
                  "assignments": [
                    3315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3315,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "4193:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3345,
                      "src": "4179:21:20",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3314,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3313,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3059,
                          "src": "4179:5:20"
                        },
                        "referencedDeclaration": 3059,
                        "src": "4179:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3319,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3316,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3014,
                      "src": "4203:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3318,
                    "indexExpression": {
                      "id": 3317,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3290,
                      "src": "4218:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4203:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4179:48:20"
                },
                {
                  "expression": {
                    "id": 3325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3320,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3315,
                        "src": "4238:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3322,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3053,
                      "src": "4238:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3323,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4268:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4268:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4238:45:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3326,
                  "nodeType": "ExpressionStatement",
                  "src": "4238:45:20"
                },
                {
                  "expression": {
                    "id": 3335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3327,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3315,
                        "src": "4294:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3055,
                      "src": "4294:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3330,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4328:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4328:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 3332,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3073,
                          "src": "4346:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3070_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3333,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3067,
                        "src": "4346:40:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4328:58:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4294:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3336,
                  "nodeType": "ExpressionStatement",
                  "src": "4294:92:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3338,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4414:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4414:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3340,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3290,
                        "src": "4426:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3341,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4436:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4436:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3337,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3089,
                      "src": "4404:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3344,
                  "nodeType": "EmitStatement",
                  "src": "4399:53:20"
                }
              ]
            },
            "documentation": {
              "id": 3288,
              "nodeType": "StructuredDocumentation",
              "src": "3815:59:20",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 3346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "3889:8:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3290,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3906:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3346,
                  "src": "3898:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3898:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3897:18:20"
            },
            "returnParameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3925:0:20"
            },
            "scope": 3734,
            "src": "3880:580:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3409,
              "nodeType": "Block",
              "src": "4621:766:20",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3029",
                      "typeString": "enum Wizards.OUTCOME"
                    },
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3362,
                      "name": "outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3353,
                      "src": "4635:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3029",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3363,
                        "name": "OUTCOME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3029,
                        "src": "4646:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3029_$",
                          "typeString": "type(enum Wizards.OUTCOME)"
                        }
                      },
                      "id": 3364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "WIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3026,
                      "src": "4646:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3029",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "src": "4635:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3029",
                        "typeString": "enum Wizards.OUTCOME"
                      },
                      "id": 3384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3381,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3353,
                        "src": "4796:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3029",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3382,
                          "name": "OUTCOME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3029,
                          "src": "4807:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3029_$",
                            "typeString": "type(enum Wizards.OUTCOME)"
                          }
                        },
                        "id": 3383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LOSS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3025,
                        "src": "4807:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3029",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "src": "4796:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3400,
                    "nodeType": "IfStatement",
                    "src": "4793:145:20",
                    "trueBody": {
                      "id": 3399,
                      "nodeType": "Block",
                      "src": "4820:118:20",
                      "statements": [
                        {
                          "expression": {
                            "id": 3390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3385,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3014,
                                  "src": "4835:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3387,
                                "indexExpression": {
                                  "id": 3386,
                                  "name": "_attackerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3348,
                                  "src": "4850:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4835:27:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3388,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "losses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3043,
                              "src": "4835:34:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4873:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4835:39:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3391,
                          "nodeType": "ExpressionStatement",
                          "src": "4835:39:20"
                        },
                        {
                          "expression": {
                            "id": 3397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3392,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3014,
                                  "src": "4889:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3394,
                                "indexExpression": {
                                  "id": 3393,
                                  "name": "_defenderId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3350,
                                  "src": "4904:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4889:27:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3395,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "wins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3041,
                              "src": "4889:32:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4925:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4889:37:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3398,
                          "nodeType": "ExpressionStatement",
                          "src": "4889:37:20"
                        }
                      ]
                    }
                  },
                  "id": 3401,
                  "nodeType": "IfStatement",
                  "src": "4632:306:20",
                  "trueBody": {
                    "id": 3380,
                    "nodeType": "Block",
                    "src": "4658:120:20",
                    "statements": [
                      {
                        "expression": {
                          "id": 3371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3366,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3014,
                                "src": "4673:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3368,
                              "indexExpression": {
                                "id": 3367,
                                "name": "_attackerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3348,
                                "src": "4688:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4673:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3369,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3041,
                            "src": "4673:32:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4709:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4673:37:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3372,
                        "nodeType": "ExpressionStatement",
                        "src": "4673:37:20"
                      },
                      {
                        "expression": {
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3373,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3014,
                                "src": "4725:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3375,
                              "indexExpression": {
                                "id": 3374,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3350,
                                "src": "4740:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4725:27:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3376,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "losses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3043,
                            "src": "4725:34:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4763:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4725:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3379,
                        "nodeType": "ExpressionStatement",
                        "src": "4725:39:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3402,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "4950:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3404,
                        "indexExpression": {
                          "id": 3403,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3348,
                          "src": "4965:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4950:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3047,
                      "src": "4950:41:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3406,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "4995:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4950:55:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3408,
                  "nodeType": "ExpressionStatement",
                  "src": "4950:55:20"
                }
              ]
            },
            "functionSelector": "8140bd0b",
            "id": 3410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3360,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3359,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3673,
                  "src": "4609:11:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "4609:11:20"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "4477:12:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3348,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "4498:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "4490:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4490:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "4519:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "4511:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nameLocation": "4540:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "4532:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OUTCOME_$3029",
                    "typeString": "enum Wizards.OUTCOME"
                  },
                  "typeName": {
                    "id": 3352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3351,
                      "name": "OUTCOME",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3029,
                      "src": "4532:7:20"
                    },
                    "referencedDeclaration": 3029,
                    "src": "4532:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3029",
                      "typeString": "enum Wizards.OUTCOME"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "4557:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "4549:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4549:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "4586:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3410,
                  "src": "4578:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4489:110:20"
            },
            "returnParameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4621:0:20"
            },
            "scope": 3734,
            "src": "4468:919:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3418,
              "nodeType": "Block",
              "src": "5506:10:20",
              "statements": []
            },
            "documentation": {
              "id": 3411,
              "nodeType": "StructuredDocumentation",
              "src": "5395:43:20",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 3419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "5453:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3413,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5472:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "5464:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5463:18:20"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "5497:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5496:9:20"
            },
            "scope": 3734,
            "src": "5444:72:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3427,
              "nodeType": "Block",
              "src": "5664:10:20",
              "statements": []
            },
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "5524:72:20",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 3428,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "5611:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5633:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3428,
                  "src": "5625:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5625:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5624:18:20"
            },
            "returnParameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3428,
                  "src": "5658:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5658:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5657:6:20"
            },
            "scope": 3734,
            "src": "5602:72:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3461,
              "nodeType": "Block",
              "src": "5834:369:20",
              "statements": [
                {
                  "expression": {
                    "id": 3459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3438,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3014,
                          "src": "5883:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3440,
                        "indexExpression": {
                          "id": 3439,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3431,
                          "src": "5898:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5883:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3055,
                      "src": "5883:48:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3442,
                        "name": "_timeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "5934:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3443,
                                    "name": "tokenIdToStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3014,
                                    "src": "5949:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                      "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                    }
                                  },
                                  "id": 3445,
                                  "indexExpression": {
                                    "id": 3444,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3431,
                                    "src": "5964:8:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5949:24:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                    "typeString": "struct Wizards.Stats storage ref"
                                  }
                                },
                                "id": 3446,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "protectedUntilTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3055,
                                "src": "5949:48:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 3447,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6000:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6000:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5949:66:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3452,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3014,
                                  "src": "6054:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3454,
                                "indexExpression": {
                                  "id": 3453,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3431,
                                  "src": "6069:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6054:24:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3059_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3455,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "protectedUntilTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3055,
                              "src": "6054:48:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "5949:153:20",
                            "trueExpression": {
                              "expression": {
                                "id": 3450,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6036:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6036:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3457,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5948:155:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5934:169:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5883:220:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3460,
                  "nodeType": "ExpressionStatement",
                  "src": "5883:220:20"
                }
              ]
            },
            "documentation": {
              "id": 3429,
              "nodeType": "StructuredDocumentation",
              "src": "5682:65:20",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "8ad4d6a5",
            "id": 3462,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3435,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3646,
                  "src": "5821:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "5821:12:20"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "5762:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5781:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "5773:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3433,
                  "mutability": "mutable",
                  "name": "_timeReward",
                  "nameLocation": "5799:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3462,
                  "src": "5791:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5772:39:20"
            },
            "returnParameters": {
              "id": 3437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5834:0:20"
            },
            "scope": 3734,
            "src": "5753:450:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3470,
              "nodeType": "Block",
              "src": "6361:8:20",
              "statements": []
            },
            "documentation": {
              "id": 3463,
              "nodeType": "StructuredDocumentation",
              "src": "6215:87:20",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 3471,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3467,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3661,
                  "src": "6341:10:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "6341:10:20"
              }
            ],
            "name": "crush",
            "nameLocation": "6317:5:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6331:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3471,
                  "src": "6323:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6323:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6322:18:20"
            },
            "returnParameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6361:0:20"
            },
            "scope": 3734,
            "src": "6308:61:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4547
            ],
            "body": {
              "id": 3491,
              "nodeType": "Block",
              "src": "6468:269:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3481,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3473,
                            "src": "6495:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3480,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "6487:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6487:17:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6506:49:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 3479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6479:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6479:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3485,
                  "nodeType": "ExpressionStatement",
                  "src": "6479:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3487,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3473,
                        "src": "6622:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067",
                        "id": 3488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6632:96:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        },
                        "value": "https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8d78e889373bf5436ab76cf854e53cda7eabcf2fd85271d4ecc425d41eb23a3",
                          "typeString": "literal_string \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\""
                        }
                      ],
                      "id": 3486,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3631,
                      "src": "6607:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 3489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6607:122:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3478,
                  "id": 3490,
                  "nodeType": "Return",
                  "src": "6600:129:20"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "6388:8:20",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3475,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6435:8:20"
            },
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3473,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6405:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "6397:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6397:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6396:18:20"
            },
            "returnParameters": {
              "id": 3478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3492,
                  "src": "6453:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6453:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6452:15:20"
            },
            "scope": 3734,
            "src": "6379:358:20",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3630,
              "nodeType": "Block",
              "src": "6847:3133:20",
              "statements": [
                {
                  "assignments": [
                    3503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3503,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "6926:7:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3630,
                      "src": "6913:20:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3502,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3501,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3059,
                          "src": "6913:5:20"
                        },
                        "referencedDeclaration": 3059,
                        "src": "6913:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3059_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3507,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3504,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3014,
                      "src": "6936:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3059_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3506,
                    "indexExpression": {
                      "id": 3505,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3494,
                      "src": "6951:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6936:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3059_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6913:47:20"
                },
                {
                  "assignments": [
                    3509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3509,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "6987:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3630,
                      "src": "6973:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3508,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6973:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 3514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7036:30:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 3515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7081:72:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 3516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7168:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 3517,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "7198:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 3518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7208:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 3519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7226:20:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 3520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7288:78:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3523,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3503,
                                  "src": "7398:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 3524,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3031,
                                "src": "7398:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3521,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4338,
                                "src": "7381:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4220,
                              "src": "7381:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7381:31:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 3526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7414:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 3512,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7005:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7005:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7005:424:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6998:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3510,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6998:6:20",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6998:432:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6973:457:20"
                },
                {
                  "expression": {
                    "id": 3559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3530,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "7495:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3535,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "7530:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 3536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7553:60:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3539,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "7645:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3540,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3033,
                                  "src": "7645:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3537,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "7628:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "7628:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7628:28:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7660:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20706f776572222c202276616c7565223a20",
                              "id": 3543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7679:71:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3546,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "7782:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3547,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalPower",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3035,
                                  "src": "7782:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3544,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "7765:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "7765:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7765:38:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7807:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20646566656e7365222c202276616c7565223a20",
                              "id": 3550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7830:73:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3553,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "7935:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3554,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalDefense",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3037,
                                  "src": "7935:22:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3551,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "7918:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "7918:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7918:40:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7962:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3533,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7513:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "7513:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7513:464:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7506:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3531,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7506:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7506:472:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7495:483:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3560,
                  "nodeType": "ExpressionStatement",
                  "src": "7495:483:20"
                },
                {
                  "expression": {
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3561,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "8043:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3566,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "8078:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20227370656564222c202276616c7565223a20",
                              "id": 3567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8101:63:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3570,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "8196:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3571,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "speed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3039,
                                  "src": "8196:13:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3568,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "8179:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "8179:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8179:31:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8214:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d70222c202276616c7565223a20",
                              "id": 3574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8233:60:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3577,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "8325:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3578,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3041,
                                  "src": "8325:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3575,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "8308:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "8308:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8308:30:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8342:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3564,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8061:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8061:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8061:296:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8054:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3562,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8054:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8054:304:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8043:315:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3584,
                  "nodeType": "ExpressionStatement",
                  "src": "8043:315:20"
                },
                {
                  "expression": {
                    "id": 3614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3585,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "8425:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3590,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "8460:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 3591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8483:64:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3594,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "8579:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3595,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "losses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3043,
                                  "src": "8579:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3592,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "8562:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "8562:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8562:32:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8598:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 3598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8617:65:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3601,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "8714:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3602,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "battles",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3045,
                                  "src": "8714:15:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3599,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "8697:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "8697:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8697:33:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8734:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 3605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8757:71:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3608,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3503,
                                    "src": "8860:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3059_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3609,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3047,
                                  "src": "8860:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3606,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "8843:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4338_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4220,
                                "src": "8843:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8843:39:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8886:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3588,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8443:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8443:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8443:458:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8436:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3586,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8436:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8436:466:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8425:477:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3615,
                  "nodeType": "ExpressionStatement",
                  "src": "8425:477:20"
                },
                {
                  "expression": {
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3616,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3509,
                      "src": "8938:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3621,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "8973:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 3622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8983:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 3623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8987:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 3619,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8956:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8956:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8956:35:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8949:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3617,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8949:6:20",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8949:43:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8938:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "8938:54:20"
                },
                {
                  "expression": {
                    "id": 3628,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3509,
                    "src": "9964:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3500,
                  "id": 3629,
                  "nodeType": "Return",
                  "src": "9957:15:20"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 3631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "6754:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3494,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6777:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3631,
                  "src": "6769:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6769:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "6801:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3631,
                  "src": "6787:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6787:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6768:42:20"
            },
            "returnParameters": {
              "id": 3500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3631,
                  "src": "6832:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6832:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6831:15:20"
            },
            "scope": 3734,
            "src": "6745:3235:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3645,
              "nodeType": "Block",
              "src": "10643:141:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3634,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10662:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10662:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3638,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10684:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3734",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3734",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10676:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3636,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10676:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10676:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10662:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10691:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10654:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10654:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3643,
                  "nodeType": "ExpressionStatement",
                  "src": "10654:53:20"
                },
                {
                  "id": 3644,
                  "nodeType": "PlaceholderStatement",
                  "src": "10775:1:20"
                }
              ]
            },
            "id": 3646,
            "name": "onlyVerifier",
            "nameLocation": "10628:12:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10640:2:20"
            },
            "src": "10619:165:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3660,
              "nodeType": "Block",
              "src": "10814:141:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3649,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10833:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10833:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3653,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10855:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3734",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3734",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10847:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10847:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10847:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10833:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10862:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10825:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10825:53:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3658,
                  "nodeType": "ExpressionStatement",
                  "src": "10825:53:20"
                },
                {
                  "id": 3659,
                  "nodeType": "PlaceholderStatement",
                  "src": "10946:1:20"
                }
              ]
            },
            "id": 3661,
            "name": "onlyHolder",
            "nameLocation": "10801:10:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10811:2:20"
            },
            "src": "10792:163:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3672,
              "nodeType": "Block",
              "src": "10986:138:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3664,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11019:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11019:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3666,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3016,
                          "src": "11033:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11019:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 3668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11055:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 3663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10997:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10997:107:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3670,
                  "nodeType": "ExpressionStatement",
                  "src": "10997:107:20"
                },
                {
                  "id": 3671,
                  "nodeType": "PlaceholderStatement",
                  "src": "11115:1:20"
                }
              ]
            },
            "id": 3673,
            "name": "onlyBattler",
            "nameLocation": "10972:11:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10983:2:20"
            },
            "src": "10963:161:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3702,
              "nodeType": "Block",
              "src": "11289:166:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3681,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3675,
                            "src": "11308:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11328:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11320:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3682,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11320:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11320:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11308:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3687,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3675,
                            "src": "11334:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3688,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3016,
                            "src": "11346:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11334:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11308:45:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11355:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11300:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11300:82:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3693,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:82:20"
                },
                {
                  "expression": {
                    "id": 3696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3694,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3016,
                      "src": "11393:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3695,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3675,
                      "src": "11403:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11393:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3697,
                  "nodeType": "ExpressionStatement",
                  "src": "11393:18:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3699,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3675,
                        "src": "11438:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3698,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3081,
                      "src": "11427:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11427:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3701,
                  "nodeType": "EmitStatement",
                  "src": "11422:25:20"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 3703,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3678,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3677,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2714,
                  "src": "11279:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "11279:9:20"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "11238:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3675,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "11260:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3703,
                  "src": "11252:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11252:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11251:18:20"
            },
            "returnParameters": {
              "id": 3679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11289:0:20"
            },
            "scope": 3734,
            "src": "11229:226:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3732,
              "nodeType": "Block",
              "src": "11525:173:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3711,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3705,
                            "src": "11544:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11565:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11557:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3712,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11557:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11557:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11544:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3717,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3705,
                            "src": "11571:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3718,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3019,
                            "src": "11584:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11571:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11544:48:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11594:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11536:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11536:85:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3723,
                  "nodeType": "ExpressionStatement",
                  "src": "11536:85:20"
                },
                {
                  "expression": {
                    "id": 3726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3724,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3019,
                      "src": "11632:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3725,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3705,
                      "src": "11643:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11632:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3727,
                  "nodeType": "ExpressionStatement",
                  "src": "11632:20:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3729,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3705,
                        "src": "11680:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3728,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3077,
                      "src": "11668:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11668:22:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3731,
                  "nodeType": "EmitStatement",
                  "src": "11663:27:20"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 3733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3707,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2714,
                  "src": "11515:9:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "11515:9:20"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "11472:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3705,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "11495:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3733,
                  "src": "11487:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11487:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11486:19:20"
            },
            "returnParameters": {
              "id": 3709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11525:0:20"
            },
            "scope": 3734,
            "src": "11463:235:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3735,
        "src": "359:11344:20",
        "usedErrors": []
      }
    ],
    "src": "33:11670:20"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620032e2380380620032e28339810160408190526200003491620001d3565b82826000620000448382620002ef565b506001620000538282620002ef565b505050620000706200006a620000b060201b60201c565b620000b4565b6127106010556001600f556005600e5562015180601155601280546001600160a01b0319166001600160a01b039290921691909117905550620003bb9050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012e57600080fd5b81516001600160401b03808211156200014b576200014b62000106565b604051601f8301601f19908116603f0116810190828211818310171562000176576200017662000106565b816040528381526020925086838588010111156200019357600080fd5b600091505b83821015620001b7578582018301518183018401529082019062000198565b83821115620001c95760008385830101525b9695505050505050565b600080600060608486031215620001e957600080fd5b83516001600160401b03808211156200020157600080fd5b6200020f878388016200011c565b945060208601519150808211156200022657600080fd5b5062000235868287016200011c565b604086015190935090506001600160a01b03811681146200025557600080fd5b809150509250925092565b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ea57600081815260208120601f850160051c81016020861015620002c55750805b601f850160051c820191505b81811015620002e657828155600101620002d1565b5050505b505050565b81516001600160401b038111156200030b576200030b62000106565b62000323816200031c845462000260565b846200029c565b602080601f8311600181146200035b5760008415620003425750858301515b600019600386901b1c1916600185901b178555620002e6565b600085815260208120601f198616915b828110156200038c578886015182559484019460019091019084016200036b565b5085821015620003ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612f1780620003cb6000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461047c578063db2a0a5514610515578063e52e324914610569578063e985e9c51461057c578063f2fde38b146105b857600080fd5b8063a22cb46514610430578063b88d4fde14610443578063bc0b0d8814610456578063c87b56dd1461046957600080fd5b80638ad4d6a5116100f45780638ad4d6a5146103d15780638cb22518146103e45780638da5cb5b1461040457806395d89b411461041557806397fc007c1461041d57600080fd5b8063715018a61461037e5780637901ea78146103865780638140bd0b1461039957806382afd23b146103ac57600080fd5b806318160ddd116101a857806342842e0e1161017757806342842e0e1461031f578063437454b9146103325780634f6ccce7146103455780636352211e1461035857806370a082311461036b57600080fd5b806318160ddd146102de57806323b872dd146102e65780632b7ac3f3146102f95780632f745c591461030c57600080fd5b8063081812fc116101e4578063081812fc14610288578063095ea7b3146102b35780630a363d08146102c85780631249c58b146102d657600080fd5b806301ffc9a7146102165780630419e3141461023e578063051063531461025e57806306fdde0314610280575b600080fd5b610229610224366004612284565b6105cb565b60405190151581526020015b60405180910390f35b61025161024c366004612334565b6105f6565b60405161023591906123e7565b61027261026c3660046123fa565b50600090565b604051908152602001610235565b610251610809565b61029b6102963660046123fa565b61089b565b6040516001600160a01b039091168152602001610235565b6102c66102c136600461242f565b610935565b005b61022961026c3660046123fa565b6102c6610a4a565b600854610272565b6102c66102f4366004612459565b610d2d565b600d5461029b906001600160a01b031681565b61027261031a36600461242f565b610d5e565b6102c661032d366004612459565b610df4565b6102c66103403660046123fa565b610e0f565b6102726103533660046123fa565b610e51565b61029b6103663660046123fa565b610ee4565b610272610379366004612495565b610f5b565b6102c6610fe2565b6102c66103943660046123fa565b611018565b6102c66103a73660046124b0565b611126565b6102296103ba3660046123fa565b6000908152600b60205260409020600c0154421090565b6102c66103df3660046124fd565b61128e565b6103f76103f23660046123fa565b611321565b6040516102359190612557565b600a546001600160a01b031661029b565b610251611408565b6102c661042b366004612495565b611417565b6102c661043e366004612601565b611503565b6102c661045136600461263d565b6115c7565b600c5461029b906001600160a01b031681565b6102516104773660046123fa565b6115ff565b6104fb61048a3660046123fa565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549b8b0154600c8c0154600d909c01549a9c999b989a979996989597949693959294919392909160ff168e565b6040516102359e9d9c9b9a999897969594939291906126b9565b600e54600f5460105460115460125461053894939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a001610235565b6102c6610577366004612495565b6116a0565b61022961058a366004612733565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102c66105c6366004612495565b611785565b60006001600160e01b0319821663780e9d6360e01b14806105f057506105f08261181d565b92915050565b60606000600b6000858152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156106bf576106bf61251f565b60038111156106d0576106d061251f565b8152505090506000836106e6836000015161186d565b6040516020016106f7929190612782565b604051602081830303815290604052905080610716836020015161186d565b610723846040015161186d565b610730856060015161186d565b60405160200161074394939291906128dc565b604051602081830303815290604052905080610762836080015161186d565b61076f8460a0015161186d565b60405160200161078193929190612a0e565b6040516020818303038152906040529050806107a08360c0015161186d565b6107ad8460e0015161186d565b6107bb85610100015161186d565b6040516020016107ce9493929190612aeb565b6040516020818303038152906040529050806040516020016107f09190612c01565b60408051808303601f1901815291905295945050505050565b60606000805461081890612c30565b80601f016020809104026020016040519081016040528092919081815260200182805461084490612c30565b80156108915780601f1061086657610100808354040283529160200191610891565b820191906000526020600020905b81548152906001019060200180831161087457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109195760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061094082610ee4565b9050806001600160a01b0316836001600160a01b0316036109ad5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610910565b336001600160a01b03821614806109c957506109c9813361058a565b610a3b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610910565b610a458383611976565b505050565b60105460085410610a8e5760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b6044820152606401610910565b6000610a9960085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f19818403018152919052805160209091012090506000610aec601a83612c80565b610af7906019612caa565b90506000601a610b08606485612cc2565b610b129190612c80565b610b1d906019612caa565b90506000600a610b2d8186612cc2565b610b38906004612cd6565b610b429190612c80565b610b4d90600a612caa565b90506000600a610b5d8187612cc2565b610b68906005612cd6565b610b729190612c80565b610b7d90600a612caa565b905060006004610b8e600a88612cc2565b610b99906006612cd6565b610ba39190612c80565b6003811115610bb457610bb461251f565b90506000604051806101c00160405280600181526020018781526020018681526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610c2d57610c2d61251f565b9052905080600b6000610c3f60085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c01556101a082015181600d0160006101000a81548160ff02191690836003811115610cff57610cff61251f565b0217905550905050610d2433610d1460085490565b610d1f906001612caa565b6119e4565b50505050505050565b610d373382611a02565b610d535760405162461bcd60e51b815260040161091090612cf5565b610a45838383611af5565b6000610d6983610f5b565b8210610dcb5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610910565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610a45838383604051806020016040528060008152506115c7565b303303610e4e5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b6044820152606401610910565b50565b6000610e5c60085490565b8210610ebf5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610910565b60088281548110610ed257610ed2612d46565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610910565b60006001600160a01b038216610fc65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610910565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461100c5760405162461bcd60e51b815260040161091090612d5c565b6110166000611ca0565b565b3361102282610ee4565b6001600160a01b0316146110685760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b6044820152606401610910565b6000818152600b602081905260409091200154156110bc5760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b6044820152606401610910565b6000818152600b602081905260409091204291810182905560115490916110e39190612caa565b600c8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b600c546001600160a01b0316331461118c5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b6064820152608401610910565b60018360038111156111a0576111a061251f565b036111f9576000858152600b602052604081206005018054600192906111c7908490612caa565b90915550506000848152600b602052604081206006018054600192906111ee908490612caa565b909155506112619050565b600083600381111561120d5761120d61251f565b03611261576000858152600b60205260408120600601805460019290611234908490612caa565b90915550506000848152600b6020526040812060050180546001929061125b908490612caa565b90915550505b6000858152600b602052604081206008018054849290611282908490612caa565b90915550505050505050565b3033036112cd5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b6044820152606401610910565b6000828152600b60205260409020600c015442116112fc576000828152600b60205260409020600c01546112fe565b425b6113089082612caa565b6000928352600b6020526040909220600c019190915550565b6113296121ef565b600b6000838152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156113ee576113ee61251f565b60038111156113ff576113ff61251f565b90525092915050565b60606001805461081890612c30565b600a546001600160a01b031633146114415760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b038116158015906114675750600d546001600160a01b03828116911614155b6114ae5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b6044820152606401610910565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b336001600160a01b0383160361155b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610910565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115d13383611a02565b6115ed5760405162461bcd60e51b815260040161091090612cf5565b6115f984848484611cf2565b50505050565b6000818152600260205260409020546060906001600160a01b031661167e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610910565b6105f0826040518060800160405280605e8152602001612e84605e91396105f6565b600a546001600160a01b031633146116ca5760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b038116158015906116f05750600c546001600160a01b03828116911614155b6117375760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b6044820152606401610910565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4906020016114f8565b600a546001600160a01b031633146117af5760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b0381166118145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610910565b610e4e81611ca0565b60006001600160e01b031982166380ac58cd60e01b148061184e57506001600160e01b03198216635b5e139f60e01b145b806105f057506301ffc9a760e01b6001600160e01b03198316146105f0565b6060816000036118945750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118be57806118a881612d91565b91506118b79050600a83612cc2565b9150611898565b60008167ffffffffffffffff8111156118d9576118d96122a8565b6040519080825280601f01601f191660200182016040528015611903576020820181803683370190505b5090505b841561196e57611918600183612daa565b9150611925600a86612c80565b611930906030612caa565b60f81b81838151811061194557611945612d46565b60200101906001600160f81b031916908160001a905350611967600a86612cc2565b9450611907565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119ab82610ee4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6119fe828260405180602001604052806000815250611d25565b5050565b6000818152600260205260408120546001600160a01b0316611a7b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610910565b6000611a8683610ee4565b9050806001600160a01b0316846001600160a01b03161480611ac15750836001600160a01b0316611ab68461089b565b6001600160a01b0316145b8061196e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661196e565b826001600160a01b0316611b0882610ee4565b6001600160a01b031614611b705760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610910565b6001600160a01b038216611bd25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610910565b611bdd838383611d58565b611be8600082611976565b6001600160a01b0383166000908152600360205260408120805460019290611c11908490612daa565b90915550506001600160a01b0382166000908152600360205260408120805460019290611c3f908490612caa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611cfd848484611af5565b611d0984848484611e10565b6115f95760405162461bcd60e51b815260040161091090612dc1565b611d2f8383611f11565b611d3c6000848484611e10565b610a455760405162461bcd60e51b815260040161091090612dc1565b6001600160a01b038316611db357611dae81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611dd6565b816001600160a01b0316836001600160a01b031614611dd657611dd6838261205f565b6001600160a01b038216611ded57610a45816120fc565b826001600160a01b0316826001600160a01b031614610a4557610a4582826121ab565b60006001600160a01b0384163b15611f0657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e54903390899088908890600401612e13565b6020604051808303816000875af1925050508015611e8f575060408051601f3d908101601f19168201909252611e8c91810190612e50565b60015b611eec573d808015611ebd576040519150601f19603f3d011682016040523d82523d6000602084013e611ec2565b606091505b508051600003611ee45760405162461bcd60e51b815260040161091090612dc1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061196e565b506001949350505050565b6001600160a01b038216611f675760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610910565b6000818152600260205260409020546001600160a01b031615611fcc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610910565b611fd860008383611d58565b6001600160a01b0382166000908152600360205260408120805460019290612001908490612caa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161206c84610f5b565b6120769190612daa565b6000838152600760205260409020549091508082146120c9576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061210e90600190612daa565b6000838152600960205260408120546008805493945090928490811061213657612136612d46565b90600052602060002001549050806008838154811061215757612157612d46565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061218f5761218f612e6d565b6001900381819060005260206000200160009055905550505050565b60006121b683610f5b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156122695761226961251f565b905290565b6001600160e01b031981168114610e4e57600080fd5b60006020828403121561229657600080fd5b81356122a18161226e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156122d9576122d96122a8565b604051601f8501601f19908116603f01168101908282118183101715612301576123016122a8565b8160405280935085815286868601111561231a57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561234757600080fd5b82359150602083013567ffffffffffffffff81111561236557600080fd5b8301601f8101851361237657600080fd5b612385858235602084016122be565b9150509250929050565b60005b838110156123aa578181015183820152602001612392565b838111156115f95750506000910152565b600081518084526123d381602086016020860161238f565b601f01601f19169290920160200192915050565b6020815260006122a160208301846123bb565b60006020828403121561240c57600080fd5b5035919050565b80356001600160a01b038116811461242a57600080fd5b919050565b6000806040838503121561244257600080fd5b61244b83612413565b946020939093013593505050565b60008060006060848603121561246e57600080fd5b61247784612413565b925061248560208501612413565b9150604084013590509250925092565b6000602082840312156124a757600080fd5b6122a182612413565b600080600080600060a086880312156124c857600080fd5b85359450602086013593506040860135600481106124e557600080fd5b94979396509394606081013594506080013592915050565b6000806040838503121561251057600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6004811061255357634e487b7160e01b600052602160045260246000fd5b9052565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a0808401516125f982850182612535565b505092915050565b6000806040838503121561261457600080fd5b61261d83612413565b91506020830135801515811461263257600080fd5b809150509250929050565b6000806000806080858703121561265357600080fd5b61265c85612413565b935061266a60208601612413565b925060408501359150606085013567ffffffffffffffff81111561268d57600080fd5b8501601f8101871361269e57600080fd5b6126ad878235602084016122be565b91505092959194509250565b60006101c0820190508f82528e60208301528d60408301528c60608301528b60808301528a60a08301528960c08301528860e083015287610100830152866101208301528561014083015284610160830152836101808301526127206101a0830184612535565b9f9e505050505050505050505050505050565b6000806040838503121561274657600080fd5b61274f83612413565b915061275d60208401612413565b90509250929050565b6000815161277881856020860161238f565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b6062820152825160009061282b81606e85016020880161238f565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c18201526128d36128c560cd830186612766565b61207d60f01b815260020190565b95945050505050565b600085516128ee818460208a0161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a200000000000006020830152865161295081603a850160208b0161238f565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c84015286516129b0816081860160208b0161238f565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c3820152612a036128c560ca830186612766565b979650505050505050565b60008451612a2081846020890161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a2000000060208301528551612a8281603d850160208a0161238f565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605f84015285519150612ad582607985016020890161238f565b60799290910191820152607b0195945050505050565b60008551612afd818460208a0161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a20000060208301528651612b5f81603e850160208b0161238f565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a200060608401528651612bb081607f860160208b0161238f565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c1820152612a036128c560c6830186612766565b60008251612c1381846020870161238f565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c90821680612c4457607f821691505b602082108103612c6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082612c8f57612c8f612c6a565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115612cbd57612cbd612c94565b500190565b600082612cd157612cd1612c6a565b500490565b6000816000190483118215151615612cf057612cf0612c94565b500290565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201612da357612da3612c94565b5060010190565b600082821015612dbc57612dbc612c94565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e46908301846123bb565b9695505050505050565b600060208284031215612e6257600080fd5b81516122a18161226e565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067a2646970667358221220240657047fb161d9212c39c406d4c985fabdeabdb8053fd78cd874468064f90b64736f6c634300080f0033",
  "bytecodeSha1": "fb35eaf6bae772549a6cc268bacc80700780b794",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "11": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {
        "Strings.toString": {
          "142": [
            563,
            573,
            false
          ]
        }
      },
      "20": {
        "Wizards.initiate": {
          "113": [
            3944,
            3975,
            true
          ],
          "114": [
            4012,
            4061,
            true
          ]
        },
        "Wizards.mint": {
          "112": [
            2820,
            2862,
            true
          ]
        },
        "Wizards.reportBattle": {
          "115": [
            4635,
            4657,
            false
          ],
          "116": [
            4796,
            4819,
            false
          ]
        },
        "Wizards.updateBattler": {
          "119": [
            11308,
            11330,
            false
          ],
          "120": [
            11334,
            11353,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "117": [
            11544,
            11567,
            false
          ],
          "118": [
            11571,
            11592,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC721._checkOnERC721Received": {
          "132": [
            12657,
            12675,
            false
          ]
        },
        "ERC721._mint": {
          "133": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "131": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "130": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "128": [
            10896,
            10927,
            true
          ],
          "129": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "121": [
            3746,
            3757,
            true
          ],
          "122": [
            3830,
            3851,
            true
          ],
          "123": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "125": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "127": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "126": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "124": [
            5169,
            5210,
            true
          ]
        }
      },
      "6": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "136": [
            2870,
            2888,
            false
          ],
          "137": [
            2967,
            2977,
            false
          ],
          "138": [
            3067,
            3083,
            false
          ],
          "139": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "140": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "135": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "134": [
            1421,
            1452,
            true
          ]
        }
      },
      "7": {
        "Ownable.transferOwnership": {
          "141": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "14": {},
      "15": {},
      "16": {},
      "19": {
        "Strings.toString": {
          "61": [
            590,
            600
          ],
          "62": [
            711,
            719
          ],
          "63": [
            734,
            744
          ],
          "64": [
            850,
            861
          ],
          "65": [
            876,
            932
          ],
          "66": [
            947,
            958
          ],
          "67": [
            980,
            1001
          ]
        }
      },
      "20": {
        "Wizards.formatTokenURI": {
          "5": [
            7495,
            7978
          ],
          "6": [
            8043,
            8358
          ],
          "7": [
            8425,
            8902
          ],
          "8": [
            8938,
            8992
          ]
        },
        "Wizards.getStatsGivenId": {
          "42": [
            2179,
            2211
          ]
        },
        "Wizards.initiate": {
          "31": [
            3936,
            3993
          ],
          "32": [
            4004,
            4083
          ],
          "33": [
            4238,
            4283
          ],
          "34": [
            4294,
            4386
          ],
          "35": [
            4399,
            4452
          ]
        },
        "Wizards.isActive": {
          "1": [
            1998,
            2072
          ]
        },
        "Wizards.mint": {
          "17": [
            2812,
            2881
          ],
          "18": [
            3642,
            3681
          ],
          "19": [
            3692,
            3731
          ]
        },
        "Wizards.reportBattle": {
          "36": [
            4673,
            4710
          ],
          "37": [
            4725,
            4764
          ],
          "38": [
            4835,
            4874
          ],
          "39": [
            4889,
            4926
          ],
          "40": [
            4950,
            5005
          ]
        },
        "Wizards.tokenURI": {
          "52": [
            6479,
            6556
          ],
          "53": [
            6600,
            6729
          ]
        },
        "Wizards.updateBattler": {
          "54": [
            11300,
            11382
          ],
          "55": [
            11393,
            11411
          ],
          "56": [
            11422,
            11447
          ]
        },
        "Wizards.updateVerifier": {
          "44": [
            11536,
            11621
          ],
          "45": [
            11632,
            11652
          ],
          "46": [
            11663,
            11690
          ]
        },
        "Wizards.verifyDuty": {
          "41": [
            5883,
            6103
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "60": [
            901,
            948
          ]
        }
      },
      "5": {
        "ERC721._approve": {
          "68": [
            11535,
            11564
          ],
          "69": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "93": [
            12700,
            12760
          ],
          "94": [
            12527,
            12589
          ],
          "95": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "10": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "71": [
            7882,
            7955
          ],
          "72": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "96": [
            9528,
            9589
          ],
          "97": [
            9600,
            9658
          ],
          "98": [
            9671,
            9716
          ],
          "99": [
            9729,
            9747
          ],
          "100": [
            9758,
            9779
          ],
          "101": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "70": [
            8538,
            8564
          ],
          "85": [
            8929,
            8947
          ],
          "86": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "83": [
            7007,
            7035
          ],
          "84": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "73": [
            10888,
            10973
          ],
          "74": [
            10984,
            11049
          ],
          "75": [
            11062,
            11101
          ],
          "76": [
            11166,
            11195
          ],
          "77": [
            11208,
            11228
          ],
          "78": [
            11239,
            11257
          ],
          "79": [
            11268,
            11289
          ],
          "80": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "13": [
            3738,
            3795
          ],
          "15": [
            3808,
            3976
          ],
          "16": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "28": [
            2041,
            2115
          ],
          "29": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "11": [
            4180,
            4253
          ],
          "12": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "9": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "27": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "24": [
            5522,
            5561
          ],
          "50": [
            5807,
            5910
          ],
          "51": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "47": [
            4472,
            4534
          ],
          "48": [
            4547,
            4600
          ],
          "49": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "59": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "43": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            5161,
            5264
          ],
          "21": [
            5277,
            5305
          ]
        }
      },
      "6": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "88": [
            4053,
            4097
          ],
          "89": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "110": [
            3687,
            3721
          ],
          "111": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "87": [
            2905,
            2945
          ],
          "90": [
            2994,
            3041
          ],
          "91": [
            3100,
            3145
          ],
          "92": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "106": [
            6793,
            6829
          ],
          "107": [
            6898,
            6939
          ],
          "108": [
            7063,
            7094
          ],
          "109": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "102": [
            5367,
            5411
          ],
          "103": [
            5484,
            5527
          ],
          "104": [
            5662,
            5695
          ],
          "105": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "25": [
            1913,
            2008
          ],
          "26": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "22": [
            1413,
            1500
          ],
          "23": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "7": {
        "Ownable._setOwner": {
          "81": [
            2193,
            2210
          ],
          "82": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "57": [
            1982,
            2055
          ],
          "58": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461047c578063db2a0a5514610515578063e52e324914610569578063e985e9c51461057c578063f2fde38b146105b857600080fd5b8063a22cb46514610430578063b88d4fde14610443578063bc0b0d8814610456578063c87b56dd1461046957600080fd5b80638ad4d6a5116100f45780638ad4d6a5146103d15780638cb22518146103e45780638da5cb5b1461040457806395d89b411461041557806397fc007c1461041d57600080fd5b8063715018a61461037e5780637901ea78146103865780638140bd0b1461039957806382afd23b146103ac57600080fd5b806318160ddd116101a857806342842e0e1161017757806342842e0e1461031f578063437454b9146103325780634f6ccce7146103455780636352211e1461035857806370a082311461036b57600080fd5b806318160ddd146102de57806323b872dd146102e65780632b7ac3f3146102f95780632f745c591461030c57600080fd5b8063081812fc116101e4578063081812fc14610288578063095ea7b3146102b35780630a363d08146102c85780631249c58b146102d657600080fd5b806301ffc9a7146102165780630419e3141461023e578063051063531461025e57806306fdde0314610280575b600080fd5b610229610224366004612284565b6105cb565b60405190151581526020015b60405180910390f35b61025161024c366004612334565b6105f6565b60405161023591906123e7565b61027261026c3660046123fa565b50600090565b604051908152602001610235565b610251610809565b61029b6102963660046123fa565b61089b565b6040516001600160a01b039091168152602001610235565b6102c66102c136600461242f565b610935565b005b61022961026c3660046123fa565b6102c6610a4a565b600854610272565b6102c66102f4366004612459565b610d2d565b600d5461029b906001600160a01b031681565b61027261031a36600461242f565b610d5e565b6102c661032d366004612459565b610df4565b6102c66103403660046123fa565b610e0f565b6102726103533660046123fa565b610e51565b61029b6103663660046123fa565b610ee4565b610272610379366004612495565b610f5b565b6102c6610fe2565b6102c66103943660046123fa565b611018565b6102c66103a73660046124b0565b611126565b6102296103ba3660046123fa565b6000908152600b60205260409020600c0154421090565b6102c66103df3660046124fd565b61128e565b6103f76103f23660046123fa565b611321565b6040516102359190612557565b600a546001600160a01b031661029b565b610251611408565b6102c661042b366004612495565b611417565b6102c661043e366004612601565b611503565b6102c661045136600461263d565b6115c7565b600c5461029b906001600160a01b031681565b6102516104773660046123fa565b6115ff565b6104fb61048a3660046123fa565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549b8b0154600c8c0154600d909c01549a9c999b989a979996989597949693959294919392909160ff168e565b6040516102359e9d9c9b9a999897969594939291906126b9565b600e54600f5460105460115460125461053894939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a001610235565b6102c6610577366004612495565b6116a0565b61022961058a366004612733565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102c66105c6366004612495565b611785565b60006001600160e01b0319821663780e9d6360e01b14806105f057506105f08261181d565b92915050565b60606000600b6000858152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156106bf576106bf61251f565b60038111156106d0576106d061251f565b8152505090506000836106e6836000015161186d565b6040516020016106f7929190612782565b604051602081830303815290604052905080610716836020015161186d565b610723846040015161186d565b610730856060015161186d565b60405160200161074394939291906128dc565b604051602081830303815290604052905080610762836080015161186d565b61076f8460a0015161186d565b60405160200161078193929190612a0e565b6040516020818303038152906040529050806107a08360c0015161186d565b6107ad8460e0015161186d565b6107bb85610100015161186d565b6040516020016107ce9493929190612aeb565b6040516020818303038152906040529050806040516020016107f09190612c01565b60408051808303601f1901815291905295945050505050565b60606000805461081890612c30565b80601f016020809104026020016040519081016040528092919081815260200182805461084490612c30565b80156108915780601f1061086657610100808354040283529160200191610891565b820191906000526020600020905b81548152906001019060200180831161087457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109195760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061094082610ee4565b9050806001600160a01b0316836001600160a01b0316036109ad5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610910565b336001600160a01b03821614806109c957506109c9813361058a565b610a3b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610910565b610a458383611976565b505050565b60105460085410610a8e5760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b6044820152606401610910565b6000610a9960085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f19818403018152919052805160209091012090506000610aec601a83612c80565b610af7906019612caa565b90506000601a610b08606485612cc2565b610b129190612c80565b610b1d906019612caa565b90506000600a610b2d8186612cc2565b610b38906004612cd6565b610b429190612c80565b610b4d90600a612caa565b90506000600a610b5d8187612cc2565b610b68906005612cd6565b610b729190612c80565b610b7d90600a612caa565b905060006004610b8e600a88612cc2565b610b99906006612cd6565b610ba39190612c80565b6003811115610bb457610bb461251f565b90506000604051806101c00160405280600181526020018781526020018681526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610c2d57610c2d61251f565b9052905080600b6000610c3f60085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c01556101a082015181600d0160006101000a81548160ff02191690836003811115610cff57610cff61251f565b0217905550905050610d2433610d1460085490565b610d1f906001612caa565b6119e4565b50505050505050565b610d373382611a02565b610d535760405162461bcd60e51b815260040161091090612cf5565b610a45838383611af5565b6000610d6983610f5b565b8210610dcb5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610910565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610a45838383604051806020016040528060008152506115c7565b303303610e4e5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b6044820152606401610910565b50565b6000610e5c60085490565b8210610ebf5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610910565b60088281548110610ed257610ed2612d46565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610910565b60006001600160a01b038216610fc65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610910565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461100c5760405162461bcd60e51b815260040161091090612d5c565b6110166000611ca0565b565b3361102282610ee4565b6001600160a01b0316146110685760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b6044820152606401610910565b6000818152600b602081905260409091200154156110bc5760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b6044820152606401610910565b6000818152600b602081905260409091204291810182905560115490916110e39190612caa565b600c8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b600c546001600160a01b0316331461118c5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b6064820152608401610910565b60018360038111156111a0576111a061251f565b036111f9576000858152600b602052604081206005018054600192906111c7908490612caa565b90915550506000848152600b602052604081206006018054600192906111ee908490612caa565b909155506112619050565b600083600381111561120d5761120d61251f565b03611261576000858152600b60205260408120600601805460019290611234908490612caa565b90915550506000848152600b6020526040812060050180546001929061125b908490612caa565b90915550505b6000858152600b602052604081206008018054849290611282908490612caa565b90915550505050505050565b3033036112cd5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b6044820152606401610910565b6000828152600b60205260409020600c015442116112fc576000828152600b60205260409020600c01546112fe565b425b6113089082612caa565b6000928352600b6020526040909220600c019190915550565b6113296121ef565b600b6000838152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156113ee576113ee61251f565b60038111156113ff576113ff61251f565b90525092915050565b60606001805461081890612c30565b600a546001600160a01b031633146114415760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b038116158015906114675750600d546001600160a01b03828116911614155b6114ae5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b6044820152606401610910565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b336001600160a01b0383160361155b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610910565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115d13383611a02565b6115ed5760405162461bcd60e51b815260040161091090612cf5565b6115f984848484611cf2565b50505050565b6000818152600260205260409020546060906001600160a01b031661167e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610910565b6105f0826040518060800160405280605e8152602001612e84605e91396105f6565b600a546001600160a01b031633146116ca5760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b038116158015906116f05750600c546001600160a01b03828116911614155b6117375760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b6044820152606401610910565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4906020016114f8565b600a546001600160a01b031633146117af5760405162461bcd60e51b815260040161091090612d5c565b6001600160a01b0381166118145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610910565b610e4e81611ca0565b60006001600160e01b031982166380ac58cd60e01b148061184e57506001600160e01b03198216635b5e139f60e01b145b806105f057506301ffc9a760e01b6001600160e01b03198316146105f0565b6060816000036118945750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118be57806118a881612d91565b91506118b79050600a83612cc2565b9150611898565b60008167ffffffffffffffff8111156118d9576118d96122a8565b6040519080825280601f01601f191660200182016040528015611903576020820181803683370190505b5090505b841561196e57611918600183612daa565b9150611925600a86612c80565b611930906030612caa565b60f81b81838151811061194557611945612d46565b60200101906001600160f81b031916908160001a905350611967600a86612cc2565b9450611907565b949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119ab82610ee4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6119fe828260405180602001604052806000815250611d25565b5050565b6000818152600260205260408120546001600160a01b0316611a7b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610910565b6000611a8683610ee4565b9050806001600160a01b0316846001600160a01b03161480611ac15750836001600160a01b0316611ab68461089b565b6001600160a01b0316145b8061196e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661196e565b826001600160a01b0316611b0882610ee4565b6001600160a01b031614611b705760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610910565b6001600160a01b038216611bd25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610910565b611bdd838383611d58565b611be8600082611976565b6001600160a01b0383166000908152600360205260408120805460019290611c11908490612daa565b90915550506001600160a01b0382166000908152600360205260408120805460019290611c3f908490612caa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611cfd848484611af5565b611d0984848484611e10565b6115f95760405162461bcd60e51b815260040161091090612dc1565b611d2f8383611f11565b611d3c6000848484611e10565b610a455760405162461bcd60e51b815260040161091090612dc1565b6001600160a01b038316611db357611dae81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611dd6565b816001600160a01b0316836001600160a01b031614611dd657611dd6838261205f565b6001600160a01b038216611ded57610a45816120fc565b826001600160a01b0316826001600160a01b031614610a4557610a4582826121ab565b60006001600160a01b0384163b15611f0657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e54903390899088908890600401612e13565b6020604051808303816000875af1925050508015611e8f575060408051601f3d908101601f19168201909252611e8c91810190612e50565b60015b611eec573d808015611ebd576040519150601f19603f3d011682016040523d82523d6000602084013e611ec2565b606091505b508051600003611ee45760405162461bcd60e51b815260040161091090612dc1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061196e565b506001949350505050565b6001600160a01b038216611f675760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610910565b6000818152600260205260409020546001600160a01b031615611fcc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610910565b611fd860008383611d58565b6001600160a01b0382166000908152600360205260408120805460019290612001908490612caa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161206c84610f5b565b6120769190612daa565b6000838152600760205260409020549091508082146120c9576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061210e90600190612daa565b6000838152600960205260408120546008805493945090928490811061213657612136612d46565b90600052602060002001549050806008838154811061215757612157612d46565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061218f5761218f612e6d565b6001900381819060005260206000200160009055905550505050565b60006121b683610f5b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156122695761226961251f565b905290565b6001600160e01b031981168114610e4e57600080fd5b60006020828403121561229657600080fd5b81356122a18161226e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156122d9576122d96122a8565b604051601f8501601f19908116603f01168101908282118183101715612301576123016122a8565b8160405280935085815286868601111561231a57600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561234757600080fd5b82359150602083013567ffffffffffffffff81111561236557600080fd5b8301601f8101851361237657600080fd5b612385858235602084016122be565b9150509250929050565b60005b838110156123aa578181015183820152602001612392565b838111156115f95750506000910152565b600081518084526123d381602086016020860161238f565b601f01601f19169290920160200192915050565b6020815260006122a160208301846123bb565b60006020828403121561240c57600080fd5b5035919050565b80356001600160a01b038116811461242a57600080fd5b919050565b6000806040838503121561244257600080fd5b61244b83612413565b946020939093013593505050565b60008060006060848603121561246e57600080fd5b61247784612413565b925061248560208501612413565b9150604084013590509250925092565b6000602082840312156124a757600080fd5b6122a182612413565b600080600080600060a086880312156124c857600080fd5b85359450602086013593506040860135600481106124e557600080fd5b94979396509394606081013594506080013592915050565b6000806040838503121561251057600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6004811061255357634e487b7160e01b600052602160045260246000fd5b9052565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a0808401516125f982850182612535565b505092915050565b6000806040838503121561261457600080fd5b61261d83612413565b91506020830135801515811461263257600080fd5b809150509250929050565b6000806000806080858703121561265357600080fd5b61265c85612413565b935061266a60208601612413565b925060408501359150606085013567ffffffffffffffff81111561268d57600080fd5b8501601f8101871361269e57600080fd5b6126ad878235602084016122be565b91505092959194509250565b60006101c0820190508f82528e60208301528d60408301528c60608301528b60808301528a60a08301528960c08301528860e083015287610100830152866101208301528561014083015284610160830152836101808301526127206101a0830184612535565b9f9e505050505050505050505050505050565b6000806040838503121561274657600080fd5b61274f83612413565b915061275d60208401612413565b90509250929050565b6000815161277881856020860161238f565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b6062820152825160009061282b81606e85016020880161238f565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c18201526128d36128c560cd830186612766565b61207d60f01b815260020190565b95945050505050565b600085516128ee818460208a0161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a200000000000006020830152865161295081603a850160208b0161238f565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c84015286516129b0816081860160208b0161238f565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c3820152612a036128c560ca830186612766565b979650505050505050565b60008451612a2081846020890161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a2000000060208301528551612a8281603d850160208a0161238f565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605f84015285519150612ad582607985016020890161238f565b60799290910191820152607b0195945050505050565b60008551612afd818460208a0161238f565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a20000060208301528651612b5f81603e850160208b0161238f565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a200060608401528651612bb081607f860160208b0161238f565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c1820152612a036128c560c6830186612766565b60008251612c1381846020870161238f565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c90821680612c4457607f821691505b602082108103612c6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082612c8f57612c8f612c6a565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115612cbd57612cbd612c94565b500190565b600082612cd157612cd1612c6a565b500490565b6000816000190483118215151615612cf057612cf0612c94565b500290565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060018201612da357612da3612c94565b5060010190565b600082821015612dbc57612dbc612c94565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e46908301846123bb565b9695505050505050565b600060208284031215612e6257600080fd5b81516122a18161226e565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f6173322e667463646e2e6e65742f76322f6a70672f30332f31322f37372f30332f313030305f465f3331323737303334395f346c6b464e336532556c4f34336b516c46656d464e4970566b47355a777974712e6a7067a2646970667358221220240657047fb161d9212c39c406d4c985fabdeabdb8053fd78cd874468064f90b64736f6c634300080f0033",
  "deployedSourceMap": "359:11344:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:6;;;;;;:::i;:::-;;:::i;:::-;;;565:14:21;;558:22;540:41;;528:2;513:18;988:224:6;;;;;;;;6745:3235:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5444:72::-;;;;;;:::i;:::-;-1:-1:-1;5497:7:20;;5444:72;;;;2989:25:21;;;2977:2;2962:18;5444:72:20;2843:177:21;2525:100:5;;;:::i;4084:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3189:32:21;;;3171:51;;3159:2;3144:18;4084:221:5;3025:203:21;3607:411:5;;;;;;:::i;:::-;;:::i;:::-;;5602:72:20;;;;;;:::i;2776:1029::-;;;:::i;1628:113:6:-;1716:10;:17;1628:113;;4974:339:5;;;;;;:::i;:::-;;:::i;614:23:20:-;;;;;-1:-1:-1;;;;;614:23:20;;;1296:256:6;;;;;;:::i;:::-;;:::i;5384:185:5:-;;;;;;:::i;:::-;;:::i;6308:61:20:-;;;;;;:::i;:::-;;:::i;1818:233:6:-;;;;;;:::i;:::-;;:::i;2219:239:5:-;;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;:::i;:::-;;:::i;1652:94:7:-;;;:::i;3880:580:20:-;;;;;;:::i;:::-;;:::i;4468:919::-;;;;;;:::i;:::-;;:::i;1924:156::-;;;;;;:::i;:::-;1981:4;2005:25;;;:14;:25;;;;;:49;;;2057:15;-1:-1:-1;2005:67:20;1924:156;5753:450;;;;;;:::i;:::-;;:::i;2088:131::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1001:87:7:-;1074:6;;-1:-1:-1;;;;;1074:6:7;1001:87;;2694:104:5;;;:::i;11463:235:20:-;;;;;;:::i;:::-;;:::i;4377:295:5:-;;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;:::i;:::-;;:::i;548:22:20:-;;;;;-1:-1:-1;;;;;548:22:20;;;6379:358;;;;;;:::i;:::-;;:::i;493:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1568:40::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1568:40:20;;;;;;;9039:25:21;;;9095:2;9080:18;;9073:34;;;;9123:18;;;9116:34;;;;9181:2;9166:18;;9159:34;-1:-1:-1;;;;;9230:32:21;9224:3;9209:19;;9202:61;9026:3;9011:19;1568:40:20;8780:489:21;11229:226:20;;;;;;:::i;:::-;;:::i;4743:164:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:5;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:7;;;;;;:::i;:::-;;:::i;988:224:6:-;1090:4;-1:-1:-1;;;;;;1114:50:6;;-1:-1:-1;;;1114:50:6;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:6:o;6745:3235:20:-;6832:13;6913:20;6936:14;:24;6951:8;6936:24;;;;;;;;;;;6913:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;6973:22;7198:8;7381:31;7398:7;:13;;;7381:16;:31::i;:::-;7005:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6973:457;;7530:8;7628:28;7645:7;:10;;;7628:16;:28::i;:::-;7765:38;7782:7;:20;;;7765:16;:38::i;:::-;7918:40;7935:7;:22;;;7918:16;:40::i;:::-;7513:464;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7495:483;;8078:8;8179:31;8196:7;:13;;;8179:16;:31::i;:::-;8308:30;8325:7;:12;;;8308:16;:30::i;:::-;8061:296;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8043:315;;8460:8;8562:32;8579:7;:14;;;8562:16;:32::i;:::-;8697:33;8714:7;:15;;;8697:16;:33::i;:::-;8843:39;8860:7;:21;;;8843:16;:39::i;:::-;8443:458;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8425:477;;8973:8;8956:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;8956:35:20;;;;;;;6745:3235;-1:-1:-1;;;;;6745:3235:20:o;2525:100:5:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;4180:73;;;;-1:-1:-1;;;4180:73:5;;18569:2:21;4180:73:5;;;18551:21:21;18608:2;18588:18;;;18581:30;18647:34;18627:18;;;18620:62;-1:-1:-1;;;18698:18:21;;;18691:42;18750:19;;4180:73:5;;;;;;;;;-1:-1:-1;4273:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:5;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:5;:2;-1:-1:-1;;;;;3746:11:5;;3738:57;;;;-1:-1:-1;;;3738:57:5;;18982:2:21;3738:57:5;;;18964:21:21;19021:2;19001:18;;;18994:30;19060:34;19040:18;;;19033:62;-1:-1:-1;;;19111:18:21;;;19104:31;19152:19;;3738:57:5;18780:397:21;3738:57:5;679:10:3;-1:-1:-1;;;;;3830:21:5;;;;:62;;-1:-1:-1;3855:37:5;3872:5;679:10:3;4743:164:5;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:5;;19384:2:21;3808:168:5;;;19366:21:21;19423:2;19403:18;;;19396:30;19462:34;19442:18;;;19435:62;19533:26;19513:18;;;19506:54;19577:19;;3808:168:5;19182:420:21;3808:168:5;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;2776:1029:20:-;2836:26;;1716:10:6;:17;2820:42:20;2812:69;;;;-1:-1:-1;;;2812:69:20;;19809:2:21;2812:69:20;;;19791:21:21;19848:2;19828:18;;;19821:30;-1:-1:-1;;;19867:18:21;;;19860:44;19921:18;;2812:69:20;19607:338:21;2812:69:20;2999:21;3058:13;1716:10:6;:17;;1628:113;3058:13:20;3041:60;;;;;;20135:19:21;;;;-1:-1:-1;;3073:10:20;20192:2:21;20188:15;20184:53;20170:12;;;20163:75;3085:15:20;20254:12:21;;;20247:28;20291:12;;3041:60:20;;;-1:-1:-1;;3041:60:20;;;;;;;;;3031:71;;3041:60;3031:71;;;;;-1:-1:-1;3023:80:20;3246:18;3262:2;3031:71;3246:18;:::i;:::-;3241:23;;:2;:23;:::i;:::-;3228:36;-1:-1:-1;3275:20:20;3325:2;3304:17;3318:3;3304:13;:17;:::i;:::-;3303:24;;;;:::i;:::-;3298:29;;:2;:29;:::i;:::-;3275:52;-1:-1:-1;3338:22:20;3391:2;3369:16;3391:2;3369:13;:16;:::i;:::-;:18;;3386:1;3369:18;:::i;:::-;3368:25;;;;:::i;:::-;3363:30;;:2;:30;:::i;:::-;3338:55;-1:-1:-1;3404:13:20;3448:2;3426:16;3448:2;3426:13;:16;:::i;:::-;:18;;3443:1;3426:18;:::i;:::-;3425:25;;;;:::i;:::-;3420:30;;:2;:30;:::i;:::-;3404:46;-1:-1:-1;3461:15:20;3510:1;3488:16;3502:2;3488:13;:16;:::i;:::-;:18;;3505:1;3488:18;:::i;:::-;3487:24;;;;:::i;:::-;3479:33;;;;;;;;:::i;:::-;3461:51;;3525:20;3549:82;;;;;;;;3555:1;3549:82;;;;3558:2;3549:82;;;;3562:12;3549:82;;;;3576:14;3549:82;;;;3592:5;3549:82;;;;3599:1;3549:82;;;;3602:1;3549:82;;;;3605:1;3549:82;;;;3608:1;3549:82;;;;3611:1;3549:82;;;;3614:1;3549:82;;;;3617:1;3549:82;;;;3620:1;3549:82;;;;3623:7;3549:82;;;;;;;;:::i;:::-;;;3525:106;-1:-1:-1;3525:106:20;3642:14;:29;3657:13;1716:10:6;:17;;1628:113;3657:13:20;3642:29;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3692;3702:10;3714:13;1716:10:6;:17;;1628:113;3714:13:20;:15;;3728:1;3714:15;:::i;:::-;3692:9;:39::i;:::-;2801:1004;;;;;;;2776:1029::o;4974:339:5:-;5169:41;679:10:3;5202:7:5;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:5;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:6:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:6;;21746:2:21;1413:87:6;;;21728:21:21;21785:2;21765:18;;;21758:30;21824:34;21804:18;;;21797:62;-1:-1:-1;;;21875:18:21;;;21868:41;21926:19;;1413:87:6;21544:407:21;1413:87:6;-1:-1:-1;;;;;;1518:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;5384:185:5:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;6308:61:20:-;10855:4;10833:10;:27;10825:53;;;;-1:-1:-1;;;10825:53:20;;22158:2:21;10825:53:20;;;22140:21:21;22197:2;22177:18;;;22170:30;-1:-1:-1;;;22216:18:21;;;22209:43;22269:18;;10825:53:20;21956:337:21;10825:53:20;6308:61;:::o;1818:233:6:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:6;;22500:2:21;1913:95:6;;;22482:21:21;22539:2;22519:18;;;22512:30;22578:34;22558:18;;;22551:62;-1:-1:-1;;;22629:18:21;;;22622:42;22681:19;;1913:95:6;22298:408:21;1913:95:6;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:5:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:5;;2354:73;;;;-1:-1:-1;;;2354:73:5;;23045:2:21;2354:73:5;;;23027:21:21;23084:2;23064:18;;;23057:30;23123:34;23103:18;;;23096:62;-1:-1:-1;;;23174:18:21;;;23167:39;23223:19;;2354:73:5;22843:405:21;1949:208:5;2021:7;-1:-1:-1;;;;;2049:19:5;;2041:74;;;;-1:-1:-1;;;2041:74:5;;23455:2:21;2041:74:5;;;23437:21:21;23494:2;23474:18;;;23467:30;23533:34;23513:18;;;23506:62;-1:-1:-1;;;23584:18:21;;;23577:40;23634:19;;2041:74:5;23253:406:21;2041:74:5;-1:-1:-1;;;;;;2133:16:5;;;;;:9;:16;;;;;;;1949:208::o;1652:94:7:-;1074:6;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;3880:580:20:-;3965:10;3944:17;3952:8;3944:7;:17::i;:::-;-1:-1:-1;;;;;3944:31:20;;3936:57;;;;-1:-1:-1;;;3936:57:20;;24227:2:21;3936:57:20;;;24209:21:21;24266:2;24246:18;;;24239:30;-1:-1:-1;;;24285:18:21;;;24278:43;24338:18;;3936:57:20;24025:337:21;3936:57:20;4012:24;;;;:14;:24;;;;;;;;:44;;:49;4004:79;;;;-1:-1:-1;;;4004:79:20;;24569:2:21;4004:79:20;;;24551:21:21;24608:2;24588:18;;;24581:30;-1:-1:-1;;;24627:18:21;;;24620:47;24684:18;;4004:79:20;24367:341:21;4004:79:20;4179:21;4203:24;;;:14;:24;;;;;;;;4268:15;4238:27;;;:45;;;4346:40;;4203:24;;4328:58;;4346:40;4328:58;:::i;:::-;4294:31;;;:92;4404:48;;;4414:10;24887:51:21;;4436:15:20;24969:2:21;24954:18;;24947:34;4426:8:20;;4404:48;;24860:18:21;4404:48:20;;;;;;;3925:535;3880:580;:::o;4468:919::-;11033:7;;-1:-1:-1;;;;;11033:7:20;11019:10;:21;10997:107;;;;-1:-1:-1;;;10997:107:20;;25194:2:21;10997:107:20;;;25176:21:21;25233:2;25213:18;;;25206:30;25272:34;25252:18;;;25245:62;-1:-1:-1;;;25323:18:21;;;25316:34;25367:19;;10997:107:20;24992:400:21;10997:107:20;4646:11:::1;4635:7;:22;;;;;;;;:::i;:::-;::::0;4632:306:::1;;4673:27;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;4709:1:::1;::::0;4673:27;:37:::1;::::0;4709:1;;4673:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4725:27:20::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;4763:1:::1;::::0;4725:27;:39:::1;::::0;4763:1;;4725:39:::1;:::i;:::-;::::0;;;-1:-1:-1;4632:306:20::1;::::0;-1:-1:-1;4632:306:20::1;;4807:12;4796:7;:23;;;;;;;;:::i;:::-;::::0;4793:145:::1;;4835:27;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;4873:1:::1;::::0;4835:27;:39:::1;::::0;4873:1;;4835:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;4889:27:20::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;4925:1:::1;::::0;4889:27;:37:::1;::::0;4925:1;;4889:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4793:145:20::1;4950:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;4995:10;;4950:27;:55:::1;::::0;4995:10;;4950:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4468:919:20:o;5753:450::-;10684:4;10662:10;:27;10654:53;;;;-1:-1:-1;;;10654:53:20;;22158:2:21;10654:53:20;;;22140:21:21;22197:2;22177:18;;;22170:30;-1:-1:-1;;;22216:18:21;;;22209:43;22269:18;;10654:53:20;21956:337:21;10654:53:20;5949:24:::1;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;6000:15:::1;-1:-1:-1::0;5949:153:20::1;;6054:24;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;5949:153:::1;;;6036:15;5949:153;5934:169;::::0;:11;:169:::1;:::i;:::-;5883:24;::::0;;;:14:::1;:24;::::0;;;;;:48:::1;;:220:::0;;;;-1:-1:-1;5753:450:20:o;2088:131::-;2154:12;;:::i;:::-;2186:14;:25;2201:9;2186:25;;;;;;;;;;;2179:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;2179:32:20;2088:131;-1:-1:-1;;2088:131:20:o;2694:104:5:-;2750:13;2783:7;2776:14;;;;;:::i;11463:235:20:-;1074:6:7;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;11544:23:20;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;11584:8:20::1;::::0;-1:-1:-1;;;;;11571:21:20;;::::1;11584:8:::0;::::1;11571:21;;11544:48;11536:85;;;::::0;-1:-1:-1;;;11536:85:20;;25599:2:21;11536:85:20::1;::::0;::::1;25581:21:21::0;25638:2;25618:18;;;25611:30;-1:-1:-1;;;25657:18:21;;;25650:54;25721:18;;11536:85:20::1;25397:348:21::0;11536:85:20::1;11632:8;:20:::0;;-1:-1:-1;;;;;;11632:20:20::1;-1:-1:-1::0;;;;;11632:20:20;::::1;::::0;;::::1;::::0;;;11668:22:::1;::::0;3171:51:21;;;11668:22:20::1;::::0;3159:2:21;3144:18;11668:22:20::1;;;;;;;;11463:235:::0;:::o;4377:295:5:-;679:10:3;-1:-1:-1;;;;;4480:24:5;;;4472:62;;;;-1:-1:-1;;;4472:62:5;;25952:2:21;4472:62:5;;;25934:21:21;25991:2;25971:18;;;25964:30;26030:27;26010:18;;;26003:55;26075:18;;4472:62:5;25750:349:21;4472:62:5;679:10:3;4547:32:5;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:5;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:5;;;;;;;;;;4616:48;;540:41:21;;;4547:42:5;;679:10:3;4616:48:5;;513:18:21;4616:48:5;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:3;5848:7:5;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:5;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;6379:358:20:-;7543:4:5;7567:16;;;:7;:16;;;;;;6453:13:20;;-1:-1:-1;;;;;7567:16:5;6479:77:20;;;;-1:-1:-1;;;6479:77:20;;26306:2:21;6479:77:20;;;26288:21:21;26345:2;26325:18;;;26318:30;26384:34;26364:18;;;26357:62;-1:-1:-1;;;26435:18:21;;;26428:45;26490:19;;6479:77:20;26104:411:21;6479:77:20;6607:122;6622:8;6607:122;;;;;;;;;;;;;;;;;:14;:122::i;11229:226::-;1074:6:7;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;11308:22:20;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;11346:7:20::1;::::0;-1:-1:-1;;;;;11334:19:20;;::::1;11346:7:::0;::::1;11334:19;;11308:45;11300:82;;;::::0;-1:-1:-1;;;11300:82:20;;25599:2:21;11300:82:20::1;::::0;::::1;25581:21:21::0;25638:2;25618:18;;;25611:30;-1:-1:-1;;;25657:18:21;;;25650:54;25721:18;;11300:82:20::1;25397:348:21::0;11300:82:20::1;11393:7;:18:::0;;-1:-1:-1;;;;;;11393:18:20::1;-1:-1:-1::0;;;;;11393:18:20;::::1;::::0;;::::1;::::0;;;11427:20:::1;::::0;3171:51:21;;;11427:20:20::1;::::0;3159:2:21;3144:18;11427:20:20::1;3025:203:21::0;1901:192:7;1074:6;;-1:-1:-1;;;;;1074:6:7;679:10:3;1221:23:7;1213:68;;;;-1:-1:-1;;;1213:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:7;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:7;;26722:2:21;1982:73:7::1;::::0;::::1;26704:21:21::0;26761:2;26741:18;;;26734:30;26800:34;26780:18;;;26773:62;-1:-1:-1;;;26851:18:21;;;26844:36;26897:19;;1982:73:7::1;26520:402:21::0;1982:73:7::1;2066:19;2076:8;2066:9;:19::i;1580:305:5:-:0;1682:4;-1:-1:-1;;;;;;1719:40:5;;-1:-1:-1;;;1719:40:5;;:105;;-1:-1:-1;;;;;;;1776:48:5;;-1:-1:-1;;;1776:48:5;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:4;;;1841:36:5;799:157:4;286:723:19;342:13;563:5;572:1;563:10;559:53;;-1:-1:-1;;590:10:19;;;;;;;;;;;;-1:-1:-1;;;590:10:19;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:19;;-1:-1:-1;742:2:19;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:19;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:19;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:19;;;;;;;;-1:-1:-1;947:11:19;956:2;947:11;;:::i;:::-;;;816:154;;;994:6;286:723;-1:-1:-1;;;;286:723:19:o;11460:174:5:-;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:5;-1:-1:-1;;;;;11535:29:5;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:5;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;7882:73;;;;-1:-1:-1;;;7882:73:5;;27399:2:21;7882:73:5;;;27381:21:21;27438:2;27418:18;;;27411:30;27477:34;27457:18;;;27450:62;-1:-1:-1;;;27528:18:21;;;27521:42;27580:19;;7882:73:5;27197:408:21;7882:73:5;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:5;:7;-1:-1:-1;;;;;8024:16:5;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:5;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:5;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:5;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:5;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:5;;10888:85;;;;-1:-1:-1;;;10888:85:5;;27812:2:21;10888:85:5;;;27794:21:21;27851:2;27831:18;;;27824:30;27890:34;27870:18;;;27863:62;-1:-1:-1;;;27941:18:21;;;27934:39;27990:19;;10888:85:5;27610:405:21;10888:85:5;-1:-1:-1;;;;;10992:16:5;;10984:65;;;;-1:-1:-1;;;10984:65:5;;28222:2:21;10984:65:5;;;28204:21:21;28261:2;28241:18;;;28234:30;28300:34;28280:18;;;28273:62;-1:-1:-1;;;28351:18:21;;;28344:34;28395:19;;10984:65:5;28020:400:21;10984:65:5;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:5;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:5;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:5;-1:-1:-1;;;;;11268:21:5;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:7:-;2176:6;;;-1:-1:-1;;;;;2193:17:7;;;-1:-1:-1;;;;;;2193:17:7;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:5:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:5;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:5;;;;;;;:::i;2664:589:6:-;-1:-1:-1;;;;;2870:18:6;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:6;:4;-1:-1:-1;;;;;2967:10:6;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:6;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:6;:2;-1:-1:-1;;;;;3167:10:6;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:5:-;12354:4;-1:-1:-1;;;;;12375:13:5;;1064:20:18;1112:8;12371:624:5;;12411:72;;-1:-1:-1;;;12411:72:5;;-1:-1:-1;;;;;12411:36:5;;;;;:72;;679:10:3;;12462:4:5;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:5;;;;;;;;-1:-1:-1;;12411:72:5;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12657:6;:13;12674:1;12657:18;12653:272;;12700:60;;-1:-1:-1;;;12700:60:5;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:5;-1:-1:-1;;;12534:55:5;;-1:-1:-1;12527:62:5;;12371:624;-1:-1:-1;12979:4:5;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:5;;9528:61;;;;-1:-1:-1;;;9528:61:5;;29805:2:21;9528:61:5;;;29787:21:21;;;29824:18;;;29817:30;29883:34;29863:18;;;29856:62;29935:18;;9528:61:5;29603:356:21;9528:61:5;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:5;:30;9600:58;;;;-1:-1:-1;;;9600:58:5;;30166:2:21;9600:58:5;;;30148:21:21;30205:2;30185:18;;;30178:30;30244;30224:18;;;30217:58;30292:18;;9600:58:5;29964:352:21;9600:58:5;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:5;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:5;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:5;-1:-1:-1;;;;;9758:21:5;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:6:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:6;;;5245:328;;-1:-1:-1;;;;;5316:18:6;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:6;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:6;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:6;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:6:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:131:21:-;-1:-1:-1;;;;;;88:32:21;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:21:o;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:21;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:519::-;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1552:9;1539:23;1529:33;;1613:2;1602:9;1598:18;1585:32;1640:18;1632:6;1629:30;1626:50;;;1672:1;1669;1662:12;1626:50;1695:22;;1748:4;1740:13;;1736:27;-1:-1:-1;1726:55:21;;1777:1;1774;1767:12;1726:55;1800:74;1866:7;1861:2;1848:16;1843:2;1839;1835:11;1800:74;:::i;:::-;1790:84;;;1361:519;;;;;:::o;1885:258::-;1957:1;1967:113;1981:6;1978:1;1975:13;1967:113;;;2057:11;;;2051:18;2038:11;;;2031:39;2003:2;1996:10;1967:113;;;2098:6;2095:1;2092:13;2089:48;;;-1:-1:-1;;2133:1:21;2115:16;;2108:27;1885:258::o;2148:269::-;2201:3;2239:5;2233:12;2266:6;2261:3;2254:19;2282:63;2338:6;2331:4;2326:3;2322:14;2315:4;2308:5;2304:16;2282:63;:::i;:::-;2399:2;2378:15;-1:-1:-1;;2374:29:21;2365:39;;;;2406:4;2361:50;;2148:269;-1:-1:-1;;2148:269:21:o;2422:231::-;2571:2;2560:9;2553:21;2534:4;2591:56;2643:2;2632:9;2628:18;2620:6;2591:56;:::i;2658:180::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;-1:-1:-1;2809:23:21;;2658:180;-1:-1:-1;2658:180:21:o;3233:173::-;3301:20;;-1:-1:-1;;;;;3350:31:21;;3340:42;;3330:70;;3396:1;3393;3386:12;3330:70;3233:173;;;:::o;3411:254::-;3479:6;3487;3540:2;3528:9;3519:7;3515:23;3511:32;3508:52;;;3556:1;3553;3546:12;3508:52;3579:29;3598:9;3579:29;:::i;:::-;3569:39;3655:2;3640:18;;;;3627:32;;-1:-1:-1;;;3411:254:21:o;3670:328::-;3747:6;3755;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;;3903:38;3937:2;3926:9;3922:18;3903:38;:::i;:::-;3893:48;;3988:2;3977:9;3973:18;3960:32;3950:42;;3670:328;;;;;:::o;4003:186::-;4062:6;4115:2;4103:9;4094:7;4090:23;4086:32;4083:52;;;4131:1;4128;4121:12;4083:52;4154:29;4173:9;4154:29;:::i;4194:542::-;4301:6;4309;4317;4325;4333;4386:3;4374:9;4365:7;4361:23;4357:33;4354:53;;;4403:1;4400;4393:12;4354:53;4439:9;4426:23;4416:33;;4496:2;4485:9;4481:18;4468:32;4458:42;;4550:2;4539:9;4535:18;4522:32;4583:1;4576:5;4573:12;4563:40;;4599:1;4596;4589:12;4563:40;4194:542;;;;-1:-1:-1;4622:5:21;;4674:2;4659:18;;4646:32;;-1:-1:-1;4725:3:21;4710:19;4697:33;;4194:542;-1:-1:-1;;4194:542:21:o;4741:248::-;4809:6;4817;4870:2;4858:9;4849:7;4845:23;4841:32;4838:52;;;4886:1;4883;4876:12;4838:52;-1:-1:-1;;4909:23:21;;;4979:2;4964:18;;;4951:32;;-1:-1:-1;4741:248:21:o;4994:127::-;5055:10;5050:3;5046:20;5043:1;5036:31;5086:4;5083:1;5076:15;5110:4;5107:1;5100:15;5126:235;5205:1;5198:5;5195:12;5185:143;;5250:10;5245:3;5241:20;5238:1;5231:31;5285:4;5282:1;5275:15;5313:4;5310:1;5303:15;5185:143;5337:18;;5126:235::o;5366:1234::-;5504:4;5546:3;5535:9;5531:19;5523:27;;5583:6;5577:13;5566:9;5559:32;5647:4;5639:6;5635:17;5629:24;5622:4;5611:9;5607:20;5600:54;5710:4;5702:6;5698:17;5692:24;5685:4;5674:9;5670:20;5663:54;5773:4;5765:6;5761:17;5755:24;5748:4;5737:9;5733:20;5726:54;5836:4;5828:6;5824:17;5818:24;5811:4;5800:9;5796:20;5789:54;5899:4;5891:6;5887:17;5881:24;5874:4;5863:9;5859:20;5852:54;5962:4;5954:6;5950:17;5944:24;5937:4;5926:9;5922:20;5915:54;6025:4;6017:6;6013:17;6007:24;6000:4;5989:9;5985:20;5978:54;6051:6;6111:2;6103:6;6099:15;6093:22;6088:2;6077:9;6073:18;6066:50;;6135:6;6195:2;6187:6;6183:15;6177:22;6172:2;6161:9;6157:18;6150:50;;6219:6;6279:2;6271:6;6267:15;6261:22;6256:2;6245:9;6241:18;6234:50;;6303:6;6363:2;6355:6;6351:15;6345:22;6340:2;6329:9;6325:18;6318:50;;6387:6;6447:2;6439:6;6435:15;6429:22;6424:2;6413:9;6409:18;6402:50;;6471:6;6524:2;6516:6;6512:15;6506:22;6537:57;6590:2;6579:9;6575:18;6561:12;6537:57;:::i;:::-;;;5366:1234;;;;:::o;6605:347::-;6670:6;6678;6731:2;6719:9;6710:7;6706:23;6702:32;6699:52;;;6747:1;6744;6737:12;6699:52;6770:29;6789:9;6770:29;:::i;:::-;6760:39;;6849:2;6838:9;6834:18;6821:32;6896:5;6889:13;6882:21;6875:5;6872:32;6862:60;;6918:1;6915;6908:12;6862:60;6941:5;6931:15;;;6605:347;;;;;:::o;6957:667::-;7052:6;7060;7068;7076;7129:3;7117:9;7108:7;7104:23;7100:33;7097:53;;;7146:1;7143;7136:12;7097:53;7169:29;7188:9;7169:29;:::i;:::-;7159:39;;7217:38;7251:2;7240:9;7236:18;7217:38;:::i;:::-;7207:48;;7302:2;7291:9;7287:18;7274:32;7264:42;;7357:2;7346:9;7342:18;7329:32;7384:18;7376:6;7373:30;7370:50;;;7416:1;7413;7406:12;7370:50;7439:22;;7492:4;7484:13;;7480:27;-1:-1:-1;7470:55:21;;7521:1;7518;7511:12;7470:55;7544:74;7610:7;7605:2;7592:16;7587:2;7583;7579:11;7544:74;:::i;:::-;7534:84;;;6957:667;;;;;;;:::o;7629:1146::-;8099:4;8141:3;8130:9;8126:19;8118:27;;8172:6;8161:9;8154:25;8215:6;8210:2;8199:9;8195:18;8188:34;8258:6;8253:2;8242:9;8238:18;8231:34;8301:6;8296:2;8285:9;8281:18;8274:34;8345:6;8339:3;8328:9;8324:19;8317:35;8389:6;8383:3;8372:9;8368:19;8361:35;8433:6;8427:3;8416:9;8412:19;8405:35;8477:6;8471:3;8460:9;8456:19;8449:35;8521:6;8515:3;8504:9;8500:19;8493:35;8565:6;8559:3;8548:9;8544:19;8537:35;8609:7;8603:3;8592:9;8588:19;8581:36;8654:7;8648:3;8637:9;8633:19;8626:36;8699:7;8693:3;8682:9;8678:19;8671:36;8716:53;8764:3;8753:9;8749:19;8740:7;8716:53;:::i;:::-;7629:1146;;;;;;;;;;;;;;;;;:::o;9274:260::-;9342:6;9350;9403:2;9391:9;9382:7;9378:23;9374:32;9371:52;;;9419:1;9416;9409:12;9371:52;9442:29;9461:9;9442:29;:::i;:::-;9432:39;;9490:38;9524:2;9513:9;9509:18;9490:38;:::i;:::-;9480:48;;9274:260;;;;;:::o;9539:185::-;9581:3;9619:5;9613:12;9634:52;9679:6;9674:3;9667:4;9660:5;9656:16;9634:52;:::i;:::-;9702:16;;;;;9539:185;-1:-1:-1;;9539:185:21:o;9849:1883::-;10765:66;10753:79;;10862:66;10857:2;10848:12;;10841:88;10959:34;10954:2;10945:12;;10938:56;-1:-1:-1;;;11019:2:21;11010:12;;11003:46;-1:-1:-1;;;11074:2:21;11065:12;;11058:58;11139:13;;-1:-1:-1;;11161:61:21;11139:13;11209:3;11200:13;;11195:2;11183:15;;11161:61;:::i;:::-;-1:-1:-1;;;11281:3:21;11241:16;;;11273:12;;;11266:34;-1:-1:-1;;;11324:3:21;11316:12;;11309:70;11409:66;11403:3;11395:12;;11388:88;11506:66;11500:3;11492:12;;11485:88;-1:-1:-1;;;11597:3:21;11589:12;;11582:58;11656:70;11686:39;11720:3;11712:12;;11704:6;11686:39;:::i;:::-;-1:-1:-1;;;9794:17:21;;9836:1;9827:11;;9729:115;11656:70;11649:77;9849:1883;-1:-1:-1;;;;;9849:1883:21:o;11737:2085::-;12618:3;12656:6;12650:13;12672:53;12718:6;12713:3;12706:4;12698:6;12694:17;12672:53;:::i;:::-;12756:6;12751:3;12747:16;12734:29;;12782:66;12871:2;12864:5;12857:17;12908:66;12901:4;12894:5;12890:16;12883:92;13006:6;13000:13;13022:66;13079:8;13074:2;13067:5;13063:14;13056:4;13048:6;13044:17;13022:66;:::i;:::-;-1:-1:-1;;;13174:2:21;13107:20;;;;13166:11;;;13159:23;;;13206:2;13198:11;;13191:23;;;13243:66;13238:2;13230:11;;13223:87;-1:-1:-1;;;13334:3:21;13326:12;;13319:44;13388:13;;13410:64;13388:13;13459:3;13451:12;;13444:4;13432:17;;13410:64;:::i;:::-;13534:3;13493:17;;13526:12;;;13519:24;13567:3;13559:12;;13552:24;13606:66;13600:3;13592:12;;13585:88;-1:-1:-1;;;13697:3:21;13689:12;;13682:48;13746:70;13776:39;13810:3;13802:12;;13794:6;13776:39;:::i;13746:70::-;13739:77;11737:2085;-1:-1:-1;;;;;;;11737:2085:21:o;13827:1537::-;14458:3;14496:6;14490:13;14512:53;14558:6;14553:3;14546:4;14538:6;14534:17;14512:53;:::i;:::-;14596:6;14591:3;14587:16;14574:29;;14622:66;14711:2;14704:5;14697:17;14748:66;14741:4;14734:5;14730:16;14723:92;14846:6;14840:13;14862:66;14919:8;14914:2;14907:5;14903:14;14896:4;14888:6;14884:17;14862:66;:::i;:::-;14958:8;14951:5;14947:20;14937:30;;;-1:-1:-1;;;15019:2:21;15014;15010;15006:11;14999:23;15051:2;15046;15042;15038:11;15031:23;15083:66;15078:2;15074;15070:11;15063:87;15181:6;15175:13;15159:29;;15197:64;15252:8;15246:3;15242:2;15238:12;15231:4;15223:6;15219:17;15197:64;:::i;:::-;15321:3;15280:17;;;;15313:12;;;15306:24;15354:3;15346:12;;13827:1537;-1:-1:-1;;;;;13827:1537:21:o;15369:2028::-;16250:3;16288:6;16282:13;16304:53;16350:6;16345:3;16338:4;16330:6;16326:17;16304:53;:::i;:::-;16388:6;16383:3;16379:16;16366:29;;16414:66;16503:2;16496:5;16489:17;16540:66;16533:4;16526:5;16522:16;16515:92;16638:6;16632:13;16654:66;16711:8;16706:2;16699:5;16695:14;16688:4;16680:6;16676:17;16654:66;:::i;:::-;16750:8;16743:5;16739:20;16729:30;;;-1:-1:-1;;;16811:2:21;16806;16802;16798:11;16791:23;16843:2;16838;16834;16830:11;16823:23;16875:66;16870:2;16866;16862:11;16855:87;16973:6;16967:13;16989:64;17044:8;17038:3;17034:2;17030:12;17023:4;17015:6;17011:17;16989:64;:::i;:::-;17113:3;17072:17;;17105:12;;;17098:24;17146:3;17138:12;;17131:24;17185:66;17179:3;17171:12;;17164:88;-1:-1:-1;;;17276:3:21;17268:12;;17261:44;17321:70;17351:39;17385:3;17377:12;;17369:6;17351:39;:::i;17402:575::-;17735:3;17773:6;17767:13;17789:53;17835:6;17830:3;17823:4;17815:6;17811:17;17789:53;:::i;:::-;-1:-1:-1;;;17864:16:21;;17889:18;;;-1:-1:-1;;;;17934:1:21;17923:13;;17916:26;17969:1;17958:13;;17402:575;-1:-1:-1;17402:575:21:o;17982:380::-;18061:1;18057:12;;;;18104;;;18125:61;;18179:4;18171:6;18167:17;18157:27;;18125:61;18232:2;18224:6;18221:14;18201:18;18198:38;18195:161;;18278:10;18273:3;18269:20;18266:1;18259:31;18313:4;18310:1;18303:15;18341:4;18338:1;18331:15;18195:161;;17982:380;;;:::o;20314:127::-;20375:10;20370:3;20366:20;20363:1;20356:31;20406:4;20403:1;20396:15;20430:4;20427:1;20420:15;20446:112;20478:1;20504;20494:35;;20509:18;;:::i;:::-;-1:-1:-1;20543:9:21;;20446:112::o;20563:127::-;20624:10;20619:3;20615:20;20612:1;20605:31;20655:4;20652:1;20645:15;20679:4;20676:1;20669:15;20695:128;20735:3;20766:1;20762:6;20759:1;20756:13;20753:39;;;20772:18;;:::i;:::-;-1:-1:-1;20808:9:21;;20695:128::o;20828:120::-;20868:1;20894;20884:35;;20899:18;;:::i;:::-;-1:-1:-1;20933:9:21;;20828:120::o;20953:168::-;20993:7;21059:1;21055;21051:6;21047:14;21044:1;21041:21;21036:1;21029:9;21022:17;21018:45;21015:71;;;21066:18;;:::i;:::-;-1:-1:-1;21106:9:21;;20953:168::o;21126:413::-;21328:2;21310:21;;;21367:2;21347:18;;;21340:30;21406:34;21401:2;21386:18;;21379:62;-1:-1:-1;;;21472:2:21;21457:18;;21450:47;21529:3;21514:19;;21126:413::o;22711:127::-;22772:10;22767:3;22763:20;22760:1;22753:31;22803:4;22800:1;22793:15;22827:4;22824:1;22817:15;23664:356;23866:2;23848:21;;;23885:18;;;23878:30;23944:34;23939:2;23924:18;;23917:62;24011:2;23996:18;;23664:356::o;26927:135::-;26966:3;26987:17;;;26984:43;;27007:18;;:::i;:::-;-1:-1:-1;27054:1:21;27043:13;;26927:135::o;27067:125::-;27107:4;27135:1;27132;27129:8;27126:34;;;27140:18;;:::i;:::-;-1:-1:-1;27177:9:21;;27067:125::o;28425:414::-;28627:2;28609:21;;;28666:2;28646:18;;;28639:30;28705:34;28700:2;28685:18;;28678:62;-1:-1:-1;;;28771:2:21;28756:18;;28749:48;28829:3;28814:19;;28425:414::o;28844:500::-;-1:-1:-1;;;;;29113:15:21;;;29095:34;;29165:15;;29160:2;29145:18;;29138:43;29212:2;29197:18;;29190:34;;;29260:3;29255:2;29240:18;;29233:31;;;29038:4;;29281:57;;29318:19;;29310:6;29281:57;:::i;:::-;29273:65;28844:500;-1:-1:-1;;;;;;28844:500:21:o;29349:249::-;29418:6;29471:2;29459:9;29450:7;29446:23;29442:32;29439:52;;;29487:1;29484;29477:12;29439:52;29519:9;29513:16;29538:30;29562:5;29538:30;:::i;30321:127::-;30382:10;30377:3;30373:20;30370:1;30363:31;30413:4;30410:1;30403:15;30437:4;30434:1;30427:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256,uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    359,
    11703
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87BFC7F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AD4D6A5 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8AD4D6A5 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x8CB22518 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x8140BD0B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x2284 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x2334 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x809 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x242F JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x272 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x31A CALLDATASIZE PUSH1 0x4 PUSH2 0x242F JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x272 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x128E JUMP JUMPDEST PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29B JUMP JUMPDEST PUSH2 0x251 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x42B CALLDATASIZE PUSH1 0x4 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x263D JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x29B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST PUSH2 0x4FB PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x23FA JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD SWAP12 DUP12 ADD SLOAD PUSH1 0xC DUP13 ADD SLOAD PUSH1 0xD SWAP1 SWAP13 ADD SLOAD SWAP11 SWAP13 SWAP10 SWAP12 SWAP9 SWAP11 SWAP8 SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x538 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x16A0 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5F0 DUP3 PUSH2 0x181D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6BF JUMPI PUSH2 0x6BF PUSH2 0x251F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6D0 JUMPI PUSH2 0x6D0 PUSH2 0x251F JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x6E6 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x716 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x723 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x730 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x743 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x762 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x76F DUP5 PUSH1 0xA0 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x781 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x7A0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x7AD DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH2 0x7BB DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x186D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x818 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x844 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x891 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x866 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x891 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x874 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x940 DUP3 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x9C9 JUMPI POP PUSH2 0x9C9 DUP2 CALLER PUSH2 0x58A JUMP JUMPDEST PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH2 0xA45 DUP4 DUP4 PUSH2 0x1976 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xAEC PUSH1 0x1A DUP4 PUSH2 0x2C80 JUMP JUMPDEST PUSH2 0xAF7 SWAP1 PUSH1 0x19 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1A PUSH2 0xB08 PUSH1 0x64 DUP6 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x2C80 JUMP JUMPDEST PUSH2 0xB1D SWAP1 PUSH1 0x19 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB2D DUP2 DUP7 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0xB38 SWAP1 PUSH1 0x4 PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x2C80 JUMP JUMPDEST PUSH2 0xB4D SWAP1 PUSH1 0xA PUSH2 0x2CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB5D DUP2 DUP8 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0xB68 SWAP1 PUSH1 0x5 PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x2C80 JUMP JUMPDEST PUSH2 0xB7D SWAP1 PUSH1 0xA PUSH2 0x2CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xB8E PUSH1 0xA DUP9 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0xB99 SWAP1 PUSH1 0x6 PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2C80 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x251F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0x251F JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xC3F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0x251F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xD24 CALLER PUSH2 0xD14 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD1F SWAP1 PUSH1 0x1 PUSH2 0x2CAA JUMP JUMPDEST PUSH2 0x19E4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD37 CALLER DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0xA45 DUP4 DUP4 DUP4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 DUP4 PUSH2 0xF5B JUMP JUMPDEST DUP3 LT PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA45 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15C7 JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED2 JUMPI PUSH2 0xED2 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2D5C JUMP JUMPDEST PUSH2 0x1016 PUSH1 0x0 PUSH2 0x1CA0 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1022 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x11 SLOAD SWAP1 SWAP2 PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11A0 JUMPI PUSH2 0x11A0 PUSH2 0x251F JUMP JUMPDEST SUB PUSH2 0x11F9 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11C7 SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11EE SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1261 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x120D JUMPI PUSH2 0x120D PUSH2 0x251F JUMP JUMPDEST SUB PUSH2 0x1261 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1234 SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x125B SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1282 SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP GT PUSH2 0x12FC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH2 0x12FE JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH2 0x1308 SWAP1 DUP3 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0xC ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x1329 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13EE PUSH2 0x251F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13FF JUMPI PUSH2 0x13FF PUSH2 0x251F JUMP JUMPDEST SWAP1 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x818 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2D5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1467 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x14AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x15D1 CALLER DUP4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2CF5 JUMP JUMPDEST PUSH2 0x15F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x167E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH2 0x5F0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E84 PUSH1 0x5E SWAP2 CODECOPY PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x16CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2D5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16F0 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1737 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x17AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2D5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH2 0xE4E DUP2 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x184E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5F0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1894 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x18BE JUMPI DUP1 PUSH2 0x18A8 DUP2 PUSH2 0x2D91 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B7 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2CC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1898 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D9 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1903 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x196E JUMPI PUSH2 0x1918 PUSH1 0x1 DUP4 PUSH2 0x2DAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1925 PUSH1 0xA DUP7 PUSH2 0x2C80 JUMP JUMPDEST PUSH2 0x1930 SWAP1 PUSH1 0x30 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1967 PUSH1 0xA DUP7 PUSH2 0x2CC2 JUMP JUMPDEST SWAP5 POP PUSH2 0x1907 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x19AB DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x19FE DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A86 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1AC1 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AB6 DUP5 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x196E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x196E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B08 DUP3 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1B70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x910 JUMP JUMPDEST PUSH2 0x1BDD DUP4 DUP4 DUP4 PUSH2 0x1D58 JUMP JUMPDEST PUSH2 0x1BE8 PUSH1 0x0 DUP3 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1C11 SWAP1 DUP5 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1C3F SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1CFD DUP5 DUP5 DUP5 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1D09 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0x15F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH2 0x1D2F DUP4 DUP4 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1DB3 JUMPI PUSH2 0x1DAE DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1DD6 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1DD6 JUMPI PUSH2 0x1DD6 DUP4 DUP3 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DED JUMPI PUSH2 0xA45 DUP2 PUSH2 0x20FC JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA45 JUMPI PUSH2 0xA45 DUP3 DUP3 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1F06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1E54 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E8F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1E8C SWAP2 DUP2 ADD SWAP1 PUSH2 0x2E50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1EEC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1EE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x910 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x196E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1FCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x910 JUMP JUMPDEST PUSH2 0x1FD8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2001 SWAP1 DUP5 SWAP1 PUSH2 0x2CAA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x206C DUP5 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x2076 SWAP2 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x20C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x210E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2136 JUMPI PUSH2 0x2136 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2157 JUMPI PUSH2 0x2157 PUSH2 0x2D46 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x218F JUMPI PUSH2 0x218F PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B6 DUP4 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2269 JUMPI PUSH2 0x2269 PUSH2 0x251F JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22A1 DUP2 PUSH2 0x226E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x22D9 JUMPI PUSH2 0x22D9 PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2301 JUMPI PUSH2 0x2301 PUSH2 0x22A8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x231A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2385 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2392 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15F9 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x23D3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x242A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x244B DUP4 PUSH2 0x2413 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x246E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2477 DUP5 PUSH2 0x2413 JUMP JUMPDEST SWAP3 POP PUSH2 0x2485 PUSH1 0x20 DUP6 ADD PUSH2 0x2413 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A1 DUP3 PUSH2 0x2413 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x24E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2553 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD PUSH2 0x25F9 DUP3 DUP6 ADD DUP3 PUSH2 0x2535 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x261D DUP4 PUSH2 0x2413 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x265C DUP6 PUSH2 0x2413 JUMP JUMPDEST SWAP4 POP PUSH2 0x266A PUSH1 0x20 DUP7 ADD PUSH2 0x2413 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x268D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x269E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26AD DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x22BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP16 DUP3 MSTORE DUP15 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE DUP13 PUSH1 0x60 DUP4 ADD MSTORE DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE DUP6 PUSH2 0x140 DUP4 ADD MSTORE DUP5 PUSH2 0x160 DUP4 ADD MSTORE DUP4 PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x2720 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x2535 JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x274F DUP4 PUSH2 0x2413 JUMP JUMPDEST SWAP2 POP PUSH2 0x275D PUSH1 0x20 DUP5 ADD PUSH2 0x2413 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x2778 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x238F JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x282B DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x28D3 PUSH2 0x28C5 PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x28EE DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x238F JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x2950 DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x238F JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x3A SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3C DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C PUSH1 0x5C DUP5 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0x7C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x29B0 DUP2 PUSH1 0x81 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x81 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x83 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276 PUSH1 0xA3 DUP3 ADD MSTORE PUSH7 0x30B63AB2911D1 PUSH1 0xCD SHL PUSH1 0xC3 DUP3 ADD MSTORE PUSH2 0x2A03 PUSH2 0x28C5 PUSH1 0xCA DUP4 ADD DUP7 PUSH2 0x2766 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x2A20 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x238F JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20227370656564222C202276616C7565223A20000000 PUSH1 0x20 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x2A82 DUP2 PUSH1 0x3D DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x238F JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3D DUP5 ADD MSTORE DUP2 PUSH1 0x3F DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000 PUSH1 0x5F DUP5 ADD MSTORE DUP6 MLOAD SWAP2 POP PUSH2 0x2AD5 DUP3 PUSH1 0x79 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x79 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7B ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2AFD DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x238F JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x2B5F DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x238F JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x2BB0 DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x2A03 PUSH2 0x28C5 PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x2766 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C13 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x238F JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2C44 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C64 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C8F JUMPI PUSH2 0x2C8F PUSH2 0x2C6A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2CBD JUMPI PUSH2 0x2CBD PUSH2 0x2C94 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2CD1 JUMPI PUSH2 0x2CD1 PUSH2 0x2C6A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2CF0 JUMPI PUSH2 0x2CF0 PUSH2 0x2C94 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2DA3 JUMPI PUSH2 0x2DA3 PUSH2 0x2C94 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2DBC JUMPI PUSH2 0x2DBC PUSH2 0x2C94 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2E46 SWAP1 DUP4 ADD DUP5 PUSH2 0x23BB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x22A1 DUP2 PUSH2 0x226E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6173 ORIGIN 0x2E PUSH7 0x7463646E2E6E65 PUSH21 0x2F76322F6A70672F30332F31322F37372F30332F31 ADDRESS ADDRESS ADDRESS 0x5F CHAINID 0x5F CALLER BALANCE ORIGIN CALLDATACOPY CALLDATACOPY ADDRESS CALLER CALLVALUE CODECOPY 0x5F CALLVALUE PUSH13 0x6B464E336532556C4F34336B51 PUSH13 0x46656D464E4970566B47355A77 PUSH26 0x74712E6A7067A2646970667358221220240657047FB161D9212C CODECOPY 0xC4 MOD 0xD4 0xC9 DUP6 STATICCALL 0xBD 0xEA 0xBD 0xB8 SDIV EXTCODEHASH 0xD7 DUP13 0xD8 PUSH21 0x468064F90B64736F6C634300080F00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "POP",
      "path": "20"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "21": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "LT",
      "path": "20"
    },
    "22": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "SHR",
      "path": "20"
    },
    "32": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "33": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "39": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "43": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "44": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "50": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "54": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "55": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87BFC7F"
    },
    "60": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "61": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "65": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "66": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87BFC7F"
    },
    "71": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "72": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47C"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "76": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "77": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xDB2A0A55"
    },
    "82": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "83": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x515"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "87": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "88": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE52E3249"
    },
    "93": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "94": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x569"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "98": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "99": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "105": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x57C"
    },
    "108": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "109": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "110": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "116": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B8"
    },
    "119": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "120": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "125": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "126": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA22CB465"
    },
    "131": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "132": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x430"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "136": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "137": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB88D4FDE"
    },
    "142": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "143": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x443"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "147": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "148": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xBC0B0D88"
    },
    "153": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "154": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x456"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "158": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "159": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87B56DD"
    },
    "164": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "165": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x469"
    },
    "168": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "169": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "172": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "175": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8AD4D6A5"
    },
    "180": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "181": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "186": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8AD4D6A5"
    },
    "191": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "192": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D1"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "196": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "197": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8CB22518"
    },
    "202": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "203": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E4"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "207": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "208": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "214": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x404"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "218": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "219": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "224": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "225": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x415"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "229": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "230": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x97FC007C"
    },
    "235": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "236": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x41D"
    },
    "239": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "240": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "243": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "246": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "251": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "252": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37E"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "257": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7901EA78"
    },
    "262": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "263": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x386"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "268": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8140BD0B"
    },
    "273": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "274": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x399"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "278": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "279": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x82AFD23B"
    },
    "284": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "285": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC"
    },
    "288": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "289": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "292": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "295": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "300": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "301": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "306": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x42842E0E"
    },
    "311": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "312": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "317": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x42842E0E"
    },
    "322": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "323": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31F"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "328": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x437454B9"
    },
    "333": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "334": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x332"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "338": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "339": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F6CCCE7"
    },
    "344": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "345": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x345"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "349": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "350": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6352211E"
    },
    "355": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "356": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x358"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "360": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "361": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "366": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "367": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36B"
    },
    "370": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "371": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "374": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "377": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "382": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "383": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DE"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "388": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "393": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "394": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E6"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "399": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2B7AC3F3"
    },
    "404": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "405": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F9"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "410": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F745C59"
    },
    "415": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "416": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30C"
    },
    "419": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "420": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "423": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "425": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "426": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x81812FC"
    },
    "431": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "GT",
      "path": "20"
    },
    "432": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "437": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x81812FC"
    },
    "442": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "443": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x288"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "448": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "453": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "454": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B3"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "459": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA363D08"
    },
    "464": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "465": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C8"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "470": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1249C58B"
    },
    "475": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "476": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D6"
    },
    "479": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "480": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "483": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "484": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "485": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "486": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FFC9A7"
    },
    "491": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "492": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "497": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x419E314"
    },
    "502": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "503": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23E"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "508": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5106353"
    },
    "513": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "514": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "519": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "524": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "EQ",
      "path": "20"
    },
    "525": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280"
    },
    "528": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "530": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "DUP1",
      "path": "20"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        11703
      ],
      "op": "REVERT",
      "path": "20"
    },
    "534": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "535": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x229"
    },
    "538": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x224"
    },
    "541": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "542": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "544": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2284"
    },
    "547": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "548": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "549": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CB"
    },
    "552": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "553": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "554": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "ISZERO"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "DUP2"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "566": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "568": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "569": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "6"
    },
    "570": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "571": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "6"
    },
    "572": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "573": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "6"
    },
    "574": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "575": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251"
    },
    "578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24C"
    },
    "581": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "584": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2334"
    },
    "587": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMP",
      "path": "20"
    },
    "588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5F6"
    },
    "592": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMP",
      "path": "20"
    },
    "593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "594": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x235"
    },
    "600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "602": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23E7"
    },
    "605": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMP",
      "path": "20"
    },
    "606": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "607": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x272"
    },
    "610": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26C"
    },
    "613": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "614": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "616": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "619": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5444,
        5516
      ],
      "op": "JUMP",
      "path": "20"
    },
    "620": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "621": {
      "op": "POP"
    },
    "622": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5497,
        5504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "624": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5497,
        5504
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "625": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "JUMP",
      "path": "20"
    },
    "626": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "627": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "629": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "630": {
      "op": "SWAP1"
    },
    "631": {
      "op": "DUP2"
    },
    "632": {
      "op": "MSTORE"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "635": {
      "op": "ADD"
    },
    "636": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5444,
        5516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x235"
    },
    "639": {
      "op": "JUMP"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x251"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x809"
    },
    "647": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "648": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "649": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29B"
    },
    "652": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x296"
    },
    "655": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "656": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "658": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23FA"
    },
    "661": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "662": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "663": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89B"
    },
    "666": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "667": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "668": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "670": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "op": "SWAP1"
    },
    "680": {
      "op": "SWAP2"
    },
    "681": {
      "op": "AND"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x235"
    },
    "690": {
      "op": "JUMP"
    },
    "691": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "692": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C6"
    },
    "695": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C1"
    },
    "698": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "699": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "701": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x242F"
    },
    "704": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "705": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "706": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x935"
    },
    "709": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "710": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "711": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "5"
    },
    "712": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "713": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x229"
    },
    "716": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26C"
    },
    "719": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "720": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "722": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5602,
        5674
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "725": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        5602,
        5674
      ],
      "op": "JUMP",
      "path": "20"
    },
    "726": {
      "fn": "Wizards.mint",
      "offset": [
        2776,
        3805
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "727": {
      "fn": "Wizards.mint",
      "offset": [
        2776,
        3805
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "730": {
      "fn": "Wizards.mint",
      "offset": [
        2776,
        3805
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA4A"
    },
    "733": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2776,
        3805
      ],
      "op": "JUMP",
      "path": "20"
    },
    "734": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "735": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x8"
    },
    "737": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "738": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "741": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "743": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C6"
    },
    "746": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F4"
    },
    "749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "750": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2459"
    },
    "755": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "756": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2D"
    },
    "760": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "761": {
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "765": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29B"
    },
    "768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "offset": [
        614,
        637
      ],
      "op": "AND",
      "path": "20"
    },
    "778": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP2",
      "path": "20"
    },
    "779": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMP",
      "path": "20"
    },
    "780": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "781": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "784": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31A"
    },
    "787": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "790": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x242F"
    },
    "793": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "794": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "795": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD5E"
    },
    "798": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "800": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C6"
    },
    "803": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32D"
    },
    "806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2459"
    },
    "812": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "5"
    },
    "813": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF4"
    },
    "817": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "5"
    },
    "818": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "819": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "822": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x340"
    },
    "825": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "826": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "828": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "831": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "832": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "833": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE0F"
    },
    "836": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "837": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "838": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x272"
    },
    "841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x353"
    },
    "844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "845": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "847": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23FA"
    },
    "850": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "851": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "852": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE51"
    },
    "855": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "856": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "857": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29B"
    },
    "860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x366"
    },
    "863": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "864": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23FA"
    },
    "869": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "870": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "871": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE4"
    },
    "874": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "5"
    },
    "875": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "876": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x272"
    },
    "879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x379"
    },
    "882": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "883": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "885": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2495"
    },
    "888": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "889": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "890": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5B"
    },
    "893": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFE2"
    },
    "901": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "902": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "903": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "906": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x394"
    },
    "909": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "910": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "912": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "915": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMP",
      "path": "20"
    },
    "916": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "917": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1018"
    },
    "920": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMP",
      "path": "20"
    },
    "921": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "922": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "925": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "929": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "931": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24B0"
    },
    "934": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMP",
      "path": "20"
    },
    "935": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "936": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1126"
    },
    "939": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMP",
      "path": "20"
    },
    "940": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "941": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x229"
    },
    "944": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BA"
    },
    "947": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "948": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "950": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "953": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        1924,
        2080
      ],
      "op": "JUMP",
      "path": "20"
    },
    "954": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "955": {
      "fn": "Wizards.isActive",
      "offset": [
        1981,
        1985
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "957": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 1
    },
    "958": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "DUP2",
      "path": "20"
    },
    "959": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "960": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2019
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "962": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "964": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "965": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "967": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "968": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2030
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "969": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2054
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "971": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2054
      ],
      "op": "ADD",
      "path": "20"
    },
    "972": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2054
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "973": {
      "fn": "Wizards.isActive",
      "offset": [
        2057,
        2072
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "974": {
      "op": "LT"
    },
    "975": {
      "fn": "Wizards.isActive",
      "offset": [
        2005,
        2072
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "976": {
      "fn": "Wizards.isActive",
      "offset": [
        1924,
        2080
      ],
      "op": "JUMP",
      "path": "20"
    },
    "977": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "978": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "981": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DF"
    },
    "984": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "985": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "987": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24FD"
    },
    "990": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMP",
      "path": "20"
    },
    "991": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "992": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x128E"
    },
    "995": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMP",
      "path": "20"
    },
    "996": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "997": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F7"
    },
    "1000": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F2"
    },
    "1003": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1004": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1006": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "1009": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1010": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1011": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1321"
    },
    "1014": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1015": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1016": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1018": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1019": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x235"
    },
    "1022": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1023": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1024": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2557"
    },
    "1027": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1028": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1029": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 2,
      "value": "0xA"
    },
    "1031": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "1041": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29B"
    },
    "1044": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1045": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1046": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x251"
    },
    "1049": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1408"
    },
    "1052": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1053": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1054": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "1057": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42B"
    },
    "1060": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1061": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1063": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2495"
    },
    "1066": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1067": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1068": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1417"
    },
    "1071": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1072": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1073": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C6"
    },
    "1076": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43E"
    },
    "1079": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1080": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1082": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2601"
    },
    "1085": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1086": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1087": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1503"
    },
    "1090": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1091": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C6"
    },
    "1095": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x451"
    },
    "1098": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1099": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1101": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x263D"
    },
    "1104": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1105": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1106": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "1109": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1110": {
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "1113": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1114": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29B"
    },
    "1117": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "op": "SUB"
    },
    "1126": {
      "offset": [
        548,
        570
      ],
      "op": "AND",
      "path": "20"
    },
    "1127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1129": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1130": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251"
    },
    "1133": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x477"
    },
    "1136": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1137": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "1142": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6379,
        6737
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15FF"
    },
    "1147": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6379,
        6737
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1148": {
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4FB"
    },
    "1152": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x48A"
    },
    "1155": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1156": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1158": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23FA"
    },
    "1161": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1162": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1169": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1172": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1177": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1179": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1180": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1181": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1184": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1189": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1190": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1194": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1196": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1199": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1200": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1204": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP7",
      "path": "20"
    },
    "1205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1206": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1209": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP8",
      "path": "20"
    },
    "1210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1211": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1214": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP9",
      "path": "20"
    },
    "1215": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1216": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1219": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP10",
      "path": "20"
    },
    "1220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1222": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1224": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP11",
      "path": "20"
    },
    "1225": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1226": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1227": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "20"
    },
    "1230": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1233": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "20"
    },
    "1234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1235": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1236": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "1238": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP13",
      "path": "20"
    },
    "1239": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1240": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1241": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "1243": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1244": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "20"
    },
    "1245": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "20"
    },
    "1246": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1247": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1248": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "20"
    },
    "1249": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1250": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1251": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1252": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1253": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1254": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1255": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1256": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1257": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1258": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1259": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1260": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1261": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1262": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1263": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1264": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1265": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1266": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1267": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1268": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1269": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1270": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1272": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "AND",
      "path": "20"
    },
    "1273": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP15",
      "path": "20"
    },
    "1274": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1275": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1276": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1278": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1279": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x235"
    },
    "1282": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP15",
      "path": "20"
    },
    "1283": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP14",
      "path": "20"
    },
    "1284": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "20"
    },
    "1285": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "20"
    },
    "1286": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "20"
    },
    "1287": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "1288": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "1289": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "20"
    },
    "1290": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "1291": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1292": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1293": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1294": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1295": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1296": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1297": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26B9"
    },
    "1300": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1301": {
      "offset": [
        1568,
        1608
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1302": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "1304": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1305": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "1307": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1308": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "1310": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1311": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "1313": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1314": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "1316": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1317": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x538"
    },
    "1320": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1321": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1322": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1323": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1324": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "offset": [
        1568,
        1608
      ],
      "op": "AND",
      "path": "20"
    },
    "1334": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1335": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1336": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1337": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1339": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1340": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1568,
        1608
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1341": {
      "op": "SWAP6"
    },
    "1342": {
      "op": "DUP7"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1346": {
      "op": "DUP7"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "SWAP5"
    },
    "1349": {
      "op": "SWAP1"
    },
    "1350": {
      "op": "SWAP5"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "SWAP3"
    },
    "1353": {
      "op": "DUP5"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "SWAP2"
    },
    "1356": {
      "op": "SWAP1"
    },
    "1357": {
      "op": "SWAP2"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1361": {
      "op": "DUP4"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "op": "AND"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1375": {
      "op": "DUP3"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "offset": [
        1568,
        1608
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x235"
    },
    "1384": {
      "op": "JUMP"
    },
    "1385": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1386": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C6"
    },
    "1389": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x577"
    },
    "1392": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1393": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1395": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2495"
    },
    "1398": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        11229,
        11455
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1399": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1400": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16A0"
    },
    "1403": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        11229,
        11455
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1404": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1405": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x229"
    },
    "1408": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58A"
    },
    "1411": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1414": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2733"
    },
    "1417": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1418": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 3
    },
    "1428": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1429": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "1430": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1432": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1439": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1440": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1441": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1444": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1445": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1447": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1448": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1449": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1450": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "1451": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1452": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1453": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1454": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1455": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1456": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1457": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "1462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1463": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1464": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C6"
    },
    "1468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5C6"
    },
    "1471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2495"
    },
    "1477": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1785"
    },
    "1482": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1483": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1484": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "op": "SUB"
    },
    "1494": {
      "op": "NOT"
    },
    "1495": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 4
    },
    "1496": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "6"
    },
    "1497": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1504": {
      "op": "SHL"
    },
    "1505": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "6"
    },
    "1506": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1507": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F0"
    },
    "1510": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1511": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "6"
    },
    "1512": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F0"
    },
    "1515": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1516": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x181D"
    },
    "1519": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1520": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1521": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1522": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1526": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6832,
        6845
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "1529": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6933
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1531": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6950
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1535": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6951,
        6959
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1536": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1537": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1538": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1540": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1541": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1542": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1543": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1544": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1546": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1547": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1549": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6936,
        6960
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "1550": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1552": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1553": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1554": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C0"
    },
    "1557": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1558": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1560": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1561": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1562": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1565": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1566": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1568": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1569": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1572": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1575": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1576": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1577": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1579": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1580": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "1585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1587": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1592": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1595": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1598": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1599": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1602": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1605": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1609": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1610": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1612": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "1615": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1617": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1618": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1619": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1620": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1622": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1623": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "1625": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1626": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1627": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1628": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1630": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1632": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1633": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "1635": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1636": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1637": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1638": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1639": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1640": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1642": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1643": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "1645": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1646": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1647": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1648": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1649": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1650": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1652": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1653": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "1655": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1656": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1657": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1658": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1659": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1660": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1662": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "1665": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1666": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1667": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1668": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1669": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1670": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1672": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "1675": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1676": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1677": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1678": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1679": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1680": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1682": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1683": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "1685": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1686": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1687": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1688": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1689": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1690": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1692": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1693": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "1695": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1696": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ADD",
      "path": "20"
    },
    "1697": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1699": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1700": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "1701": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1702": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "1705": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "EXP",
      "path": "20"
    },
    "1706": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1707": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DIV",
      "path": "20"
    },
    "1708": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "1710": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "AND",
      "path": "20"
    },
    "1711": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1713": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1714": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "GT",
      "path": "20"
    },
    "1715": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1716": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BF"
    },
    "1719": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1720": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6BF"
    },
    "1723": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "1726": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1727": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1728": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "1730": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1731": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "GT",
      "path": "20"
    },
    "1732": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1733": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D0"
    },
    "1736": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1737": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D0"
    },
    "1740": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "1743": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1744": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1745": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1746": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1747": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "POP",
      "path": "20"
    },
    "1748": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "POP",
      "path": "20"
    },
    "1749": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1750": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6913,
        6960
      ],
      "op": "POP",
      "path": "20"
    },
    "1751": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6973,
        6995
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1753": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7198,
        7206
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1754": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7381,
        7412
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6E6"
    },
    "1757": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7398,
        7405
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1758": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7398,
        7411
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1760": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7398,
        7411
      ],
      "op": "ADD",
      "path": "20"
    },
    "1761": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7398,
        7411
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1762": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7381,
        7397
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1765": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7381,
        7412
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1766": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7381,
        7412
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1767": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1769": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1770": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1772": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "ADD",
      "path": "20"
    },
    "1773": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F7"
    },
    "1776": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1777": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1778": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1779": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2782"
    },
    "1782": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7005,
        7429
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1783": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1784": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1786": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1787": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1789": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1790": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1791": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SUB",
      "path": "20"
    },
    "1792": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SUB",
      "path": "20"
    },
    "1793": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1794": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1795": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1796": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1798": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7005,
        7429
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1799": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6973,
        7430
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1800": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6973,
        7430
      ],
      "op": "POP",
      "path": "20"
    },
    "1801": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7530,
        7538
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 5
    },
    "1802": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7628,
        7656
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x716"
    },
    "1805": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7645,
        7652
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1806": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7645,
        7655
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1808": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7645,
        7655
      ],
      "op": "ADD",
      "path": "20"
    },
    "1809": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7645,
        7655
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1810": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7628,
        7644
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1813": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7628,
        7656
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1814": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7628,
        7656
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1815": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7765,
        7803
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x723"
    },
    "1818": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7782,
        7789
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1819": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7782,
        7802
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1821": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7782,
        7802
      ],
      "op": "ADD",
      "path": "20"
    },
    "1822": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7782,
        7802
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1823": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7765,
        7781
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1826": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7765,
        7803
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1827": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7765,
        7803
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1828": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7918,
        7958
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x730"
    },
    "1831": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7935,
        7942
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1832": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7935,
        7957
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "1834": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7935,
        7957
      ],
      "op": "ADD",
      "path": "20"
    },
    "1835": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7935,
        7957
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1836": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7918,
        7934
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1839": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7918,
        7958
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1840": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7918,
        7958
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1841": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1843": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1844": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1846": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "ADD",
      "path": "20"
    },
    "1847": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x743"
    },
    "1850": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1851": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1852": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1853": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1854": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1855": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28DC"
    },
    "1858": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7513,
        7977
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1859": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1860": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1862": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1863": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1865": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1866": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1867": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SUB",
      "path": "20"
    },
    "1868": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SUB",
      "path": "20"
    },
    "1869": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1870": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1871": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1872": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1874": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7513,
        7977
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1875": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7495,
        7978
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1876": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7495,
        7978
      ],
      "op": "POP",
      "path": "20"
    },
    "1877": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8078,
        8086
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 6
    },
    "1878": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8179,
        8210
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x762"
    },
    "1881": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8196,
        8203
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1882": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8196,
        8209
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "1884": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8196,
        8209
      ],
      "op": "ADD",
      "path": "20"
    },
    "1885": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8196,
        8209
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1886": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8179,
        8195
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1889": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8179,
        8210
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1890": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8179,
        8210
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1891": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8308,
        8338
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x76F"
    },
    "1894": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8325,
        8332
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1895": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8325,
        8337
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "1897": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8325,
        8337
      ],
      "op": "ADD",
      "path": "20"
    },
    "1898": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8325,
        8337
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1899": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8308,
        8324
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1902": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8308,
        8338
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1903": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8308,
        8338
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1904": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1906": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1907": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1909": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "ADD",
      "path": "20"
    },
    "1910": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x781"
    },
    "1913": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1914": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1915": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1916": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1917": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A0E"
    },
    "1920": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8061,
        8357
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1921": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1922": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1924": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1925": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1927": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1928": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1929": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SUB",
      "path": "20"
    },
    "1930": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SUB",
      "path": "20"
    },
    "1931": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1932": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1933": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1934": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1936": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8061,
        8357
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1937": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8043,
        8358
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1938": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8043,
        8358
      ],
      "op": "POP",
      "path": "20"
    },
    "1939": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8460,
        8468
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 7
    },
    "1940": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8562,
        8594
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7A0"
    },
    "1943": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8579,
        8586
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1944": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8579,
        8593
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "1946": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8579,
        8593
      ],
      "op": "ADD",
      "path": "20"
    },
    "1947": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8579,
        8593
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1948": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8562,
        8578
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1951": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8562,
        8594
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1952": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8562,
        8594
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1953": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8697,
        8730
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7AD"
    },
    "1956": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8714,
        8721
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1957": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8714,
        8729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "1959": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8714,
        8729
      ],
      "op": "ADD",
      "path": "20"
    },
    "1960": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8714,
        8729
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1961": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8697,
        8713
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1964": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8697,
        8730
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1965": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8697,
        8730
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1966": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8843,
        8882
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7BB"
    },
    "1969": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8860,
        8867
      ],
      "op": "DUP6",
      "path": "20"
    },
    "1970": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8860,
        8881
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "1973": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8860,
        8881
      ],
      "op": "ADD",
      "path": "20"
    },
    "1974": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8860,
        8881
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1975": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8843,
        8859
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x186D"
    },
    "1978": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8843,
        8882
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1979": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8843,
        8882
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1980": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1982": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1983": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1985": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "ADD",
      "path": "20"
    },
    "1986": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7CE"
    },
    "1989": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1990": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1991": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1992": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1993": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1994": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AEB"
    },
    "1997": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8443,
        8901
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1998": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1999": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2001": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2002": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2004": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2005": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2006": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SUB",
      "path": "20"
    },
    "2007": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SUB",
      "path": "20"
    },
    "2008": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2009": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2010": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2011": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2013": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8443,
        8901
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2014": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8425,
        8902
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2015": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8425,
        8902
      ],
      "op": "POP",
      "path": "20"
    },
    "2016": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8973,
        8981
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 8
    },
    "2017": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2019": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2020": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2022": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "ADD",
      "path": "20"
    },
    "2023": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7F0"
    },
    "2026": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2027": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2028": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C01"
    },
    "2031": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8956,
        8991
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2032": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2033": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2035": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2036": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2037": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2038": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2039": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SUB",
      "path": "20"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2042": {
      "op": "NOT"
    },
    "2043": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "ADD",
      "path": "20"
    },
    "2044": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2045": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2046": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2047": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2048": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2049": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8956,
        8991
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "2050": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        6745,
        9980
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        6745,
        9980
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2057": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2058": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2060": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x0"
    },
    "2062": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2063": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2064": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x818"
    },
    "2067": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2068": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C30"
    },
    "2071": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2072": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2073": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2074": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2076": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2077": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2079": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2080": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2081": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "5"
    },
    "2082": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "5"
    },
    "2083": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2085": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2086": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2088": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2089": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2090": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2091": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2092": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2094": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2095": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2096": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2097": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2098": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2099": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2100": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2101": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2102": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2104": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2105": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2106": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2107": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2108": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x844"
    },
    "2111": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2112": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C30"
    },
    "2115": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2116": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2117": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2118": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2119": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x891"
    },
    "2122": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2123": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2124": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2126": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "5"
    },
    "2127": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x866"
    },
    "2130": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2131": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2134": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2135": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2136": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2137": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "5"
    },
    "2138": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "5"
    },
    "2139": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2140": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2141": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2142": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2144": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2145": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2146": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x891"
    },
    "2149": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2150": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2151": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2152": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2153": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2154": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2155": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2157": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2158": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2162": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2163": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2164": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2165": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2166": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2167": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2168": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2169": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2170": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2172": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2173": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2174": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2176": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2177": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2178": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2179": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "5"
    },
    "2180": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x874"
    },
    "2183": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2184": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2185": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2186": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "5"
    },
    "2187": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2189": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "5"
    },
    "2190": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2191": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "5"
    },
    "2192": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2193": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2194": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2195": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2196": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2197": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2198": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2199": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2200": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "5"
    },
    "2201": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2202": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2203": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2204": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2206": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 10
    },
    "2207": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2208": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2209": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2211": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2213": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2214": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2216": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2217": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2218": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "2228": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 11,
      "value": "0x919"
    },
    "2231": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2232": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2234": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2243": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2248": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2249": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "5"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "ADD"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2321": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2323": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2324": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2325": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2326": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "5"
    },
    "2327": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2328": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2329": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x0"
    },
    "2333": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2334": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2335": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2336": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2338": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2340": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2341": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2343": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2344": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2345": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2352": {
      "op": "SHL"
    },
    "2353": {
      "op": "SUB"
    },
    "2354": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "5"
    },
    "2355": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2356": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2357": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2358": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2360": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x940"
    },
    "2363": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2364": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE4"
    },
    "2367": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2368": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2369": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2370": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "5"
    },
    "2371": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 13
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "5"
    },
    "2381": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2388": {
      "op": "SHL"
    },
    "2389": {
      "op": "SUB"
    },
    "2390": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "5"
    },
    "2391": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "SUB",
      "path": "5"
    },
    "2392": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AD"
    },
    "2395": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2396": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2398": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2407": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2410": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2412": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2413": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2414": {
      "op": "MSTORE"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2419": {
      "op": "DUP3"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "MSTORE"
    },
    "2422": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "ADD"
    },
    "2459": {
      "op": "MSTORE"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "ADD"
    },
    "2469": {
      "op": "MSTORE"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2472": {
      "op": "ADD"
    },
    "2473": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "2476": {
      "op": "JUMP"
    },
    "2477": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2478": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 14
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "op": "SUB"
    },
    "2487": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 15
    },
    "2488": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "5"
    },
    "2489": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "5"
    },
    "2490": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2491": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C9"
    },
    "2494": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C9"
    },
    "2499": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2500": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2501": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58A"
    },
    "2504": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2505": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2506": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3B"
    },
    "2509": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2510": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2512": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2521": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2524": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2526": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2527": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "5"
    },
    "2528": {
      "op": "MSTORE"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2533": {
      "op": "DUP3"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2571": {
      "op": "DUP3"
    },
    "2572": {
      "op": "ADD"
    },
    "2573": {
      "op": "MSTORE"
    },
    "2574": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "ADD"
    },
    "2611": {
      "op": "MSTORE"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2614": {
      "op": "ADD"
    },
    "2615": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "2618": {
      "op": "JUMP"
    },
    "2619": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2620": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0xA45"
    },
    "2623": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2624": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2625": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1976"
    },
    "2628": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2629": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2630": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2631": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2632": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "5"
    },
    "2633": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2634": {
      "fn": "Wizards.mint",
      "offset": [
        2776,
        3805
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2635": {
      "fn": "Wizards.mint",
      "offset": [
        2836,
        2862
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 17,
      "value": "0x10"
    },
    "2637": {
      "fn": "Wizards.mint",
      "offset": [
        2836,
        2862
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "2638": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2640": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2641": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2820,
        2862
      ],
      "op": "LT",
      "path": "20"
    },
    "2642": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA8E"
    },
    "2645": {
      "branch": 112,
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2646": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2648": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2657": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2660": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2662": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2663": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "ADD",
      "path": "20"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2669": {
      "op": "DUP3"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2692": {
      "op": "DUP3"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2697": {
      "op": "ADD"
    },
    "2698": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "2701": {
      "op": "JUMP"
    },
    "2702": {
      "fn": "Wizards.mint",
      "offset": [
        2812,
        2881
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2703": {
      "fn": "Wizards.mint",
      "offset": [
        2999,
        3020
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2705": {
      "fn": "Wizards.mint",
      "offset": [
        3058,
        3071
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA99"
    },
    "2708": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "2710": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2711": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2712": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2713": {
      "fn": "Wizards.mint",
      "offset": [
        3058,
        3071
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2714": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2716": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2717": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2718": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2720": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2721": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "ADD",
      "path": "20"
    },
    "2722": {
      "op": "SWAP3"
    },
    "2723": {
      "op": "SWAP1"
    },
    "2724": {
      "op": "SWAP3"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2739": {
      "op": "NOT"
    },
    "2740": {
      "fn": "Wizards.mint",
      "offset": [
        3073,
        3083
      ],
      "op": "CALLER",
      "path": "20"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "op": "AND"
    },
    "2745": {
      "op": "SWAP1"
    },
    "2746": {
      "op": "DUP3"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "fn": "Wizards.mint",
      "offset": [
        3085,
        3100
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2752": {
      "op": "DUP3"
    },
    "2753": {
      "op": "ADD"
    },
    "2754": {
      "op": "MSTORE"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2757": {
      "op": "ADD"
    },
    "2758": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2760": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2761": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2764": {
      "op": "NOT"
    },
    "2765": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2766": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2767": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "SUB",
      "path": "20"
    },
    "2768": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "ADD",
      "path": "20"
    },
    "2769": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2770": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2771": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2772": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2773": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2774": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2775": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2776": {
      "fn": "Wizards.mint",
      "offset": [
        3041,
        3101
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2778": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2779": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2780": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "ADD",
      "path": "20"
    },
    "2781": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "2782": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "fn": "Wizards.mint",
      "offset": [
        3023,
        3103
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2786": {
      "fn": "Wizards.mint",
      "offset": [
        3246,
        3264
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAEC"
    },
    "2789": {
      "fn": "Wizards.mint",
      "offset": [
        3262,
        3264
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "2791": {
      "fn": "Wizards.mint",
      "offset": [
        3031,
        3102
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2792": {
      "fn": "Wizards.mint",
      "offset": [
        3246,
        3264
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C80"
    },
    "2795": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3246,
        3264
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2796": {
      "fn": "Wizards.mint",
      "offset": [
        3246,
        3264
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2797": {
      "fn": "Wizards.mint",
      "offset": [
        3241,
        3264
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAF7"
    },
    "2800": {
      "fn": "Wizards.mint",
      "offset": [
        3241,
        3264
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2801": {
      "fn": "Wizards.mint",
      "offset": [
        3241,
        3243
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x19"
    },
    "2803": {
      "fn": "Wizards.mint",
      "offset": [
        3241,
        3264
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "2806": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3241,
        3264
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2807": {
      "fn": "Wizards.mint",
      "offset": [
        3241,
        3264
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2808": {
      "fn": "Wizards.mint",
      "offset": [
        3228,
        3264
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2809": {
      "op": "POP"
    },
    "2810": {
      "fn": "Wizards.mint",
      "offset": [
        3275,
        3295
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2812": {
      "fn": "Wizards.mint",
      "offset": [
        3325,
        3327
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "2814": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB08"
    },
    "2817": {
      "fn": "Wizards.mint",
      "offset": [
        3318,
        3321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "2819": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3317
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2820": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CC2"
    },
    "2823": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3304,
        3321
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2824": {
      "fn": "Wizards.mint",
      "offset": [
        3304,
        3321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2825": {
      "fn": "Wizards.mint",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB12"
    },
    "2828": {
      "fn": "Wizards.mint",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2829": {
      "fn": "Wizards.mint",
      "offset": [
        3303,
        3327
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2830": {
      "fn": "Wizards.mint",
      "offset": [
        3303,
        3327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C80"
    },
    "2833": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2834": {
      "fn": "Wizards.mint",
      "offset": [
        3303,
        3327
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2835": {
      "fn": "Wizards.mint",
      "offset": [
        3298,
        3327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB1D"
    },
    "2838": {
      "fn": "Wizards.mint",
      "offset": [
        3298,
        3327
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2839": {
      "fn": "Wizards.mint",
      "offset": [
        3298,
        3300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x19"
    },
    "2841": {
      "fn": "Wizards.mint",
      "offset": [
        3298,
        3327
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "2844": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3298,
        3327
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2845": {
      "fn": "Wizards.mint",
      "offset": [
        3298,
        3327
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2846": {
      "fn": "Wizards.mint",
      "offset": [
        3275,
        3327
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "fn": "Wizards.mint",
      "offset": [
        3338,
        3360
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2850": {
      "fn": "Wizards.mint",
      "offset": [
        3391,
        3393
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2852": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB2D"
    },
    "2855": {
      "fn": "Wizards.mint",
      "offset": [
        3391,
        3393
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2856": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3382
      ],
      "op": "DUP7",
      "path": "20"
    },
    "2857": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CC2"
    },
    "2860": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3369,
        3385
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2861": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3385
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2862": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB38"
    },
    "2865": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3387
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2866": {
      "fn": "Wizards.mint",
      "offset": [
        3386,
        3387
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2868": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD6"
    },
    "2871": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3369,
        3387
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2872": {
      "fn": "Wizards.mint",
      "offset": [
        3369,
        3387
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2873": {
      "fn": "Wizards.mint",
      "offset": [
        3368,
        3393
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB42"
    },
    "2876": {
      "fn": "Wizards.mint",
      "offset": [
        3368,
        3393
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2877": {
      "fn": "Wizards.mint",
      "offset": [
        3368,
        3393
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2878": {
      "fn": "Wizards.mint",
      "offset": [
        3368,
        3393
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C80"
    },
    "2881": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3368,
        3393
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2882": {
      "fn": "Wizards.mint",
      "offset": [
        3368,
        3393
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2883": {
      "fn": "Wizards.mint",
      "offset": [
        3363,
        3393
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB4D"
    },
    "2886": {
      "fn": "Wizards.mint",
      "offset": [
        3363,
        3393
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2887": {
      "fn": "Wizards.mint",
      "offset": [
        3363,
        3365
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2889": {
      "fn": "Wizards.mint",
      "offset": [
        3363,
        3393
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "2892": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3363,
        3393
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2893": {
      "fn": "Wizards.mint",
      "offset": [
        3363,
        3393
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2894": {
      "fn": "Wizards.mint",
      "offset": [
        3338,
        3393
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "fn": "Wizards.mint",
      "offset": [
        3404,
        3417
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2898": {
      "fn": "Wizards.mint",
      "offset": [
        3448,
        3450
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2900": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3442
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB5D"
    },
    "2903": {
      "fn": "Wizards.mint",
      "offset": [
        3448,
        3450
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2904": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3439
      ],
      "op": "DUP8",
      "path": "20"
    },
    "2905": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3442
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CC2"
    },
    "2908": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3426,
        3442
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2909": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3442
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2910": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB68"
    },
    "2913": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3444
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2914": {
      "fn": "Wizards.mint",
      "offset": [
        3443,
        3444
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "2916": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3444
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD6"
    },
    "2919": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3426,
        3444
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2920": {
      "fn": "Wizards.mint",
      "offset": [
        3426,
        3444
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2921": {
      "fn": "Wizards.mint",
      "offset": [
        3425,
        3450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB72"
    },
    "2924": {
      "fn": "Wizards.mint",
      "offset": [
        3425,
        3450
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2925": {
      "fn": "Wizards.mint",
      "offset": [
        3425,
        3450
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2926": {
      "fn": "Wizards.mint",
      "offset": [
        3425,
        3450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C80"
    },
    "2929": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3425,
        3450
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2930": {
      "fn": "Wizards.mint",
      "offset": [
        3425,
        3450
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2931": {
      "fn": "Wizards.mint",
      "offset": [
        3420,
        3450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB7D"
    },
    "2934": {
      "fn": "Wizards.mint",
      "offset": [
        3420,
        3450
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2935": {
      "fn": "Wizards.mint",
      "offset": [
        3420,
        3422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2937": {
      "fn": "Wizards.mint",
      "offset": [
        3420,
        3450
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "2940": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3420,
        3450
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2941": {
      "fn": "Wizards.mint",
      "offset": [
        3420,
        3450
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2942": {
      "fn": "Wizards.mint",
      "offset": [
        3404,
        3450
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "fn": "Wizards.mint",
      "offset": [
        3461,
        3476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2946": {
      "fn": "Wizards.mint",
      "offset": [
        3510,
        3511
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2948": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB8E"
    },
    "2951": {
      "fn": "Wizards.mint",
      "offset": [
        3502,
        3504
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "2953": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3501
      ],
      "op": "DUP9",
      "path": "20"
    },
    "2954": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3504
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CC2"
    },
    "2957": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3488,
        3504
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2958": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3504
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2959": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3506
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB99"
    },
    "2962": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3506
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2963": {
      "fn": "Wizards.mint",
      "offset": [
        3505,
        3506
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "2965": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3506
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CD6"
    },
    "2968": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3488,
        3506
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2969": {
      "fn": "Wizards.mint",
      "offset": [
        3488,
        3506
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2970": {
      "fn": "Wizards.mint",
      "offset": [
        3487,
        3511
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBA3"
    },
    "2973": {
      "fn": "Wizards.mint",
      "offset": [
        3487,
        3511
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2974": {
      "fn": "Wizards.mint",
      "offset": [
        3487,
        3511
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2975": {
      "fn": "Wizards.mint",
      "offset": [
        3487,
        3511
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2C80"
    },
    "2978": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3487,
        3511
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2979": {
      "fn": "Wizards.mint",
      "offset": [
        3487,
        3511
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2980": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "2982": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2983": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "GT",
      "path": "20"
    },
    "2984": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2985": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB4"
    },
    "2988": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2989": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBB4"
    },
    "2992": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "2995": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3479,
        3512
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2996": {
      "fn": "Wizards.mint",
      "offset": [
        3479,
        3512
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2997": {
      "fn": "Wizards.mint",
      "offset": [
        3461,
        3512
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2998": {
      "fn": "Wizards.mint",
      "offset": [
        3461,
        3512
      ],
      "op": "POP",
      "path": "20"
    },
    "2999": {
      "fn": "Wizards.mint",
      "offset": [
        3525,
        3545
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3001": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3003": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3004": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3005": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C0"
    },
    "3008": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3009": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3011": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3012": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3013": {
      "fn": "Wizards.mint",
      "offset": [
        3555,
        3556
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3015": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3016": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3017": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3019": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3020": {
      "fn": "Wizards.mint",
      "offset": [
        3558,
        3560
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3021": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3022": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3023": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3025": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3026": {
      "fn": "Wizards.mint",
      "offset": [
        3562,
        3574
      ],
      "op": "DUP7",
      "path": "20"
    },
    "3027": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3028": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3029": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3031": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3032": {
      "fn": "Wizards.mint",
      "offset": [
        3576,
        3590
      ],
      "op": "DUP6",
      "path": "20"
    },
    "3033": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3034": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3035": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3037": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3038": {
      "fn": "Wizards.mint",
      "offset": [
        3592,
        3597
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3039": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3040": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3041": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3043": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3044": {
      "fn": "Wizards.mint",
      "offset": [
        3599,
        3600
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3046": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3047": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3048": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3050": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3051": {
      "fn": "Wizards.mint",
      "offset": [
        3602,
        3603
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3053": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3054": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3055": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3057": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3058": {
      "fn": "Wizards.mint",
      "offset": [
        3605,
        3606
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3060": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3061": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3062": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3064": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3065": {
      "fn": "Wizards.mint",
      "offset": [
        3608,
        3609
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3067": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3068": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3069": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3071": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3072": {
      "fn": "Wizards.mint",
      "offset": [
        3611,
        3612
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3074": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3075": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3076": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3078": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3079": {
      "fn": "Wizards.mint",
      "offset": [
        3614,
        3615
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3081": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3082": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3083": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3085": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3086": {
      "fn": "Wizards.mint",
      "offset": [
        3617,
        3618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3088": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3089": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3090": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3092": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3093": {
      "fn": "Wizards.mint",
      "offset": [
        3620,
        3621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3095": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3096": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3097": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3099": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ADD",
      "path": "20"
    },
    "3100": {
      "fn": "Wizards.mint",
      "offset": [
        3623,
        3630
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3101": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3103": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3104": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "GT",
      "path": "20"
    },
    "3105": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3106": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC2D"
    },
    "3109": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3110": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC2D"
    },
    "3113": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "3116": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3549,
        3631
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3117": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3118": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3119": {
      "fn": "Wizards.mint",
      "offset": [
        3549,
        3631
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3120": {
      "fn": "Wizards.mint",
      "offset": [
        3525,
        3631
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "fn": "Wizards.mint",
      "offset": [
        3525,
        3631
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3123": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3656
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 18,
      "value": "0xB"
    },
    "3125": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3127": {
      "fn": "Wizards.mint",
      "offset": [
        3657,
        3670
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC3F"
    },
    "3130": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3132": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3133": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3134": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3135": {
      "fn": "Wizards.mint",
      "offset": [
        3657,
        3670
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3136": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3137": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3138": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3140": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "ADD",
      "path": "20"
    },
    "3141": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3142": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3143": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3144": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3146": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "ADD",
      "path": "20"
    },
    "3147": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3149": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3671
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3150": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3152": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3153": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3154": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3155": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3156": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3158": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3159": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3160": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3162": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3163": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3164": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3165": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3166": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3168": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3169": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3170": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3172": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3173": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3174": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3175": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3176": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "3178": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3179": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3180": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3182": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3183": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3184": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3185": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3186": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3188": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3189": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3190": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "3192": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3193": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3194": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3195": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3196": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3198": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3199": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3200": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "3202": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3203": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3204": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3205": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3206": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "3208": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3209": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3210": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC0"
    },
    "3212": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3213": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3214": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3215": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3216": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "3218": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3219": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3220": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "3222": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3223": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3224": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3225": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3226": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "3228": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3229": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3230": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3233": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3234": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3235": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3236": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3237": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "3239": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3240": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3241": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120"
    },
    "3244": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3245": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3246": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3247": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3248": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "3250": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3251": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3252": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x140"
    },
    "3255": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3256": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3257": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3258": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3259": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "3261": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3262": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3263": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x160"
    },
    "3266": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3267": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3268": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3269": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3270": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "3272": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3273": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3274": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180"
    },
    "3277": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3278": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3279": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3280": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3281": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "3283": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3284": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3285": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A0"
    },
    "3288": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3289": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3290": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3291": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3292": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "3294": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ADD",
      "path": "20"
    },
    "3295": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3297": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3300": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "EXP",
      "path": "20"
    },
    "3301": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3302": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3303": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3304": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3306": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MUL",
      "path": "20"
    },
    "3307": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "NOT",
      "path": "20"
    },
    "3308": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "AND",
      "path": "20"
    },
    "3309": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3310": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3311": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "3313": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3314": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "GT",
      "path": "20"
    },
    "3315": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3316": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCFF"
    },
    "3319": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3320": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xCFF"
    },
    "3323": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "3326": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3642,
        3681
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3327": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3328": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "MUL",
      "path": "20"
    },
    "3329": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "OR",
      "path": "20"
    },
    "3330": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3331": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "3332": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "POP",
      "path": "20"
    },
    "3333": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3334": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "POP",
      "path": "20"
    },
    "3335": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3681
      ],
      "op": "POP",
      "path": "20"
    },
    "3336": {
      "fn": "Wizards.mint",
      "offset": [
        3692,
        3731
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 19,
      "value": "0xD24"
    },
    "3339": {
      "fn": "Wizards.mint",
      "offset": [
        3702,
        3712
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3340": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3727
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD14"
    },
    "3343": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3345": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3346": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3347": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3348": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3727
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3349": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3729
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD1F"
    },
    "3352": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3729
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3353": {
      "fn": "Wizards.mint",
      "offset": [
        3728,
        3729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3355": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3729
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "3358": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3714,
        3729
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3359": {
      "fn": "Wizards.mint",
      "offset": [
        3714,
        3729
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3360": {
      "fn": "Wizards.mint",
      "offset": [
        3692,
        3701
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19E4"
    },
    "3363": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3692,
        3731
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3364": {
      "fn": "Wizards.mint",
      "offset": [
        3692,
        3731
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3365": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3366": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3367": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3368": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3369": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3370": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3371": {
      "fn": "Wizards.mint",
      "offset": [
        2801,
        3805
      ],
      "op": "POP",
      "path": "20"
    },
    "3372": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        2776,
        3805
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3373": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3374": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 20,
      "value": "0xD37"
    },
    "3377": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3378": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3379": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A02"
    },
    "3382": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3383": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3384": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD53"
    },
    "3387": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3388": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3390": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3391": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3397": {
      "op": "SHL"
    },
    "3398": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3399": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3400": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3402": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "5"
    },
    "3403": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "3406": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3407": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CF5"
    },
    "3410": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3411": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3412": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 21,
      "value": "0xA45"
    },
    "3415": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3416": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3417": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3418": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF5"
    },
    "3421": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3422": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3423": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3425": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 22,
      "value": "0xD69"
    },
    "3428": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3429": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5B"
    },
    "3432": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3433": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3434": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3435": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "6"
    },
    "3436": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDCB"
    },
    "3439": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3440": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3442": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3449": {
      "op": "SHL"
    },
    "3450": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3451": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3456": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3457": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "6"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "MSTORE"
    },
    "3466": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3518": {
      "op": "SHL"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3521": {
      "op": "DUP3"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "MSTORE"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "3530": {
      "op": "JUMP"
    },
    "3531": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3532": {
      "op": "POP"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3539": {
      "op": "SHL"
    },
    "3540": {
      "op": "SUB"
    },
    "3541": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 23
    },
    "3542": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3543": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3544": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "6"
    },
    "3545": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3547": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3548": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3549": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3550": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "3552": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3554": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3555": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3556": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3557": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3559": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3560": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3561": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3562": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "3563": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3564": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3565": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3566": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3567": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3568": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3569": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3570": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3571": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0xA45"
    },
    "3576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3579": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3585": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "5"
    },
    "3586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3589": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3590": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3592": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3593": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3594": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "5"
    },
    "3595": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C7"
    },
    "3598": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3599": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3600": {
      "offset": [
        10855,
        10859
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "3601": {
      "offset": [
        10833,
        10843
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3602": {
      "offset": [
        10833,
        10860
      ],
      "op": "SUB",
      "path": "20"
    },
    "3603": {
      "offset": [
        10825,
        10878
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE4E"
    },
    "3606": {
      "offset": [
        10825,
        10878
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3607": {
      "fn": "Wizards.crush",
      "offset": [
        10825,
        10878
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3609": {
      "fn": "Wizards.crush",
      "offset": [
        10825,
        10878
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "offset": [
        10825,
        10878
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3618": {
      "fn": "Wizards.crush",
      "offset": [
        10825,
        10878
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3621": {
      "offset": [
        10825,
        10878
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3623": {
      "fn": "Wizards.crush",
      "offset": [
        10825,
        10878
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3624": {
      "fn": "Wizards.crush",
      "offset": [
        10825,
        10878
      ],
      "op": "ADD",
      "path": "20"
    },
    "3625": {
      "op": "MSTORE"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3630": {
      "op": "DUP3"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "MSTORE"
    },
    "3633": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "3649": {
      "op": "SHL"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3652": {
      "op": "DUP3"
    },
    "3653": {
      "op": "ADD"
    },
    "3654": {
      "op": "MSTORE"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "offset": [
        10825,
        10878
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "3661": {
      "op": "JUMP"
    },
    "3662": {
      "offset": [
        10825,
        10878
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3663": {
      "fn": "Wizards.crush",
      "offset": [
        6308,
        6369
      ],
      "op": "POP",
      "path": "20"
    },
    "3664": {
      "fn": "Wizards.crush",
      "jump": "o",
      "offset": [
        6308,
        6369
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3665": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3666": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3668": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 25,
      "value": "0xE5C"
    },
    "3671": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3673": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3674": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3675": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3676": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3677": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3678": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "6"
    },
    "3679": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEBF"
    },
    "3682": {
      "branch": 135,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3683": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3685": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3694": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3697": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3699": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3700": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "6"
    },
    "3701": {
      "op": "MSTORE"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3706": {
      "op": "DUP3"
    },
    "3707": {
      "op": "ADD"
    },
    "3708": {
      "op": "MSTORE"
    },
    "3709": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3744": {
      "op": "DUP3"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "op": "MSTORE"
    },
    "3747": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x910"
    },
    "3774": {
      "op": "JUMP"
    },
    "3775": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3776": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x8"
    },
    "3778": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3779": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3780": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3781": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3782": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "6"
    },
    "3783": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED2"
    },
    "3786": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3787": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED2"
    },
    "3790": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D46"
    },
    "3793": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3794": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3795": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3796": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3798": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3799": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3801": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3803": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3804": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "6"
    },
    "3805": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3806": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3807": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "6"
    },
    "3808": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3809": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3810": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "6"
    },
    "3811": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3812": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3813": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3815": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3816": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3817": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3818": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3820": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3822": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3823": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3825": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3826": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3827": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "5"
    },
    "3837": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3838": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 27,
      "value": "0x5F0"
    },
    "3841": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3842": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3844": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3851": {
      "op": "SHL"
    },
    "3852": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3853": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3856": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3858": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3859": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "5"
    },
    "3860": {
      "op": "MSTORE"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3865": {
      "op": "DUP3"
    },
    "3866": {
      "op": "ADD"
    },
    "3867": {
      "op": "MSTORE"
    },
    "3868": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3903": {
      "op": "DUP3"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "MSTORE"
    },
    "3906": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3918": {
      "op": "SHL"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "3930": {
      "op": "JUMP"
    },
    "3931": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3932": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3940": {
      "op": "SHL"
    },
    "3941": {
      "op": "SUB"
    },
    "3942": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 28
    },
    "3943": {
      "branch": 125,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "5"
    },
    "3944": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFC6"
    },
    "3947": {
      "branch": 125,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3948": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3950": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3959": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3962": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3964": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3965": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "5"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3971": {
      "op": "DUP3"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4025": {
      "op": "SHL"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4028": {
      "op": "DUP3"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "MSTORE"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "4037": {
      "op": "JUMP"
    },
    "4038": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "SUB"
    },
    "4048": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "5",
      "statement": 29
    },
    "4049": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4054": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4061": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4065": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4066": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4067": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "4069": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4076": {
      "op": "SHL"
    },
    "4077": {
      "op": "SUB"
    },
    "4078": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "4079": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4080": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "4081": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100C"
    },
    "4084": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4085": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4087": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4094": {
      "op": "SHL"
    },
    "4095": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4096": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4097": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4099": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "4100": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x910"
    },
    "4103": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4104": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D5C"
    },
    "4107": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4108": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 30,
      "value": "0x1016"
    },
    "4112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CA0"
    },
    "4117": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4118": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4119": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4120": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4121": {
      "fn": "Wizards.initiate",
      "offset": [
        3965,
        3975
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 31
    },
    "4122": {
      "fn": "Wizards.initiate",
      "offset": [
        3944,
        3961
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1022"
    },
    "4125": {
      "fn": "Wizards.initiate",
      "offset": [
        3952,
        3960
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4126": {
      "fn": "Wizards.initiate",
      "offset": [
        3944,
        3951
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEE4"
    },
    "4129": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        3944,
        3961
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4130": {
      "fn": "Wizards.initiate",
      "offset": [
        3944,
        3961
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "SUB"
    },
    "4139": {
      "fn": "Wizards.initiate",
      "offset": [
        3944,
        3975
      ],
      "op": "AND",
      "path": "20"
    },
    "4140": {
      "branch": 113,
      "fn": "Wizards.initiate",
      "offset": [
        3944,
        3975
      ],
      "op": "EQ",
      "path": "20"
    },
    "4141": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1068"
    },
    "4144": {
      "branch": 113,
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4145": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4147": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4154": {
      "op": "SHL"
    },
    "4155": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4156": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4159": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4161": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4162": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "ADD",
      "path": "20"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4168": {
      "op": "DUP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4190": {
      "op": "DUP3"
    },
    "4191": {
      "op": "ADD"
    },
    "4192": {
      "op": "MSTORE"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4195": {
      "op": "ADD"
    },
    "4196": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "4199": {
      "op": "JUMP"
    },
    "4200": {
      "fn": "Wizards.initiate",
      "offset": [
        3936,
        3993
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4201": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 32,
      "value": "0x0"
    },
    "4203": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4204": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4205": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4206": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4026
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4208": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4210": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4211": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4212": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4213": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4215": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4216": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4217": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4036
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4218": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4056
      ],
      "op": "ADD",
      "path": "20"
    },
    "4219": {
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4056
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4220": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        4012,
        4061
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4221": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10BC"
    },
    "4224": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4225": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4227": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4236": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4239": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4241": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4242": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4243": {
      "op": "MSTORE"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4279": {
      "op": "ADD"
    },
    "4280": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "4283": {
      "op": "JUMP"
    },
    "4284": {
      "fn": "Wizards.initiate",
      "offset": [
        4004,
        4083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4285": {
      "fn": "Wizards.initiate",
      "offset": [
        4179,
        4200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4287": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4288": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4289": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4290": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4217
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4292": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4294": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4295": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4296": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4297": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4299": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4300": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4301": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4302": {
      "fn": "Wizards.initiate",
      "offset": [
        4268,
        4283
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 33
    },
    "4303": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4265
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4304": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4265
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4305": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4265
      ],
      "op": "ADD",
      "path": "20"
    },
    "4306": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4283
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4307": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4283
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4308": {
      "fn": "Wizards.initiate",
      "offset": [
        4238,
        4283
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4309": {
      "fn": "Wizards.initiate",
      "offset": [
        4346,
        4386
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 34,
      "value": "0x11"
    },
    "4311": {
      "fn": "Wizards.initiate",
      "offset": [
        4346,
        4386
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4312": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4313": {
      "fn": "Wizards.initiate",
      "offset": [
        4203,
        4227
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4314": {
      "fn": "Wizards.initiate",
      "offset": [
        4328,
        4386
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10E3"
    },
    "4317": {
      "fn": "Wizards.initiate",
      "offset": [
        4328,
        4386
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4318": {
      "fn": "Wizards.initiate",
      "offset": [
        4346,
        4386
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4319": {
      "fn": "Wizards.initiate",
      "offset": [
        4328,
        4386
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4322": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4328,
        4386
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4323": {
      "fn": "Wizards.initiate",
      "offset": [
        4328,
        4386
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4324": {
      "fn": "Wizards.initiate",
      "offset": [
        4294,
        4325
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4326": {
      "fn": "Wizards.initiate",
      "offset": [
        4294,
        4325
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4327": {
      "fn": "Wizards.initiate",
      "offset": [
        4294,
        4325
      ],
      "op": "ADD",
      "path": "20"
    },
    "4328": {
      "fn": "Wizards.initiate",
      "offset": [
        4294,
        4386
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4329": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 35,
      "value": "0x40"
    },
    "4331": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4332": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4333": {
      "fn": "Wizards.initiate",
      "offset": [
        4414,
        4424
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4334": {
      "op": "DUP2"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "fn": "Wizards.initiate",
      "offset": [
        4436,
        4451
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4339": {
      "op": "DUP3"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "MSTORE"
    },
    "4342": {
      "fn": "Wizards.initiate",
      "offset": [
        4426,
        4434
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4343": {
      "fn": "Wizards.initiate",
      "offset": [
        4426,
        4434
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4344": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "4377": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4378": {
      "op": "ADD"
    },
    "4379": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4381": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4382": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4383": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4384": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "SUB",
      "path": "20"
    },
    "4385": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4386": {
      "fn": "Wizards.initiate",
      "offset": [
        4404,
        4452
      ],
      "op": "LOG2",
      "path": "20"
    },
    "4387": {
      "fn": "Wizards.initiate",
      "offset": [
        3925,
        4460
      ],
      "op": "POP",
      "path": "20"
    },
    "4388": {
      "fn": "Wizards.initiate",
      "offset": [
        3880,
        4460
      ],
      "op": "POP",
      "path": "20"
    },
    "4389": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        3880,
        4460
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4390": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4391": {
      "offset": [
        11033,
        11040
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4393": {
      "fn": "Wizards.reportBattle",
      "offset": [
        11033,
        11040
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4400": {
      "op": "SHL"
    },
    "4401": {
      "op": "SUB"
    },
    "4402": {
      "offset": [
        11033,
        11040
      ],
      "op": "AND",
      "path": "20"
    },
    "4403": {
      "offset": [
        11019,
        11029
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4404": {
      "offset": [
        11019,
        11040
      ],
      "op": "EQ",
      "path": "20"
    },
    "4405": {
      "offset": [
        10997,
        11104
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x118C"
    },
    "4408": {
      "offset": [
        10997,
        11104
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4409": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10997,
        11104
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4411": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10997,
        11104
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "offset": [
        10997,
        11104
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4420": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10997,
        11104
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4423": {
      "offset": [
        10997,
        11104
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4425": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10997,
        11104
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4426": {
      "fn": "Wizards.reportBattle",
      "offset": [
        10997,
        11104
      ],
      "op": "ADD",
      "path": "20"
    },
    "4427": {
      "op": "MSTORE"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4430": {
      "op": "DUP1"
    },
    "4431": {
      "op": "DUP3"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4469": {
      "op": "DUP3"
    },
    "4470": {
      "op": "ADD"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4479": {
      "op": "SHL"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "ADD"
    },
    "4484": {
      "op": "MSTORE"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "offset": [
        10997,
        11104
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "4491": {
      "op": "JUMP"
    },
    "4492": {
      "offset": [
        10997,
        11104
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4493": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4646,
        4657
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4495": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4642
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4496": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4498": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4499": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "GT",
      "path": "20"
    },
    "4500": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4501": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11A0"
    },
    "4504": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4505": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11A0"
    },
    "4508": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "4511": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4635,
        4657
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4512": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4513": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4635,
        4657
      ],
      "op": "SUB",
      "path": "20"
    },
    "4514": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11F9"
    },
    "4517": {
      "branch": 115,
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4518": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x0"
    },
    "4520": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4521": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4522": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4523": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4687
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4525": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4527": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4528": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4530": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4531": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4532": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4534": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4705
      ],
      "op": "ADD",
      "path": "20"
    },
    "4535": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4536": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4537": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4709,
        4710
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4539": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4709,
        4710
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4540": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4700
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4541": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11C7"
    },
    "4544": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4545": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4709,
        4710
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4546": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4709,
        4710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4547": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4550": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4673,
        4710
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4551": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4552": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4553": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4554": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4673,
        4710
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4555": {
      "op": "POP"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 37,
      "value": "0x0"
    },
    "4559": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4560": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4561": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4562": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4739
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4564": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4566": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4567": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4569": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4570": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4571": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4759
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4573": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4759
      ],
      "op": "ADD",
      "path": "20"
    },
    "4574": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4575": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4576": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4763,
        4764
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4578": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4763,
        4764
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4579": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4752
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4580": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11EE"
    },
    "4583": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4584": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4763,
        4764
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4585": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4763,
        4764
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4586": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4589": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4725,
        4764
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4590": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4591": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4592": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4593": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4725,
        4764
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1261"
    },
    "4598": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4601": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4632,
        4938
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4602": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4807,
        4819
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4604": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4803
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4605": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4607": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4608": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "GT",
      "path": "20"
    },
    "4609": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4610": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120D"
    },
    "4613": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4614": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120D"
    },
    "4617": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "4620": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4796,
        4819
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4621": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4622": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4796,
        4819
      ],
      "op": "SUB",
      "path": "20"
    },
    "4623": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4793,
        4938
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1261"
    },
    "4626": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4793,
        4938
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4627": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 38,
      "value": "0x0"
    },
    "4629": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4630": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4631": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4632": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4634": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4636": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4637": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4639": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4640": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4641": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4869
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "4643": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4869
      ],
      "op": "ADD",
      "path": "20"
    },
    "4644": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4645": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4646": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4873,
        4874
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4648": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4873,
        4874
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4649": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4862
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4650": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1234"
    },
    "4653": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4654": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4873,
        4874
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4655": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4873,
        4874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4656": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4659": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4835,
        4874
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4660": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4661": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4662": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4663": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4835,
        4874
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0x0"
    },
    "4668": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4669": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4670": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4671": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4673": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4675": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4676": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4678": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4679": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4680": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4682": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "4683": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4684": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4685": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4925,
        4926
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4687": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4925,
        4926
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4688": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4916
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4689": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x125B"
    },
    "4692": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4693": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4925,
        4926
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4694": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4925,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4695": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4698": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4889,
        4926
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4699": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4700": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4701": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4702": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4889,
        4926
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4793,
        4938
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4706": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x0"
    },
    "4708": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4709": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4710": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4711": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4964
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4713": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4715": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4716": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4718": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4719": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4720": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4991
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "4722": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4991
      ],
      "op": "ADD",
      "path": "20"
    },
    "4723": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4724": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4725": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4995,
        5005
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4726": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4995,
        5005
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4727": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        4977
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4728": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1282"
    },
    "4731": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4732": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4995,
        5005
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4733": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4995,
        5005
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4734": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4737": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4950,
        5005
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4738": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4739": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4740": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4741": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4950,
        5005
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "POP"
    },
    "4748": {
      "op": "POP"
    },
    "4749": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        4468,
        5387
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4750": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4751": {
      "offset": [
        10684,
        10688
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "4752": {
      "offset": [
        10662,
        10672
      ],
      "op": "CALLER",
      "path": "20"
    },
    "4753": {
      "offset": [
        10662,
        10689
      ],
      "op": "SUB",
      "path": "20"
    },
    "4754": {
      "offset": [
        10654,
        10707
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12CD"
    },
    "4757": {
      "offset": [
        10654,
        10707
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4758": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10654,
        10707
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4760": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10654,
        10707
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4767": {
      "op": "SHL"
    },
    "4768": {
      "offset": [
        10654,
        10707
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4769": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10654,
        10707
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4772": {
      "offset": [
        10654,
        10707
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4774": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10654,
        10707
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4775": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        10654,
        10707
      ],
      "op": "ADD",
      "path": "20"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "MSTORE"
    },
    "4784": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4803": {
      "op": "DUP3"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "MSTORE"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4808": {
      "op": "ADD"
    },
    "4809": {
      "offset": [
        10654,
        10707
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "4812": {
      "op": "JUMP"
    },
    "4813": {
      "offset": [
        10654,
        10707
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4814": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 41,
      "value": "0x0"
    },
    "4816": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4817": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4818": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4819": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5963
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4821": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4823": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4824": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4826": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4827": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5973
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4828": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5997
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4830": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5997
      ],
      "op": "ADD",
      "path": "20"
    },
    "4831": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        5997
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4832": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6000,
        6015
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4833": {
      "op": "GT"
    },
    "4834": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12FC"
    },
    "4837": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4838": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4840": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4841": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4842": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4843": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4845": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4847": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4848": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4850": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4851": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6078
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4852": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6102
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4854": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6102
      ],
      "op": "ADD",
      "path": "20"
    },
    "4855": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6054,
        6102
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4856": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12FE"
    },
    "4859": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4860": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4861": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6036,
        6051
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4862": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5949,
        6102
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4863": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5934,
        6103
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1308"
    },
    "4866": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5934,
        6103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4867": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5934,
        5945
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4868": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5934,
        6103
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2CAA"
    },
    "4871": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5934,
        6103
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4872": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5934,
        6103
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4873": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4875": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4876": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4877": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4878": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5897
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "4880": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4882": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4883": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4885": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4886": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4887": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5907
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4888": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5931
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4890": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        5931
      ],
      "op": "ADD",
      "path": "20"
    },
    "4891": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        6103
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4892": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        6103
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4893": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        6103
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4894": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5883,
        6103
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        5753,
        6203
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4897": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4898": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2154,
        2166
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1329"
    },
    "4901": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2154,
        2166
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21EF"
    },
    "4904": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2154,
        2166
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4905": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2154,
        2166
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4906": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2200
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 42,
      "value": "0xB"
    },
    "4908": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4910": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2201,
        2210
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4911": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4912": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4913": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4915": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4916": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4917": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4918": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4919": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4921": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4922": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4924": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2186,
        2211
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4925": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4927": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4928": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4929": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C0"
    },
    "4932": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4933": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4935": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4936": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4937": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4938": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4940": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4941": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4942": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4943": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4944": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4945": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4947": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4948": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4950": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4951": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4952": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4953": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4954": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4955": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4957": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4958": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4960": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4961": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4962": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4963": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4964": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4965": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4967": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4968": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4970": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4971": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4972": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4973": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4974": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4975": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4977": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4978": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4980": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4981": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4982": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4983": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4984": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4985": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4987": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4988": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5"
    },
    "4990": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4991": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4992": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4993": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4994": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4995": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4997": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "4998": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "5000": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5001": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5002": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5003": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5004": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5005": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5007": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5008": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "5010": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5011": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5012": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5013": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5014": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5015": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5017": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5018": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "5020": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5021": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5022": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5023": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5024": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5025": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5027": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5028": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x9"
    },
    "5030": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5031": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5032": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5033": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5034": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5035": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5037": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5038": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "5040": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5041": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5042": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5043": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5044": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5045": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5047": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5048": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5050": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5051": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5052": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5053": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5054": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5055": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5057": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5058": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "5060": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5061": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5062": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5063": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5064": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5065": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5067": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5068": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5070": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5071": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ADD",
      "path": "20"
    },
    "5072": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5074": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5075": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5076": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5077": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5080": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "EXP",
      "path": "20"
    },
    "5081": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5082": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DIV",
      "path": "20"
    },
    "5083": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5085": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "AND",
      "path": "20"
    },
    "5086": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5088": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5089": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "GT",
      "path": "20"
    },
    "5090": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5091": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13EE"
    },
    "5094": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5095": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13EE"
    },
    "5098": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "5101": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5102": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5103": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "5105": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5106": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "GT",
      "path": "20"
    },
    "5107": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5108": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13FF"
    },
    "5111": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5112": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x13FF"
    },
    "5115": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x251F"
    },
    "5118": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5119": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5120": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5121": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5122": {
      "op": "POP"
    },
    "5123": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2179,
        2211
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5124": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2088,
        2219
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "op": "POP"
    },
    "5127": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "o",
      "offset": [
        2088,
        2219
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5128": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5129": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5131": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x1"
    },
    "5133": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5134": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5135": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x818"
    },
    "5138": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5139": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C30"
    },
    "5142": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5143": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5144": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5146": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5153": {
      "op": "SHL"
    },
    "5154": {
      "op": "SUB"
    },
    "5155": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "5156": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5157": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "5158": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1441"
    },
    "5161": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5162": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5164": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5171": {
      "op": "SHL"
    },
    "5172": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5173": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5174": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5176": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "5177": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x910"
    },
    "5180": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5181": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D5C"
    },
    "5184": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5185": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5192": {
      "op": "SHL"
    },
    "5193": {
      "op": "SUB"
    },
    "5194": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 44
    },
    "5195": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "AND",
      "path": "20"
    },
    "5196": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5197": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5198": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5199": {
      "branch": 117,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11567
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5200": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11592
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1467"
    },
    "5203": {
      "branch": 117,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11592
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5204": {
      "op": "POP"
    },
    "5205": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11584,
        11592
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5207": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11584,
        11592
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "SUB"
    },
    "5216": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11571,
        11592
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5217": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11571,
        11592
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5218": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11571,
        11592
      ],
      "op": "AND",
      "path": "20"
    },
    "5219": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11584,
        11592
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5220": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11584,
        11592
      ],
      "op": "AND",
      "path": "20"
    },
    "5221": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11571,
        11592
      ],
      "op": "EQ",
      "path": "20"
    },
    "5222": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11571,
        11592
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5223": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11544,
        11592
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5224": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14AE"
    },
    "5227": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5228": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5230": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5237": {
      "op": "SHL"
    },
    "5238": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5239": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5242": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5244": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5245": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "ADD",
      "path": "20"
    },
    "5246": {
      "op": "MSTORE"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "ADD"
    },
    "5253": {
      "op": "MSTORE"
    },
    "5254": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5284": {
      "op": "DUP3"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "MSTORE"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "5293": {
      "op": "JUMP"
    },
    "5294": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11536,
        11621
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5295": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11640
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 45,
      "value": "0xD"
    },
    "5297": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5298": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5305": {
      "op": "SHL"
    },
    "5306": {
      "op": "SUB"
    },
    "5307": {
      "op": "NOT"
    },
    "5308": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "AND",
      "path": "20"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5315": {
      "op": "SHL"
    },
    "5316": {
      "op": "SUB"
    },
    "5317": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5318": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "AND",
      "path": "20"
    },
    "5319": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5320": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5321": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "OR",
      "path": "20"
    },
    "5322": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5323": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5324": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11632,
        11652
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5325": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 46,
      "value": "0x40"
    },
    "5327": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5328": {
      "op": "SWAP1"
    },
    "5329": {
      "op": "DUP2"
    },
    "5330": {
      "op": "MSTORE"
    },
    "5331": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "5364": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5367": {
      "op": "ADD"
    },
    "5368": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5369": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5371": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5372": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5373": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5374": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "SUB",
      "path": "20"
    },
    "5375": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5376": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11668,
        11690
      ],
      "op": "LOG1",
      "path": "20"
    },
    "5377": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        11463,
        11698
      ],
      "op": "POP",
      "path": "20"
    },
    "5378": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        11463,
        11698
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5380": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5387": {
      "op": "SHL"
    },
    "5388": {
      "op": "SUB"
    },
    "5389": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 47
    },
    "5390": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "5"
    },
    "5391": {
      "branch": 126,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "SUB",
      "path": "5"
    },
    "5392": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x155B"
    },
    "5395": {
      "branch": 126,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5396": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5398": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5407": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5410": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5413": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "5"
    },
    "5414": {
      "op": "MSTORE"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5419": {
      "op": "DUP3"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "MSTORE"
    },
    "5422": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "5455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5457": {
      "op": "DUP3"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "op": "MSTORE"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "5466": {
      "op": "JUMP"
    },
    "5467": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5468": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5469": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 48,
      "value": "0x0"
    },
    "5471": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5472": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5473": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5474": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5476": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5478": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5479": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5480": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5481": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5483": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5485": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5492": {
      "op": "SHL"
    },
    "5493": {
      "op": "SUB"
    },
    "5494": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5495": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "5"
    },
    "5496": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5497": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5498": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5499": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5500": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5501": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5502": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5503": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5504": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5505": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5506": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5507": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5510": {
      "op": "NOT"
    },
    "5511": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "5"
    },
    "5512": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5513": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5514": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5515": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "5"
    },
    "5518": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5519": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5520": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5521": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 49
    },
    "5522": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5523": {
      "op": "SWAP1"
    },
    "5524": {
      "op": "DUP2"
    },
    "5525": {
      "op": "MSTORE"
    },
    "5526": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5528": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5529": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5566": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "5"
    },
    "5570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5572": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "5"
    },
    "5573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "5"
    },
    "5574": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5575": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 50,
      "value": "0x15D1"
    },
    "5579": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5580": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5581": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A02"
    },
    "5584": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5585": {
      "branch": 127,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15ED"
    },
    "5589": {
      "branch": 127,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5590": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5592": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5599": {
      "op": "SHL"
    },
    "5600": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5604": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "5"
    },
    "5605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "5608": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CF5"
    },
    "5612": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 51,
      "value": "0x15F9"
    },
    "5617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5619": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5620": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CF2"
    },
    "5624": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5627": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5628": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5629": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "5"
    },
    "5630": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5631": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6379,
        6737
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5632": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5634": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5635": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5636": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5637": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5639": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5641": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5642": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5644": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5645": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5646": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5647": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6453,
        6466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "5649": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6453,
        6466
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5656": {
      "op": "SHL"
    },
    "5657": {
      "op": "SUB"
    },
    "5658": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "5659": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 52,
      "value": "0x167E"
    },
    "5662": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5663": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5665": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5666": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5672": {
      "op": "SHL"
    },
    "5673": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5674": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5677": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5679": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5680": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "ADD",
      "path": "20"
    },
    "5681": {
      "op": "MSTORE"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5686": {
      "op": "DUP3"
    },
    "5687": {
      "op": "ADD"
    },
    "5688": {
      "op": "MSTORE"
    },
    "5689": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5724": {
      "op": "DUP3"
    },
    "5725": {
      "op": "ADD"
    },
    "5726": {
      "op": "MSTORE"
    },
    "5727": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5745": {
      "op": "SHL"
    },
    "5746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5748": {
      "op": "DUP3"
    },
    "5749": {
      "op": "ADD"
    },
    "5750": {
      "op": "MSTORE"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5753": {
      "op": "ADD"
    },
    "5754": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "5757": {
      "op": "JUMP"
    },
    "5758": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6479,
        6556
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5759": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 53,
      "value": "0x5F0"
    },
    "5762": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6622,
        6630
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5763": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5765": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5766": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5767": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "5769": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "ADD",
      "path": "20"
    },
    "5770": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5772": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5773": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5774": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5E"
    },
    "5776": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5777": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5778": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5780": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "ADD",
      "path": "20"
    },
    "5781": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E84"
    },
    "5784": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5E"
    },
    "5786": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5787": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6729
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "5788": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6607,
        6621
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5F6"
    },
    "5791": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6607,
        6729
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5792": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11229,
        11455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5793": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "5795": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "op": "SUB"
    },
    "5804": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "5805": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5806": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "5807": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16CA"
    },
    "5810": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5811": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5813": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5820": {
      "op": "SHL"
    },
    "5821": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5822": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5823": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5825": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "5826": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x910"
    },
    "5829": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5830": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D5C"
    },
    "5833": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5834": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5841": {
      "op": "SHL"
    },
    "5842": {
      "op": "SUB"
    },
    "5843": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 54
    },
    "5844": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "AND",
      "path": "20"
    },
    "5845": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5846": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5847": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5848": {
      "branch": 119,
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11330
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5849": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11353
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16F0"
    },
    "5852": {
      "branch": 119,
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11353
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5853": {
      "op": "POP"
    },
    "5854": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11346,
        11353
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "5856": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11346,
        11353
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5863": {
      "op": "SHL"
    },
    "5864": {
      "op": "SUB"
    },
    "5865": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11334,
        11353
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5866": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11334,
        11353
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5867": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11334,
        11353
      ],
      "op": "AND",
      "path": "20"
    },
    "5868": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11346,
        11353
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5869": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11346,
        11353
      ],
      "op": "AND",
      "path": "20"
    },
    "5870": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11334,
        11353
      ],
      "op": "EQ",
      "path": "20"
    },
    "5871": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        11334,
        11353
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5872": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11308,
        11353
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5873": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1737"
    },
    "5876": {
      "branch": 120,
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5877": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5879": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5886": {
      "op": "SHL"
    },
    "5887": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5888": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5891": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5893": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5894": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "ADD",
      "path": "20"
    },
    "5895": {
      "op": "MSTORE"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5900": {
      "op": "DUP3"
    },
    "5901": {
      "op": "ADD"
    },
    "5902": {
      "op": "MSTORE"
    },
    "5903": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5930": {
      "op": "SHL"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5933": {
      "op": "DUP3"
    },
    "5934": {
      "op": "ADD"
    },
    "5935": {
      "op": "MSTORE"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5938": {
      "op": "ADD"
    },
    "5939": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x910"
    },
    "5942": {
      "op": "JUMP"
    },
    "5943": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11300,
        11382
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5944": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11400
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0xC"
    },
    "5946": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5947": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5954": {
      "op": "SHL"
    },
    "5955": {
      "op": "SUB"
    },
    "5956": {
      "op": "NOT"
    },
    "5957": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "AND",
      "path": "20"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5967": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "AND",
      "path": "20"
    },
    "5968": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5969": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5970": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "OR",
      "path": "20"
    },
    "5971": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5972": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5973": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11393,
        11411
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5974": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11427,
        11447
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 56,
      "value": "0x40"
    },
    "5976": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11427,
        11447
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5977": {
      "op": "SWAP1"
    },
    "5978": {
      "op": "DUP2"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11427,
        11447
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "6013": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11427,
        11447
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6016": {
      "op": "ADD"
    },
    "6017": {
      "fn": "Wizards.updateBattler",
      "offset": [
        11427,
        11447
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14F8"
    },
    "6020": {
      "op": "JUMP"
    },
    "6021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6022": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "6024": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6031": {
      "op": "SHL"
    },
    "6032": {
      "op": "SUB"
    },
    "6033": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "7"
    },
    "6034": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6035": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "7"
    },
    "6036": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17AF"
    },
    "6039": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6040": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6042": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6043": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6049": {
      "op": "SHL"
    },
    "6050": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6051": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6052": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6054": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "7"
    },
    "6055": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x910"
    },
    "6058": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6059": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D5C"
    },
    "6062": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6063": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6070": {
      "op": "SHL"
    },
    "6071": {
      "op": "SUB"
    },
    "6072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 57
    },
    "6073": {
      "branch": 141,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "7"
    },
    "6074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1814"
    },
    "6077": {
      "branch": 141,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6080": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6092": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "6094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "7"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6101": {
      "op": "DUP3"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "ADD"
    },
    "6141": {
      "op": "MSTORE"
    },
    "6142": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6151": {
      "op": "SHL"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6154": {
      "op": "DUP3"
    },
    "6155": {
      "op": "ADD"
    },
    "6156": {
      "op": "MSTORE"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x910"
    },
    "6163": {
      "op": "JUMP"
    },
    "6164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 58,
      "value": "0xE4E"
    },
    "6168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CA0"
    },
    "6172": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6173": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6174": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6182": {
      "op": "SHL"
    },
    "6183": {
      "op": "SUB"
    },
    "6184": {
      "op": "NOT"
    },
    "6185": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 59
    },
    "6186": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "5"
    },
    "6187": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6194": {
      "op": "SHL"
    },
    "6195": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "5"
    },
    "6196": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6197": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184E"
    },
    "6200": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6201": {
      "op": "POP"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6208": {
      "op": "SHL"
    },
    "6209": {
      "op": "SUB"
    },
    "6210": {
      "op": "NOT"
    },
    "6211": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "5"
    },
    "6213": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6220": {
      "op": "SHL"
    },
    "6221": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "5"
    },
    "6222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6223": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6224": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F0"
    },
    "6227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6236": {
      "op": "SHL"
    },
    "6237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6243": {
      "op": "SHL"
    },
    "6244": {
      "op": "SUB"
    },
    "6245": {
      "op": "NOT"
    },
    "6246": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 60
    },
    "6247": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "6248": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "4"
    },
    "6249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F0"
    },
    "6252": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6253": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6254": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "6256": {
      "fn": "Strings.toString",
      "offset": [
        563,
        568
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6257": {
      "fn": "Strings.toString",
      "offset": [
        572,
        573
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6259": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "SUB",
      "path": "19"
    },
    "6260": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1894"
    },
    "6263": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "op": "POP"
    },
    "6266": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 61,
      "value": "0x40"
    },
    "6268": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6269": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6270": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6271": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6272": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "19"
    },
    "6273": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6274": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6275": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6276": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6278": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6279": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "6284": {
      "op": "SHL"
    },
    "6285": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6287": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6288": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "19"
    },
    "6289": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6290": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6291": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6292": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6293": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6294": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6296": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6297": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6298": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6299": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18BE"
    },
    "6302": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6303": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 62
    },
    "6304": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18A8"
    },
    "6307": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6308": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D91"
    },
    "6311": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6312": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6313": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6314": {
      "op": "POP"
    },
    "6315": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 63,
      "value": "0x18B7"
    },
    "6318": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6319": {
      "op": "POP"
    },
    "6320": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6322": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6323": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CC2"
    },
    "6326": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6327": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6328": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6329": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "19"
    },
    "6330": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1898"
    },
    "6333": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6334": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6335": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6337": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6338": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6347": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6348": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "19"
    },
    "6349": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6350": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18D9"
    },
    "6353": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6354": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18D9"
    },
    "6357": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22A8"
    },
    "6360": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6361": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6362": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6364": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6365": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6366": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6367": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6368": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6369": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6370": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6372": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "6373": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "6375": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "19"
    },
    "6376": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "19"
    },
    "6377": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6379": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "6380": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6381": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "6382": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "6384": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "6385": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6386": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6387": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1903"
    },
    "6390": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6391": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6393": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "19"
    },
    "6394": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "6395": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6396": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "19"
    },
    "6397": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "6398": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6399": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "6400": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "19"
    },
    "6401": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6402": {
      "op": "POP"
    },
    "6403": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6404": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "19"
    },
    "6405": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6406": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "19"
    },
    "6407": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6408": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "19"
    },
    "6409": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "6410": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x196E"
    },
    "6413": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6414": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 64,
      "value": "0x1918"
    },
    "6417": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "6419": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6420": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DAA"
    },
    "6423": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6424": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6425": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "6426": {
      "op": "POP"
    },
    "6427": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 65,
      "value": "0x1925"
    },
    "6430": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6432": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6433": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2C80"
    },
    "6436": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6437": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6438": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1930"
    },
    "6441": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6442": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x30"
    },
    "6444": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CAA"
    },
    "6447": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6448": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6449": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xF8"
    },
    "6451": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "19"
    },
    "6452": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6453": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "19"
    },
    "6454": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6455": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "6456": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6457": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "19"
    },
    "6458": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1945"
    },
    "6461": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "6462": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1945"
    },
    "6465": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2D46"
    },
    "6468": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6469": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6470": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "6472": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "19"
    },
    "6473": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "19"
    },
    "6474": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6481": {
      "op": "SHL"
    },
    "6482": {
      "op": "SUB"
    },
    "6483": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "19"
    },
    "6484": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "19"
    },
    "6485": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6486": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "19"
    },
    "6487": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "6489": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "19"
    },
    "6490": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6491": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "19"
    },
    "6492": {
      "op": "POP"
    },
    "6493": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 66,
      "value": "0x1967"
    },
    "6496": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "6498": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "19"
    },
    "6499": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CC2"
    },
    "6502": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6503": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6504": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "6505": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "19"
    },
    "6506": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1907"
    },
    "6509": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6510": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "6511": {
      "fn": "Strings.toString",
      "offset": [
        994,
        1000
      ],
      "op": "SWAP5",
      "path": "19",
      "statement": 67
    },
    "6512": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "6513": {
      "op": "POP"
    },
    "6514": {
      "op": "POP"
    },
    "6515": {
      "op": "POP"
    },
    "6516": {
      "op": "POP"
    },
    "6517": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6518": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6519": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 68,
      "value": "0x0"
    },
    "6521": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6522": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6523": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6524": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6526": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6528": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6529": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6531": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6532": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6533": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6534": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6541": {
      "op": "SHL"
    },
    "6542": {
      "op": "SUB"
    },
    "6543": {
      "op": "NOT"
    },
    "6544": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "5"
    },
    "6545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6551": {
      "op": "SHL"
    },
    "6552": {
      "op": "SUB"
    },
    "6553": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6554": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "5"
    },
    "6555": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6556": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6557": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "5"
    },
    "6558": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6559": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6560": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6561": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6562": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6563": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 69,
      "value": "0x19AB"
    },
    "6566": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6567": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE4"
    },
    "6570": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6571": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6578": {
      "op": "SHL"
    },
    "6579": {
      "op": "SUB"
    },
    "6580": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "5"
    },
    "6581": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6614": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6616": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6617": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6619": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6620": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6621": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6622": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "5"
    },
    "6623": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6624": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "5"
    },
    "6625": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "5"
    },
    "6626": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "5"
    },
    "6627": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6628": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6629": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 70,
      "value": "0x19FE"
    },
    "6632": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6633": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6634": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6636": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6637": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6638": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6640": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "5"
    },
    "6641": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6643": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6644": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6645": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6647": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6648": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6649": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "5"
    },
    "6650": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D25"
    },
    "6653": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6654": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6655": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "5"
    },
    "6656": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "5"
    },
    "6657": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6658": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6659": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6661": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6662": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6663": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6664": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6666": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6668": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6669": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6671": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6672": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6673": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6680": {
      "op": "SHL"
    },
    "6681": {
      "op": "SUB"
    },
    "6682": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "6683": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 71,
      "value": "0x1A7B"
    },
    "6686": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6687": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6689": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6698": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6701": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6703": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6704": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "5"
    },
    "6705": {
      "op": "MSTORE"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6710": {
      "op": "DUP3"
    },
    "6711": {
      "op": "ADD"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "6746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6748": {
      "op": "DUP3"
    },
    "6749": {
      "op": "ADD"
    },
    "6750": {
      "op": "MSTORE"
    },
    "6751": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "6764": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "6766": {
      "op": "SHL"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6769": {
      "op": "DUP3"
    },
    "6770": {
      "op": "ADD"
    },
    "6771": {
      "op": "MSTORE"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6774": {
      "op": "ADD"
    },
    "6775": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "6778": {
      "op": "JUMP"
    },
    "6779": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6780": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6782": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A86"
    },
    "6785": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6786": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE4"
    },
    "6789": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6790": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6791": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6792": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "5"
    },
    "6793": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 72
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6800": {
      "op": "SHL"
    },
    "6801": {
      "op": "SUB"
    },
    "6802": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "5"
    },
    "6803": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6810": {
      "op": "SHL"
    },
    "6811": {
      "op": "SUB"
    },
    "6812": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "5"
    },
    "6813": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "5"
    },
    "6814": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6815": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AC1"
    },
    "6818": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6819": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "5"
    },
    "6820": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6827": {
      "op": "SHL"
    },
    "6828": {
      "op": "SUB"
    },
    "6829": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "5"
    },
    "6830": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AB6"
    },
    "6833": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6834": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89B"
    },
    "6837": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6838": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6845": {
      "op": "SHL"
    },
    "6846": {
      "op": "SUB"
    },
    "6847": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "5"
    },
    "6848": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "5"
    },
    "6849": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6850": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6851": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196E"
    },
    "6854": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6855": {
      "op": "POP"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6862": {
      "op": "SHL"
    },
    "6863": {
      "op": "SUB"
    },
    "6864": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6865": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6866": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "6867": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6869": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6871": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6872": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6874": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6876": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6877": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6878": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6879": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6881": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6882": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6883": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6884": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6885": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "5"
    },
    "6886": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "6887": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6888": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6889": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6890": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6891": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6892": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6893": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6894": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6896": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "5"
    },
    "6897": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196E"
    },
    "6900": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6901": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6902": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 73
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6909": {
      "op": "SHL"
    },
    "6910": {
      "op": "SUB"
    },
    "6911": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "5"
    },
    "6912": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B08"
    },
    "6915": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6916": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEE4"
    },
    "6919": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6920": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "op": "SUB"
    },
    "6929": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "5"
    },
    "6930": {
      "branch": 128,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "5"
    },
    "6931": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B70"
    },
    "6934": {
      "branch": 128,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6935": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6937": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6944": {
      "op": "SHL"
    },
    "6945": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6946": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6949": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6951": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6952": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "5"
    },
    "6953": {
      "op": "MSTORE"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6958": {
      "op": "DUP3"
    },
    "6959": {
      "op": "ADD"
    },
    "6960": {
      "op": "MSTORE"
    },
    "6961": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6996": {
      "op": "DUP3"
    },
    "6997": {
      "op": "ADD"
    },
    "6998": {
      "op": "MSTORE"
    },
    "6999": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7014": {
      "op": "DUP3"
    },
    "7015": {
      "op": "ADD"
    },
    "7016": {
      "op": "MSTORE"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7019": {
      "op": "ADD"
    },
    "7020": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "7023": {
      "op": "JUMP"
    },
    "7024": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7031": {
      "op": "SHL"
    },
    "7032": {
      "op": "SUB"
    },
    "7033": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 74
    },
    "7034": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "5"
    },
    "7035": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BD2"
    },
    "7038": {
      "branch": 129,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7039": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7041": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7048": {
      "op": "SHL"
    },
    "7049": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7050": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7053": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7055": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7056": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "5"
    },
    "7057": {
      "op": "MSTORE"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7060": {
      "op": "DUP1"
    },
    "7061": {
      "op": "DUP3"
    },
    "7062": {
      "op": "ADD"
    },
    "7063": {
      "op": "MSTORE"
    },
    "7064": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7099": {
      "op": "DUP3"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "MSTORE"
    },
    "7102": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7109": {
      "op": "SHL"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7112": {
      "op": "DUP3"
    },
    "7113": {
      "op": "ADD"
    },
    "7114": {
      "op": "MSTORE"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "7121": {
      "op": "JUMP"
    },
    "7122": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7123": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 75,
      "value": "0x1BDD"
    },
    "7126": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7127": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7128": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7129": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D58"
    },
    "7132": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7133": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7134": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 76,
      "value": "0x1BE8"
    },
    "7137": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7139": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7140": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1976"
    },
    "7143": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7144": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7151": {
      "op": "SHL"
    },
    "7152": {
      "op": "SUB"
    },
    "7153": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 77
    },
    "7154": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "5"
    },
    "7155": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7157": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7158": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7159": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7160": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7162": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7164": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7165": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7167": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7168": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7169": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7170": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7171": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7173": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7174": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7175": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C11"
    },
    "7178": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7179": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7180": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7181": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DAA"
    },
    "7184": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7185": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7186": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7187": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7188": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7189": {
      "op": "POP"
    },
    "7190": {
      "op": "POP"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7197": {
      "op": "SHL"
    },
    "7198": {
      "op": "SUB"
    },
    "7199": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 78
    },
    "7200": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "5"
    },
    "7201": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7203": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7204": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7205": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7206": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7208": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7210": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7211": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7213": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7214": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7215": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7216": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7217": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7219": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7220": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7221": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C3F"
    },
    "7224": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7225": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7226": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7227": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CAA"
    },
    "7230": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7231": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7232": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7233": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7234": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7235": {
      "op": "POP"
    },
    "7236": {
      "op": "POP"
    },
    "7237": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 79,
      "value": "0x0"
    },
    "7239": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7240": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7241": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7242": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7244": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7246": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7247": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7249": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7250": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7251": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7252": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7253": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7260": {
      "op": "SHL"
    },
    "7261": {
      "op": "SUB"
    },
    "7262": {
      "op": "NOT"
    },
    "7263": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "5"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7270": {
      "op": "SHL"
    },
    "7271": {
      "op": "SUB"
    },
    "7272": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7273": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7274": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "5"
    },
    "7275": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7276": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7277": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "5"
    },
    "7278": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7279": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7280": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7281": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 80
    },
    "7282": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7283": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7284": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7285": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7286": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7287": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "5"
    },
    "7288": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7289": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7322": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7323": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "5"
    },
    "7324": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "7325": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "7326": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "5"
    },
    "7327": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7328": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7329": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "7331": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7332": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7339": {
      "op": "SHL"
    },
    "7340": {
      "op": "SUB"
    },
    "7341": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 81
    },
    "7342": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7343": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "7"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7350": {
      "op": "SHL"
    },
    "7351": {
      "op": "SUB"
    },
    "7352": {
      "op": "NOT"
    },
    "7353": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7354": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "7"
    },
    "7355": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7356": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "7"
    },
    "7357": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7358": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7359": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7360": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 82,
      "value": "0x40"
    },
    "7362": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7363": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7364": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "7"
    },
    "7365": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7366": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7367": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7368": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7369": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7402": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7403": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7405": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7406": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "7"
    },
    "7407": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "7"
    },
    "7408": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "7"
    },
    "7409": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7410": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7411": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 83,
      "value": "0x1CFD"
    },
    "7414": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7415": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7416": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7417": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF5"
    },
    "7420": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7421": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7422": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 84,
      "value": "0x1D09"
    },
    "7425": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7426": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7427": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7428": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7429": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E10"
    },
    "7432": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7433": {
      "branch": 130,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7434": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F9"
    },
    "7437": {
      "branch": 130,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7438": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7440": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7449": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7450": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7452": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "5"
    },
    "7453": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "7456": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7457": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC1"
    },
    "7460": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7461": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7462": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 85,
      "value": "0x1D2F"
    },
    "7465": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7466": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7467": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F11"
    },
    "7470": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7471": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7472": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 86,
      "value": "0x1D3C"
    },
    "7475": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7477": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7478": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7479": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7480": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E10"
    },
    "7483": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7484": {
      "branch": 131,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7485": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA45"
    },
    "7488": {
      "branch": 131,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7489": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7491": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7498": {
      "op": "SHL"
    },
    "7499": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7500": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7501": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7503": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "5"
    },
    "7504": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "7507": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7508": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC1"
    },
    "7511": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7512": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "op": "SUB"
    },
    "7521": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7522": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "6"
    },
    "7523": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DB3"
    },
    "7526": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7527": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 87,
      "value": "0x1DAE"
    },
    "7530": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7531": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 88,
      "value": "0x8"
    },
    "7533": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7534": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7535": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7537": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7538": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7539": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7540": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "7542": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7544": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7545": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7547": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7548": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7549": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7550": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7551": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7552": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 89,
      "value": "0x1"
    },
    "7554": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7555": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "6"
    },
    "7556": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7557": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7558": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7559": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7560": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7561": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7562": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7595": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "6"
    },
    "7596": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7597": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7598": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7599": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD6"
    },
    "7602": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7603": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7604": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7611": {
      "op": "SHL"
    },
    "7612": {
      "op": "SUB"
    },
    "7613": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "6"
    },
    "7614": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7621": {
      "op": "SHL"
    },
    "7622": {
      "op": "SUB"
    },
    "7623": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "6"
    },
    "7624": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "6"
    },
    "7625": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD6"
    },
    "7628": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7629": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 90,
      "value": "0x1DD6"
    },
    "7632": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7633": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7634": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x205F"
    },
    "7637": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7638": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7645": {
      "op": "SHL"
    },
    "7646": {
      "op": "SUB"
    },
    "7647": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7648": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "6"
    },
    "7649": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DED"
    },
    "7652": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7653": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 91,
      "value": "0xA45"
    },
    "7656": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7657": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20FC"
    },
    "7660": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7661": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7662": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7669": {
      "op": "SHL"
    },
    "7670": {
      "op": "SUB"
    },
    "7671": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "6"
    },
    "7672": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7679": {
      "op": "SHL"
    },
    "7680": {
      "op": "SUB"
    },
    "7681": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "6"
    },
    "7682": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "6"
    },
    "7683": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA45"
    },
    "7686": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7687": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 92,
      "value": "0xA45"
    },
    "7690": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7691": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7692": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21AB"
    },
    "7695": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7696": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "op": "SUB"
    },
    "7707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7708": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "5"
    },
    "7709": {
      "op": "EXTCODESIZE"
    },
    "7710": {
      "op": "ISZERO"
    },
    "7711": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F06"
    },
    "7714": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7717": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7718": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7725": {
      "op": "SHL"
    },
    "7726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7734": {
      "op": "SHL"
    },
    "7735": {
      "op": "SUB"
    },
    "7736": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "5"
    },
    "7738": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7739": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "7744": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E54"
    },
    "7748": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7749": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7750": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7751": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "5"
    },
    "7752": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7753": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "5"
    },
    "7754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7755": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "5"
    },
    "7756": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7757": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7760": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E13"
    },
    "7763": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7764": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7765": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7767": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "5"
    },
    "7773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7776": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "5"
    },
    "7778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "5"
    },
    "7779": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7780": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7781": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "5"
    },
    "7783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E8F"
    },
    "7788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7789": {
      "op": "POP"
    },
    "7790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7792": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7793": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7794": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7796": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7797": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7798": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7799": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7802": {
      "op": "NOT"
    },
    "7803": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "5"
    },
    "7804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7805": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7806": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7807": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7808": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7809": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E8C"
    },
    "7812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7813": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "5"
    },
    "7815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E50"
    },
    "7819": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EEC"
    },
    "7827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7830": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EBD"
    },
    "7835": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7836": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "5"
    },
    "7841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "5"
    },
    "7844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "7846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "5"
    },
    "7849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7850": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7853": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7855": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "5"
    },
    "7864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "7865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EC2"
    },
    "7868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "5"
    },
    "7874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "5"
    },
    "7876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12663
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12674,
        12675
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7880": {
      "branch": 132,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12675
      ],
      "op": "SUB",
      "path": "5"
    },
    "7881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EE4"
    },
    "7884": {
      "branch": 132,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 93,
      "value": "0x40"
    },
    "7887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7894": {
      "op": "SHL"
    },
    "7895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "5"
    },
    "7900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "7903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2DC1"
    },
    "7907": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "5"
    },
    "7915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7921": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7923": {
      "op": "SHL"
    },
    "7924": {
      "op": "SUB"
    },
    "7925": {
      "op": "NOT"
    },
    "7926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "5",
      "statement": 94
    },
    "7927": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7932": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7934": {
      "op": "SHL"
    },
    "7935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "5"
    },
    "7936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7937": {
      "op": "POP"
    },
    "7938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196E"
    },
    "7941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7943": {
      "op": "POP"
    },
    "7944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 95,
      "value": "0x1"
    },
    "7946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "5"
    },
    "7952": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7953": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7960": {
      "op": "SHL"
    },
    "7961": {
      "op": "SUB"
    },
    "7962": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 96
    },
    "7963": {
      "branch": 133,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "5"
    },
    "7964": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F67"
    },
    "7967": {
      "branch": 133,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7968": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7970": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7977": {
      "op": "SHL"
    },
    "7978": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7979": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7982": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7984": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7985": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "5"
    },
    "7986": {
      "op": "DUP2"
    },
    "7987": {
      "op": "SWAP1"
    },
    "7988": {
      "op": "MSTORE"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7991": {
      "op": "DUP3"
    },
    "7992": {
      "op": "ADD"
    },
    "7993": {
      "op": "MSTORE"
    },
    "7994": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8029": {
      "op": "DUP3"
    },
    "8030": {
      "op": "ADD"
    },
    "8031": {
      "op": "MSTORE"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8034": {
      "op": "ADD"
    },
    "8035": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "8038": {
      "op": "JUMP"
    },
    "8039": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8040": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8042": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8043": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8044": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8045": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8047": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8049": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8050": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8052": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8053": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8054": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8061": {
      "op": "SHL"
    },
    "8062": {
      "op": "SUB"
    },
    "8063": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "5"
    },
    "8064": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8065": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 97,
      "value": "0x1FCC"
    },
    "8068": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8069": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8071": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8078": {
      "op": "SHL"
    },
    "8079": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8080": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8083": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "8085": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8086": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "5"
    },
    "8087": {
      "op": "MSTORE"
    },
    "8088": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8092": {
      "op": "DUP3"
    },
    "8093": {
      "op": "ADD"
    },
    "8094": {
      "op": "MSTORE"
    },
    "8095": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8130": {
      "op": "DUP3"
    },
    "8131": {
      "op": "ADD"
    },
    "8132": {
      "op": "MSTORE"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8135": {
      "op": "ADD"
    },
    "8136": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x910"
    },
    "8139": {
      "op": "JUMP"
    },
    "8140": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8141": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 98,
      "value": "0x1FD8"
    },
    "8144": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8146": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8147": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8148": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D58"
    },
    "8151": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8152": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8159": {
      "op": "SHL"
    },
    "8160": {
      "op": "SUB"
    },
    "8161": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 99
    },
    "8162": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "5"
    },
    "8163": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8165": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8166": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8167": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8168": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "8170": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8172": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8173": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8175": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8176": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8177": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8178": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8179": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "8181": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8182": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8183": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2001"
    },
    "8186": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8187": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "5"
    },
    "8188": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8189": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CAA"
    },
    "8192": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8193": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8194": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8195": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8196": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8197": {
      "op": "POP"
    },
    "8198": {
      "op": "POP"
    },
    "8199": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 100,
      "value": "0x0"
    },
    "8201": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8202": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8203": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8204": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "8206": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8208": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8209": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8211": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8212": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8213": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "8214": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8215": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8222": {
      "op": "SHL"
    },
    "8223": {
      "op": "SUB"
    },
    "8224": {
      "op": "NOT"
    },
    "8225": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "5"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8232": {
      "op": "SHL"
    },
    "8233": {
      "op": "SUB"
    },
    "8234": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "5"
    },
    "8235": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "5"
    },
    "8236": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8237": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8238": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "5"
    },
    "8239": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8240": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8241": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "8242": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 101
    },
    "8243": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8244": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8245": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8246": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8247": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8280": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8281": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8282": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8283": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "5"
    },
    "8284": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "5"
    },
    "8285": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "5"
    },
    "8286": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8287": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8288": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8290": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8292": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x206C"
    },
    "8295": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8296": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5B"
    },
    "8299": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8300": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8301": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2076"
    },
    "8304": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8305": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8306": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DAA"
    },
    "8309": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8310": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8311": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8313": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8314": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8315": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8316": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "8318": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8320": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8321": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8323": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8324": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8325": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8326": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8327": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8328": {
      "op": "POP"
    },
    "8329": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8330": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8331": {
      "branch": 140,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "6"
    },
    "8332": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20C9"
    },
    "8335": {
      "branch": 140,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "op": "SUB"
    },
    "8344": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8345": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "6"
    },
    "8346": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8348": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8349": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8350": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8351": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "8353": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8355": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8356": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8357": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8358": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8360": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8361": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8362": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8363": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8364": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8365": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8366": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8367": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8368": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8369": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8370": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8371": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8372": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6",
      "statement": 102
    },
    "8373": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8374": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8375": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8376": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8377": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8378": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8379": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8380": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8381": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 103
    },
    "8382": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8383": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "8385": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8386": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8387": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8388": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8389": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8390": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8391": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8392": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8393": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8394": {
      "op": "POP"
    },
    "8395": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 104,
      "value": "0x0"
    },
    "8397": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8398": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8399": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8400": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "8402": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8404": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8405": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8406": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8407": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8409": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8410": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8411": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8412": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8413": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8414": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8421": {
      "op": "SHL"
    },
    "8422": {
      "op": "SUB"
    },
    "8423": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 105
    },
    "8424": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "8425": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "6"
    },
    "8426": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8427": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8428": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "8430": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8431": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8432": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8433": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8434": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8435": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8436": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8437": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8438": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8439": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8440": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8441": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8442": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8443": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8444": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8445": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8447": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8448": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8450": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8451": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x210E"
    },
    "8454": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8455": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8457": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8458": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DAA"
    },
    "8461": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8462": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8463": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8465": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8466": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8467": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8468": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "8470": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8472": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8473": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8475": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8476": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8477": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8478": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8480": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8481": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8482": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8483": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "8484": {
      "op": "POP"
    },
    "8485": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8486": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8487": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8488": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8489": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8490": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "6"
    },
    "8491": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2136"
    },
    "8494": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8495": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2136"
    },
    "8498": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D46"
    },
    "8501": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8502": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8503": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8504": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8506": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8507": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8509": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8511": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8512": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "6"
    },
    "8513": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8514": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8515": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "6"
    },
    "8516": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 106
    },
    "8517": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "8519": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8520": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8521": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8522": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8523": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "6"
    },
    "8524": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2157"
    },
    "8527": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8528": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2157"
    },
    "8531": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D46"
    },
    "8534": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8535": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8536": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8538": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8539": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8540": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8541": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8543": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8544": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8545": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8546": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8547": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8548": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "6"
    },
    "8549": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8550": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8551": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8552": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8553": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 107
    },
    "8554": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8555": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8556": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "8558": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8559": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8560": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8561": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8563": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8564": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8565": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8566": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8567": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8568": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8569": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "6",
      "statement": 108
    },
    "8570": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8571": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8572": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8573": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8574": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8575": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 109,
      "value": "0x8"
    },
    "8577": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8578": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8579": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8580": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x218F"
    },
    "8583": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8584": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x218F"
    },
    "8587": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E6D"
    },
    "8590": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8591": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8592": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8594": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8595": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "6"
    },
    "8596": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8597": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8598": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8599": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8601": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8602": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8604": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8606": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8607": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "6"
    },
    "8608": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8610": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8611": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8612": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8613": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8614": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8615": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8616": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8617": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "6"
    },
    "8618": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8619": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8620": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8622": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B6"
    },
    "8625": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8626": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5B"
    },
    "8629": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8630": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8637": {
      "op": "SHL"
    },
    "8638": {
      "op": "SUB"
    },
    "8639": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 110
    },
    "8640": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8641": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "6"
    },
    "8642": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8644": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8645": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8646": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8647": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "8649": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8651": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8652": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8653": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8654": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8656": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8657": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8658": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8659": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8660": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8661": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8662": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8663": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8664": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8665": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8666": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8667": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8668": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8669": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8670": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "6",
      "statement": 111
    },
    "8671": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8672": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8673": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "8675": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8676": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8677": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8678": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8679": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8680": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8681": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8682": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8683": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8684": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8685": {
      "op": "POP"
    },
    "8686": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8687": {
      "op": "JUMPDEST"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8690": {
      "op": "MLOAD"
    },
    "8691": {
      "op": "DUP1"
    },
    "8692": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "8695": {
      "op": "ADD"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8698": {
      "op": "MSTORE"
    },
    "8699": {
      "op": "DUP1"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8702": {
      "op": "DUP2"
    },
    "8703": {
      "op": "MSTORE"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8706": {
      "op": "ADD"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8709": {
      "op": "DUP2"
    },
    "8710": {
      "op": "MSTORE"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8713": {
      "op": "ADD"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8716": {
      "op": "DUP2"
    },
    "8717": {
      "op": "MSTORE"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8720": {
      "op": "ADD"
    },
    "8721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8723": {
      "op": "DUP2"
    },
    "8724": {
      "op": "MSTORE"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8727": {
      "op": "ADD"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8730": {
      "op": "DUP2"
    },
    "8731": {
      "op": "MSTORE"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8734": {
      "op": "ADD"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8737": {
      "op": "DUP2"
    },
    "8738": {
      "op": "MSTORE"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8741": {
      "op": "ADD"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8744": {
      "op": "DUP2"
    },
    "8745": {
      "op": "MSTORE"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8748": {
      "op": "ADD"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8751": {
      "op": "DUP2"
    },
    "8752": {
      "op": "MSTORE"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8755": {
      "op": "ADD"
    },
    "8756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8758": {
      "op": "DUP2"
    },
    "8759": {
      "op": "MSTORE"
    },
    "8760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8762": {
      "op": "ADD"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8765": {
      "op": "DUP2"
    },
    "8766": {
      "op": "MSTORE"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8769": {
      "op": "ADD"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8772": {
      "op": "DUP2"
    },
    "8773": {
      "op": "MSTORE"
    },
    "8774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8776": {
      "op": "ADD"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8779": {
      "op": "DUP2"
    },
    "8780": {
      "op": "MSTORE"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8783": {
      "op": "ADD"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8786": {
      "op": "DUP2"
    },
    "8787": {
      "op": "MSTORE"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8790": {
      "op": "ADD"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8793": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8795": {
      "op": "DUP2"
    },
    "8796": {
      "op": "GT"
    },
    "8797": {
      "op": "ISZERO"
    },
    "8798": {
      "op": "PUSH2",
      "value": "0x2269"
    },
    "8801": {
      "op": "JUMPI"
    },
    "8802": {
      "op": "PUSH2",
      "value": "0x2269"
    },
    "8805": {
      "op": "PUSH2",
      "value": "0x251F"
    },
    "8808": {
      "jump": "i",
      "op": "JUMP"
    },
    "8809": {
      "op": "JUMPDEST"
    },
    "8810": {
      "op": "SWAP1"
    },
    "8811": {
      "op": "MSTORE"
    },
    "8812": {
      "op": "SWAP1"
    },
    "8813": {
      "jump": "o",
      "op": "JUMP"
    },
    "8814": {
      "op": "JUMPDEST"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8821": {
      "op": "SHL"
    },
    "8822": {
      "op": "SUB"
    },
    "8823": {
      "op": "NOT"
    },
    "8824": {
      "op": "DUP2"
    },
    "8825": {
      "op": "AND"
    },
    "8826": {
      "op": "DUP2"
    },
    "8827": {
      "op": "EQ"
    },
    "8828": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "8831": {
      "op": "JUMPI"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8834": {
      "op": "DUP1"
    },
    "8835": {
      "op": "REVERT"
    },
    "8836": {
      "op": "JUMPDEST"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8841": {
      "op": "DUP3"
    },
    "8842": {
      "op": "DUP5"
    },
    "8843": {
      "op": "SUB"
    },
    "8844": {
      "op": "SLT"
    },
    "8845": {
      "op": "ISZERO"
    },
    "8846": {
      "op": "PUSH2",
      "value": "0x2296"
    },
    "8849": {
      "op": "JUMPI"
    },
    "8850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8852": {
      "op": "DUP1"
    },
    "8853": {
      "op": "REVERT"
    },
    "8854": {
      "op": "JUMPDEST"
    },
    "8855": {
      "op": "DUP2"
    },
    "8856": {
      "op": "CALLDATALOAD"
    },
    "8857": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "8860": {
      "op": "DUP2"
    },
    "8861": {
      "op": "PUSH2",
      "value": "0x226E"
    },
    "8864": {
      "jump": "i",
      "op": "JUMP"
    },
    "8865": {
      "op": "JUMPDEST"
    },
    "8866": {
      "op": "SWAP4"
    },
    "8867": {
      "op": "SWAP3"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "op": "POP"
    },
    "8870": {
      "op": "POP"
    },
    "8871": {
      "jump": "o",
      "op": "JUMP"
    },
    "8872": {
      "op": "JUMPDEST"
    },
    "8873": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8878": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8880": {
      "op": "SHL"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8883": {
      "op": "MSTORE"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8886": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8888": {
      "op": "MSTORE"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8893": {
      "op": "REVERT"
    },
    "8894": {
      "op": "JUMPDEST"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8897": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8906": {
      "op": "DUP1"
    },
    "8907": {
      "op": "DUP5"
    },
    "8908": {
      "op": "GT"
    },
    "8909": {
      "op": "ISZERO"
    },
    "8910": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "8913": {
      "op": "JUMPI"
    },
    "8914": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "8917": {
      "op": "PUSH2",
      "value": "0x22A8"
    },
    "8920": {
      "jump": "i",
      "op": "JUMP"
    },
    "8921": {
      "op": "JUMPDEST"
    },
    "8922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8924": {
      "op": "MLOAD"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8927": {
      "op": "DUP6"
    },
    "8928": {
      "op": "ADD"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8931": {
      "op": "NOT"
    },
    "8932": {
      "op": "SWAP1"
    },
    "8933": {
      "op": "DUP2"
    },
    "8934": {
      "op": "AND"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "8937": {
      "op": "ADD"
    },
    "8938": {
      "op": "AND"
    },
    "8939": {
      "op": "DUP2"
    },
    "8940": {
      "op": "ADD"
    },
    "8941": {
      "op": "SWAP1"
    },
    "8942": {
      "op": "DUP3"
    },
    "8943": {
      "op": "DUP3"
    },
    "8944": {
      "op": "GT"
    },
    "8945": {
      "op": "DUP2"
    },
    "8946": {
      "op": "DUP4"
    },
    "8947": {
      "op": "LT"
    },
    "8948": {
      "op": "OR"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x2301"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "PUSH2",
      "value": "0x2301"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x22A8"
    },
    "8960": {
      "jump": "i",
      "op": "JUMP"
    },
    "8961": {
      "op": "JUMPDEST"
    },
    "8962": {
      "op": "DUP2"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8965": {
      "op": "MSTORE"
    },
    "8966": {
      "op": "DUP1"
    },
    "8967": {
      "op": "SWAP4"
    },
    "8968": {
      "op": "POP"
    },
    "8969": {
      "op": "DUP6"
    },
    "8970": {
      "op": "DUP2"
    },
    "8971": {
      "op": "MSTORE"
    },
    "8972": {
      "op": "DUP7"
    },
    "8973": {
      "op": "DUP7"
    },
    "8974": {
      "op": "DUP7"
    },
    "8975": {
      "op": "ADD"
    },
    "8976": {
      "op": "GT"
    },
    "8977": {
      "op": "ISZERO"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x231A"
    },
    "8981": {
      "op": "JUMPI"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8984": {
      "op": "DUP1"
    },
    "8985": {
      "op": "REVERT"
    },
    "8986": {
      "op": "JUMPDEST"
    },
    "8987": {
      "op": "DUP6"
    },
    "8988": {
      "op": "DUP6"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8991": {
      "op": "DUP4"
    },
    "8992": {
      "op": "ADD"
    },
    "8993": {
      "op": "CALLDATACOPY"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8998": {
      "op": "DUP8"
    },
    "8999": {
      "op": "DUP4"
    },
    "9000": {
      "op": "ADD"
    },
    "9001": {
      "op": "ADD"
    },
    "9002": {
      "op": "MSTORE"
    },
    "9003": {
      "op": "POP"
    },
    "9004": {
      "op": "POP"
    },
    "9005": {
      "op": "POP"
    },
    "9006": {
      "op": "SWAP4"
    },
    "9007": {
      "op": "SWAP3"
    },
    "9008": {
      "op": "POP"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "jump": "o",
      "op": "JUMP"
    },
    "9012": {
      "op": "JUMPDEST"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9015": {
      "op": "DUP1"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9018": {
      "op": "DUP4"
    },
    "9019": {
      "op": "DUP6"
    },
    "9020": {
      "op": "SUB"
    },
    "9021": {
      "op": "SLT"
    },
    "9022": {
      "op": "ISZERO"
    },
    "9023": {
      "op": "PUSH2",
      "value": "0x2347"
    },
    "9026": {
      "op": "JUMPI"
    },
    "9027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9029": {
      "op": "DUP1"
    },
    "9030": {
      "op": "REVERT"
    },
    "9031": {
      "op": "JUMPDEST"
    },
    "9032": {
      "op": "DUP3"
    },
    "9033": {
      "op": "CALLDATALOAD"
    },
    "9034": {
      "op": "SWAP2"
    },
    "9035": {
      "op": "POP"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9038": {
      "op": "DUP4"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "op": "CALLDATALOAD"
    },
    "9041": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9050": {
      "op": "DUP2"
    },
    "9051": {
      "op": "GT"
    },
    "9052": {
      "op": "ISZERO"
    },
    "9053": {
      "op": "PUSH2",
      "value": "0x2365"
    },
    "9056": {
      "op": "JUMPI"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9059": {
      "op": "DUP1"
    },
    "9060": {
      "op": "REVERT"
    },
    "9061": {
      "op": "JUMPDEST"
    },
    "9062": {
      "op": "DUP4"
    },
    "9063": {
      "op": "ADD"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9066": {
      "op": "DUP2"
    },
    "9067": {
      "op": "ADD"
    },
    "9068": {
      "op": "DUP6"
    },
    "9069": {
      "op": "SGT"
    },
    "9070": {
      "op": "PUSH2",
      "value": "0x2376"
    },
    "9073": {
      "op": "JUMPI"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9076": {
      "op": "DUP1"
    },
    "9077": {
      "op": "REVERT"
    },
    "9078": {
      "op": "JUMPDEST"
    },
    "9079": {
      "op": "PUSH2",
      "value": "0x2385"
    },
    "9082": {
      "op": "DUP6"
    },
    "9083": {
      "op": "DUP3"
    },
    "9084": {
      "op": "CALLDATALOAD"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9087": {
      "op": "DUP5"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "PUSH2",
      "value": "0x22BE"
    },
    "9092": {
      "jump": "i",
      "op": "JUMP"
    },
    "9093": {
      "op": "JUMPDEST"
    },
    "9094": {
      "op": "SWAP2"
    },
    "9095": {
      "op": "POP"
    },
    "9096": {
      "op": "POP"
    },
    "9097": {
      "op": "SWAP3"
    },
    "9098": {
      "op": "POP"
    },
    "9099": {
      "op": "SWAP3"
    },
    "9100": {
      "op": "SWAP1"
    },
    "9101": {
      "op": "POP"
    },
    "9102": {
      "jump": "o",
      "op": "JUMP"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9106": {
      "op": "JUMPDEST"
    },
    "9107": {
      "op": "DUP4"
    },
    "9108": {
      "op": "DUP2"
    },
    "9109": {
      "op": "LT"
    },
    "9110": {
      "op": "ISZERO"
    },
    "9111": {
      "op": "PUSH2",
      "value": "0x23AA"
    },
    "9114": {
      "op": "JUMPI"
    },
    "9115": {
      "op": "DUP2"
    },
    "9116": {
      "op": "DUP2"
    },
    "9117": {
      "op": "ADD"
    },
    "9118": {
      "op": "MLOAD"
    },
    "9119": {
      "op": "DUP4"
    },
    "9120": {
      "op": "DUP3"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "MSTORE"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9125": {
      "op": "ADD"
    },
    "9126": {
      "op": "PUSH2",
      "value": "0x2392"
    },
    "9129": {
      "op": "JUMP"
    },
    "9130": {
      "op": "JUMPDEST"
    },
    "9131": {
      "op": "DUP4"
    },
    "9132": {
      "op": "DUP2"
    },
    "9133": {
      "op": "GT"
    },
    "9134": {
      "op": "ISZERO"
    },
    "9135": {
      "op": "PUSH2",
      "value": "0x15F9"
    },
    "9138": {
      "op": "JUMPI"
    },
    "9139": {
      "op": "POP"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9143": {
      "op": "SWAP2"
    },
    "9144": {
      "op": "ADD"
    },
    "9145": {
      "op": "MSTORE"
    },
    "9146": {
      "jump": "o",
      "op": "JUMP"
    },
    "9147": {
      "op": "JUMPDEST"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9150": {
      "op": "DUP2"
    },
    "9151": {
      "op": "MLOAD"
    },
    "9152": {
      "op": "DUP1"
    },
    "9153": {
      "op": "DUP5"
    },
    "9154": {
      "op": "MSTORE"
    },
    "9155": {
      "op": "PUSH2",
      "value": "0x23D3"
    },
    "9158": {
      "op": "DUP2"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9161": {
      "op": "DUP7"
    },
    "9162": {
      "op": "ADD"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9165": {
      "op": "DUP7"
    },
    "9166": {
      "op": "ADD"
    },
    "9167": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "9170": {
      "jump": "i",
      "op": "JUMP"
    },
    "9171": {
      "op": "JUMPDEST"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9174": {
      "op": "ADD"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9177": {
      "op": "NOT"
    },
    "9178": {
      "op": "AND"
    },
    "9179": {
      "op": "SWAP3"
    },
    "9180": {
      "op": "SWAP1"
    },
    "9181": {
      "op": "SWAP3"
    },
    "9182": {
      "op": "ADD"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9185": {
      "op": "ADD"
    },
    "9186": {
      "op": "SWAP3"
    },
    "9187": {
      "op": "SWAP2"
    },
    "9188": {
      "op": "POP"
    },
    "9189": {
      "op": "POP"
    },
    "9190": {
      "jump": "o",
      "op": "JUMP"
    },
    "9191": {
      "op": "JUMPDEST"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9194": {
      "op": "DUP2"
    },
    "9195": {
      "op": "MSTORE"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9198": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9203": {
      "op": "DUP4"
    },
    "9204": {
      "op": "ADD"
    },
    "9205": {
      "op": "DUP5"
    },
    "9206": {
      "op": "PUSH2",
      "value": "0x23BB"
    },
    "9209": {
      "jump": "i",
      "op": "JUMP"
    },
    "9210": {
      "op": "JUMPDEST"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9215": {
      "op": "DUP3"
    },
    "9216": {
      "op": "DUP5"
    },
    "9217": {
      "op": "SUB"
    },
    "9218": {
      "op": "SLT"
    },
    "9219": {
      "op": "ISZERO"
    },
    "9220": {
      "op": "PUSH2",
      "value": "0x240C"
    },
    "9223": {
      "op": "JUMPI"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9226": {
      "op": "DUP1"
    },
    "9227": {
      "op": "REVERT"
    },
    "9228": {
      "op": "JUMPDEST"
    },
    "9229": {
      "op": "POP"
    },
    "9230": {
      "op": "CALLDATALOAD"
    },
    "9231": {
      "op": "SWAP2"
    },
    "9232": {
      "op": "SWAP1"
    },
    "9233": {
      "op": "POP"
    },
    "9234": {
      "jump": "o",
      "op": "JUMP"
    },
    "9235": {
      "op": "JUMPDEST"
    },
    "9236": {
      "op": "DUP1"
    },
    "9237": {
      "op": "CALLDATALOAD"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9244": {
      "op": "SHL"
    },
    "9245": {
      "op": "SUB"
    },
    "9246": {
      "op": "DUP2"
    },
    "9247": {
      "op": "AND"
    },
    "9248": {
      "op": "DUP2"
    },
    "9249": {
      "op": "EQ"
    },
    "9250": {
      "op": "PUSH2",
      "value": "0x242A"
    },
    "9253": {
      "op": "JUMPI"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9256": {
      "op": "DUP1"
    },
    "9257": {
      "op": "REVERT"
    },
    "9258": {
      "op": "JUMPDEST"
    },
    "9259": {
      "op": "SWAP2"
    },
    "9260": {
      "op": "SWAP1"
    },
    "9261": {
      "op": "POP"
    },
    "9262": {
      "jump": "o",
      "op": "JUMP"
    },
    "9263": {
      "op": "JUMPDEST"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9266": {
      "op": "DUP1"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9269": {
      "op": "DUP4"
    },
    "9270": {
      "op": "DUP6"
    },
    "9271": {
      "op": "SUB"
    },
    "9272": {
      "op": "SLT"
    },
    "9273": {
      "op": "ISZERO"
    },
    "9274": {
      "op": "PUSH2",
      "value": "0x2442"
    },
    "9277": {
      "op": "JUMPI"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9280": {
      "op": "DUP1"
    },
    "9281": {
      "op": "REVERT"
    },
    "9282": {
      "op": "JUMPDEST"
    },
    "9283": {
      "op": "PUSH2",
      "value": "0x244B"
    },
    "9286": {
      "op": "DUP4"
    },
    "9287": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9290": {
      "jump": "i",
      "op": "JUMP"
    },
    "9291": {
      "op": "JUMPDEST"
    },
    "9292": {
      "op": "SWAP5"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9295": {
      "op": "SWAP4"
    },
    "9296": {
      "op": "SWAP1"
    },
    "9297": {
      "op": "SWAP4"
    },
    "9298": {
      "op": "ADD"
    },
    "9299": {
      "op": "CALLDATALOAD"
    },
    "9300": {
      "op": "SWAP4"
    },
    "9301": {
      "op": "POP"
    },
    "9302": {
      "op": "POP"
    },
    "9303": {
      "op": "POP"
    },
    "9304": {
      "jump": "o",
      "op": "JUMP"
    },
    "9305": {
      "op": "JUMPDEST"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9308": {
      "op": "DUP1"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9313": {
      "op": "DUP5"
    },
    "9314": {
      "op": "DUP7"
    },
    "9315": {
      "op": "SUB"
    },
    "9316": {
      "op": "SLT"
    },
    "9317": {
      "op": "ISZERO"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x246E"
    },
    "9321": {
      "op": "JUMPI"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9324": {
      "op": "DUP1"
    },
    "9325": {
      "op": "REVERT"
    },
    "9326": {
      "op": "JUMPDEST"
    },
    "9327": {
      "op": "PUSH2",
      "value": "0x2477"
    },
    "9330": {
      "op": "DUP5"
    },
    "9331": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9334": {
      "jump": "i",
      "op": "JUMP"
    },
    "9335": {
      "op": "JUMPDEST"
    },
    "9336": {
      "op": "SWAP3"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "op": "PUSH2",
      "value": "0x2485"
    },
    "9341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9343": {
      "op": "DUP6"
    },
    "9344": {
      "op": "ADD"
    },
    "9345": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9348": {
      "jump": "i",
      "op": "JUMP"
    },
    "9349": {
      "op": "JUMPDEST"
    },
    "9350": {
      "op": "SWAP2"
    },
    "9351": {
      "op": "POP"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9354": {
      "op": "DUP5"
    },
    "9355": {
      "op": "ADD"
    },
    "9356": {
      "op": "CALLDATALOAD"
    },
    "9357": {
      "op": "SWAP1"
    },
    "9358": {
      "op": "POP"
    },
    "9359": {
      "op": "SWAP3"
    },
    "9360": {
      "op": "POP"
    },
    "9361": {
      "op": "SWAP3"
    },
    "9362": {
      "op": "POP"
    },
    "9363": {
      "op": "SWAP3"
    },
    "9364": {
      "jump": "o",
      "op": "JUMP"
    },
    "9365": {
      "op": "JUMPDEST"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9370": {
      "op": "DUP3"
    },
    "9371": {
      "op": "DUP5"
    },
    "9372": {
      "op": "SUB"
    },
    "9373": {
      "op": "SLT"
    },
    "9374": {
      "op": "ISZERO"
    },
    "9375": {
      "op": "PUSH2",
      "value": "0x24A7"
    },
    "9378": {
      "op": "JUMPI"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9381": {
      "op": "DUP1"
    },
    "9382": {
      "op": "REVERT"
    },
    "9383": {
      "op": "JUMPDEST"
    },
    "9384": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "9387": {
      "op": "DUP3"
    },
    "9388": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9391": {
      "jump": "i",
      "op": "JUMP"
    },
    "9392": {
      "op": "JUMPDEST"
    },
    "9393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9395": {
      "op": "DUP1"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9398": {
      "op": "DUP1"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9403": {
      "op": "DUP7"
    },
    "9404": {
      "op": "DUP9"
    },
    "9405": {
      "op": "SUB"
    },
    "9406": {
      "op": "SLT"
    },
    "9407": {
      "op": "ISZERO"
    },
    "9408": {
      "op": "PUSH2",
      "value": "0x24C8"
    },
    "9411": {
      "op": "JUMPI"
    },
    "9412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9414": {
      "op": "DUP1"
    },
    "9415": {
      "op": "REVERT"
    },
    "9416": {
      "op": "JUMPDEST"
    },
    "9417": {
      "op": "DUP6"
    },
    "9418": {
      "op": "CALLDATALOAD"
    },
    "9419": {
      "op": "SWAP5"
    },
    "9420": {
      "op": "POP"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9423": {
      "op": "DUP7"
    },
    "9424": {
      "op": "ADD"
    },
    "9425": {
      "op": "CALLDATALOAD"
    },
    "9426": {
      "op": "SWAP4"
    },
    "9427": {
      "op": "POP"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9430": {
      "op": "DUP7"
    },
    "9431": {
      "op": "ADD"
    },
    "9432": {
      "op": "CALLDATALOAD"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9435": {
      "op": "DUP2"
    },
    "9436": {
      "op": "LT"
    },
    "9437": {
      "op": "PUSH2",
      "value": "0x24E5"
    },
    "9440": {
      "op": "JUMPI"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9443": {
      "op": "DUP1"
    },
    "9444": {
      "op": "REVERT"
    },
    "9445": {
      "op": "JUMPDEST"
    },
    "9446": {
      "op": "SWAP5"
    },
    "9447": {
      "op": "SWAP8"
    },
    "9448": {
      "op": "SWAP4"
    },
    "9449": {
      "op": "SWAP7"
    },
    "9450": {
      "op": "POP"
    },
    "9451": {
      "op": "SWAP4"
    },
    "9452": {
      "op": "SWAP5"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9455": {
      "op": "DUP2"
    },
    "9456": {
      "op": "ADD"
    },
    "9457": {
      "op": "CALLDATALOAD"
    },
    "9458": {
      "op": "SWAP5"
    },
    "9459": {
      "op": "POP"
    },
    "9460": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9462": {
      "op": "ADD"
    },
    "9463": {
      "op": "CALLDATALOAD"
    },
    "9464": {
      "op": "SWAP3"
    },
    "9465": {
      "op": "SWAP2"
    },
    "9466": {
      "op": "POP"
    },
    "9467": {
      "op": "POP"
    },
    "9468": {
      "jump": "o",
      "op": "JUMP"
    },
    "9469": {
      "op": "JUMPDEST"
    },
    "9470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9472": {
      "op": "DUP1"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9475": {
      "op": "DUP4"
    },
    "9476": {
      "op": "DUP6"
    },
    "9477": {
      "op": "SUB"
    },
    "9478": {
      "op": "SLT"
    },
    "9479": {
      "op": "ISZERO"
    },
    "9480": {
      "op": "PUSH2",
      "value": "0x2510"
    },
    "9483": {
      "op": "JUMPI"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9486": {
      "op": "DUP1"
    },
    "9487": {
      "op": "REVERT"
    },
    "9488": {
      "op": "JUMPDEST"
    },
    "9489": {
      "op": "POP"
    },
    "9490": {
      "op": "POP"
    },
    "9491": {
      "op": "DUP1"
    },
    "9492": {
      "op": "CALLDATALOAD"
    },
    "9493": {
      "op": "SWAP3"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9496": {
      "op": "SWAP1"
    },
    "9497": {
      "op": "SWAP2"
    },
    "9498": {
      "op": "ADD"
    },
    "9499": {
      "op": "CALLDATALOAD"
    },
    "9500": {
      "op": "SWAP2"
    },
    "9501": {
      "op": "POP"
    },
    "9502": {
      "jump": "o",
      "op": "JUMP"
    },
    "9503": {
      "op": "JUMPDEST"
    },
    "9504": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9511": {
      "op": "SHL"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9514": {
      "op": "MSTORE"
    },
    "9515": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9519": {
      "op": "MSTORE"
    },
    "9520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9524": {
      "op": "REVERT"
    },
    "9525": {
      "op": "JUMPDEST"
    },
    "9526": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9528": {
      "op": "DUP2"
    },
    "9529": {
      "op": "LT"
    },
    "9530": {
      "op": "PUSH2",
      "value": "0x2553"
    },
    "9533": {
      "op": "JUMPI"
    },
    "9534": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9541": {
      "op": "SHL"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9549": {
      "op": "MSTORE"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "op": "REVERT"
    },
    "9555": {
      "op": "JUMPDEST"
    },
    "9556": {
      "op": "SWAP1"
    },
    "9557": {
      "op": "MSTORE"
    },
    "9558": {
      "jump": "o",
      "op": "JUMP"
    },
    "9559": {
      "op": "JUMPDEST"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9562": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "9565": {
      "op": "DUP3"
    },
    "9566": {
      "op": "ADD"
    },
    "9567": {
      "op": "SWAP1"
    },
    "9568": {
      "op": "POP"
    },
    "9569": {
      "op": "DUP3"
    },
    "9570": {
      "op": "MLOAD"
    },
    "9571": {
      "op": "DUP3"
    },
    "9572": {
      "op": "MSTORE"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9575": {
      "op": "DUP4"
    },
    "9576": {
      "op": "ADD"
    },
    "9577": {
      "op": "MLOAD"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9580": {
      "op": "DUP4"
    },
    "9581": {
      "op": "ADD"
    },
    "9582": {
      "op": "MSTORE"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9585": {
      "op": "DUP4"
    },
    "9586": {
      "op": "ADD"
    },
    "9587": {
      "op": "MLOAD"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9590": {
      "op": "DUP4"
    },
    "9591": {
      "op": "ADD"
    },
    "9592": {
      "op": "MSTORE"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9595": {
      "op": "DUP4"
    },
    "9596": {
      "op": "ADD"
    },
    "9597": {
      "op": "MLOAD"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9600": {
      "op": "DUP4"
    },
    "9601": {
      "op": "ADD"
    },
    "9602": {
      "op": "MSTORE"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9605": {
      "op": "DUP4"
    },
    "9606": {
      "op": "ADD"
    },
    "9607": {
      "op": "MLOAD"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9610": {
      "op": "DUP4"
    },
    "9611": {
      "op": "ADD"
    },
    "9612": {
      "op": "MSTORE"
    },
    "9613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9615": {
      "op": "DUP4"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "op": "MLOAD"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9620": {
      "op": "DUP4"
    },
    "9621": {
      "op": "ADD"
    },
    "9622": {
      "op": "MSTORE"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9625": {
      "op": "DUP4"
    },
    "9626": {
      "op": "ADD"
    },
    "9627": {
      "op": "MLOAD"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9630": {
      "op": "DUP4"
    },
    "9631": {
      "op": "ADD"
    },
    "9632": {
      "op": "MSTORE"
    },
    "9633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9635": {
      "op": "DUP4"
    },
    "9636": {
      "op": "ADD"
    },
    "9637": {
      "op": "MLOAD"
    },
    "9638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9640": {
      "op": "DUP4"
    },
    "9641": {
      "op": "ADD"
    },
    "9642": {
      "op": "MSTORE"
    },
    "9643": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9646": {
      "op": "DUP1"
    },
    "9647": {
      "op": "DUP5"
    },
    "9648": {
      "op": "ADD"
    },
    "9649": {
      "op": "MLOAD"
    },
    "9650": {
      "op": "DUP2"
    },
    "9651": {
      "op": "DUP5"
    },
    "9652": {
      "op": "ADD"
    },
    "9653": {
      "op": "MSTORE"
    },
    "9654": {
      "op": "POP"
    },
    "9655": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9658": {
      "op": "DUP1"
    },
    "9659": {
      "op": "DUP5"
    },
    "9660": {
      "op": "ADD"
    },
    "9661": {
      "op": "MLOAD"
    },
    "9662": {
      "op": "DUP2"
    },
    "9663": {
      "op": "DUP5"
    },
    "9664": {
      "op": "ADD"
    },
    "9665": {
      "op": "MSTORE"
    },
    "9666": {
      "op": "POP"
    },
    "9667": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9670": {
      "op": "DUP1"
    },
    "9671": {
      "op": "DUP5"
    },
    "9672": {
      "op": "ADD"
    },
    "9673": {
      "op": "MLOAD"
    },
    "9674": {
      "op": "DUP2"
    },
    "9675": {
      "op": "DUP5"
    },
    "9676": {
      "op": "ADD"
    },
    "9677": {
      "op": "MSTORE"
    },
    "9678": {
      "op": "POP"
    },
    "9679": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9682": {
      "op": "DUP1"
    },
    "9683": {
      "op": "DUP5"
    },
    "9684": {
      "op": "ADD"
    },
    "9685": {
      "op": "MLOAD"
    },
    "9686": {
      "op": "DUP2"
    },
    "9687": {
      "op": "DUP5"
    },
    "9688": {
      "op": "ADD"
    },
    "9689": {
      "op": "MSTORE"
    },
    "9690": {
      "op": "POP"
    },
    "9691": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "9694": {
      "op": "DUP1"
    },
    "9695": {
      "op": "DUP5"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "op": "MLOAD"
    },
    "9698": {
      "op": "DUP2"
    },
    "9699": {
      "op": "DUP5"
    },
    "9700": {
      "op": "ADD"
    },
    "9701": {
      "op": "MSTORE"
    },
    "9702": {
      "op": "POP"
    },
    "9703": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "9706": {
      "op": "DUP1"
    },
    "9707": {
      "op": "DUP5"
    },
    "9708": {
      "op": "ADD"
    },
    "9709": {
      "op": "MLOAD"
    },
    "9710": {
      "op": "PUSH2",
      "value": "0x25F9"
    },
    "9713": {
      "op": "DUP3"
    },
    "9714": {
      "op": "DUP6"
    },
    "9715": {
      "op": "ADD"
    },
    "9716": {
      "op": "DUP3"
    },
    "9717": {
      "op": "PUSH2",
      "value": "0x2535"
    },
    "9720": {
      "jump": "i",
      "op": "JUMP"
    },
    "9721": {
      "op": "JUMPDEST"
    },
    "9722": {
      "op": "POP"
    },
    "9723": {
      "op": "POP"
    },
    "9724": {
      "op": "SWAP3"
    },
    "9725": {
      "op": "SWAP2"
    },
    "9726": {
      "op": "POP"
    },
    "9727": {
      "op": "POP"
    },
    "9728": {
      "jump": "o",
      "op": "JUMP"
    },
    "9729": {
      "op": "JUMPDEST"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9732": {
      "op": "DUP1"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9735": {
      "op": "DUP4"
    },
    "9736": {
      "op": "DUP6"
    },
    "9737": {
      "op": "SUB"
    },
    "9738": {
      "op": "SLT"
    },
    "9739": {
      "op": "ISZERO"
    },
    "9740": {
      "op": "PUSH2",
      "value": "0x2614"
    },
    "9743": {
      "op": "JUMPI"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9746": {
      "op": "DUP1"
    },
    "9747": {
      "op": "REVERT"
    },
    "9748": {
      "op": "JUMPDEST"
    },
    "9749": {
      "op": "PUSH2",
      "value": "0x261D"
    },
    "9752": {
      "op": "DUP4"
    },
    "9753": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9756": {
      "jump": "i",
      "op": "JUMP"
    },
    "9757": {
      "op": "JUMPDEST"
    },
    "9758": {
      "op": "SWAP2"
    },
    "9759": {
      "op": "POP"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9762": {
      "op": "DUP4"
    },
    "9763": {
      "op": "ADD"
    },
    "9764": {
      "op": "CALLDATALOAD"
    },
    "9765": {
      "op": "DUP1"
    },
    "9766": {
      "op": "ISZERO"
    },
    "9767": {
      "op": "ISZERO"
    },
    "9768": {
      "op": "DUP2"
    },
    "9769": {
      "op": "EQ"
    },
    "9770": {
      "op": "PUSH2",
      "value": "0x2632"
    },
    "9773": {
      "op": "JUMPI"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9776": {
      "op": "DUP1"
    },
    "9777": {
      "op": "REVERT"
    },
    "9778": {
      "op": "JUMPDEST"
    },
    "9779": {
      "op": "DUP1"
    },
    "9780": {
      "op": "SWAP2"
    },
    "9781": {
      "op": "POP"
    },
    "9782": {
      "op": "POP"
    },
    "9783": {
      "op": "SWAP3"
    },
    "9784": {
      "op": "POP"
    },
    "9785": {
      "op": "SWAP3"
    },
    "9786": {
      "op": "SWAP1"
    },
    "9787": {
      "op": "POP"
    },
    "9788": {
      "jump": "o",
      "op": "JUMP"
    },
    "9789": {
      "op": "JUMPDEST"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9792": {
      "op": "DUP1"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9795": {
      "op": "DUP1"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9798": {
      "op": "DUP6"
    },
    "9799": {
      "op": "DUP8"
    },
    "9800": {
      "op": "SUB"
    },
    "9801": {
      "op": "SLT"
    },
    "9802": {
      "op": "ISZERO"
    },
    "9803": {
      "op": "PUSH2",
      "value": "0x2653"
    },
    "9806": {
      "op": "JUMPI"
    },
    "9807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9809": {
      "op": "DUP1"
    },
    "9810": {
      "op": "REVERT"
    },
    "9811": {
      "op": "JUMPDEST"
    },
    "9812": {
      "op": "PUSH2",
      "value": "0x265C"
    },
    "9815": {
      "op": "DUP6"
    },
    "9816": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9819": {
      "jump": "i",
      "op": "JUMP"
    },
    "9820": {
      "op": "JUMPDEST"
    },
    "9821": {
      "op": "SWAP4"
    },
    "9822": {
      "op": "POP"
    },
    "9823": {
      "op": "PUSH2",
      "value": "0x266A"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9828": {
      "op": "DUP7"
    },
    "9829": {
      "op": "ADD"
    },
    "9830": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "9833": {
      "jump": "i",
      "op": "JUMP"
    },
    "9834": {
      "op": "JUMPDEST"
    },
    "9835": {
      "op": "SWAP3"
    },
    "9836": {
      "op": "POP"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9839": {
      "op": "DUP6"
    },
    "9840": {
      "op": "ADD"
    },
    "9841": {
      "op": "CALLDATALOAD"
    },
    "9842": {
      "op": "SWAP2"
    },
    "9843": {
      "op": "POP"
    },
    "9844": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9846": {
      "op": "DUP6"
    },
    "9847": {
      "op": "ADD"
    },
    "9848": {
      "op": "CALLDATALOAD"
    },
    "9849": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9858": {
      "op": "DUP2"
    },
    "9859": {
      "op": "GT"
    },
    "9860": {
      "op": "ISZERO"
    },
    "9861": {
      "op": "PUSH2",
      "value": "0x268D"
    },
    "9864": {
      "op": "JUMPI"
    },
    "9865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9867": {
      "op": "DUP1"
    },
    "9868": {
      "op": "REVERT"
    },
    "9869": {
      "op": "JUMPDEST"
    },
    "9870": {
      "op": "DUP6"
    },
    "9871": {
      "op": "ADD"
    },
    "9872": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9874": {
      "op": "DUP2"
    },
    "9875": {
      "op": "ADD"
    },
    "9876": {
      "op": "DUP8"
    },
    "9877": {
      "op": "SGT"
    },
    "9878": {
      "op": "PUSH2",
      "value": "0x269E"
    },
    "9881": {
      "op": "JUMPI"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9884": {
      "op": "DUP1"
    },
    "9885": {
      "op": "REVERT"
    },
    "9886": {
      "op": "JUMPDEST"
    },
    "9887": {
      "op": "PUSH2",
      "value": "0x26AD"
    },
    "9890": {
      "op": "DUP8"
    },
    "9891": {
      "op": "DUP3"
    },
    "9892": {
      "op": "CALLDATALOAD"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9895": {
      "op": "DUP5"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "PUSH2",
      "value": "0x22BE"
    },
    "9900": {
      "jump": "i",
      "op": "JUMP"
    },
    "9901": {
      "op": "JUMPDEST"
    },
    "9902": {
      "op": "SWAP2"
    },
    "9903": {
      "op": "POP"
    },
    "9904": {
      "op": "POP"
    },
    "9905": {
      "op": "SWAP3"
    },
    "9906": {
      "op": "SWAP6"
    },
    "9907": {
      "op": "SWAP2"
    },
    "9908": {
      "op": "SWAP5"
    },
    "9909": {
      "op": "POP"
    },
    "9910": {
      "op": "SWAP3"
    },
    "9911": {
      "op": "POP"
    },
    "9912": {
      "jump": "o",
      "op": "JUMP"
    },
    "9913": {
      "op": "JUMPDEST"
    },
    "9914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9916": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "9919": {
      "op": "DUP3"
    },
    "9920": {
      "op": "ADD"
    },
    "9921": {
      "op": "SWAP1"
    },
    "9922": {
      "op": "POP"
    },
    "9923": {
      "op": "DUP16"
    },
    "9924": {
      "op": "DUP3"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "DUP15"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9929": {
      "op": "DUP4"
    },
    "9930": {
      "op": "ADD"
    },
    "9931": {
      "op": "MSTORE"
    },
    "9932": {
      "op": "DUP14"
    },
    "9933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9935": {
      "op": "DUP4"
    },
    "9936": {
      "op": "ADD"
    },
    "9937": {
      "op": "MSTORE"
    },
    "9938": {
      "op": "DUP13"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9941": {
      "op": "DUP4"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "MSTORE"
    },
    "9944": {
      "op": "DUP12"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9947": {
      "op": "DUP4"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "op": "MSTORE"
    },
    "9950": {
      "op": "DUP11"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9953": {
      "op": "DUP4"
    },
    "9954": {
      "op": "ADD"
    },
    "9955": {
      "op": "MSTORE"
    },
    "9956": {
      "op": "DUP10"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9959": {
      "op": "DUP4"
    },
    "9960": {
      "op": "ADD"
    },
    "9961": {
      "op": "MSTORE"
    },
    "9962": {
      "op": "DUP9"
    },
    "9963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9965": {
      "op": "DUP4"
    },
    "9966": {
      "op": "ADD"
    },
    "9967": {
      "op": "MSTORE"
    },
    "9968": {
      "op": "DUP8"
    },
    "9969": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "9972": {
      "op": "DUP4"
    },
    "9973": {
      "op": "ADD"
    },
    "9974": {
      "op": "MSTORE"
    },
    "9975": {
      "op": "DUP7"
    },
    "9976": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "9979": {
      "op": "DUP4"
    },
    "9980": {
      "op": "ADD"
    },
    "9981": {
      "op": "MSTORE"
    },
    "9982": {
      "op": "DUP6"
    },
    "9983": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "9986": {
      "op": "DUP4"
    },
    "9987": {
      "op": "ADD"
    },
    "9988": {
      "op": "MSTORE"
    },
    "9989": {
      "op": "DUP5"
    },
    "9990": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "9993": {
      "op": "DUP4"
    },
    "9994": {
      "op": "ADD"
    },
    "9995": {
      "op": "MSTORE"
    },
    "9996": {
      "op": "DUP4"
    },
    "9997": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10000": {
      "op": "DUP4"
    },
    "10001": {
      "op": "ADD"
    },
    "10002": {
      "op": "MSTORE"
    },
    "10003": {
      "op": "PUSH2",
      "value": "0x2720"
    },
    "10006": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "10009": {
      "op": "DUP4"
    },
    "10010": {
      "op": "ADD"
    },
    "10011": {
      "op": "DUP5"
    },
    "10012": {
      "op": "PUSH2",
      "value": "0x2535"
    },
    "10015": {
      "jump": "i",
      "op": "JUMP"
    },
    "10016": {
      "op": "JUMPDEST"
    },
    "10017": {
      "op": "SWAP16"
    },
    "10018": {
      "op": "SWAP15"
    },
    "10019": {
      "op": "POP"
    },
    "10020": {
      "op": "POP"
    },
    "10021": {
      "op": "POP"
    },
    "10022": {
      "op": "POP"
    },
    "10023": {
      "op": "POP"
    },
    "10024": {
      "op": "POP"
    },
    "10025": {
      "op": "POP"
    },
    "10026": {
      "op": "POP"
    },
    "10027": {
      "op": "POP"
    },
    "10028": {
      "op": "POP"
    },
    "10029": {
      "op": "POP"
    },
    "10030": {
      "op": "POP"
    },
    "10031": {
      "op": "POP"
    },
    "10032": {
      "op": "POP"
    },
    "10033": {
      "op": "POP"
    },
    "10034": {
      "jump": "o",
      "op": "JUMP"
    },
    "10035": {
      "op": "JUMPDEST"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10038": {
      "op": "DUP1"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10041": {
      "op": "DUP4"
    },
    "10042": {
      "op": "DUP6"
    },
    "10043": {
      "op": "SUB"
    },
    "10044": {
      "op": "SLT"
    },
    "10045": {
      "op": "ISZERO"
    },
    "10046": {
      "op": "PUSH2",
      "value": "0x2746"
    },
    "10049": {
      "op": "JUMPI"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10052": {
      "op": "DUP1"
    },
    "10053": {
      "op": "REVERT"
    },
    "10054": {
      "op": "JUMPDEST"
    },
    "10055": {
      "op": "PUSH2",
      "value": "0x274F"
    },
    "10058": {
      "op": "DUP4"
    },
    "10059": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "10062": {
      "jump": "i",
      "op": "JUMP"
    },
    "10063": {
      "op": "JUMPDEST"
    },
    "10064": {
      "op": "SWAP2"
    },
    "10065": {
      "op": "POP"
    },
    "10066": {
      "op": "PUSH2",
      "value": "0x275D"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10071": {
      "op": "DUP5"
    },
    "10072": {
      "op": "ADD"
    },
    "10073": {
      "op": "PUSH2",
      "value": "0x2413"
    },
    "10076": {
      "jump": "i",
      "op": "JUMP"
    },
    "10077": {
      "op": "JUMPDEST"
    },
    "10078": {
      "op": "SWAP1"
    },
    "10079": {
      "op": "POP"
    },
    "10080": {
      "op": "SWAP3"
    },
    "10081": {
      "op": "POP"
    },
    "10082": {
      "op": "SWAP3"
    },
    "10083": {
      "op": "SWAP1"
    },
    "10084": {
      "op": "POP"
    },
    "10085": {
      "jump": "o",
      "op": "JUMP"
    },
    "10086": {
      "op": "JUMPDEST"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10089": {
      "op": "DUP2"
    },
    "10090": {
      "op": "MLOAD"
    },
    "10091": {
      "op": "PUSH2",
      "value": "0x2778"
    },
    "10094": {
      "op": "DUP2"
    },
    "10095": {
      "op": "DUP6"
    },
    "10096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10098": {
      "op": "DUP7"
    },
    "10099": {
      "op": "ADD"
    },
    "10100": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10103": {
      "jump": "i",
      "op": "JUMP"
    },
    "10104": {
      "op": "JUMPDEST"
    },
    "10105": {
      "op": "SWAP3"
    },
    "10106": {
      "op": "SWAP1"
    },
    "10107": {
      "op": "SWAP3"
    },
    "10108": {
      "op": "ADD"
    },
    "10109": {
      "op": "SWAP3"
    },
    "10110": {
      "op": "SWAP2"
    },
    "10111": {
      "op": "POP"
    },
    "10112": {
      "op": "POP"
    },
    "10113": {
      "jump": "o",
      "op": "JUMP"
    },
    "10114": {
      "op": "JUMPDEST"
    },
    "10115": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "10148": {
      "op": "DUP2"
    },
    "10149": {
      "op": "MSTORE"
    },
    "10150": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10185": {
      "op": "DUP3"
    },
    "10186": {
      "op": "ADD"
    },
    "10187": {
      "op": "MSTORE"
    },
    "10188": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "10223": {
      "op": "DUP3"
    },
    "10224": {
      "op": "ADD"
    },
    "10225": {
      "op": "MSTORE"
    },
    "10226": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10235": {
      "op": "SHL"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "10238": {
      "op": "DUP3"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "op": "MSTORE"
    },
    "10241": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10256": {
      "op": "SHL"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10259": {
      "op": "DUP3"
    },
    "10260": {
      "op": "ADD"
    },
    "10261": {
      "op": "MSTORE"
    },
    "10262": {
      "op": "DUP3"
    },
    "10263": {
      "op": "MLOAD"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10266": {
      "op": "SWAP1"
    },
    "10267": {
      "op": "PUSH2",
      "value": "0x282B"
    },
    "10270": {
      "op": "DUP2"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10273": {
      "op": "DUP6"
    },
    "10274": {
      "op": "ADD"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10277": {
      "op": "DUP9"
    },
    "10278": {
      "op": "ADD"
    },
    "10279": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10282": {
      "jump": "i",
      "op": "JUMP"
    },
    "10283": {
      "op": "JUMPDEST"
    },
    "10284": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10288": {
      "op": "SHL"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10291": {
      "op": "SWAP2"
    },
    "10292": {
      "op": "DUP5"
    },
    "10293": {
      "op": "ADD"
    },
    "10294": {
      "op": "SWAP2"
    },
    "10295": {
      "op": "DUP3"
    },
    "10296": {
      "op": "ADD"
    },
    "10297": {
      "op": "MSTORE"
    },
    "10298": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "10319": {
      "op": "SHL"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "10322": {
      "op": "DUP3"
    },
    "10323": {
      "op": "ADD"
    },
    "10324": {
      "op": "MSTORE"
    },
    "10325": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10360": {
      "op": "DUP3"
    },
    "10361": {
      "op": "ADD"
    },
    "10362": {
      "op": "MSTORE"
    },
    "10363": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10398": {
      "op": "DUP3"
    },
    "10399": {
      "op": "ADD"
    },
    "10400": {
      "op": "MSTORE"
    },
    "10401": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "10414": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "10416": {
      "op": "SHL"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10419": {
      "op": "DUP3"
    },
    "10420": {
      "op": "ADD"
    },
    "10421": {
      "op": "MSTORE"
    },
    "10422": {
      "op": "PUSH2",
      "value": "0x28D3"
    },
    "10425": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10430": {
      "op": "DUP4"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "DUP7"
    },
    "10433": {
      "op": "PUSH2",
      "value": "0x2766"
    },
    "10436": {
      "jump": "i",
      "op": "JUMP"
    },
    "10437": {
      "op": "JUMPDEST"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10441": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10443": {
      "op": "SHL"
    },
    "10444": {
      "op": "DUP2"
    },
    "10445": {
      "op": "MSTORE"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "10448": {
      "op": "ADD"
    },
    "10449": {
      "op": "SWAP1"
    },
    "10450": {
      "op": "JUMP"
    },
    "10451": {
      "op": "JUMPDEST"
    },
    "10452": {
      "op": "SWAP6"
    },
    "10453": {
      "op": "SWAP5"
    },
    "10454": {
      "op": "POP"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "op": "POP"
    },
    "10457": {
      "op": "POP"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "jump": "o",
      "op": "JUMP"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10463": {
      "op": "DUP6"
    },
    "10464": {
      "op": "MLOAD"
    },
    "10465": {
      "op": "PUSH2",
      "value": "0x28EE"
    },
    "10468": {
      "op": "DUP2"
    },
    "10469": {
      "op": "DUP5"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10472": {
      "op": "DUP11"
    },
    "10473": {
      "op": "ADD"
    },
    "10474": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10477": {
      "jump": "i",
      "op": "JUMP"
    },
    "10478": {
      "op": "JUMPDEST"
    },
    "10479": {
      "op": "DUP1"
    },
    "10480": {
      "op": "DUP4"
    },
    "10481": {
      "op": "ADD"
    },
    "10482": {
      "op": "SWAP1"
    },
    "10483": {
      "op": "POP"
    },
    "10484": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "10517": {
      "op": "DUP1"
    },
    "10518": {
      "op": "DUP3"
    },
    "10519": {
      "op": "MSTORE"
    },
    "10520": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10555": {
      "op": "DUP4"
    },
    "10556": {
      "op": "ADD"
    },
    "10557": {
      "op": "MSTORE"
    },
    "10558": {
      "op": "DUP7"
    },
    "10559": {
      "op": "MLOAD"
    },
    "10560": {
      "op": "PUSH2",
      "value": "0x2950"
    },
    "10563": {
      "op": "DUP2"
    },
    "10564": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "10566": {
      "op": "DUP6"
    },
    "10567": {
      "op": "ADD"
    },
    "10568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10570": {
      "op": "DUP12"
    },
    "10571": {
      "op": "ADD"
    },
    "10572": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10575": {
      "jump": "i",
      "op": "JUMP"
    },
    "10576": {
      "op": "JUMPDEST"
    },
    "10577": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10582": {
      "op": "SHL"
    },
    "10583": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "10585": {
      "op": "SWAP4"
    },
    "10586": {
      "op": "SWAP1"
    },
    "10587": {
      "op": "SWAP2"
    },
    "10588": {
      "op": "ADD"
    },
    "10589": {
      "op": "SWAP3"
    },
    "10590": {
      "op": "DUP4"
    },
    "10591": {
      "op": "ADD"
    },
    "10592": {
      "op": "DUP2"
    },
    "10593": {
      "op": "SWAP1"
    },
    "10594": {
      "op": "MSTORE"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "10597": {
      "op": "DUP4"
    },
    "10598": {
      "op": "ADD"
    },
    "10599": {
      "op": "DUP3"
    },
    "10600": {
      "op": "SWAP1"
    },
    "10601": {
      "op": "MSTORE"
    },
    "10602": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "10637": {
      "op": "DUP5"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "MSTORE"
    },
    "10640": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "10646": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "10648": {
      "op": "SHL"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "10651": {
      "op": "DUP5"
    },
    "10652": {
      "op": "ADD"
    },
    "10653": {
      "op": "MSTORE"
    },
    "10654": {
      "op": "DUP7"
    },
    "10655": {
      "op": "MLOAD"
    },
    "10656": {
      "op": "PUSH2",
      "value": "0x29B0"
    },
    "10659": {
      "op": "DUP2"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10662": {
      "op": "DUP7"
    },
    "10663": {
      "op": "ADD"
    },
    "10664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10666": {
      "op": "DUP12"
    },
    "10667": {
      "op": "ADD"
    },
    "10668": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10671": {
      "jump": "i",
      "op": "JUMP"
    },
    "10672": {
      "op": "JUMPDEST"
    },
    "10673": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10675": {
      "op": "SWAP4"
    },
    "10676": {
      "op": "ADD"
    },
    "10677": {
      "op": "SWAP3"
    },
    "10678": {
      "op": "DUP4"
    },
    "10679": {
      "op": "ADD"
    },
    "10680": {
      "op": "MSTORE"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "10683": {
      "op": "DUP3"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "op": "MSTORE"
    },
    "10686": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0xA3"
    },
    "10721": {
      "op": "DUP3"
    },
    "10722": {
      "op": "ADD"
    },
    "10723": {
      "op": "MSTORE"
    },
    "10724": {
      "op": "PUSH7",
      "value": "0x30B63AB2911D1"
    },
    "10732": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10734": {
      "op": "SHL"
    },
    "10735": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "10737": {
      "op": "DUP3"
    },
    "10738": {
      "op": "ADD"
    },
    "10739": {
      "op": "MSTORE"
    },
    "10740": {
      "op": "PUSH2",
      "value": "0x2A03"
    },
    "10743": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "10748": {
      "op": "DUP4"
    },
    "10749": {
      "op": "ADD"
    },
    "10750": {
      "op": "DUP7"
    },
    "10751": {
      "op": "PUSH2",
      "value": "0x2766"
    },
    "10754": {
      "jump": "i",
      "op": "JUMP"
    },
    "10755": {
      "op": "JUMPDEST"
    },
    "10756": {
      "op": "SWAP8"
    },
    "10757": {
      "op": "SWAP7"
    },
    "10758": {
      "op": "POP"
    },
    "10759": {
      "op": "POP"
    },
    "10760": {
      "op": "POP"
    },
    "10761": {
      "op": "POP"
    },
    "10762": {
      "op": "POP"
    },
    "10763": {
      "op": "POP"
    },
    "10764": {
      "op": "POP"
    },
    "10765": {
      "jump": "o",
      "op": "JUMP"
    },
    "10766": {
      "op": "JUMPDEST"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10769": {
      "op": "DUP5"
    },
    "10770": {
      "op": "MLOAD"
    },
    "10771": {
      "op": "PUSH2",
      "value": "0x2A20"
    },
    "10774": {
      "op": "DUP2"
    },
    "10775": {
      "op": "DUP5"
    },
    "10776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10778": {
      "op": "DUP10"
    },
    "10779": {
      "op": "ADD"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10783": {
      "jump": "i",
      "op": "JUMP"
    },
    "10784": {
      "op": "JUMPDEST"
    },
    "10785": {
      "op": "DUP1"
    },
    "10786": {
      "op": "DUP4"
    },
    "10787": {
      "op": "ADD"
    },
    "10788": {
      "op": "SWAP1"
    },
    "10789": {
      "op": "POP"
    },
    "10790": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "10823": {
      "op": "DUP1"
    },
    "10824": {
      "op": "DUP3"
    },
    "10825": {
      "op": "MSTORE"
    },
    "10826": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20227370656564222C202276616C7565223A20000000"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10861": {
      "op": "DUP4"
    },
    "10862": {
      "op": "ADD"
    },
    "10863": {
      "op": "MSTORE"
    },
    "10864": {
      "op": "DUP6"
    },
    "10865": {
      "op": "MLOAD"
    },
    "10866": {
      "op": "PUSH2",
      "value": "0x2A82"
    },
    "10869": {
      "op": "DUP2"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "10872": {
      "op": "DUP6"
    },
    "10873": {
      "op": "ADD"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10876": {
      "op": "DUP11"
    },
    "10877": {
      "op": "ADD"
    },
    "10878": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10881": {
      "jump": "i",
      "op": "JUMP"
    },
    "10882": {
      "op": "JUMPDEST"
    },
    "10883": {
      "op": "DUP1"
    },
    "10884": {
      "op": "DUP4"
    },
    "10885": {
      "op": "ADD"
    },
    "10886": {
      "op": "SWAP3"
    },
    "10887": {
      "op": "POP"
    },
    "10888": {
      "op": "POP"
    },
    "10889": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "10892": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10894": {
      "op": "SHL"
    },
    "10895": {
      "op": "DUP1"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "10898": {
      "op": "DUP5"
    },
    "10899": {
      "op": "ADD"
    },
    "10900": {
      "op": "MSTORE"
    },
    "10901": {
      "op": "DUP2"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10904": {
      "op": "DUP5"
    },
    "10905": {
      "op": "ADD"
    },
    "10906": {
      "op": "MSTORE"
    },
    "10907": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "10942": {
      "op": "DUP5"
    },
    "10943": {
      "op": "ADD"
    },
    "10944": {
      "op": "MSTORE"
    },
    "10945": {
      "op": "DUP6"
    },
    "10946": {
      "op": "MLOAD"
    },
    "10947": {
      "op": "SWAP2"
    },
    "10948": {
      "op": "POP"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x2AD5"
    },
    "10952": {
      "op": "DUP3"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10955": {
      "op": "DUP6"
    },
    "10956": {
      "op": "ADD"
    },
    "10957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10959": {
      "op": "DUP10"
    },
    "10960": {
      "op": "ADD"
    },
    "10961": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "10964": {
      "jump": "i",
      "op": "JUMP"
    },
    "10965": {
      "op": "JUMPDEST"
    },
    "10966": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10968": {
      "op": "SWAP3"
    },
    "10969": {
      "op": "SWAP1"
    },
    "10970": {
      "op": "SWAP2"
    },
    "10971": {
      "op": "ADD"
    },
    "10972": {
      "op": "SWAP2"
    },
    "10973": {
      "op": "DUP3"
    },
    "10974": {
      "op": "ADD"
    },
    "10975": {
      "op": "MSTORE"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "10978": {
      "op": "ADD"
    },
    "10979": {
      "op": "SWAP6"
    },
    "10980": {
      "op": "SWAP5"
    },
    "10981": {
      "op": "POP"
    },
    "10982": {
      "op": "POP"
    },
    "10983": {
      "op": "POP"
    },
    "10984": {
      "op": "POP"
    },
    "10985": {
      "op": "POP"
    },
    "10986": {
      "jump": "o",
      "op": "JUMP"
    },
    "10987": {
      "op": "JUMPDEST"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10990": {
      "op": "DUP6"
    },
    "10991": {
      "op": "MLOAD"
    },
    "10992": {
      "op": "PUSH2",
      "value": "0x2AFD"
    },
    "10995": {
      "op": "DUP2"
    },
    "10996": {
      "op": "DUP5"
    },
    "10997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10999": {
      "op": "DUP11"
    },
    "11000": {
      "op": "ADD"
    },
    "11001": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "11004": {
      "jump": "i",
      "op": "JUMP"
    },
    "11005": {
      "op": "JUMPDEST"
    },
    "11006": {
      "op": "DUP1"
    },
    "11007": {
      "op": "DUP4"
    },
    "11008": {
      "op": "ADD"
    },
    "11009": {
      "op": "SWAP1"
    },
    "11010": {
      "op": "POP"
    },
    "11011": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "11044": {
      "op": "DUP1"
    },
    "11045": {
      "op": "DUP3"
    },
    "11046": {
      "op": "MSTORE"
    },
    "11047": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "11080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11082": {
      "op": "DUP4"
    },
    "11083": {
      "op": "ADD"
    },
    "11084": {
      "op": "MSTORE"
    },
    "11085": {
      "op": "DUP7"
    },
    "11086": {
      "op": "MLOAD"
    },
    "11087": {
      "op": "PUSH2",
      "value": "0x2B5F"
    },
    "11090": {
      "op": "DUP2"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "11093": {
      "op": "DUP6"
    },
    "11094": {
      "op": "ADD"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11097": {
      "op": "DUP12"
    },
    "11098": {
      "op": "ADD"
    },
    "11099": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "11102": {
      "jump": "i",
      "op": "JUMP"
    },
    "11103": {
      "op": "JUMPDEST"
    },
    "11104": {
      "op": "DUP1"
    },
    "11105": {
      "op": "DUP4"
    },
    "11106": {
      "op": "ADD"
    },
    "11107": {
      "op": "SWAP3"
    },
    "11108": {
      "op": "POP"
    },
    "11109": {
      "op": "POP"
    },
    "11110": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11115": {
      "op": "SHL"
    },
    "11116": {
      "op": "DUP1"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "11119": {
      "op": "DUP5"
    },
    "11120": {
      "op": "ADD"
    },
    "11121": {
      "op": "MSTORE"
    },
    "11122": {
      "op": "DUP2"
    },
    "11123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11125": {
      "op": "DUP5"
    },
    "11126": {
      "op": "ADD"
    },
    "11127": {
      "op": "MSTORE"
    },
    "11128": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "11161": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11163": {
      "op": "DUP5"
    },
    "11164": {
      "op": "ADD"
    },
    "11165": {
      "op": "MSTORE"
    },
    "11166": {
      "op": "DUP7"
    },
    "11167": {
      "op": "MLOAD"
    },
    "11168": {
      "op": "PUSH2",
      "value": "0x2BB0"
    },
    "11171": {
      "op": "DUP2"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11174": {
      "op": "DUP7"
    },
    "11175": {
      "op": "ADD"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11178": {
      "op": "DUP12"
    },
    "11179": {
      "op": "ADD"
    },
    "11180": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "11183": {
      "jump": "i",
      "op": "JUMP"
    },
    "11184": {
      "op": "JUMPDEST"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11187": {
      "op": "SWAP4"
    },
    "11188": {
      "op": "ADD"
    },
    "11189": {
      "op": "SWAP3"
    },
    "11190": {
      "op": "DUP4"
    },
    "11191": {
      "op": "ADD"
    },
    "11192": {
      "op": "MSTORE"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "11195": {
      "op": "DUP3"
    },
    "11196": {
      "op": "ADD"
    },
    "11197": {
      "op": "MSTORE"
    },
    "11198": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "11233": {
      "op": "DUP3"
    },
    "11234": {
      "op": "ADD"
    },
    "11235": {
      "op": "MSTORE"
    },
    "11236": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "11244": {
      "op": "SHL"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11247": {
      "op": "DUP3"
    },
    "11248": {
      "op": "ADD"
    },
    "11249": {
      "op": "MSTORE"
    },
    "11250": {
      "op": "PUSH2",
      "value": "0x2A03"
    },
    "11253": {
      "op": "PUSH2",
      "value": "0x28C5"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "11258": {
      "op": "DUP4"
    },
    "11259": {
      "op": "ADD"
    },
    "11260": {
      "op": "DUP7"
    },
    "11261": {
      "op": "PUSH2",
      "value": "0x2766"
    },
    "11264": {
      "jump": "i",
      "op": "JUMP"
    },
    "11265": {
      "op": "JUMPDEST"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11268": {
      "op": "DUP3"
    },
    "11269": {
      "op": "MLOAD"
    },
    "11270": {
      "op": "PUSH2",
      "value": "0x2C13"
    },
    "11273": {
      "op": "DUP2"
    },
    "11274": {
      "op": "DUP5"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11277": {
      "op": "DUP8"
    },
    "11278": {
      "op": "ADD"
    },
    "11279": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "11282": {
      "jump": "i",
      "op": "JUMP"
    },
    "11283": {
      "op": "JUMPDEST"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11288": {
      "op": "SHL"
    },
    "11289": {
      "op": "SWAP3"
    },
    "11290": {
      "op": "ADD"
    },
    "11291": {
      "op": "SWAP2"
    },
    "11292": {
      "op": "DUP3"
    },
    "11293": {
      "op": "MSTORE"
    },
    "11294": {
      "op": "POP"
    },
    "11295": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11299": {
      "op": "SHL"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11302": {
      "op": "DUP3"
    },
    "11303": {
      "op": "ADD"
    },
    "11304": {
      "op": "MSTORE"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11307": {
      "op": "ADD"
    },
    "11308": {
      "op": "SWAP2"
    },
    "11309": {
      "op": "SWAP1"
    },
    "11310": {
      "op": "POP"
    },
    "11311": {
      "jump": "o",
      "op": "JUMP"
    },
    "11312": {
      "op": "JUMPDEST"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11315": {
      "op": "DUP2"
    },
    "11316": {
      "op": "DUP2"
    },
    "11317": {
      "op": "SHR"
    },
    "11318": {
      "op": "SWAP1"
    },
    "11319": {
      "op": "DUP3"
    },
    "11320": {
      "op": "AND"
    },
    "11321": {
      "op": "DUP1"
    },
    "11322": {
      "op": "PUSH2",
      "value": "0x2C44"
    },
    "11325": {
      "op": "JUMPI"
    },
    "11326": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11328": {
      "op": "DUP3"
    },
    "11329": {
      "op": "AND"
    },
    "11330": {
      "op": "SWAP2"
    },
    "11331": {
      "op": "POP"
    },
    "11332": {
      "op": "JUMPDEST"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11335": {
      "op": "DUP3"
    },
    "11336": {
      "op": "LT"
    },
    "11337": {
      "op": "DUP2"
    },
    "11338": {
      "op": "SUB"
    },
    "11339": {
      "op": "PUSH2",
      "value": "0x2C64"
    },
    "11342": {
      "op": "JUMPI"
    },
    "11343": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11350": {
      "op": "SHL"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11353": {
      "op": "MSTORE"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11358": {
      "op": "MSTORE"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11363": {
      "op": "REVERT"
    },
    "11364": {
      "op": "JUMPDEST"
    },
    "11365": {
      "op": "POP"
    },
    "11366": {
      "op": "SWAP2"
    },
    "11367": {
      "op": "SWAP1"
    },
    "11368": {
      "op": "POP"
    },
    "11369": {
      "jump": "o",
      "op": "JUMP"
    },
    "11370": {
      "op": "JUMPDEST"
    },
    "11371": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11378": {
      "op": "SHL"
    },
    "11379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11381": {
      "op": "MSTORE"
    },
    "11382": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11384": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11386": {
      "op": "MSTORE"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11391": {
      "op": "REVERT"
    },
    "11392": {
      "op": "JUMPDEST"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11395": {
      "op": "DUP3"
    },
    "11396": {
      "op": "PUSH2",
      "value": "0x2C8F"
    },
    "11399": {
      "op": "JUMPI"
    },
    "11400": {
      "op": "PUSH2",
      "value": "0x2C8F"
    },
    "11403": {
      "op": "PUSH2",
      "value": "0x2C6A"
    },
    "11406": {
      "jump": "i",
      "op": "JUMP"
    },
    "11407": {
      "op": "JUMPDEST"
    },
    "11408": {
      "op": "POP"
    },
    "11409": {
      "op": "MOD"
    },
    "11410": {
      "op": "SWAP1"
    },
    "11411": {
      "jump": "o",
      "op": "JUMP"
    },
    "11412": {
      "op": "JUMPDEST"
    },
    "11413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11420": {
      "op": "SHL"
    },
    "11421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11423": {
      "op": "MSTORE"
    },
    "11424": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11426": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11428": {
      "op": "MSTORE"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11433": {
      "op": "REVERT"
    },
    "11434": {
      "op": "JUMPDEST"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11437": {
      "op": "DUP3"
    },
    "11438": {
      "op": "NOT"
    },
    "11439": {
      "op": "DUP3"
    },
    "11440": {
      "op": "GT"
    },
    "11441": {
      "op": "ISZERO"
    },
    "11442": {
      "op": "PUSH2",
      "value": "0x2CBD"
    },
    "11445": {
      "op": "JUMPI"
    },
    "11446": {
      "op": "PUSH2",
      "value": "0x2CBD"
    },
    "11449": {
      "op": "PUSH2",
      "value": "0x2C94"
    },
    "11452": {
      "jump": "i",
      "op": "JUMP"
    },
    "11453": {
      "op": "JUMPDEST"
    },
    "11454": {
      "op": "POP"
    },
    "11455": {
      "op": "ADD"
    },
    "11456": {
      "op": "SWAP1"
    },
    "11457": {
      "jump": "o",
      "op": "JUMP"
    },
    "11458": {
      "op": "JUMPDEST"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11461": {
      "op": "DUP3"
    },
    "11462": {
      "op": "PUSH2",
      "value": "0x2CD1"
    },
    "11465": {
      "op": "JUMPI"
    },
    "11466": {
      "op": "PUSH2",
      "value": "0x2CD1"
    },
    "11469": {
      "op": "PUSH2",
      "value": "0x2C6A"
    },
    "11472": {
      "jump": "i",
      "op": "JUMP"
    },
    "11473": {
      "op": "JUMPDEST"
    },
    "11474": {
      "op": "POP"
    },
    "11475": {
      "op": "DIV"
    },
    "11476": {
      "op": "SWAP1"
    },
    "11477": {
      "jump": "o",
      "op": "JUMP"
    },
    "11478": {
      "op": "JUMPDEST"
    },
    "11479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11481": {
      "op": "DUP2"
    },
    "11482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11484": {
      "op": "NOT"
    },
    "11485": {
      "op": "DIV"
    },
    "11486": {
      "op": "DUP4"
    },
    "11487": {
      "op": "GT"
    },
    "11488": {
      "op": "DUP3"
    },
    "11489": {
      "op": "ISZERO"
    },
    "11490": {
      "op": "ISZERO"
    },
    "11491": {
      "op": "AND"
    },
    "11492": {
      "op": "ISZERO"
    },
    "11493": {
      "op": "PUSH2",
      "value": "0x2CF0"
    },
    "11496": {
      "op": "JUMPI"
    },
    "11497": {
      "op": "PUSH2",
      "value": "0x2CF0"
    },
    "11500": {
      "op": "PUSH2",
      "value": "0x2C94"
    },
    "11503": {
      "jump": "i",
      "op": "JUMP"
    },
    "11504": {
      "op": "JUMPDEST"
    },
    "11505": {
      "op": "POP"
    },
    "11506": {
      "op": "MUL"
    },
    "11507": {
      "op": "SWAP1"
    },
    "11508": {
      "jump": "o",
      "op": "JUMP"
    },
    "11509": {
      "op": "JUMPDEST"
    },
    "11510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11512": {
      "op": "DUP1"
    },
    "11513": {
      "op": "DUP3"
    },
    "11514": {
      "op": "MSTORE"
    },
    "11515": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11517": {
      "op": "SWAP1"
    },
    "11518": {
      "op": "DUP3"
    },
    "11519": {
      "op": "ADD"
    },
    "11520": {
      "op": "MSTORE"
    },
    "11521": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11556": {
      "op": "DUP3"
    },
    "11557": {
      "op": "ADD"
    },
    "11558": {
      "op": "MSTORE"
    },
    "11559": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "11579": {
      "op": "SHL"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11582": {
      "op": "DUP3"
    },
    "11583": {
      "op": "ADD"
    },
    "11584": {
      "op": "MSTORE"
    },
    "11585": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11587": {
      "op": "ADD"
    },
    "11588": {
      "op": "SWAP1"
    },
    "11589": {
      "jump": "o",
      "op": "JUMP"
    },
    "11590": {
      "op": "JUMPDEST"
    },
    "11591": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11596": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11598": {
      "op": "SHL"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11601": {
      "op": "MSTORE"
    },
    "11602": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11604": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11606": {
      "op": "MSTORE"
    },
    "11607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11611": {
      "op": "REVERT"
    },
    "11612": {
      "op": "JUMPDEST"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11615": {
      "op": "DUP1"
    },
    "11616": {
      "op": "DUP3"
    },
    "11617": {
      "op": "MSTORE"
    },
    "11618": {
      "op": "DUP2"
    },
    "11619": {
      "op": "DUP2"
    },
    "11620": {
      "op": "ADD"
    },
    "11621": {
      "op": "MSTORE"
    },
    "11622": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11657": {
      "op": "DUP3"
    },
    "11658": {
      "op": "ADD"
    },
    "11659": {
      "op": "MSTORE"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11662": {
      "op": "ADD"
    },
    "11663": {
      "op": "SWAP1"
    },
    "11664": {
      "jump": "o",
      "op": "JUMP"
    },
    "11665": {
      "op": "JUMPDEST"
    },
    "11666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11670": {
      "op": "DUP3"
    },
    "11671": {
      "op": "ADD"
    },
    "11672": {
      "op": "PUSH2",
      "value": "0x2DA3"
    },
    "11675": {
      "op": "JUMPI"
    },
    "11676": {
      "op": "PUSH2",
      "value": "0x2DA3"
    },
    "11679": {
      "op": "PUSH2",
      "value": "0x2C94"
    },
    "11682": {
      "jump": "i",
      "op": "JUMP"
    },
    "11683": {
      "op": "JUMPDEST"
    },
    "11684": {
      "op": "POP"
    },
    "11685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11687": {
      "op": "ADD"
    },
    "11688": {
      "op": "SWAP1"
    },
    "11689": {
      "jump": "o",
      "op": "JUMP"
    },
    "11690": {
      "op": "JUMPDEST"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11693": {
      "op": "DUP3"
    },
    "11694": {
      "op": "DUP3"
    },
    "11695": {
      "op": "LT"
    },
    "11696": {
      "op": "ISZERO"
    },
    "11697": {
      "op": "PUSH2",
      "value": "0x2DBC"
    },
    "11700": {
      "op": "JUMPI"
    },
    "11701": {
      "op": "PUSH2",
      "value": "0x2DBC"
    },
    "11704": {
      "op": "PUSH2",
      "value": "0x2C94"
    },
    "11707": {
      "jump": "i",
      "op": "JUMP"
    },
    "11708": {
      "op": "JUMPDEST"
    },
    "11709": {
      "op": "POP"
    },
    "11710": {
      "op": "SUB"
    },
    "11711": {
      "op": "SWAP1"
    },
    "11712": {
      "jump": "o",
      "op": "JUMP"
    },
    "11713": {
      "op": "JUMPDEST"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11716": {
      "op": "DUP1"
    },
    "11717": {
      "op": "DUP3"
    },
    "11718": {
      "op": "MSTORE"
    },
    "11719": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11721": {
      "op": "SWAP1"
    },
    "11722": {
      "op": "DUP3"
    },
    "11723": {
      "op": "ADD"
    },
    "11724": {
      "op": "MSTORE"
    },
    "11725": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11760": {
      "op": "DUP3"
    },
    "11761": {
      "op": "ADD"
    },
    "11762": {
      "op": "MSTORE"
    },
    "11763": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "11782": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "11784": {
      "op": "SHL"
    },
    "11785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11787": {
      "op": "DUP3"
    },
    "11788": {
      "op": "ADD"
    },
    "11789": {
      "op": "MSTORE"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11792": {
      "op": "ADD"
    },
    "11793": {
      "op": "SWAP1"
    },
    "11794": {
      "jump": "o",
      "op": "JUMP"
    },
    "11795": {
      "op": "JUMPDEST"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11802": {
      "op": "SHL"
    },
    "11803": {
      "op": "SUB"
    },
    "11804": {
      "op": "DUP6"
    },
    "11805": {
      "op": "DUP2"
    },
    "11806": {
      "op": "AND"
    },
    "11807": {
      "op": "DUP3"
    },
    "11808": {
      "op": "MSTORE"
    },
    "11809": {
      "op": "DUP5"
    },
    "11810": {
      "op": "AND"
    },
    "11811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11813": {
      "op": "DUP3"
    },
    "11814": {
      "op": "ADD"
    },
    "11815": {
      "op": "MSTORE"
    },
    "11816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11818": {
      "op": "DUP2"
    },
    "11819": {
      "op": "ADD"
    },
    "11820": {
      "op": "DUP4"
    },
    "11821": {
      "op": "SWAP1"
    },
    "11822": {
      "op": "MSTORE"
    },
    "11823": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11827": {
      "op": "DUP3"
    },
    "11828": {
      "op": "ADD"
    },
    "11829": {
      "op": "DUP2"
    },
    "11830": {
      "op": "SWAP1"
    },
    "11831": {
      "op": "MSTORE"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11834": {
      "op": "SWAP1"
    },
    "11835": {
      "op": "PUSH2",
      "value": "0x2E46"
    },
    "11838": {
      "op": "SWAP1"
    },
    "11839": {
      "op": "DUP4"
    },
    "11840": {
      "op": "ADD"
    },
    "11841": {
      "op": "DUP5"
    },
    "11842": {
      "op": "PUSH2",
      "value": "0x23BB"
    },
    "11845": {
      "jump": "i",
      "op": "JUMP"
    },
    "11846": {
      "op": "JUMPDEST"
    },
    "11847": {
      "op": "SWAP7"
    },
    "11848": {
      "op": "SWAP6"
    },
    "11849": {
      "op": "POP"
    },
    "11850": {
      "op": "POP"
    },
    "11851": {
      "op": "POP"
    },
    "11852": {
      "op": "POP"
    },
    "11853": {
      "op": "POP"
    },
    "11854": {
      "op": "POP"
    },
    "11855": {
      "jump": "o",
      "op": "JUMP"
    },
    "11856": {
      "op": "JUMPDEST"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11861": {
      "op": "DUP3"
    },
    "11862": {
      "op": "DUP5"
    },
    "11863": {
      "op": "SUB"
    },
    "11864": {
      "op": "SLT"
    },
    "11865": {
      "op": "ISZERO"
    },
    "11866": {
      "op": "PUSH2",
      "value": "0x2E62"
    },
    "11869": {
      "op": "JUMPI"
    },
    "11870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11872": {
      "op": "DUP1"
    },
    "11873": {
      "op": "REVERT"
    },
    "11874": {
      "op": "JUMPDEST"
    },
    "11875": {
      "op": "DUP2"
    },
    "11876": {
      "op": "MLOAD"
    },
    "11877": {
      "op": "PUSH2",
      "value": "0x22A1"
    },
    "11880": {
      "op": "DUP2"
    },
    "11881": {
      "op": "PUSH2",
      "value": "0x226E"
    },
    "11884": {
      "jump": "i",
      "op": "JUMP"
    },
    "11885": {
      "op": "JUMPDEST"
    },
    "11886": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11893": {
      "op": "SHL"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11896": {
      "op": "MSTORE"
    },
    "11897": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11899": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11901": {
      "op": "MSTORE"
    },
    "11902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11906": {
      "op": "REVERT"
    }
  },
  "sha1": "bd9704d5e114a3b5a4e344e4dcbd80349a06a753",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n    enum OUTCOME {LOSS, WIN, TIE, CAPTURE}\n\n    // note -- stack gets too deep if add more\n    struct Stats { // todo -- reduce uint amount\n        uint256 level;\n        uint256 hp;\n        uint256 magicalPower;\n        uint256 magicalDefense;\n        uint256 speed;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n    function getStatsGivenId(uint256 _wizardId) external view returns(Stats memory) {\n        return tokenIdToStats[_wizardId];\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        // todo -- randomly create stats\n        //\n        // hp, base = 25\n        // mp base = 25\n\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp)));\n//        uint256 addOn = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp))) % 26;\n        uint256 hp = 25 + pseudoRandNum % 26;\n        uint256 magicalPower = 25 + (pseudoRandNum/100) % 26;\n        uint256 magicalDefense = 10 + (pseudoRandNum/10*4) % 10;\n        uint256 speed = 10 + (pseudoRandNum/10*5) % 10;\n        ELEMENT element = ELEMENT((pseudoRandNum/10*6) % 4);\n\n        Stats memory myStats =  Stats(1, hp, magicalPower, magicalDefense, speed, 0, 0, 0, 0, 0, 0, 0, 0, element);\n        tokenIdToStats[totalSupply()] = myStats;\n        _safeMint(msg.sender, totalSupply()+1 ); // with with 1 as id\n//        unchecked { totalSupply() += 1; }\n    }\n\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        // todo -- must be beyond time limitation\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n\n        emit Initiated(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, OUTCOME outcome, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        if(outcome == OUTCOME.WIN){\n            tokenIdToStats[_attackerId].wins += 1;\n            tokenIdToStats[_defenderId].losses += 1;\n\n        }\n        else if(outcome == OUTCOME.LOSS){\n            tokenIdToStats[_attackerId].losses += 1;\n            tokenIdToStats[_defenderId].wins += 1;\n        }\n\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n\n        // todo -- tokens waged?\n//        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n        // todo -- add stat for last time attacked to limit attack frequency?\n\n        // we switched to ETH\n//        if(_won==OUTCOME.LOSS) {\n//            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n//        }\n    }\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public returns(uint256) {\n\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId, uint256 _timeReward) external onlyVerifier {\n        // add time entension to NFT\n        tokenIdToStats[_tokenId].protectedUntilTimestamp = _timeReward + (tokenIdToStats[_tokenId].protectedUntilTimestamp < block.timestamp\n                 ? block.timestamp : tokenIdToStats[_tokenId].protectedUntilTimestamp);\n\n        // increase stats of NFT\n//        tokenIdToStats[_tokenId].tasksCompleted +=1;\n    }\n\n\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        return formatTokenURI(_tokenId, \"https://as2.ftcdn.net/v2/jpg/03/12/77/03/1000_F_312770349_4lkFN3e2UlO43kQlFemFNIpVkG5Zwytq.jpg\");\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        Stats memory myStats = tokenIdToStats[_tokenId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(myStats.hp),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": ',\n            Strings.toString(myStats.magicalPower),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": ',\n            Strings.toString(myStats.magicalDefense),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": ',\n            Strings.toString(myStats.speed),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n            Strings.toString(myStats.wins),   ' }'\n        ));\n\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(myStats.losses),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(myStats.battles),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "359:11344:20:-:0;;;2328:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2409:5;2416:7;1459:5:5;:13;2409:5:20;1459::5;:13;:::i;:::-;-1:-1:-1;1483:7:5;:17;1493:7;1483;:17;:::i;:::-;;1392:116;;889:23:7;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;2465:5:20::1;2436:26:::0;:34;2515:1:::1;2481:31:::0;:35;2555:1:::1;2436:16;2527:29:::0;2638:6:::1;2595:40:::0;:49;2683:38;:49;;-1:-1:-1;;;;;;2683:49:20::1;-1:-1:-1::0;;;;;2683:49:20;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;359:11344:20;;-1:-1:-1;359:11344:20;599:98:3;679:10;;599:98::o;2101:173:7:-;2176:6;;;-1:-1:-1;;;;;2193:17:7;;;-1:-1:-1;;;;;;2193:17:7;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:21;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:21;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:21:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:21;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:21;-1:-1:-1;;;;;;1685:31:21;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:21;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2372:448;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:21;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:21;;;4204:26;4155:89;-1:-1:-1;;2959:1:21;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:21;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:21;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:21;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:21:o;:::-;359:11344:20;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}