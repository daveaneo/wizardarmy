{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getStatsGivenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalDefense",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "speed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "losses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "battles",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goodness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "badness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initiationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protectedUntilTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Wizards.ELEMENT",
              "name": "element",
              "type": "uint8"
            }
          ],
          "internalType": "struct Wizards.Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initiationCost",
          "type": "uint256"
        }
      ],
      "name": "modifyContractSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.OUTCOME",
          "name": "outcome",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalPower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalDefense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeReward",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/interfaces/IERC165.sol",
    "16": "contracts/interfaces/IERC721.sol",
    "17": "contracts/interfaces/IERC721Enumerable.sol",
    "18": "contracts/interfaces/IERC721Metadata.sol",
    "21": "contracts/libraries/Strings.sol",
    "22": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "4": "contracts/helpers/ERC165.sol",
    "6": "contracts/helpers/ERC721.sol",
    "7": "contracts/helpers/ERC721Enumerable.sol",
    "8": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        5796
      ],
      "Context": [
        4027
      ],
      "ERC165": [
        5455
      ],
      "ERC721": [
        5400
      ],
      "ERC721Enumerable": [
        4378
      ],
      "IERC165": [
        4039
      ],
      "IERC721": [
        3106
      ],
      "IERC721Enumerable": [
        5431
      ],
      "IERC721Metadata": [
        5482
      ],
      "IERC721Receiver": [
        5500
      ],
      "Ownable": [
        2877
      ],
      "Strings": [
        4581
      ],
      "Wizards": [
        3959
      ]
    },
    "id": 3960,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3108,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 3109,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3960,
        "sourceUnit": 2878,
        "src": "94:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 3110,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3960,
        "sourceUnit": 4379,
        "src": "127:40:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 3111,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3960,
        "sourceUnit": 4582,
        "src": "169:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3112,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4378,
              "src": "379:16:22"
            },
            "id": 3113,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:22"
          },
          {
            "baseName": {
              "id": 3114,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2877,
              "src": "397:7:22"
            },
            "id": 3115,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:22"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3959,
        "linearizedBaseContracts": [
          3959,
          2877,
          4378,
          5431,
          5400,
          5482,
          3106,
          5455,
          4039,
          4027
        ],
        "name": "Wizards",
        "nameLocation": "368:7:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 3120,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "527:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 3959,
            "src": "493:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 3119,
              "keyType": {
                "id": 3116,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 3118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3117,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3165,
                  "src": "513:5:22"
                },
                "referencedDeclaration": 3165,
                "src": "513:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 3122,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "563:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 3959,
            "src": "548:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "572:36:22",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 3125,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "629:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 3959,
            "src": "614:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3124,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 3130,
            "members": [
              {
                "id": 3126,
                "name": "FIRE",
                "nameLocation": "697:4:22",
                "nodeType": "EnumValue",
                "src": "697:4:22"
              },
              {
                "id": 3127,
                "name": "WIND",
                "nameLocation": "703:4:22",
                "nodeType": "EnumValue",
                "src": "703:4:22"
              },
              {
                "id": 3128,
                "name": "WATER",
                "nameLocation": "709:5:22",
                "nodeType": "EnumValue",
                "src": "709:5:22"
              },
              {
                "id": 3129,
                "name": "EARTH",
                "nameLocation": "716:5:22",
                "nodeType": "EnumValue",
                "src": "716:5:22"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "688:7:22",
            "nodeType": "EnumDefinition",
            "src": "683:39:22"
          },
          {
            "canonicalName": "Wizards.OUTCOME",
            "id": 3135,
            "members": [
              {
                "id": 3131,
                "name": "LOSS",
                "nameLocation": "742:4:22",
                "nodeType": "EnumValue",
                "src": "742:4:22"
              },
              {
                "id": 3132,
                "name": "WIN",
                "nameLocation": "748:3:22",
                "nodeType": "EnumValue",
                "src": "748:3:22"
              },
              {
                "id": 3133,
                "name": "TIE",
                "nameLocation": "753:3:22",
                "nodeType": "EnumValue",
                "src": "753:3:22"
              },
              {
                "id": 3134,
                "name": "CAPTURE",
                "nameLocation": "758:7:22",
                "nodeType": "EnumValue",
                "src": "758:7:22"
              }
            ],
            "name": "OUTCOME",
            "nameLocation": "733:7:22",
            "nodeType": "EnumDefinition",
            "src": "728:38:22"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 3165,
            "members": [
              {
                "constant": false,
                "id": 3137,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "884:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "876:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3139,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "908:2:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "900:10:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3141,
                "mutability": "mutable",
                "name": "magicalPower",
                "nameLocation": "929:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "921:20:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3140,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3143,
                "mutability": "mutable",
                "name": "magicalDefense",
                "nameLocation": "960:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "952:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3142,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3145,
                "mutability": "mutable",
                "name": "speed",
                "nameLocation": "993:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "985:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3144,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "985:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3147,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "1017:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1009:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3146,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3149,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "1040:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1032:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3148,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1032:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3151,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "1065:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1057:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3150,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1057:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3153,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1091:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1083:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3152,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1083:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3155,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "1123:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1115:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3154,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1115:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3157,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "1150:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1142:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3156,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1142:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3159,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1176:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1168:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3158,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3161,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1234:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1226:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3160,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3164,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1320:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1312:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$3130",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 3163,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3162,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3130,
                    "src": "1312:7:22"
                  },
                  "referencedDeclaration": 3130,
                  "src": "1312:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$3130",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "829:5:22",
            "nodeType": "StructDefinition",
            "scope": 3959,
            "src": "822:513:22",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 3180,
            "members": [
              {
                "constant": false,
                "id": 3167,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1401:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1393:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3166,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1393:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3169,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1428:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1420:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3168,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1420:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3171,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1461:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1453:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3170,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1453:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3173,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1489:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1481:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3172,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1481:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3175,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1531:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1523:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3174,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3177,
                "mutability": "mutable",
                "name": "phaseDuration",
                "nameLocation": "1571:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1563:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3176,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1563:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3179,
                "mutability": "mutable",
                "name": "imageBaseURI",
                "nameLocation": "1602:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 3180,
                "src": "1595:19:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3178,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1595:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1350:16:22",
            "nodeType": "StructDefinition",
            "scope": 3959,
            "src": "1343:279:22",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 3183,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1654:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 3959,
            "src": "1630:40:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 3182,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3181,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3180,
                "src": "1630:16:22"
              },
              "referencedDeclaration": 3180,
              "src": "1630:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$3180_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5",
            "id": 3187,
            "name": "NewVerifier",
            "nameLocation": "1742:11:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1762:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3187,
                  "src": "1754:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:17:22"
            },
            "src": "1736:35:22"
          },
          {
            "anonymous": false,
            "eventSelector": "a6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4",
            "id": 3191,
            "name": "NewBattler",
            "nameLocation": "1783:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1802:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "1794:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:18:22"
            },
            "src": "1777:35:22"
          },
          {
            "anonymous": false,
            "eventSelector": "1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7",
            "id": 3199,
            "name": "Initiated",
            "nameLocation": "1824:9:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1842:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3199,
                  "src": "1834:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3195,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "1869:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3199,
                  "src": "1853:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1887:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3199,
                  "src": "1879:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:64:22"
            },
            "src": "1818:80:22"
          },
          {
            "body": {
              "id": 3214,
              "nodeType": "Block",
              "src": "2049:93:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3206,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "2067:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3208,
                        "indexExpression": {
                          "id": 3207,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3201,
                          "src": "2082:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2067:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "2067:49:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 3210,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2119:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2119:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2067:67:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3205,
                  "id": 3213,
                  "nodeType": "Return",
                  "src": "2060:74:22"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 3215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "1995:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2012:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3215,
                  "src": "2004:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:19:22"
            },
            "returnParameters": {
              "id": 3205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3215,
                  "src": "2043:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2042:6:22"
            },
            "scope": 3959,
            "src": "1986:156:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3227,
              "nodeType": "Block",
              "src": "2230:51:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3223,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "2248:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3225,
                    "indexExpression": {
                      "id": 3224,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3217,
                      "src": "2263:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2248:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "functionReturnParameters": 3222,
                  "id": 3226,
                  "nodeType": "Return",
                  "src": "2241:32:22"
                }
              ]
            },
            "functionSelector": "8cb22518",
            "id": 3228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatsGivenId",
            "nameLocation": "2159:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3217,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2183:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "2175:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2174:19:22"
            },
            "returnParameters": {
              "id": 3222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "2216:12:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                    "typeString": "struct Wizards.Stats"
                  },
                  "typeName": {
                    "id": 3220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3219,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3165,
                      "src": "2216:5:22"
                    },
                    "referencedDeclaration": 3165,
                    "src": "2216:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                      "typeString": "struct Wizards.Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2215:14:22"
            },
            "scope": 3959,
            "src": "2150:131:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3287,
              "nodeType": "Block",
              "src": "2516:468:22",
              "statements": [
                {
                  "expression": {
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3243,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2527:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3171,
                      "src": "2527:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 3246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2556:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2527:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:34:22"
                },
                {
                  "expression": {
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3249,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2572:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3169,
                      "src": "2572:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2606:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2572:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3254,
                  "nodeType": "ExpressionStatement",
                  "src": "2572:35:22"
                },
                {
                  "expression": {
                    "id": 3259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3255,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2618:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "2618:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 3258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2646:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2618:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3260,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:29:22"
                },
                {
                  "expression": {
                    "id": 3265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3261,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2686:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3173,
                      "src": "2686:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2729:6:22",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "2686:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3266,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:49:22"
                },
                {
                  "expression": {
                    "id": 3271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3267,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2774:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3175,
                      "src": "2774:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3270,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3234,
                      "src": "2815:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2774:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3272,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:49:22"
                },
                {
                  "expression": {
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3273,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2862:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3177,
                      "src": "2862:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "id": 3278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3630",
                        "id": 3276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2895:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2898:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "2895:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      }
                    },
                    "src": "2862:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "2862:38:22"
                },
                {
                  "expression": {
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3281,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "2921:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "imageBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3179,
                      "src": "2921:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3284,
                      "name": "_imageBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3236,
                      "src": "2953:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2921:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3286,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:45:22"
                }
              ]
            },
            "id": 3288,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3239,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3230,
                    "src": "2500:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3240,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3232,
                    "src": "2507:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3241,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3238,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5400,
                  "src": "2493:6:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2493:22:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2416:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "2402:19:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2437:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "2423:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3234,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2454:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "2446:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3236,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "2478:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "2464:27:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3235,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2464:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2401:91:22"
            },
            "returnParameters": {
              "id": 3242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2516:0:22"
            },
            "scope": 3959,
            "src": "2390:594:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "3017:961:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3292,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4129,
                            "src": "3036:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 3294,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3183,
                            "src": "3052:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 3295,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3171,
                          "src": "3052:26:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3036:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3080:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 3291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3028:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3028:69:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3299,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:69:22"
                },
                {
                  "assignments": [
                    3301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3301,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "3223:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3215:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3215:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3316,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3307,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4129,
                                  "src": "3274:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3274:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3309,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3289:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3289:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3311,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "3301:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3301:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3305,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3257:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "3257:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3257:60:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3304,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3247:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:71:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3239:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3239:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3239:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3215:104:22"
                },
                {
                  "assignments": [
                    3318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3318,
                      "mutability": "mutable",
                      "name": "hp",
                      "nameLocation": "3452:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3444:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3444:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3324,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3457:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3320,
                        "name": "pseudoRandNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3301,
                        "src": "3462:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3478:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3462:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3457:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3444:36:22"
                },
                {
                  "assignments": [
                    3326
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3326,
                      "mutability": "mutable",
                      "name": "magicalPower",
                      "nameLocation": "3499:12:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3491:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3325,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3491:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3335,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3514:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3328,
                              "name": "pseudoRandNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3301,
                              "src": "3520:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3520:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3331,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3519:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3541:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "3519:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3514:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3491:52:22"
                },
                {
                  "assignments": [
                    3337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3337,
                      "mutability": "mutable",
                      "name": "magicalDefense",
                      "nameLocation": "3562:14:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3554:22:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3554:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3348,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3579:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3339,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3301,
                                "src": "3585:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3599:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3585:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 3342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3602:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "3585:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3344,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3584:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3607:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3584:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3579:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3554:55:22"
                },
                {
                  "assignments": [
                    3350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3350,
                      "mutability": "mutable",
                      "name": "speed",
                      "nameLocation": "3628:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3620:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3620:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3361,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3636:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3352,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3301,
                                "src": "3642:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3656:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "3642:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 3355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3659:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3642:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3357,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3641:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3664:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "3641:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3636:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3620:46:22"
                },
                {
                  "assignments": [
                    3364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3364,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "3685:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3677:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$3130",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 3363,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3362,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3130,
                          "src": "3677:7:22"
                        },
                        "referencedDeclaration": 3130,
                        "src": "3677:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3375,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3366,
                                  "name": "pseudoRandNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3301,
                                  "src": "3704:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 3367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3718:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "3704:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 3369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3721:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "3704:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3371,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3703:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 3372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3726:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "3703:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3365,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "3695:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$3130_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$3130",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3677:51:22"
                },
                {
                  "assignments": [
                    3378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3378,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3754:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3414,
                      "src": "3741:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3376,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "3741:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "3741:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3395,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 3380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 3381,
                        "name": "hp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "3774:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3382,
                        "name": "magicalPower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "3778:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3383,
                        "name": "magicalDefense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3337,
                        "src": "3792:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3384,
                        "name": "speed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3350,
                        "src": "3808:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3815:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3818:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3821:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3824:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3827:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3830:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3833:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3836:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3393,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3364,
                        "src": "3839:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 3379,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "3765:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$3165_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3741:106:22"
                },
                {
                  "expression": {
                    "id": 3403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3396,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "3858:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 3401,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3397,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4129,
                            "src": "3873:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3873:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3887:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3873:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3858:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3402,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "3892:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "3858:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 3404,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3920:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3920:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3408,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4129,
                            "src": "3932:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3932:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3946:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3932:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3405,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5094,
                        5123
                      ],
                      "referencedDeclaration": 5094,
                      "src": "3910:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3910:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:39:22"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 3415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "3001:4:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3005:2:22"
            },
            "returnParameters": {
              "id": 3290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3017:0:22"
            },
            "scope": 3959,
            "src": "2992:986:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3473,
              "nodeType": "Block",
              "src": "4098:535:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3423,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3418,
                              "src": "4125:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3422,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4728,
                            "src": "4117:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4117:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3425,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4138:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4138:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4117:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 3428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4150:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 3421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4109:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4109:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3430,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3432,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3120,
                              "src": "4185:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 3434,
                            "indexExpression": {
                              "id": 3433,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3418,
                              "src": "4200:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4185:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 3435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3159,
                          "src": "4185:44:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4233:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4185:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 3438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4236:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 3431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4177:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3440,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:79:22"
                },
                {
                  "assignments": [
                    3443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3443,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "4366:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3473,
                      "src": "4352:21:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3442,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3441,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "4352:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "4352:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3447,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3444,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "4376:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3446,
                    "indexExpression": {
                      "id": 3445,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3418,
                      "src": "4391:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4376:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4352:48:22"
                },
                {
                  "expression": {
                    "id": 3453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3448,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "4411:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3159,
                      "src": "4411:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3451,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4441:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4441:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4411:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3454,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:45:22"
                },
                {
                  "expression": {
                    "id": 3463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3455,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3443,
                        "src": "4467:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3457,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "4467:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3458,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4501:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4501:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 3460,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3183,
                          "src": "4519:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3461,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3173,
                        "src": "4519:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4501:58:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4467:92:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3464,
                  "nodeType": "ExpressionStatement",
                  "src": "4467:92:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3466,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4587:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4587:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3468,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "4599:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3469,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4609:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4609:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3465,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3199,
                      "src": "4577:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4577:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3472,
                  "nodeType": "EmitStatement",
                  "src": "4572:53:22"
                }
              ]
            },
            "documentation": {
              "id": 3416,
              "nodeType": "StructuredDocumentation",
              "src": "3988:59:22",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 3474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "4062:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4079:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3474,
                  "src": "4071:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4070:18:22"
            },
            "returnParameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4098:0:22"
            },
            "scope": 3959,
            "src": "4053:580:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3537,
              "nodeType": "Block",
              "src": "4794:766:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3135",
                      "typeString": "enum Wizards.OUTCOME"
                    },
                    "id": 3493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3490,
                      "name": "outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3481,
                      "src": "4808:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3491,
                        "name": "OUTCOME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3135,
                        "src": "4819:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3135_$",
                          "typeString": "type(enum Wizards.OUTCOME)"
                        }
                      },
                      "id": 3492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "WIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3132,
                      "src": "4819:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "src": "4808:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      },
                      "id": 3512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3509,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3481,
                        "src": "4969:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3135",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3510,
                          "name": "OUTCOME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "4980:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3135_$",
                            "typeString": "type(enum Wizards.OUTCOME)"
                          }
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LOSS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3131,
                        "src": "4980:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3135",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "src": "4969:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3528,
                    "nodeType": "IfStatement",
                    "src": "4966:145:22",
                    "trueBody": {
                      "id": 3527,
                      "nodeType": "Block",
                      "src": "4993:118:22",
                      "statements": [
                        {
                          "expression": {
                            "id": 3518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3513,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "5008:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3515,
                                "indexExpression": {
                                  "id": 3514,
                                  "name": "_attackerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3476,
                                  "src": "5023:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5008:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3516,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "losses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3149,
                              "src": "5008:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5046:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5008:39:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3519,
                          "nodeType": "ExpressionStatement",
                          "src": "5008:39:22"
                        },
                        {
                          "expression": {
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3520,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "5062:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3522,
                                "indexExpression": {
                                  "id": 3521,
                                  "name": "_defenderId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3478,
                                  "src": "5077:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5062:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3523,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "wins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3147,
                              "src": "5062:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5098:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5062:37:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3526,
                          "nodeType": "ExpressionStatement",
                          "src": "5062:37:22"
                        }
                      ]
                    }
                  },
                  "id": 3529,
                  "nodeType": "IfStatement",
                  "src": "4805:306:22",
                  "trueBody": {
                    "id": 3508,
                    "nodeType": "Block",
                    "src": "4831:120:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3494,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3120,
                                "src": "4846:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3496,
                              "indexExpression": {
                                "id": 3495,
                                "name": "_attackerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3476,
                                "src": "4861:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4846:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3497,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3147,
                            "src": "4846:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4882:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4846:37:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3500,
                        "nodeType": "ExpressionStatement",
                        "src": "4846:37:22"
                      },
                      {
                        "expression": {
                          "id": 3506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3501,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3120,
                                "src": "4898:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3503,
                              "indexExpression": {
                                "id": 3502,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3478,
                                "src": "4913:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4898:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "losses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3149,
                            "src": "4898:34:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4936:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4898:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3507,
                        "nodeType": "ExpressionStatement",
                        "src": "4898:39:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3530,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "5123:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3532,
                        "indexExpression": {
                          "id": 3531,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3476,
                          "src": "5138:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5123:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3533,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3153,
                      "src": "5123:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3534,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "5168:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5123:55:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3536,
                  "nodeType": "ExpressionStatement",
                  "src": "5123:55:22"
                }
              ]
            },
            "functionSelector": "8140bd0b",
            "id": 3538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3487,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3898,
                  "src": "4782:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4782:11:22"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "4650:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3476,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "4671:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "4663:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4663:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3478,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "4692:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "4684:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4684:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3481,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nameLocation": "4713:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "4705:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OUTCOME_$3135",
                    "typeString": "enum Wizards.OUTCOME"
                  },
                  "typeName": {
                    "id": 3480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3479,
                      "name": "OUTCOME",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3135,
                      "src": "4705:7:22"
                    },
                    "referencedDeclaration": 3135,
                    "src": "4705:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3135",
                      "typeString": "enum Wizards.OUTCOME"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3483,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "4730:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "4722:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4722:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "4759:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3538,
                  "src": "4751:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4751:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4662:110:22"
            },
            "returnParameters": {
              "id": 3489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4794:0:22"
            },
            "scope": 3959,
            "src": "4641:919:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3546,
              "nodeType": "Block",
              "src": "5679:10:22",
              "statements": []
            },
            "documentation": {
              "id": 3539,
              "nodeType": "StructuredDocumentation",
              "src": "5568:43:22",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 3547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "5626:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3541,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5645:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "5637:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5637:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5636:18:22"
            },
            "returnParameters": {
              "id": 3545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3547,
                  "src": "5670:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5669:9:22"
            },
            "scope": 3959,
            "src": "5617:72:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3555,
              "nodeType": "Block",
              "src": "5837:10:22",
              "statements": []
            },
            "documentation": {
              "id": 3548,
              "nodeType": "StructuredDocumentation",
              "src": "5697:72:22",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 3556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "5784:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5806:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3556,
                  "src": "5798:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5798:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5797:18:22"
            },
            "returnParameters": {
              "id": 3554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3556,
                  "src": "5831:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3552,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5831:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5830:6:22"
            },
            "scope": 3959,
            "src": "5775:72:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3589,
              "nodeType": "Block",
              "src": "6007:369:22",
              "statements": [
                {
                  "expression": {
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3566,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "6056:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3568,
                        "indexExpression": {
                          "id": 3567,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3559,
                          "src": "6071:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6056:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "6056:48:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3570,
                        "name": "_timeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "6107:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3571,
                                    "name": "tokenIdToStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3120,
                                    "src": "6122:14:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                      "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                    }
                                  },
                                  "id": 3573,
                                  "indexExpression": {
                                    "id": 3572,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3559,
                                    "src": "6137:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6122:24:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                    "typeString": "struct Wizards.Stats storage ref"
                                  }
                                },
                                "id": 3574,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "protectedUntilTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3161,
                                "src": "6122:48:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 3575,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6173:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6173:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6122:66:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3580,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "6227:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3582,
                                "indexExpression": {
                                  "id": 3581,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3559,
                                  "src": "6242:8:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6227:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3583,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "protectedUntilTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3161,
                              "src": "6227:48:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "6122:153:22",
                            "trueExpression": {
                              "expression": {
                                "id": 3578,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6209:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6209:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3585,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6121:155:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6107:169:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6056:220:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "6056:220:22"
                }
              ]
            },
            "documentation": {
              "id": 3557,
              "nodeType": "StructuredDocumentation",
              "src": "5855:65:22",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "8ad4d6a5",
            "id": 3590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3563,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3871,
                  "src": "5994:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5994:12:22"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "5935:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3559,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5954:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3590,
                  "src": "5946:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5946:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "_timeReward",
                  "nameLocation": "5972:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3590,
                  "src": "5964:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5964:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5945:39:22"
            },
            "returnParameters": {
              "id": 3565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6007:0:22"
            },
            "scope": 3959,
            "src": "5926:450:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3598,
              "nodeType": "Block",
              "src": "6534:8:22",
              "statements": []
            },
            "documentation": {
              "id": 3591,
              "nodeType": "StructuredDocumentation",
              "src": "6388:87:22",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 3599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3595,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3886,
                  "src": "6514:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6514:10:22"
              }
            ],
            "name": "crush",
            "nameLocation": "6490:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3593,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6504:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "6496:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6495:18:22"
            },
            "returnParameters": {
              "id": 3597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6534:0:22"
            },
            "scope": 3959,
            "src": "6481:61:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4790
            ],
            "body": {
              "id": 3680,
              "nodeType": "Block",
              "src": "6641:869:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3609,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3601,
                            "src": "6668:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3608,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5038,
                          "src": "6660:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6660:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6679:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 3607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6652:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:77:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3613,
                  "nodeType": "ExpressionStatement",
                  "src": "6652:77:22"
                },
                {
                  "assignments": [
                    3615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3615,
                      "mutability": "mutable",
                      "name": "linkExtension",
                      "nameLocation": "6787:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3680,
                      "src": "6773:27:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3614,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6773:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3616,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6773:27:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3617,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "6814:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3619,
                        "indexExpression": {
                          "id": 3618,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3601,
                          "src": "6829:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6814:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3159,
                      "src": "6814:44:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6860:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6814:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3660,
                    "nodeType": "Block",
                    "src": "6977:360:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3628,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3615,
                            "src": "6992:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3637,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3631,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "7073:5:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 3632,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "7073:15:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 3633,
                                                "name": "tokenIdToStats",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3120,
                                                "src": "7091:14:22",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                                }
                                              },
                                              "id": 3635,
                                              "indexExpression": {
                                                "id": 3634,
                                                "name": "_tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3601,
                                                "src": "7106:8:22",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "7091:24:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                                "typeString": "struct Wizards.Stats storage ref"
                                              }
                                            },
                                            "id": 3636,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initiationTimestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3159,
                                            "src": "7091:44:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "7073:62:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 3638,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "7072:64:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3639,
                                        "name": "contractSettings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3183,
                                        "src": "7139:16:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                                          "typeString": "struct Wizards.ContractSettings storage ref"
                                        }
                                      },
                                      "id": 3640,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phaseDuration",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3177,
                                      "src": "7139:30:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7072:97:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "37",
                                    "id": 3642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7195:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_7_by_1",
                                      "typeString": "int_const 7"
                                    },
                                    "value": "7"
                                  },
                                  "src": "7072:124:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 3645,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "7204:5:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 3646,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "7204:15:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 3647,
                                              "name": "tokenIdToStats",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3120,
                                              "src": "7222:14:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                              }
                                            },
                                            "id": 3649,
                                            "indexExpression": {
                                              "id": 3648,
                                              "name": "_tokenId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3601,
                                              "src": "7237:8:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7222:24:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                              "typeString": "struct Wizards.Stats storage ref"
                                            }
                                          },
                                          "id": 3650,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "initiationTimestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3159,
                                          "src": "7222:44:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7204:62:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3652,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7203:64:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3653,
                                      "name": "contractSettings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3183,
                                      "src": "7270:16:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                                        "typeString": "struct Wizards.ContractSettings storage ref"
                                      }
                                    },
                                    "id": 3654,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "phaseDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3177,
                                    "src": "7270:30:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7203:97:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7072:228:22",
                                "trueExpression": {
                                  "hexValue": "37",
                                  "id": 3644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7199:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3629,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4581,
                                "src": "7031:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4463,
                              "src": "7031:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7031:294:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "6992:333:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 3659,
                        "nodeType": "ExpressionStatement",
                        "src": "6992:333:22"
                      }
                    ]
                  },
                  "id": 3661,
                  "nodeType": "IfStatement",
                  "src": "6811:526:22",
                  "trueBody": {
                    "id": 3627,
                    "nodeType": "Block",
                    "src": "6862:101:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3623,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3615,
                            "src": "6892:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6908:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                              "typeString": "literal_string \"0\""
                            },
                            "value": "0"
                          },
                          "src": "6892:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 3626,
                        "nodeType": "ExpressionStatement",
                        "src": "6892:19:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3663,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "7361:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3680,
                      "src": "7347:22:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3662,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7347:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3674,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3668,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "7396:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 3669,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "imageBaseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3179,
                            "src": "7396:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 3670,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3615,
                            "src": "7427:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a7067",
                            "id": 3671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7442:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            },
                            "value": ".jpg"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            }
                          ],
                          "expression": {
                            "id": 3666,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7379:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7379:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7379:70:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7372:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3664,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7372:6:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7372:78:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7347:103:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3676,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3601,
                        "src": "7483:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3677,
                        "name": "imageURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3663,
                        "src": "7493:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3675,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3820,
                      "src": "7468:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 3678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7468:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3606,
                  "id": 3679,
                  "nodeType": "Return",
                  "src": "7461:41:22"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "6561:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3603,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6608:8:22"
            },
            "parameters": {
              "id": 3602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3601,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6578:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3681,
                  "src": "6570:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:18:22"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3681,
                  "src": "6626:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6626:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6625:15:22"
            },
            "scope": 3959,
            "src": "6552:958:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3819,
              "nodeType": "Block",
              "src": "7620:3133:22",
              "statements": [
                {
                  "assignments": [
                    3692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3692,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "7699:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3819,
                      "src": "7686:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3691,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3690,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "7686:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "7686:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3696,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3693,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "7709:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3695,
                    "indexExpression": {
                      "id": 3694,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3683,
                      "src": "7724:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7709:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7686:47:22"
                },
                {
                  "assignments": [
                    3698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3698,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "7760:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3819,
                      "src": "7746:22:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3697,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7746:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3718,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7809:30:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 3704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7854:72:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 3705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7941:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 3706,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3685,
                            "src": "7971:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 3707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7981:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 3708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7999:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 3709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8061:78:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3712,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3692,
                                  "src": "8171:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 3713,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3137,
                                "src": "8171:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3710,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4581,
                                "src": "8154:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4463,
                              "src": "8154:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8154:31:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 3715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8187:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 3701,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7778:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7778:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7778:424:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7771:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3699,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7771:6:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7771:432:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7746:457:22"
                },
                {
                  "expression": {
                    "id": 3748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3719,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3698,
                      "src": "8268:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3724,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "8303:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 3725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8326:60:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3728,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "8418:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3729,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3139,
                                  "src": "8418:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3726,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "8401:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "8401:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8401:28:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8433:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20706f776572222c202276616c7565223a20",
                              "id": 3732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8452:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3735,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "8555:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3736,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalPower",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3141,
                                  "src": "8555:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3733,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "8538:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "8538:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8538:38:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8580:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20646566656e7365222c202276616c7565223a20",
                              "id": 3739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8603:73:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3742,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "8708:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3743,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalDefense",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3143,
                                  "src": "8708:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3740,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "8691:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "8691:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8691:40:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8735:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3722,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8286:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8286:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8286:464:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8279:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3720,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8279:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8279:472:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8268:483:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3749,
                  "nodeType": "ExpressionStatement",
                  "src": "8268:483:22"
                },
                {
                  "expression": {
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3750,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3698,
                      "src": "8816:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3755,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "8851:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20227370656564222c202276616c7565223a20",
                              "id": 3756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8874:63:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3759,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "8969:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3760,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "speed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3145,
                                  "src": "8969:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3757,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "8952:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "8952:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8952:31:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8987:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d70222c202276616c7565223a20",
                              "id": 3763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9006:60:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3766,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "9098:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3767,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3147,
                                  "src": "9098:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3764,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "9081:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "9081:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9081:30:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9115:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7311929b2d5093f43b292650722d80e3386cfc45c0890cc5b812404a84c79f6f",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3753,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "8834:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "8834:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8834:296:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8827:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3751,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8827:304:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8816:315:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "8816:315:22"
                },
                {
                  "expression": {
                    "id": 3803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3774,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3698,
                      "src": "9198:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3779,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "9233:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 3780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9256:64:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3783,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "9352:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3784,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "losses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3149,
                                  "src": "9352:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3781,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "9335:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "9335:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9335:32:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9371:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 3787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9390:65:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3790,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "9487:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3791,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "battles",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3151,
                                  "src": "9487:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3788,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "9470:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "9470:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9470:33:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9507:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 3794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9530:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3797,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3692,
                                    "src": "9633:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3798,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3153,
                                  "src": "9633:21:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3795,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4581,
                                  "src": "9616:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4581_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4463,
                                "src": "9616:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9616:39:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9659:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3777,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9216:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "9216:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9216:458:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9209:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3775,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9209:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9209:466:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9198:477:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3804,
                  "nodeType": "ExpressionStatement",
                  "src": "9198:477:22"
                },
                {
                  "expression": {
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3805,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3698,
                      "src": "9711:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3810,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "9746:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 3811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9756:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 3812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9760:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 3808,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9729:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "9729:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9729:35:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9722:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3806,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9722:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9722:43:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "9711:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "9711:54:22"
                },
                {
                  "expression": {
                    "id": 3817,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3698,
                    "src": "10737:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3689,
                  "id": 3818,
                  "nodeType": "Return",
                  "src": "10730:15:22"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 3820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "7527:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3683,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7550:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "7542:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7542:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3685,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "7574:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "7560:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7560:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7541:42:22"
            },
            "returnParameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "7605:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7605:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7604:15:22"
            },
            "scope": 3959,
            "src": "7518:3235:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3855,
              "nodeType": "Block",
              "src": "11615:218:22",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 3835,
                      "name": "contractSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "11626:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                        "typeString": "struct Wizards.ContractSettings storage ref"
                      }
                    },
                    "id": 3837,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "imageBaseURI",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3179,
                    "src": "11626:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3838,
                  "nodeType": "ExpressionStatement",
                  "src": "11626:29:22"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 3839,
                      "name": "contractSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "11666:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                        "typeString": "struct Wizards.ContractSettings storage ref"
                      }
                    },
                    "id": 3841,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "phaseDuration",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3177,
                    "src": "11666:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3842,
                  "nodeType": "ExpressionStatement",
                  "src": "11666:30:22"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 3843,
                      "name": "contractSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "11707:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                        "typeString": "struct Wizards.ContractSettings storage ref"
                      }
                    },
                    "id": 3845,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "protectionTimeExtension",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3173,
                    "src": "11707:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3846,
                  "nodeType": "ExpressionStatement",
                  "src": "11707:40:22"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 3847,
                      "name": "contractSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "11758:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                        "typeString": "struct Wizards.ContractSettings storage ref"
                      }
                    },
                    "id": 3849,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "mintCost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3167,
                    "src": "11758:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3850,
                  "nodeType": "ExpressionStatement",
                  "src": "11758:25:22"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 3851,
                      "name": "contractSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "11794:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContractSettings_$3180_storage",
                        "typeString": "struct Wizards.ContractSettings storage ref"
                      }
                    },
                    "id": 3853,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "initiationCost",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3169,
                    "src": "11794:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3854,
                  "nodeType": "ExpressionStatement",
                  "src": "11794:31:22"
                }
              ]
            },
            "functionSelector": "3b6029ca",
            "id": 3856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3833,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3832,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "11605:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11605:9:22"
              }
            ],
            "name": "modifyContractSettings",
            "nameLocation": "11421:22:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3822,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "11458:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3856,
                  "src": "11444:27:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3821,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11444:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3824,
                  "mutability": "mutable",
                  "name": "_phaseDuration",
                  "nameLocation": "11481:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3856,
                  "src": "11473:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11473:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3826,
                  "mutability": "mutable",
                  "name": "_protectionTimeExtension",
                  "nameLocation": "11505:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3856,
                  "src": "11497:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11497:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3828,
                  "mutability": "mutable",
                  "name": "_mintCost",
                  "nameLocation": "11539:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3856,
                  "src": "11531:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11531:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3830,
                  "mutability": "mutable",
                  "name": "_initiationCost",
                  "nameLocation": "11579:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3856,
                  "src": "11571:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11571:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11443:152:22"
            },
            "returnParameters": {
              "id": 3834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11615:0:22"
            },
            "scope": 3959,
            "src": "11412:421:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3870,
              "nodeType": "Block",
              "src": "11966:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3859,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11985:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11985:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3863,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "12007:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3959",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3959",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11999:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3861,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11999:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11999:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11985:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12014:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11977:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11977:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3868,
                  "nodeType": "ExpressionStatement",
                  "src": "11977:53:22"
                },
                {
                  "id": 3869,
                  "nodeType": "PlaceholderStatement",
                  "src": "12098:1:22"
                }
              ]
            },
            "id": 3871,
            "name": "onlyVerifier",
            "nameLocation": "11951:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11963:2:22"
            },
            "src": "11942:165:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3885,
              "nodeType": "Block",
              "src": "12137:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3874,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12156:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12156:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 3878,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "12178:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3959",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$3959",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 3877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12170:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3876,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12170:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12170:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12156:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 3881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12185:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 3873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12148:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12148:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "12148:53:22"
                },
                {
                  "id": 3884,
                  "nodeType": "PlaceholderStatement",
                  "src": "12269:1:22"
                }
              ]
            },
            "id": 3886,
            "name": "onlyHolder",
            "nameLocation": "12124:10:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12134:2:22"
            },
            "src": "12115:163:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3897,
              "nodeType": "Block",
              "src": "12309:138:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3889,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12342:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12342:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3891,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3122,
                          "src": "12356:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12342:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 3893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12378:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 3888,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12320:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12320:107:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3895,
                  "nodeType": "ExpressionStatement",
                  "src": "12320:107:22"
                },
                {
                  "id": 3896,
                  "nodeType": "PlaceholderStatement",
                  "src": "12438:1:22"
                }
              ]
            },
            "id": 3898,
            "name": "onlyBattler",
            "nameLocation": "12295:11:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12306:2:22"
            },
            "src": "12286:161:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3927,
              "nodeType": "Block",
              "src": "12612:166:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3906,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3900,
                            "src": "12631:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12651:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12643:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3907,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12643:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12643:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12631:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3912,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3900,
                            "src": "12657:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3913,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3122,
                            "src": "12669:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12657:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12631:45:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12678:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3905,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12623:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12623:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3918,
                  "nodeType": "ExpressionStatement",
                  "src": "12623:82:22"
                },
                {
                  "expression": {
                    "id": 3921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3919,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "12716:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3920,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3900,
                      "src": "12726:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12716:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3922,
                  "nodeType": "ExpressionStatement",
                  "src": "12716:18:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3924,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3900,
                        "src": "12761:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3923,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "12750:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12750:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3926,
                  "nodeType": "EmitStatement",
                  "src": "12745:25:22"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 3928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3903,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3902,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "12602:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "12602:9:22"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "12561:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3900,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "12583:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3928,
                  "src": "12575:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12575:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12574:18:22"
            },
            "returnParameters": {
              "id": 3904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12612:0:22"
            },
            "scope": 3959,
            "src": "12552:226:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3957,
              "nodeType": "Block",
              "src": "12848:173:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3936,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3930,
                            "src": "12867:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12888:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12880:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3937,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12880:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12880:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12867:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3942,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3930,
                            "src": "12894:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 3943,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "12907:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12894:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12867:48:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12917:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 3935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12859:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12859:85:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3948,
                  "nodeType": "ExpressionStatement",
                  "src": "12859:85:22"
                },
                {
                  "expression": {
                    "id": 3951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3949,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "12955:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3950,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3930,
                      "src": "12966:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12955:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3952,
                  "nodeType": "ExpressionStatement",
                  "src": "12955:20:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3954,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "13003:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3953,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3187,
                      "src": "12991:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12991:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3956,
                  "nodeType": "EmitStatement",
                  "src": "12986:27:22"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 3958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3932,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "12838:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "12838:9:22"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "12795:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3930,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "12818:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3958,
                  "src": "12810:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12810:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12809:19:22"
            },
            "returnParameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12848:0:22"
            },
            "scope": 3959,
            "src": "12786:235:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3960,
        "src": "359:12667:22",
        "usedErrors": []
      }
    ],
    "src": "33:12993:22"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620035b5380380620035b58339810160408190526200003491620001e4565b8383600062000044838262000326565b50600162000053828262000326565b505050620000706200006a620000c160201b60201c565b620000c5565b6127106010556001600f556005600e5562015180601155601280546001600160a01b0319166001600160a01b038416179055610e106013556014620000b6828262000326565b5050505050620003f2565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013f57600080fd5b81516001600160401b03808211156200015c576200015c62000117565b604051601f8301601f19908116603f0116810190828211818310171562000187576200018762000117565b81604052838152602092508683858801011115620001a457600080fd5b600091505b83821015620001c85785820183015181830184015290820190620001a9565b83821115620001da5760008385830101525b9695505050505050565b60008060008060808587031215620001fb57600080fd5b84516001600160401b03808211156200021357600080fd5b62000221888389016200012d565b955060208701519150808211156200023857600080fd5b62000246888389016200012d565b604088015190955091506001600160a01b03821682146200026657600080fd5b6060870151919350808211156200027c57600080fd5b506200028b878288016200012d565b91505092959194509250565b600181811c90821680620002ac57607f821691505b602082108103620002cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032157600081815260208120601f850160051c81016020861015620002fc5750805b601f850160051c820191505b818110156200031d5782815560010162000308565b5050505b505050565b81516001600160401b0381111562000342576200034262000117565b6200035a8162000353845462000297565b84620002d3565b602080601f831160018114620003925760008415620003795750858301515b600019600386901b1c1916600185901b1785556200031d565b600085815260208120601f198616915b82811015620003c357888601518255948401946001909101908401620003a2565b5085821015620003e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6131b380620004026000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063715018a611610125578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461049a578063db2a0a5514610533578063e52e32491461054e578063e985e9c514610561578063f2fde38b1461059d57600080fd5b8063a22cb4651461044e578063b88d4fde14610461578063bc0b0d8814610474578063c87b56dd1461048757600080fd5b80638ad4d6a5116100f45780638ad4d6a5146103ef5780638cb22518146104025780638da5cb5b1461042257806395d89b411461043357806397fc007c1461043b57600080fd5b8063715018a61461039c5780637901ea78146103a45780638140bd0b146103b757806382afd23b146103ca57600080fd5b806323b872dd116101a857806342842e0e1161017757806342842e0e1461033d578063437454b9146103505780634f6ccce7146103635780636352211e1461037657806370a082311461038957600080fd5b806323b872dd146102f15780632b7ac3f3146103045780632f745c59146103175780633b6029ca1461032a57600080fd5b8063081812fc116101ef578063081812fc14610293578063095ea7b3146102be5780630a363d08146102d35780631249c58b146102e157806318160ddd146102e957600080fd5b806301ffc9a7146102215780630419e31414610249578063051063531461026957806306fdde031461028b575b600080fd5b61023461022f366004612415565b6105b0565b60405190151581526020015b60405180910390f35b61025c6102573660046124e5565b6105db565b6040516102409190612584565b61027d610277366004612597565b50600090565b604051908152602001610240565b61025c6107ee565b6102a66102a1366004612597565b610880565b6040516001600160a01b039091168152602001610240565b6102d16102cc3660046125cc565b61091a565b005b610234610277366004612597565b6102d1610a2f565b60085461027d565b6102d16102ff3660046125f6565b610d1d565b600d546102a6906001600160a01b031681565b61027d6103253660046125cc565b610d4e565b6102d1610338366004612632565b610de4565b6102d161034b3660046125f6565b610e15565b6102d161035e366004612597565b610e30565b61027d610371366004612597565b610e72565b6102a6610384366004612597565b610f05565b61027d61039736600461268f565b610f7c565b6102d1611003565b6102d16103b2366004612597565b611039565b6102d16103c53660046126aa565b611147565b6102346103d8366004612597565b6000908152600b60205260409020600c0154421090565b6102d16103fd3660046126f7565b6112af565b610415610410366004612597565b611342565b6040516102409190612751565b600a546001600160a01b03166102a6565b61025c611429565b6102d161044936600461268f565b611438565b6102d161045c3660046127fb565b611524565b6102d161046f366004612837565b6115e8565b600c546102a6906001600160a01b031681565b61025c610495366004612597565b611620565b6105196104a8366004612597565b600b60208190526000918252604090912080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b01549b8b0154600c8c0154600d909c01549a9c999b989a979996989597949693959294919392909160ff168e565b6040516102409e9d9c9b9a999897969594939291906128b3565b61053b611780565b604051610240979695949392919061292d565b6102d161055c36600461268f565b611839565b61023461056f366004612979565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102d16105ab36600461268f565b61191e565b60006001600160e01b0319821663780e9d6360e01b14806105d557506105d5826119b6565b92915050565b60606000600b6000858152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff1660038111156106a4576106a4612719565b60038111156106b5576106b5612719565b8152505090506000836106cb8360000151611a06565b6040516020016106dc9291906129c8565b6040516020818303038152906040529050806106fb8360200151611a06565b6107088460400151611a06565b6107158560600151611a06565b6040516020016107289493929190612b22565b6040516020818303038152906040529050806107478360800151611a06565b6107548460a00151611a06565b60405160200161076693929190612c54565b6040516020818303038152906040529050806107858360c00151611a06565b6107928460e00151611a06565b6107a0856101000151611a06565b6040516020016107b39493929190612d31565b6040516020818303038152906040529050806040516020016107d59190612e47565b60408051808303601f1901815291905295945050505050565b6060600080546107fd90612e76565b80601f016020809104026020016040519081016040528092919081815260200182805461082990612e76565b80156108765780601f1061084b57610100808354040283529160200191610876565b820191906000526020600020905b81548152906001019060200180831161085957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166108fe5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061092582610f05565b9050806001600160a01b0316836001600160a01b0316036109925760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016108f5565b336001600160a01b03821614806109ae57506109ae813361056f565b610a205760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016108f5565b610a2a8383611b07565b505050565b60105460085410610a735760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b60448201526064016108f5565b6000610a7e60085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f19818403018152919052805160209091012090506000610ad1601a83612ec6565b610adc906019612ef0565b90506000601a610aed606485612f08565b610af79190612ec6565b610b02906019612ef0565b90506000600a610b128186612f08565b610b1d906004612f1c565b610b279190612ec6565b610b3290600a612ef0565b90506000600a610b428187612f08565b610b4d906005612f1c565b610b579190612ec6565b610b6290600a612ef0565b905060006004610b73600a88612f08565b610b7e906006612f1c565b610b889190612ec6565b6003811115610b9957610b99612719565b90506000604051806101c00160405280600181526020018781526020018681526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001836003811115610c1257610c12612719565b9052905080600b6000610c2460085490565b610c2f906001612ef0565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c01556101a082015181600d0160006101000a81548160ff02191690836003811115610cef57610cef612719565b0217905550905050610d1433610d0460085490565b610d0f906001612ef0565b611b75565b50505050505050565b610d273382611b93565b610d435760405162461bcd60e51b81526004016108f590612f3b565b610a2a838383611c86565b6000610d5983610f7c565b8210610dbb5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016108f5565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610e0e5760405162461bcd60e51b81526004016108f590612f8c565b5050505050565b610a2a838383604051806020016040528060008152506115e8565b303303610e6f5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b60448201526064016108f5565b50565b6000610e7d60085490565b8210610ee05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016108f5565b60088281548110610ef357610ef3612fc1565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105d55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016108f5565b60006001600160a01b038216610fe75760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016108f5565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b0316331461102d5760405162461bcd60e51b81526004016108f590612f8c565b6110376000611e31565b565b3361104382610f05565b6001600160a01b0316146110895760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b60448201526064016108f5565b6000818152600b602081905260409091200154156110dd5760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b60448201526064016108f5565b6000818152600b602081905260409091204291810182905560115490916111049190612ef0565b600c8201556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b600c546001600160a01b031633146111ad5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b60648201526084016108f5565b60018360038111156111c1576111c1612719565b0361121a576000858152600b602052604081206005018054600192906111e8908490612ef0565b90915550506000848152600b6020526040812060060180546001929061120f908490612ef0565b909155506112829050565b600083600381111561122e5761122e612719565b03611282576000858152600b60205260408120600601805460019290611255908490612ef0565b90915550506000848152600b6020526040812060050180546001929061127c908490612ef0565b90915550505b6000858152600b6020526040812060080180548492906112a3908490612ef0565b90915550505050505050565b3033036112ee5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b60448201526064016108f5565b6000828152600b60205260409020600c0154421161131d576000828152600b60205260409020600c015461131f565b425b6113299082612ef0565b6000928352600b6020526040909220600c019190915550565b61134a612380565b600b6000838152602001908152602001600020604051806101c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201548152602001600c8201548152602001600d820160009054906101000a900460ff16600381111561140f5761140f612719565b600381111561142057611420612719565b90525092915050565b6060600180546107fd90612e76565b600a546001600160a01b031633146114625760405162461bcd60e51b81526004016108f590612f8c565b6001600160a01b038116158015906114885750600d546001600160a01b03828116911614155b6114cf5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108f5565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b336001600160a01b0383160361157c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108f5565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6115f23383611b93565b61160e5760405162461bcd60e51b81526004016108f590612f3b565b61161a84848484611e83565b50505050565b6000818152600260205260409020546060906001600160a01b031661169f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016108f5565b6000828152600b6020819052604082200154606091036116d757506040805180820190915260018152600360fc1b6020820152611746565b6013546000848152600b602081905260409091200154611743916007916116fe9042612fd7565b6117089190612f08565b1161173c576013546000858152600b60208190526040909120015461172d9042612fd7565b6117379190612f08565b611a06565b6007611a06565b90505b60405160009061175d906014908490602001612fee565b604051602081830303815290604052905061177884826105db565b949350505050565b600e8054600f546010546011546012546013546014805496979596949593946001600160a01b039093169391926117b690612e76565b80601f01602080910402602001604051908101604052809291908181526020018280546117e290612e76565b801561182f5780601f106118045761010080835404028352916020019161182f565b820191906000526020600020905b81548152906001019060200180831161181257829003601f168201915b5050505050905087565b600a546001600160a01b031633146118635760405162461bcd60e51b81526004016108f590612f8c565b6001600160a01b038116158015906118895750600c546001600160a01b03828116911614155b6118d05760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b60448201526064016108f5565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a490602001611519565b600a546001600160a01b031633146119485760405162461bcd60e51b81526004016108f590612f8c565b6001600160a01b0381166119ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108f5565b610e6f81611e31565b60006001600160e01b031982166380ac58cd60e01b14806119e757506001600160e01b03198216635b5e139f60e01b145b806105d557506301ffc9a760e01b6001600160e01b03198316146105d5565b606081600003611a2d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a575780611a41816130a2565b9150611a509050600a83612f08565b9150611a31565b60008167ffffffffffffffff811115611a7257611a72612439565b6040519080825280601f01601f191660200182016040528015611a9c576020820181803683370190505b5090505b841561177857611ab1600183612fd7565b9150611abe600a86612ec6565b611ac9906030612ef0565b60f81b818381518110611ade57611ade612fc1565b60200101906001600160f81b031916908160001a905350611b00600a86612f08565b9450611aa0565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611b3c82610f05565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611b8f828260405180602001604052806000815250611eb6565b5050565b6000818152600260205260408120546001600160a01b0316611c0c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016108f5565b6000611c1783610f05565b9050806001600160a01b0316846001600160a01b03161480611c525750836001600160a01b0316611c4784610880565b6001600160a01b0316145b8061177857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611778565b826001600160a01b0316611c9982610f05565b6001600160a01b031614611d015760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016108f5565b6001600160a01b038216611d635760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108f5565b611d6e838383611ee9565b611d79600082611b07565b6001600160a01b0383166000908152600360205260408120805460019290611da2908490612fd7565b90915550506001600160a01b0382166000908152600360205260408120805460019290611dd0908490612ef0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611e8e848484611c86565b611e9a84848484611fa1565b61161a5760405162461bcd60e51b81526004016108f5906130bb565b611ec083836120a2565b611ecd6000848484611fa1565b610a2a5760405162461bcd60e51b81526004016108f5906130bb565b6001600160a01b038316611f4457611f3f81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f67565b816001600160a01b0316836001600160a01b031614611f6757611f6783826121f0565b6001600160a01b038216611f7e57610a2a8161228d565b826001600160a01b0316826001600160a01b031614610a2a57610a2a828261233c565b60006001600160a01b0384163b1561209757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611fe590339089908890889060040161310d565b6020604051808303816000875af1925050508015612020575060408051601f3d908101601f1916820190925261201d9181019061314a565b60015b61207d573d80801561204e576040519150601f19603f3d011682016040523d82523d6000602084013e612053565b606091505b5080516000036120755760405162461bcd60e51b81526004016108f5906130bb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611778565b506001949350505050565b6001600160a01b0382166120f85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108f5565b6000818152600260205260409020546001600160a01b03161561215d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108f5565b61216960008383611ee9565b6001600160a01b0382166000908152600360205260408120805460019290612192908490612ef0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600060016121fd84610f7c565b6122079190612fd7565b60008381526007602052604090205490915080821461225a576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061229f90600190612fd7565b600083815260096020526040812054600880549394509092849081106122c7576122c7612fc1565b9060005260206000200154905080600883815481106122e8576122e8612fc1565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061232057612320613167565b6001900381819060005260206000200160009055905550505050565b600061234783610f7c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b604051806101c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060038111156123fa576123fa612719565b905290565b6001600160e01b031981168114610e6f57600080fd5b60006020828403121561242757600080fd5b8135612432816123ff565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561246a5761246a612439565b604051601f8501601f19908116603f0116810190828211818310171561249257612492612439565b816040528093508581528686860111156124ab57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126124d657600080fd5b6124328383356020850161244f565b600080604083850312156124f857600080fd5b82359150602083013567ffffffffffffffff81111561251657600080fd5b612522858286016124c5565b9150509250929050565b60005b8381101561254757818101518382015260200161252f565b8381111561161a5750506000910152565b6000815180845261257081602086016020860161252c565b601f01601f19169290920160200192915050565b6020815260006124326020830184612558565b6000602082840312156125a957600080fd5b5035919050565b80356001600160a01b03811681146125c757600080fd5b919050565b600080604083850312156125df57600080fd5b6125e8836125b0565b946020939093013593505050565b60008060006060848603121561260b57600080fd5b612614846125b0565b9250612622602085016125b0565b9150604084013590509250925092565b600080600080600060a0868803121561264a57600080fd5b853567ffffffffffffffff81111561266157600080fd5b61266d888289016124c5565b9860208801359850604088013597606081013597506080013595509350505050565b6000602082840312156126a157600080fd5b612432826125b0565b600080600080600060a086880312156126c257600080fd5b85359450602086013593506040860135600481106126df57600080fd5b94979396509394606081013594506080013592915050565b6000806040838503121561270a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6004811061274d57634e487b7160e01b600052602160045260246000fd5b9052565b60006101c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a0808401516127f38285018261272f565b505092915050565b6000806040838503121561280e57600080fd5b612817836125b0565b91506020830135801515811461282c57600080fd5b809150509250929050565b6000806000806080858703121561284d57600080fd5b612856856125b0565b9350612864602086016125b0565b925060408501359150606085013567ffffffffffffffff81111561288757600080fd5b8501601f8101871361289857600080fd5b6128a78782356020840161244f565b91505092959194509250565b60006101c0820190508f82528e60208301528d60408301528c60608301528b60808301528a60a08301528960c08301528860e0830152876101008301528661012083015285610140830152846101608301528361018083015261291a6101a083018461272f565b9f9e505050505050505050505050505050565b87815286602082015285604082015284606082015260018060a01b03841660808201528260a082015260e060c0820152600061296c60e0830184612558565b9998505050505050505050565b6000806040838503121561298c57600080fd5b612995836125b0565b91506129a3602084016125b0565b90509250929050565b600081516129be81856020860161252c565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b60628201528251600090612a7181606e85016020880161252c565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c1820152612b19612b0b60cd8301866129ac565b61207d60f01b815260020190565b95945050505050565b60008551612b34818460208a0161252c565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a2000000000000060208301528651612b9681603a850160208b0161252c565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c8401528651612bf6816081860160208b0161252c565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c3820152612c49612b0b60ca8301866129ac565b979650505050505050565b60008451612c6681846020890161252c565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a2000000060208301528551612cc881603d850160208a0161252c565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a20226d70222c202276616c7565223a20000000000000605f84015285519150612d1b82607985016020890161252c565b60799290910191820152607b0195945050505050565b60008551612d43818460208a0161252c565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a20000060208301528651612da581603e850160208b0161252c565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a200060608401528651612df681607f860160208b0161252c565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c1820152612c49612b0b60c68301866129ac565b60008251612e5981846020870161252c565b605d60f81b920191825250607d60f81b6001820152600201919050565b600181811c90821680612e8a57607f821691505b602082108103612eaa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601260045260246000fd5b600082612ed557612ed5612eb0565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115612f0357612f03612eda565b500190565b600082612f1757612f17612eb0565b500490565b6000816000190483118215151615612f3657612f36612eda565b500290565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082821015612fe957612fe9612eda565b500390565b600080845481600182811c91508083168061300a57607f831692505b6020808410820361302957634e487b7160e01b86526022600452602486fd5b81801561303d57600181146130525761307f565b60ff198616895284151585028901965061307f565b60008b81526020902060005b868110156130775781548b82015290850190830161305e565b505084890196505b505050505050612b1961309282866129ac565b632e6a706760e01b815260040190565b6000600182016130b4576130b4612eda565b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061314090830184612558565b9695505050505050565b60006020828403121561315c57600080fd5b8151612432816123ff565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220eb09bdce1983a9e7604e297d2dcbe64ac5b4ba1f2facd9ea93276a0c19889f5d64736f6c634300080f0033",
  "bytecodeSha1": "32206c9a54a5fd7092c1a7fa55891a7bf5245807",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "145": [
            563,
            573,
            false
          ]
        }
      },
      "22": {
        "Wizards.initiate": {
          "114": [
            4117,
            4148,
            true
          ],
          "115": [
            4185,
            4234,
            true
          ]
        },
        "Wizards.mint": {
          "113": [
            3036,
            3078,
            true
          ]
        },
        "Wizards.reportBattle": {
          "116": [
            4808,
            4830,
            false
          ],
          "117": [
            4969,
            4992,
            false
          ]
        },
        "Wizards.tokenURI": {
          "120": [
            6814,
            6861,
            false
          ],
          "121": [
            7072,
            7196,
            true
          ]
        },
        "Wizards.updateBattler": {
          "122": [
            12631,
            12653,
            false
          ],
          "123": [
            12657,
            12676,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "118": [
            12867,
            12890,
            false
          ],
          "119": [
            12894,
            12915,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "ERC721._checkOnERC721Received": {
          "135": [
            12657,
            12675,
            false
          ]
        },
        "ERC721._mint": {
          "136": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "134": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "133": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "131": [
            10896,
            10927,
            true
          ],
          "132": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "124": [
            3746,
            3757,
            true
          ],
          "125": [
            3830,
            3851,
            true
          ],
          "126": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "128": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "130": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "129": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "127": [
            5169,
            5210,
            true
          ]
        }
      },
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "139": [
            2870,
            2888,
            false
          ],
          "140": [
            2967,
            2977,
            false
          ],
          "141": [
            3067,
            3083,
            false
          ],
          "142": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "143": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "138": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "137": [
            1421,
            1452,
            true
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "144": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "63": [
            590,
            600
          ],
          "64": [
            711,
            719
          ],
          "65": [
            734,
            744
          ],
          "66": [
            850,
            861
          ],
          "67": [
            876,
            932
          ],
          "68": [
            947,
            958
          ]
        }
      },
      "22": {
        "Wizards.formatTokenURI": {
          "5": [
            8268,
            8751
          ],
          "6": [
            8816,
            9131
          ],
          "7": [
            9198,
            9675
          ],
          "8": [
            9711,
            9765
          ]
        },
        "Wizards.getStatsGivenId": {
          "42": [
            2241,
            2273
          ]
        },
        "Wizards.initiate": {
          "31": [
            4109,
            4166
          ],
          "32": [
            4177,
            4256
          ],
          "33": [
            4411,
            4456
          ],
          "34": [
            4467,
            4559
          ],
          "35": [
            4572,
            4625
          ]
        },
        "Wizards.isActive": {
          "1": [
            2060,
            2134
          ]
        },
        "Wizards.mint": {
          "17": [
            3028,
            3097
          ],
          "18": [
            3858,
            3899
          ],
          "19": [
            3910,
            3949
          ]
        },
        "Wizards.reportBattle": {
          "36": [
            4846,
            4883
          ],
          "37": [
            4898,
            4937
          ],
          "38": [
            5008,
            5047
          ],
          "39": [
            5062,
            5099
          ],
          "40": [
            5123,
            5178
          ]
        },
        "Wizards.tokenURI": {
          "52": [
            6652,
            6729
          ],
          "53": [
            6892,
            6911
          ],
          "54": [
            6992,
            7325
          ],
          "55": [
            7461,
            7502
          ]
        },
        "Wizards.updateBattler": {
          "56": [
            12623,
            12705
          ],
          "57": [
            12716,
            12734
          ],
          "58": [
            12745,
            12770
          ]
        },
        "Wizards.updateVerifier": {
          "44": [
            12859,
            12944
          ],
          "45": [
            12955,
            12975
          ],
          "46": [
            12986,
            13013
          ]
        },
        "Wizards.verifyDuty": {
          "41": [
            6056,
            6276
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "62": [
            901,
            948
          ]
        }
      },
      "6": {
        "ERC721._approve": {
          "69": [
            11535,
            11564
          ],
          "70": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "94": [
            12700,
            12760
          ],
          "95": [
            12527,
            12589
          ],
          "96": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "10": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "72": [
            7882,
            7955
          ],
          "73": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "97": [
            9528,
            9589
          ],
          "98": [
            9600,
            9658
          ],
          "99": [
            9671,
            9716
          ],
          "100": [
            9729,
            9747
          ],
          "101": [
            9758,
            9779
          ],
          "102": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "71": [
            8538,
            8564
          ],
          "86": [
            8929,
            8947
          ],
          "87": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "84": [
            7007,
            7035
          ],
          "85": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "74": [
            10888,
            10973
          ],
          "75": [
            10984,
            11049
          ],
          "76": [
            11062,
            11101
          ],
          "77": [
            11166,
            11195
          ],
          "78": [
            11208,
            11228
          ],
          "79": [
            11239,
            11257
          ],
          "80": [
            11268,
            11289
          ],
          "81": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "13": [
            3738,
            3795
          ],
          "15": [
            3808,
            3976
          ],
          "16": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "28": [
            2041,
            2115
          ],
          "29": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "11": [
            4180,
            4253
          ],
          "12": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "9": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "27": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "24": [
            5522,
            5561
          ],
          "50": [
            5807,
            5910
          ],
          "51": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "47": [
            4472,
            4534
          ],
          "48": [
            4547,
            4600
          ],
          "49": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "61": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "43": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            5161,
            5264
          ],
          "21": [
            5277,
            5305
          ]
        }
      },
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "89": [
            4053,
            4097
          ],
          "90": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "111": [
            3687,
            3721
          ],
          "112": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "88": [
            2905,
            2945
          ],
          "91": [
            2994,
            3041
          ],
          "92": [
            3100,
            3145
          ],
          "93": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "107": [
            6793,
            6829
          ],
          "108": [
            6898,
            6939
          ],
          "109": [
            7063,
            7094
          ],
          "110": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "103": [
            5367,
            5411
          ],
          "104": [
            5484,
            5527
          ],
          "105": [
            5662,
            5695
          ],
          "106": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "25": [
            1913,
            2008
          ],
          "26": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "22": [
            1413,
            1500
          ],
          "23": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "8": {
        "Ownable._setOwner": {
          "82": [
            2193,
            2210
          ],
          "83": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "59": [
            1982,
            2055
          ],
          "60": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "359:12667:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:23;;558:22;540:41;;528:2;513:18;988:224:7;;;;;;;;7518:3235:22;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5617:72::-;;;;;;:::i;:::-;-1:-1:-1;5670:7:22;;5617:72;;;;3087:25:23;;;3075:2;3060:18;5617:72:22;2941:177:23;2525:100:6;;;:::i;4084:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3287:32:23;;;3269:51;;3257:2;3242:18;4084:221:6;3123:203:23;3607:411:6;;;;;;:::i;:::-;;:::i;:::-;;5775:72:22;;;;;;:::i;2992:986::-;;;:::i;1628:113:7:-;1716:10;:17;1628:113;;4974:339:6;;;;;;:::i;:::-;;:::i;614:23:22:-;;;;;-1:-1:-1;;;;;614:23:22;;;1296:256:7;;;;;;:::i;:::-;;:::i;11412:421:22:-;;;;;;:::i;:::-;;:::i;5384:185:6:-;;;;;;:::i;:::-;;:::i;6481:61:22:-;;;;;;:::i;:::-;;:::i;1818:233:7:-;;;;;;:::i;:::-;;:::i;2219:239:6:-;;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;:::i;:::-;;:::i;1652:94:8:-;;;:::i;4053:580:22:-;;;;;;:::i;:::-;;:::i;4641:919::-;;;;;;:::i;:::-;;:::i;1986:156::-;;;;;;:::i;:::-;2043:4;2067:25;;;:14;:25;;;;;:49;;;2119:15;-1:-1:-1;2067:67:22;1986:156;5926:450;;;;;;:::i;:::-;;:::i;2150:131::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1001:87:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;1001:87;;2694:104:6;;;:::i;12786:235:22:-;;;;;;:::i;:::-;;:::i;4377:295:6:-;;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;:::i;:::-;;:::i;548:22:22:-;;;;;-1:-1:-1;;;;;548:22:22;;;6552:958;;;;;;:::i;:::-;;:::i;493:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1630:40::-;;;:::i;:::-;;;;;;;;;;;;;:::i;12552:226::-;;;;;;:::i;:::-;;:::i;4743:164:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:8;;;;;;:::i;:::-;;:::i;988:224:7:-;1090:4;-1:-1:-1;;;;;;1114:50:7;;-1:-1:-1;;;1114:50:7;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:7:o;7518:3235:22:-;7605:13;7686:20;7709:14;:24;7724:8;7709:24;;;;;;;;;;;7686:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;7746:22;7971:8;8154:31;8171:7;:13;;;8154:16;:31::i;:::-;7778:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7746:457;;8303:8;8401:28;8418:7;:10;;;8401:16;:28::i;:::-;8538:38;8555:7;:20;;;8538:16;:38::i;:::-;8691:40;8708:7;:22;;;8691:16;:40::i;:::-;8286:464;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8268:483;;8851:8;8952:31;8969:7;:13;;;8952:16;:31::i;:::-;9081:30;9098:7;:12;;;9081:16;:30::i;:::-;8834:296;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8816:315;;9233:8;9335:32;9352:7;:14;;;9335:16;:32::i;:::-;9470:33;9487:7;:15;;;9470:16;:33::i;:::-;9616:39;9633:7;:21;;;9616:16;:39::i;:::-;9216:458;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9198:477;;9746:8;9729:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;9729:35:22;;;;;;;7518:3235;-1:-1:-1;;;;;7518:3235:22:o;2525:100:6:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;4180:73;;;;-1:-1:-1;;;4180:73:6;;19467:2:23;4180:73:6;;;19449:21:23;19506:2;19486:18;;;19479:30;19545:34;19525:18;;;19518:62;-1:-1:-1;;;19596:18:23;;;19589:42;19648:19;;4180:73:6;;;;;;;;;-1:-1:-1;4273:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:6;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:6;:2;-1:-1:-1;;;;;3746:11:6;;3738:57;;;;-1:-1:-1;;;3738:57:6;;19880:2:23;3738:57:6;;;19862:21:23;19919:2;19899:18;;;19892:30;19958:34;19938:18;;;19931:62;-1:-1:-1;;;20009:18:23;;;20002:31;20050:19;;3738:57:6;19678:397:23;3738:57:6;679:10:3;-1:-1:-1;;;;;3830:21:6;;;;:62;;-1:-1:-1;3855:37:6;3872:5;679:10:3;4743:164:6;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:6;;20282:2:23;3808:168:6;;;20264:21:23;20321:2;20301:18;;;20294:30;20360:34;20340:18;;;20333:62;20431:26;20411:18;;;20404:54;20475:19;;3808:168:6;20080:420:23;3808:168:6;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;2992:986:22:-;3052:26;;1716:10:7;:17;3036:42:22;3028:69;;;;-1:-1:-1;;;3028:69:22;;20707:2:23;3028:69:22;;;20689:21:23;20746:2;20726:18;;;20719:30;-1:-1:-1;;;20765:18:23;;;20758:44;20819:18;;3028:69:22;20505:338:23;3028:69:22;3215:21;3274:13;1716:10:7;:17;;1628:113;3274:13:22;3257:60;;;;;;21033:19:23;;;;-1:-1:-1;;3289:10:22;21090:2:23;21086:15;21082:53;21068:12;;;21061:75;3301:15:22;21152:12:23;;;21145:28;21189:12;;3257:60:22;;;-1:-1:-1;;3257:60:22;;;;;;;;;3247:71;;3257:60;3247:71;;;;;-1:-1:-1;3239:80:22;3462:18;3478:2;3247:71;3462:18;:::i;:::-;3457:23;;:2;:23;:::i;:::-;3444:36;-1:-1:-1;3491:20:22;3541:2;3520:17;3534:3;3520:13;:17;:::i;:::-;3519:24;;;;:::i;:::-;3514:29;;:2;:29;:::i;:::-;3491:52;-1:-1:-1;3554:22:22;3607:2;3585:16;3607:2;3585:13;:16;:::i;:::-;:18;;3602:1;3585:18;:::i;:::-;3584:25;;;;:::i;:::-;3579:30;;:2;:30;:::i;:::-;3554:55;-1:-1:-1;3620:13:22;3664:2;3642:16;3664:2;3642:13;:16;:::i;:::-;:18;;3659:1;3642:18;:::i;:::-;3641:25;;;;:::i;:::-;3636:30;;:2;:30;:::i;:::-;3620:46;-1:-1:-1;3677:15:22;3726:1;3704:16;3718:2;3704:13;:16;:::i;:::-;:18;;3721:1;3704:18;:::i;:::-;3703:24;;;;:::i;:::-;3695:33;;;;;;;;:::i;:::-;3677:51;;3741:20;3765:82;;;;;;;;3771:1;3765:82;;;;3774:2;3765:82;;;;3778:12;3765:82;;;;3792:14;3765:82;;;;3808:5;3765:82;;;;3815:1;3765:82;;;;3818:1;3765:82;;;;3821:1;3765:82;;;;3824:1;3765:82;;;;3827:1;3765:82;;;;3830:1;3765:82;;;;3833:1;3765:82;;;;3836:1;3765:82;;;;3839:7;3765:82;;;;;;;;:::i;:::-;;;3741:106;-1:-1:-1;3741:106:22;3858:14;:31;3873:13;1716:10:7;:17;;1628:113;3873:13:22;:15;;3887:1;3873:15;:::i;:::-;3858:31;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3910:39;3920:10;3932:13;1716:10:7;:17;;1628:113;3932:13:22;:15;;3946:1;3932:15;:::i;:::-;3910:9;:39::i;:::-;3017:961;;;;;;;2992:986::o;4974:339:6:-;5169:41;679:10:3;5202:7:6;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:6;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:7:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:7;;22644:2:23;1413:87:7;;;22626:21:23;22683:2;22663:18;;;22656:30;22722:34;22702:18;;;22695:62;-1:-1:-1;;;22773:18:23;;;22766:41;22824:19;;1413:87:7;22442:407:23;1413:87:7;-1:-1:-1;;;;;;1518:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;11412:421:22:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;11412:421:22;;;;;:::o;5384:185:6:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;6481:61:22:-;12178:4;12156:10;:27;12148:53;;;;-1:-1:-1;;;12148:53:22;;23417:2:23;12148:53:22;;;23399:21:23;23456:2;23436:18;;;23429:30;-1:-1:-1;;;23475:18:23;;;23468:43;23528:18;;12148:53:22;23215:337:23;12148:53:22;6481:61;:::o;1818:233:7:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:7;;23759:2:23;1913:95:7;;;23741:21:23;23798:2;23778:18;;;23771:30;23837:34;23817:18;;;23810:62;-1:-1:-1;;;23888:18:23;;;23881:42;23940:19;;1913:95:7;23557:408:23;1913:95:7;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:6:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:6;;2354:73;;;;-1:-1:-1;;;2354:73:6;;24304:2:23;2354:73:6;;;24286:21:23;24343:2;24323:18;;;24316:30;24382:34;24362:18;;;24355:62;-1:-1:-1;;;24433:18:23;;;24426:39;24482:19;;2354:73:6;24102:405:23;1949:208:6;2021:7;-1:-1:-1;;;;;2049:19:6;;2041:74;;;;-1:-1:-1;;;2041:74:6;;24714:2:23;2041:74:6;;;24696:21:23;24753:2;24733:18;;;24726:30;24792:34;24772:18;;;24765:62;-1:-1:-1;;;24843:18:23;;;24836:40;24893:19;;2041:74:6;24512:406:23;2041:74:6;-1:-1:-1;;;;;;2133:16:6;;;;;:9;:16;;;;;;;1949:208::o;1652:94:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;4053:580:22:-;4138:10;4117:17;4125:8;4117:7;:17::i;:::-;-1:-1:-1;;;;;4117:31:22;;4109:57;;;;-1:-1:-1;;;4109:57:22;;25125:2:23;4109:57:22;;;25107:21:23;25164:2;25144:18;;;25137:30;-1:-1:-1;;;25183:18:23;;;25176:43;25236:18;;4109:57:22;24923:337:23;4109:57:22;4185:24;;;;:14;:24;;;;;;;;:44;;:49;4177:79;;;;-1:-1:-1;;;4177:79:22;;25467:2:23;4177:79:22;;;25449:21:23;25506:2;25486:18;;;25479:30;-1:-1:-1;;;25525:18:23;;;25518:47;25582:18;;4177:79:22;25265:341:23;4177:79:22;4352:21;4376:24;;;:14;:24;;;;;;;;4441:15;4411:27;;;:45;;;4519:40;;4376:24;;4501:58;;4519:40;4501:58;:::i;:::-;4467:31;;;:92;4577:48;;;4587:10;25785:51:23;;4609:15:22;25867:2:23;25852:18;;25845:34;4599:8:22;;4577:48;;25758:18:23;4577:48:22;;;;;;;4098:535;4053:580;:::o;4641:919::-;12356:7;;-1:-1:-1;;;;;12356:7:22;12342:10;:21;12320:107;;;;-1:-1:-1;;;12320:107:22;;26092:2:23;12320:107:22;;;26074:21:23;26131:2;26111:18;;;26104:30;26170:34;26150:18;;;26143:62;-1:-1:-1;;;26221:18:23;;;26214:34;26265:19;;12320:107:22;25890:400:23;12320:107:22;4819:11:::1;4808:7;:22;;;;;;;;:::i;:::-;::::0;4805:306:::1;;4846:27;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;4882:1:::1;::::0;4846:27;:37:::1;::::0;4882:1;;4846:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4898:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;4936:1:::1;::::0;4898:27;:39:::1;::::0;4936:1;;4898:39:::1;:::i;:::-;::::0;;;-1:-1:-1;4805:306:22::1;::::0;-1:-1:-1;4805:306:22::1;;4980:12;4969:7;:23;;;;;;;;:::i;:::-;::::0;4966:145:::1;;5008:27;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;5046:1:::1;::::0;5008:27;:39:::1;::::0;5046:1;;5008:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;5062:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;5098:1:::1;::::0;5062:27;:37:::1;::::0;5098:1;;5062:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;4966:145:22::1;5123:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;5168:10;;5123:27;:55:::1;::::0;5168:10;;5123:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4641:919:22:o;5926:450::-;12007:4;11985:10;:27;11977:53;;;;-1:-1:-1;;;11977:53:22;;23417:2:23;11977:53:22;;;23399:21:23;23456:2;23436:18;;;23429:30;-1:-1:-1;;;23475:18:23;;;23468:43;23528:18;;11977:53:22;23215:337:23;11977:53:22;6122:24:::1;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;6173:15:::1;-1:-1:-1::0;6122:153:22::1;;6227:24;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;6122:153:::1;;;6209:15;6122:153;6107:169;::::0;:11;:169:::1;:::i;:::-;6056:24;::::0;;;:14:::1;:24;::::0;;;;;:48:::1;;:220:::0;;;;-1:-1:-1;5926:450:22:o;2150:131::-;2216:12;;:::i;:::-;2248:14;:25;2263:9;2248:25;;;;;;;;;;;2241:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;2241:32:22;2150:131;-1:-1:-1;;2150:131:22:o;2694:104:6:-;2750:13;2783:7;2776:14;;;;;:::i;12786:235:22:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;12867:23:22;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;12907:8:22::1;::::0;-1:-1:-1;;;;;12894:21:22;;::::1;12907:8:::0;::::1;12894:21;;12867:48;12859:85;;;::::0;-1:-1:-1;;;12859:85:22;;26497:2:23;12859:85:22::1;::::0;::::1;26479:21:23::0;26536:2;26516:18;;;26509:30;-1:-1:-1;;;26555:18:23;;;26548:54;26619:18;;12859:85:22::1;26295:348:23::0;12859:85:22::1;12955:8;:20:::0;;-1:-1:-1;;;;;;12955:20:22::1;-1:-1:-1::0;;;;;12955:20:22;::::1;::::0;;::::1;::::0;;;12991:22:::1;::::0;3269:51:23;;;12991:22:22::1;::::0;3257:2:23;3242:18;12991:22:22::1;;;;;;;;12786:235:::0;:::o;4377:295:6:-;679:10:3;-1:-1:-1;;;;;4480:24:6;;;4472:62;;;;-1:-1:-1;;;4472:62:6;;26850:2:23;4472:62:6;;;26832:21:23;26889:2;26869:18;;;26862:30;26928:27;26908:18;;;26901:55;26973:18;;4472:62:6;26648:349:23;4472:62:6;679:10:3;4547:32:6;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:6;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:6;;;;;;;;;;4616:48;;540:41:23;;;4547:42:6;;679:10:3;4616:48:6;;513:18:23;4616:48:6;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:3;5848:7:6;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:6;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;6552:958:22:-;7543:4:6;7567:16;;;:7;:16;;;;;;6626:13:22;;-1:-1:-1;;;;;7567:16:6;6652:77:22;;;;-1:-1:-1;;;6652:77:22;;27204:2:23;6652:77:22;;;27186:21:23;27243:2;27223:18;;;27216:30;27282:34;27262:18;;;27255:62;-1:-1:-1;;;27333:18:23;;;27326:45;27388:19;;6652:77:22;27002:411:23;6652:77:22;6814:24;;;;:14;:24;;;;;;;:44;;6773:27;;6814:47;6811:526;;-1:-1:-1;6892:19:22;;;;;;;;;;;;-1:-1:-1;;;6892:19:22;;;;6811:526;;;7139:30;;7091:24;;;;:14;:24;;;;;;;;:44;;7031:294;;7195:1;;7073:62;;:15;:62;:::i;:::-;7072:97;;;;:::i;:::-;:124;:228;;7270:30;;7222:24;;;;:14;:24;;;;;;;;:44;;7204:62;;:15;:62;:::i;:::-;7203:97;;;;:::i;:::-;7031:16;:294::i;7072:228::-;7199:1;7031:16;:294::i;:::-;6992:333;;6811:526;7379:70;;7347:22;;7379:70;;7396:29;;7427:13;;7379:70;;;:::i;:::-;;;;;;;;;;;;;7347:103;;7468:34;7483:8;7493;7468:14;:34::i;:::-;7461:41;6552:958;-1:-1:-1;;;;6552:958:22:o;1630:40::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1630:40:22;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12552:226::-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;12631:22:22;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;12669:7:22::1;::::0;-1:-1:-1;;;;;12657:19:22;;::::1;12669:7:::0;::::1;12657:19;;12631:45;12623:82;;;::::0;-1:-1:-1;;;12623:82:22;;26497:2:23;12623:82:22::1;::::0;::::1;26479:21:23::0;26536:2;26516:18;;;26509:30;-1:-1:-1;;;26555:18:23;;;26548:54;26619:18;;12623:82:22::1;26295:348:23::0;12623:82:22::1;12716:7;:18:::0;;-1:-1:-1;;;;;;12716:18:22::1;-1:-1:-1::0;;;;;12716:18:22;::::1;::::0;;::::1;::::0;;;12750:20:::1;::::0;3269:51:23;;;12750:20:22::1;::::0;3257:2:23;3242:18;12750:20:22::1;3123:203:23::0;1901:192:8;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:8;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:8;;29338:2:23;1982:73:8::1;::::0;::::1;29320:21:23::0;29377:2;29357:18;;;29350:30;29416:34;29396:18;;;29389:62;-1:-1:-1;;;29467:18:23;;;29460:36;29513:19;;1982:73:8::1;29136:402:23::0;1982:73:8::1;2066:19;2076:8;2066:9;:19::i;1580:305:6:-:0;1682:4;-1:-1:-1;;;;;;1719:40:6;;-1:-1:-1;;;1719:40:6;;:105;;-1:-1:-1;;;;;;;1776:48:6;;-1:-1:-1;;;1776:48:6;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:4;;;1841:36:6;799:157:4;286:723:21;342:13;563:5;572:1;563:10;559:53;;-1:-1:-1;;590:10:21;;;;;;;;;;;;-1:-1:-1;;;590:10:21;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:21;;-1:-1:-1;742:2:21;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:21;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:21;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:21;;;;;;;;-1:-1:-1;947:11:21;956:2;947:11;;:::i;:::-;;;816:154;;11460:174:6;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:6;-1:-1:-1;;;;;11535:29:6;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:6;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;7882:73;;;;-1:-1:-1;;;7882:73:6;;29885:2:23;7882:73:6;;;29867:21:23;29924:2;29904:18;;;29897:30;29963:34;29943:18;;;29936:62;-1:-1:-1;;;30014:18:23;;;30007:42;30066:19;;7882:73:6;29683:408:23;7882:73:6;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:6;:7;-1:-1:-1;;;;;8024:16:6;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:6;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:6;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:6;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:6;;10888:85;;;;-1:-1:-1;;;10888:85:6;;30298:2:23;10888:85:6;;;30280:21:23;30337:2;30317:18;;;30310:30;30376:34;30356:18;;;30349:62;-1:-1:-1;;;30427:18:23;;;30420:39;30476:19;;10888:85:6;30096:405:23;10888:85:6;-1:-1:-1;;;;;10992:16:6;;10984:65;;;;-1:-1:-1;;;10984:65:6;;30708:2:23;10984:65:6;;;30690:21:23;30747:2;30727:18;;;30720:30;30786:34;30766:18;;;30759:62;-1:-1:-1;;;30837:18:23;;;30830:34;30881:19;;10984:65:6;30506:400:23;10984:65:6;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:6;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:6;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:6;-1:-1:-1;;;;;11268:21:6;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:6:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:6;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:6;;;;;;;:::i;2664:589:7:-;-1:-1:-1;;;;;2870:18:7;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:7;:4;-1:-1:-1;;;;;2967:10:7;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:7;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:7;:2;-1:-1:-1;;;;;3167:10:7;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:6:-;12354:4;-1:-1:-1;;;;;12375:13:6;;1064:20:20;1112:8;12371:624:6;;12411:72;;-1:-1:-1;;;12411:72:6;;-1:-1:-1;;;;;12411:36:6;;;;;:72;;679:10:3;;12462:4:6;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:6;;;;;;;;-1:-1:-1;;12411:72:6;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12657:6;:13;12674:1;12657:18;12653:272;;12700:60;;-1:-1:-1;;;12700:60:6;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:6;-1:-1:-1;;;12534:55:6;;-1:-1:-1;12527:62:6;;12371:624;-1:-1:-1;12979:4:6;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:6;;9528:61;;;;-1:-1:-1;;;9528:61:6;;32291:2:23;9528:61:6;;;32273:21:23;;;32310:18;;;32303:30;32369:34;32349:18;;;32342:62;32421:18;;9528:61:6;32089:356:23;9528:61:6;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;:30;9600:58;;;;-1:-1:-1;;;9600:58:6;;32652:2:23;9600:58:6;;;32634:21:23;32691:2;32671:18;;;32664:30;32730;32710:18;;;32703:58;32778:18;;9600:58:6;32450:352:23;9600:58:6;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:6;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:6;-1:-1:-1;;;;;9758:21:6;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:7:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:7;;;5245:328;;-1:-1:-1;;;;;5316:18:7;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:7;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:7;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:7;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:131:23:-;-1:-1:-1;;;;;;88:32:23;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:23:o;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:23;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:222::-;1404:5;1457:3;1450:4;1442:6;1438:17;1434:27;1424:55;;1475:1;1472;1465:12;1424:55;1497:80;1573:3;1564:6;1551:20;1544:4;1536:6;1532:17;1497:80;:::i;1588:390::-;1666:6;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1779:9;1766:23;1756:33;;1840:2;1829:9;1825:18;1812:32;1867:18;1859:6;1856:30;1853:50;;;1899:1;1896;1889:12;1853:50;1922;1964:7;1955:6;1944:9;1940:22;1922:50;:::i;:::-;1912:60;;;1588:390;;;;;:::o;1983:258::-;2055:1;2065:113;2079:6;2076:1;2073:13;2065:113;;;2155:11;;;2149:18;2136:11;;;2129:39;2101:2;2094:10;2065:113;;;2196:6;2193:1;2190:13;2187:48;;;-1:-1:-1;;2231:1:23;2213:16;;2206:27;1983:258::o;2246:269::-;2299:3;2337:5;2331:12;2364:6;2359:3;2352:19;2380:63;2436:6;2429:4;2424:3;2420:14;2413:4;2406:5;2402:16;2380:63;:::i;:::-;2497:2;2476:15;-1:-1:-1;;2472:29:23;2463:39;;;;2504:4;2459:50;;2246:269;-1:-1:-1;;2246:269:23:o;2520:231::-;2669:2;2658:9;2651:21;2632:4;2689:56;2741:2;2730:9;2726:18;2718:6;2689:56;:::i;2756:180::-;2815:6;2868:2;2856:9;2847:7;2843:23;2839:32;2836:52;;;2884:1;2881;2874:12;2836:52;-1:-1:-1;2907:23:23;;2756:180;-1:-1:-1;2756:180:23:o;3331:173::-;3399:20;;-1:-1:-1;;;;;3448:31:23;;3438:42;;3428:70;;3494:1;3491;3484:12;3428:70;3331:173;;;:::o;3509:254::-;3577:6;3585;3638:2;3626:9;3617:7;3613:23;3609:32;3606:52;;;3654:1;3651;3644:12;3606:52;3677:29;3696:9;3677:29;:::i;:::-;3667:39;3753:2;3738:18;;;;3725:32;;-1:-1:-1;;;3509:254:23:o;3768:328::-;3845:6;3853;3861;3914:2;3902:9;3893:7;3889:23;3885:32;3882:52;;;3930:1;3927;3920:12;3882:52;3953:29;3972:9;3953:29;:::i;:::-;3943:39;;4001:38;4035:2;4024:9;4020:18;4001:38;:::i;:::-;3991:48;;4086:2;4075:9;4071:18;4058:32;4048:42;;3768:328;;;;;:::o;4101:596::-;4206:6;4214;4222;4230;4238;4291:3;4279:9;4270:7;4266:23;4262:33;4259:53;;;4308:1;4305;4298:12;4259:53;4348:9;4335:23;4381:18;4373:6;4370:30;4367:50;;;4413:1;4410;4403:12;4367:50;4436;4478:7;4469:6;4458:9;4454:22;4436:50;:::i;:::-;4426:60;4533:2;4518:18;;4505:32;;-1:-1:-1;4584:2:23;4569:18;;4556:32;;4635:2;4620:18;;4607:32;;-1:-1:-1;4686:3:23;4671:19;4658:33;;-1:-1:-1;4101:596:23;-1:-1:-1;;;;4101:596:23:o;4702:186::-;4761:6;4814:2;4802:9;4793:7;4789:23;4785:32;4782:52;;;4830:1;4827;4820:12;4782:52;4853:29;4872:9;4853:29;:::i;4893:542::-;5000:6;5008;5016;5024;5032;5085:3;5073:9;5064:7;5060:23;5056:33;5053:53;;;5102:1;5099;5092:12;5053:53;5138:9;5125:23;5115:33;;5195:2;5184:9;5180:18;5167:32;5157:42;;5249:2;5238:9;5234:18;5221:32;5282:1;5275:5;5272:12;5262:40;;5298:1;5295;5288:12;5262:40;4893:542;;;;-1:-1:-1;5321:5:23;;5373:2;5358:18;;5345:32;;-1:-1:-1;5424:3:23;5409:19;5396:33;;4893:542;-1:-1:-1;;4893:542:23:o;5440:248::-;5508:6;5516;5569:2;5557:9;5548:7;5544:23;5540:32;5537:52;;;5585:1;5582;5575:12;5537:52;-1:-1:-1;;5608:23:23;;;5678:2;5663:18;;;5650:32;;-1:-1:-1;5440:248:23:o;5693:127::-;5754:10;5749:3;5745:20;5742:1;5735:31;5785:4;5782:1;5775:15;5809:4;5806:1;5799:15;5825:235;5904:1;5897:5;5894:12;5884:143;;5949:10;5944:3;5940:20;5937:1;5930:31;5984:4;5981:1;5974:15;6012:4;6009:1;6002:15;5884:143;6036:18;;5825:235::o;6065:1234::-;6203:4;6245:3;6234:9;6230:19;6222:27;;6282:6;6276:13;6265:9;6258:32;6346:4;6338:6;6334:17;6328:24;6321:4;6310:9;6306:20;6299:54;6409:4;6401:6;6397:17;6391:24;6384:4;6373:9;6369:20;6362:54;6472:4;6464:6;6460:17;6454:24;6447:4;6436:9;6432:20;6425:54;6535:4;6527:6;6523:17;6517:24;6510:4;6499:9;6495:20;6488:54;6598:4;6590:6;6586:17;6580:24;6573:4;6562:9;6558:20;6551:54;6661:4;6653:6;6649:17;6643:24;6636:4;6625:9;6621:20;6614:54;6724:4;6716:6;6712:17;6706:24;6699:4;6688:9;6684:20;6677:54;6750:6;6810:2;6802:6;6798:15;6792:22;6787:2;6776:9;6772:18;6765:50;;6834:6;6894:2;6886:6;6882:15;6876:22;6871:2;6860:9;6856:18;6849:50;;6918:6;6978:2;6970:6;6966:15;6960:22;6955:2;6944:9;6940:18;6933:50;;7002:6;7062:2;7054:6;7050:15;7044:22;7039:2;7028:9;7024:18;7017:50;;7086:6;7146:2;7138:6;7134:15;7128:22;7123:2;7112:9;7108:18;7101:50;;7170:6;7223:2;7215:6;7211:15;7205:22;7236:57;7289:2;7278:9;7274:18;7260:12;7236:57;:::i;:::-;;;6065:1234;;;;:::o;7304:347::-;7369:6;7377;7430:2;7418:9;7409:7;7405:23;7401:32;7398:52;;;7446:1;7443;7436:12;7398:52;7469:29;7488:9;7469:29;:::i;:::-;7459:39;;7548:2;7537:9;7533:18;7520:32;7595:5;7588:13;7581:21;7574:5;7571:32;7561:60;;7617:1;7614;7607:12;7561:60;7640:5;7630:15;;;7304:347;;;;;:::o;7656:667::-;7751:6;7759;7767;7775;7828:3;7816:9;7807:7;7803:23;7799:33;7796:53;;;7845:1;7842;7835:12;7796:53;7868:29;7887:9;7868:29;:::i;:::-;7858:39;;7916:38;7950:2;7939:9;7935:18;7916:38;:::i;:::-;7906:48;;8001:2;7990:9;7986:18;7973:32;7963:42;;8056:2;8045:9;8041:18;8028:32;8083:18;8075:6;8072:30;8069:50;;;8115:1;8112;8105:12;8069:50;8138:22;;8191:4;8183:13;;8179:27;-1:-1:-1;8169:55:23;;8220:1;8217;8210:12;8169:55;8243:74;8309:7;8304:2;8291:16;8286:2;8282;8278:11;8243:74;:::i;:::-;8233:84;;;7656:667;;;;;;;:::o;8328:1146::-;8798:4;8840:3;8829:9;8825:19;8817:27;;8871:6;8860:9;8853:25;8914:6;8909:2;8898:9;8894:18;8887:34;8957:6;8952:2;8941:9;8937:18;8930:34;9000:6;8995:2;8984:9;8980:18;8973:34;9044:6;9038:3;9027:9;9023:19;9016:35;9088:6;9082:3;9071:9;9067:19;9060:35;9132:6;9126:3;9115:9;9111:19;9104:35;9176:6;9170:3;9159:9;9155:19;9148:35;9220:6;9214:3;9203:9;9199:19;9192:35;9264:6;9258:3;9247:9;9243:19;9236:35;9308:7;9302:3;9291:9;9287:19;9280:36;9353:7;9347:3;9336:9;9332:19;9325:36;9398:7;9392:3;9381:9;9377:19;9370:36;9415:53;9463:3;9452:9;9448:19;9439:7;9415:53;:::i;:::-;8328:1146;;;;;;;;;;;;;;;;;:::o;9479:688::-;9796:6;9785:9;9778:25;9839:6;9834:2;9823:9;9819:18;9812:34;9882:6;9877:2;9866:9;9862:18;9855:34;9925:6;9920:2;9909:9;9905:18;9898:34;9998:1;9994;9989:3;9985:11;9981:19;9973:6;9969:32;9963:3;9952:9;9948:19;9941:61;10039:6;10033:3;10022:9;10018:19;10011:35;10083:3;10077;10066:9;10062:19;10055:32;9759:4;10104:57;10156:3;10145:9;10141:19;10133:6;10104:57;:::i;:::-;10096:65;9479:688;-1:-1:-1;;;;;;;;;9479:688:23:o;10172:260::-;10240:6;10248;10301:2;10289:9;10280:7;10276:23;10272:32;10269:52;;;10317:1;10314;10307:12;10269:52;10340:29;10359:9;10340:29;:::i;:::-;10330:39;;10388:38;10422:2;10411:9;10407:18;10388:38;:::i;:::-;10378:48;;10172:260;;;;;:::o;10437:185::-;10479:3;10517:5;10511:12;10532:52;10577:6;10572:3;10565:4;10558:5;10554:16;10532:52;:::i;:::-;10600:16;;;;;10437:185;-1:-1:-1;;10437:185:23:o;10747:1883::-;11663:66;11651:79;;11760:66;11755:2;11746:12;;11739:88;11857:34;11852:2;11843:12;;11836:56;-1:-1:-1;;;11917:2:23;11908:12;;11901:46;-1:-1:-1;;;11972:2:23;11963:12;;11956:58;12037:13;;-1:-1:-1;;12059:61:23;12037:13;12107:3;12098:13;;12093:2;12081:15;;12059:61;:::i;:::-;-1:-1:-1;;;12179:3:23;12139:16;;;12171:12;;;12164:34;-1:-1:-1;;;12222:3:23;12214:12;;12207:70;12307:66;12301:3;12293:12;;12286:88;12404:66;12398:3;12390:12;;12383:88;-1:-1:-1;;;12495:3:23;12487:12;;12480:58;12554:70;12584:39;12618:3;12610:12;;12602:6;12584:39;:::i;:::-;-1:-1:-1;;;10692:17:23;;10734:1;10725:11;;10627:115;12554:70;12547:77;10747:1883;-1:-1:-1;;;;;10747:1883:23:o;12635:2085::-;13516:3;13554:6;13548:13;13570:53;13616:6;13611:3;13604:4;13596:6;13592:17;13570:53;:::i;:::-;13654:6;13649:3;13645:16;13632:29;;13680:66;13769:2;13762:5;13755:17;13806:66;13799:4;13792:5;13788:16;13781:92;13904:6;13898:13;13920:66;13977:8;13972:2;13965:5;13961:14;13954:4;13946:6;13942:17;13920:66;:::i;:::-;-1:-1:-1;;;14072:2:23;14005:20;;;;14064:11;;;14057:23;;;14104:2;14096:11;;14089:23;;;14141:66;14136:2;14128:11;;14121:87;-1:-1:-1;;;14232:3:23;14224:12;;14217:44;14286:13;;14308:64;14286:13;14357:3;14349:12;;14342:4;14330:17;;14308:64;:::i;:::-;14432:3;14391:17;;14424:12;;;14417:24;14465:3;14457:12;;14450:24;14504:66;14498:3;14490:12;;14483:88;-1:-1:-1;;;14595:3:23;14587:12;;14580:48;14644:70;14674:39;14708:3;14700:12;;14692:6;14674:39;:::i;14644:70::-;14637:77;12635:2085;-1:-1:-1;;;;;;;12635:2085:23:o;14725:1537::-;15356:3;15394:6;15388:13;15410:53;15456:6;15451:3;15444:4;15436:6;15432:17;15410:53;:::i;:::-;15494:6;15489:3;15485:16;15472:29;;15520:66;15609:2;15602:5;15595:17;15646:66;15639:4;15632:5;15628:16;15621:92;15744:6;15738:13;15760:66;15817:8;15812:2;15805:5;15801:14;15794:4;15786:6;15782:17;15760:66;:::i;:::-;15856:8;15849:5;15845:20;15835:30;;;-1:-1:-1;;;15917:2:23;15912;15908;15904:11;15897:23;15949:2;15944;15940;15936:11;15929:23;15981:66;15976:2;15972;15968:11;15961:87;16079:6;16073:13;16057:29;;16095:64;16150:8;16144:3;16140:2;16136:12;16129:4;16121:6;16117:17;16095:64;:::i;:::-;16219:3;16178:17;;;;16211:12;;;16204:24;16252:3;16244:12;;14725:1537;-1:-1:-1;;;;;14725:1537:23:o;16267:2028::-;17148:3;17186:6;17180:13;17202:53;17248:6;17243:3;17236:4;17228:6;17224:17;17202:53;:::i;:::-;17286:6;17281:3;17277:16;17264:29;;17312:66;17401:2;17394:5;17387:17;17438:66;17431:4;17424:5;17420:16;17413:92;17536:6;17530:13;17552:66;17609:8;17604:2;17597:5;17593:14;17586:4;17578:6;17574:17;17552:66;:::i;:::-;17648:8;17641:5;17637:20;17627:30;;;-1:-1:-1;;;17709:2:23;17704;17700;17696:11;17689:23;17741:2;17736;17732;17728:11;17721:23;17773:66;17768:2;17764;17760:11;17753:87;17871:6;17865:13;17887:64;17942:8;17936:3;17932:2;17928:12;17921:4;17913:6;17909:17;17887:64;:::i;:::-;18011:3;17970:17;;18003:12;;;17996:24;18044:3;18036:12;;18029:24;18083:66;18077:3;18069:12;;18062:88;-1:-1:-1;;;18174:3:23;18166:12;;18159:44;18219:70;18249:39;18283:3;18275:12;;18267:6;18249:39;:::i;18300:575::-;18633:3;18671:6;18665:13;18687:53;18733:6;18728:3;18721:4;18713:6;18709:17;18687:53;:::i;:::-;-1:-1:-1;;;18762:16:23;;18787:18;;;-1:-1:-1;;;;18832:1:23;18821:13;;18814:26;18867:1;18856:13;;18300:575;-1:-1:-1;18300:575:23:o;18880:380::-;18959:1;18955:12;;;;19002;;;19023:61;;19077:4;19069:6;19065:17;19055:27;;19023:61;19130:2;19122:6;19119:14;19099:18;19096:38;19093:161;;19176:10;19171:3;19167:20;19164:1;19157:31;19211:4;19208:1;19201:15;19239:4;19236:1;19229:15;19093:161;;18880:380;;;:::o;21212:127::-;21273:10;21268:3;21264:20;21261:1;21254:31;21304:4;21301:1;21294:15;21328:4;21325:1;21318:15;21344:112;21376:1;21402;21392:35;;21407:18;;:::i;:::-;-1:-1:-1;21441:9:23;;21344:112::o;21461:127::-;21522:10;21517:3;21513:20;21510:1;21503:31;21553:4;21550:1;21543:15;21577:4;21574:1;21567:15;21593:128;21633:3;21664:1;21660:6;21657:1;21654:13;21651:39;;;21670:18;;:::i;:::-;-1:-1:-1;21706:9:23;;21593:128::o;21726:120::-;21766:1;21792;21782:35;;21797:18;;:::i;:::-;-1:-1:-1;21831:9:23;;21726:120::o;21851:168::-;21891:7;21957:1;21953;21949:6;21945:14;21942:1;21939:21;21934:1;21927:9;21920:17;21916:45;21913:71;;;21964:18;;:::i;:::-;-1:-1:-1;22004:9:23;;21851:168::o;22024:413::-;22226:2;22208:21;;;22265:2;22245:18;;;22238:30;22304:34;22299:2;22284:18;;22277:62;-1:-1:-1;;;22370:2:23;22355:18;;22348:47;22427:3;22412:19;;22024:413::o;22854:356::-;23056:2;23038:21;;;23075:18;;;23068:30;23134:34;23129:2;23114:18;;23107:62;23201:2;23186:18;;22854:356::o;23970:127::-;24031:10;24026:3;24022:20;24019:1;24012:31;24062:4;24059:1;24052:15;24086:4;24083:1;24076:15;27418:125;27458:4;27486:1;27483;27480:8;27477:34;;;27491:18;;:::i;:::-;-1:-1:-1;27528:9:23;;27418:125::o;27796:1335::-;28073:3;28102:1;28135:6;28129:13;28165:3;28187:1;28215:9;28211:2;28207:18;28197:28;;28275:2;28264:9;28260:18;28297;28287:61;;28341:4;28333:6;28329:17;28319:27;;28287:61;28367:2;28415;28407:6;28404:14;28384:18;28381:38;28378:165;;-1:-1:-1;;;28442:33:23;;28498:4;28495:1;28488:15;28528:4;28449:3;28516:17;28378:165;28559:18;28586:133;;;;28733:1;28728:320;;;;28552:496;;28586:133;-1:-1:-1;;28619:24:23;;28607:37;;28692:14;;28685:22;28673:35;;28664:45;;;-1:-1:-1;28586:133:23;;28728:320;27621:1;27614:14;;;27658:4;27645:18;;28823:1;28837:165;28851:6;28848:1;28845:13;28837:165;;;28929:14;;28916:11;;;28909:35;28972:16;;;;28866:10;;28837:165;;;28841:3;;29031:6;29026:3;29022:16;29015:23;;28552:496;;;;;;;29064:61;29094:30;29120:3;29112:6;29094:30;:::i;:::-;-1:-1:-1;;;27739:19:23;;27783:1;27774:11;;27674:117;29543:135;29582:3;29603:17;;;29600:43;;29623:18;;:::i;:::-;-1:-1:-1;29670:1:23;29659:13;;29543:135::o;30911:414::-;31113:2;31095:21;;;31152:2;31132:18;;;31125:30;31191:34;31186:2;31171:18;;31164:62;-1:-1:-1;;;31257:2:23;31242:18;;31235:48;31315:3;31300:19;;30911:414::o;31330:500::-;-1:-1:-1;;;;;31599:15:23;;;31581:34;;31651:15;;31646:2;31631:18;;31624:43;31698:2;31683:18;;31676:34;;;31746:3;31741:2;31726:18;;31719:31;;;31524:4;;31767:57;;31804:19;;31796:6;31767:57;:::i;:::-;31759:65;31330:500;-1:-1:-1;;;;;;31330:500:23:o;31835:249::-;31904:6;31957:2;31945:9;31936:7;31932:23;31928:32;31925:52;;;31973:1;31970;31963:12;31925:52;32005:9;31999:16;32024:30;32048:5;32024:30;:::i;32807:127::-;32868:10;32863:3;32859:20;32856:1;32849:31;32899:4;32896:1;32889:15;32923:4;32920:1;32913:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256,uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    359,
    13026
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87BFC7F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AD4D6A5 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8AD4D6A5 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x8CB22518 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x8140BD0B EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x3B6029CA EQ PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x25CC JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x25CC JUMP JUMPDEST PUSH2 0xD4E JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x26AA JUMP JUMPDEST PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x26F7 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x415 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x2751 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x1429 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x2837 JUMP JUMPDEST PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x25C PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x519 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD SWAP12 DUP12 ADD SLOAD PUSH1 0xC DUP13 ADD SLOAD PUSH1 0xD SWAP1 SWAP13 ADD SLOAD SWAP11 SWAP13 SWAP10 SWAP12 SWAP9 SWAP11 SWAP8 SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH2 0x53B PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x292D JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0x1839 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x2979 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x268F JUMP JUMPDEST PUSH2 0x191E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5D5 JUMPI POP PUSH2 0x5D5 DUP3 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x2719 JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x6CB DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6DC SWAP3 SWAP2 SWAP1 PUSH2 0x29C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x6FB DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x708 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x715 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x728 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x747 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x754 DUP5 PUSH1 0xA0 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x766 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x785 DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x792 DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x7A0 DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7FD SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x829 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x876 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x876 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x859 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x925 DUP3 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x9AE JUMPI POP PUSH2 0x9AE DUP2 CALLER PUSH2 0x56F JUMP JUMPDEST PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0xA2A DUP4 DUP4 PUSH2 0x1B07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xAD1 PUSH1 0x1A DUP4 PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xADC SWAP1 PUSH1 0x19 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1A PUSH2 0xAED PUSH1 0x64 DUP6 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xB02 SWAP1 PUSH1 0x19 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB12 DUP2 DUP7 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0xB1D SWAP1 PUSH1 0x4 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0xB27 SWAP2 SWAP1 PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xB32 SWAP1 PUSH1 0xA PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xB42 DUP2 DUP8 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0xB4D SWAP1 PUSH1 0x5 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0xB57 SWAP2 SWAP1 PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xB62 SWAP1 PUSH1 0xA PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xB73 PUSH1 0xA DUP9 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0xB7E SWAP1 PUSH1 0x6 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x2EC6 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB99 JUMPI PUSH2 0xB99 PUSH2 0x2719 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC12 JUMPI PUSH2 0xC12 PUSH2 0x2719 JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xC24 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC2F SWAP1 PUSH1 0x1 PUSH2 0x2EF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCEF JUMPI PUSH2 0xCEF PUSH2 0x2719 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xD14 CALLER PUSH2 0xD04 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD0F SWAP1 PUSH1 0x1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1B75 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD27 CALLER DUP3 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0xD43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0xA2A DUP4 DUP4 DUP4 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD59 DUP4 PUSH2 0xF7C JUMP JUMPDEST DUP3 LT PUSH2 0xDBB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA2A DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15E8 JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xEE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEF3 JUMPI PUSH2 0xEF3 PUSH2 0x2FC1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x102D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x1037 PUSH1 0x0 PUSH2 0x1E31 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1043 DUP3 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x11 SLOAD SWAP1 SWAP2 PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x2719 JUMP JUMPDEST SUB PUSH2 0x121A JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11E8 SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x120F SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1282 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122E PUSH2 0x2719 JUMP JUMPDEST SUB PUSH2 0x1282 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1255 SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x127C SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12A3 SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0x12EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP GT PUSH2 0x131D JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH2 0x131F JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH2 0x1329 SWAP1 DUP3 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0xC ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x134A PUSH2 0x2380 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH2 0x140F PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1420 JUMPI PUSH2 0x1420 PUSH2 0x2719 JUMP JUMPDEST SWAP1 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7FD SWAP1 PUSH2 0x2E76 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1488 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x15F2 CALLER DUP4 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x160E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F3B JUMP JUMPDEST PUSH2 0x161A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1E83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x169F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0x16D7 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1746 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1743 SWAP2 PUSH1 0x7 SWAP2 PUSH2 0x16FE SWAP1 TIMESTAMP PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x1708 SWAP2 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST GT PUSH2 0x173C JUMPI PUSH1 0x13 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x172D SWAP1 TIMESTAMP PUSH2 0x2FD7 JUMP JUMPDEST PUSH2 0x1737 SWAP2 SWAP1 PUSH2 0x2F08 JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1A06 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x175D SWAP1 PUSH1 0x14 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x2FEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1778 DUP5 DUP3 PUSH2 0x5DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 DUP1 SLOAD SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 PUSH2 0x17B6 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17E2 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x182F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1804 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x182F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1812 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1863 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1889 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x18D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1519 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0xE6F DUP2 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x19E7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5D5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1A2D JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A57 JUMPI DUP1 PUSH2 0x1A41 DUP2 PUSH2 0x30A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A50 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2F08 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A72 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A9C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1778 JUMPI PUSH2 0x1AB1 PUSH1 0x1 DUP4 PUSH2 0x2FD7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABE PUSH1 0xA DUP7 PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0x1AC9 SWAP1 PUSH1 0x30 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI PUSH2 0x1ADE PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B00 PUSH1 0xA DUP7 PUSH2 0x2F08 JUMP JUMPDEST SWAP5 POP PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1B3C DUP3 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1B8F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1EB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C17 DUP4 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1C52 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C47 DUP5 PUSH2 0x880 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1778 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1778 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C99 DUP3 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x1D6E DUP4 DUP4 DUP4 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x1D79 PUSH1 0x0 DUP3 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1DA2 SWAP1 DUP5 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1DD0 SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1E8E DUP5 DUP5 DUP5 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x1E9A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x161A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x30BB JUMP JUMPDEST PUSH2 0x1EC0 DUP4 DUP4 PUSH2 0x20A2 JUMP JUMPDEST PUSH2 0x1ECD PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x30BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F44 JUMPI PUSH2 0x1F3F DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1F67 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1F67 JUMPI PUSH2 0x1F67 DUP4 DUP3 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F7E JUMPI PUSH2 0xA2A DUP2 PUSH2 0x228D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA2A JUMPI PUSH2 0xA2A DUP3 DUP3 PUSH2 0x233C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1FE5 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x310D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2020 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x201D SWAP2 DUP2 ADD SWAP1 PUSH2 0x314A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x207D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x204E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F5 SWAP1 PUSH2 0x30BB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x20F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x215D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x2169 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2192 SWAP1 DUP5 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x21FD DUP5 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x2207 SWAP2 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x225A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x229F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x22C7 JUMPI PUSH2 0x22C7 PUSH2 0x2FC1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x22E8 JUMPI PUSH2 0x22E8 PUSH2 0x2FC1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2320 JUMPI PUSH2 0x2320 PUSH2 0x3167 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2347 DUP4 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23FA JUMPI PUSH2 0x23FA PUSH2 0x2719 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2432 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x246A JUMPI PUSH2 0x246A PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2492 JUMPI PUSH2 0x2492 PUSH2 0x2439 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2432 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x244F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2522 DUP6 DUP3 DUP7 ADD PUSH2 0x24C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2547 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x252F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x161A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2570 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2432 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2558 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E8 DUP4 PUSH2 0x25B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2614 DUP5 PUSH2 0x25B0 JUMP JUMPDEST SWAP3 POP PUSH2 0x2622 PUSH1 0x20 DUP6 ADD PUSH2 0x25B0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x264A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x266D DUP9 DUP3 DUP10 ADD PUSH2 0x24C5 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2432 DUP3 PUSH2 0x25B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x26C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x26DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x270A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x274D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD PUSH2 0x27F3 DUP3 DUP6 ADD DUP3 PUSH2 0x272F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x280E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2817 DUP4 PUSH2 0x25B0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x282C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2856 DUP6 PUSH2 0x25B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2864 PUSH1 0x20 DUP7 ADD PUSH2 0x25B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2887 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x244F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP16 DUP3 MSTORE DUP15 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE DUP13 PUSH1 0x60 DUP4 ADD MSTORE DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE DUP6 PUSH2 0x140 DUP4 ADD MSTORE DUP5 PUSH2 0x160 DUP4 ADD MSTORE DUP4 PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x291A PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x272F JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE DUP7 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x296C PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2558 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x298C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2995 DUP4 PUSH2 0x25B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x29A3 PUSH1 0x20 DUP5 ADD PUSH2 0x25B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x29BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x252C JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2A71 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x2B19 PUSH2 0x2B0B PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x29AC JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2B34 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x252C JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x2B96 DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x252C JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x3A SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3C DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C PUSH1 0x5C DUP5 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0x7C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x2BF6 DUP2 PUSH1 0x81 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x81 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x83 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276 PUSH1 0xA3 DUP3 ADD MSTORE PUSH7 0x30B63AB2911D1 PUSH1 0xCD SHL PUSH1 0xC3 DUP3 ADD MSTORE PUSH2 0x2C49 PUSH2 0x2B0B PUSH1 0xCA DUP4 ADD DUP7 PUSH2 0x29AC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x2C66 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x252C JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20227370656564222C202276616C7565223A20000000 PUSH1 0x20 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x2CC8 DUP2 PUSH1 0x3D DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x252C JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3D DUP5 ADD MSTORE DUP2 PUSH1 0x3F DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000 PUSH1 0x5F DUP5 ADD MSTORE DUP6 MLOAD SWAP2 POP PUSH2 0x2D1B DUP3 PUSH1 0x79 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x79 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7B ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2D43 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x252C JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x2DA5 DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x252C JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x2DF6 DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x2C49 PUSH2 0x2B0B PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2E59 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x252C JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E8A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2ED5 JUMPI PUSH2 0x2ED5 PUSH2 0x2EB0 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2F03 JUMPI PUSH2 0x2F03 PUSH2 0x2EDA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F17 JUMPI PUSH2 0x2F17 PUSH2 0x2EB0 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2F36 JUMPI PUSH2 0x2F36 PUSH2 0x2EDA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2FE9 JUMPI PUSH2 0x2FE9 PUSH2 0x2EDA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x300A JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x3029 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x303D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3052 JUMPI PUSH2 0x307F JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 ISZERO ISZERO DUP6 MUL DUP10 ADD SWAP7 POP PUSH2 0x307F JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3077 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x305E JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP PUSH2 0x2B19 PUSH2 0x3092 DUP3 DUP7 PUSH2 0x29AC JUMP JUMPDEST PUSH4 0x2E6A7067 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x30B4 JUMPI PUSH2 0x30B4 PUSH2 0x2EDA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3140 SWAP1 DUP4 ADD DUP5 PUSH2 0x2558 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x315C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2432 DUP2 PUSH2 0x23FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB MULMOD 0xBD 0xCE NOT DUP4 0xA9 0xE7 PUSH1 0x4E 0x29 PUSH30 0x2DCBE64AC5B4BA1F2FACD9EA93276A0C19889F5D64736F6C634300080F00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21C"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87BFC7F"
    },
    "60": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87BFC7F"
    },
    "71": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x49A"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDB2A0A55"
    },
    "82": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x533"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE52E3249"
    },
    "93": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x54E"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x561"
    },
    "108": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "116": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x59D"
    },
    "119": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "120": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "131": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x44E"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB88D4FDE"
    },
    "142": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x461"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBC0B0D88"
    },
    "153": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x474"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87B56DD"
    },
    "164": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x487"
    },
    "168": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "169": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "172": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8AD4D6A5"
    },
    "180": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8AD4D6A5"
    },
    "191": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EF"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8CB22518"
    },
    "202": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x402"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x422"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "224": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "225": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x433"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "229": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x97FC007C"
    },
    "235": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "236": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x43B"
    },
    "239": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "240": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "243": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "251": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x39C"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7901EA78"
    },
    "262": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A4"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8140BD0B"
    },
    "273": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3B7"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x82AFD23B"
    },
    "284": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "285": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3CA"
    },
    "288": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "289": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "300": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "306": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "311": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "312": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "322": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "323": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33D"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "328": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x437454B9"
    },
    "333": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "334": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x350"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F6CCCE7"
    },
    "344": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "345": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x363"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "349": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "350": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6352211E"
    },
    "355": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "356": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x376"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "360": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "361": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "366": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "367": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x389"
    },
    "370": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "376": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "382": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "383": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "387": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2B7AC3F3"
    },
    "393": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "394": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x304"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F745C59"
    },
    "404": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "405": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x317"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "409": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "410": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3B6029CA"
    },
    "415": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "416": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32A"
    },
    "419": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "420": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "423": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "426": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "431": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "GT",
      "path": "22"
    },
    "432": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "436": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "437": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "442": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "443": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x293"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "447": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "448": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "453": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "454": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BE"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "458": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "459": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA363D08"
    },
    "464": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "465": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D3"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "470": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1249C58B"
    },
    "475": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "476": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E1"
    },
    "479": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "480": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "481": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "486": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "487": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E9"
    },
    "490": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "491": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "494": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "496": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "497": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FFC9A7"
    },
    "502": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "503": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "507": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "508": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x419E314"
    },
    "513": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "514": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x249"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "518": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "519": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5106353"
    },
    "524": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "525": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x269"
    },
    "528": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "529": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "530": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "535": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "EQ",
      "path": "22"
    },
    "536": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28B"
    },
    "539": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "540": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "541": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "543": {
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "DUP1",
      "path": "22"
    },
    "544": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        13026
      ],
      "op": "REVERT",
      "path": "22"
    },
    "545": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "546": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x234"
    },
    "549": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22F"
    },
    "552": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "553": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "555": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2415"
    },
    "558": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "559": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "560": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B0"
    },
    "563": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "564": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "565": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "567": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "568": {
      "op": "SWAP1"
    },
    "569": {
      "op": "ISZERO"
    },
    "570": {
      "op": "ISZERO"
    },
    "571": {
      "op": "DUP2"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "577": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "579": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "580": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "581": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "582": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "7"
    },
    "583": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "584": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "7"
    },
    "585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C"
    },
    "589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x257"
    },
    "592": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "595": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E5"
    },
    "598": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "599": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DB"
    },
    "603": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "604": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "605": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "611": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "612": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2584"
    },
    "616": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "617": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "618": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27D"
    },
    "621": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x277"
    },
    "624": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "625": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "627": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "630": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5617,
        5689
      ],
      "op": "JUMP",
      "path": "22"
    },
    "631": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5670,
        5677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "635": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5670,
        5677
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "636": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "JUMP",
      "path": "22"
    },
    "637": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "638": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "640": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "641": {
      "op": "SWAP1"
    },
    "642": {
      "op": "DUP2"
    },
    "643": {
      "op": "MSTORE"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5617,
        5689
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "650": {
      "op": "JUMP"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25C"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7EE"
    },
    "658": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "659": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "660": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A6"
    },
    "663": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1"
    },
    "666": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "667": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "669": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2597"
    },
    "672": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "673": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "674": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x880"
    },
    "677": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "678": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "679": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "681": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "688": {
      "op": "SHL"
    },
    "689": {
      "op": "SUB"
    },
    "690": {
      "op": "SWAP1"
    },
    "691": {
      "op": "SWAP2"
    },
    "692": {
      "op": "AND"
    },
    "693": {
      "op": "DUP2"
    },
    "694": {
      "op": "MSTORE"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "697": {
      "op": "ADD"
    },
    "698": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x240"
    },
    "701": {
      "op": "JUMP"
    },
    "702": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "703": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "706": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CC"
    },
    "709": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "710": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "712": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25CC"
    },
    "715": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "716": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "717": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91A"
    },
    "720": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "721": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "722": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "6"
    },
    "723": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "724": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x234"
    },
    "727": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x277"
    },
    "730": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "731": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "733": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        5775,
        5847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "736": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        5775,
        5847
      ],
      "op": "JUMP",
      "path": "22"
    },
    "737": {
      "fn": "Wizards.mint",
      "offset": [
        2992,
        3978
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "738": {
      "fn": "Wizards.mint",
      "offset": [
        2992,
        3978
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "741": {
      "fn": "Wizards.mint",
      "offset": [
        2992,
        3978
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2F"
    },
    "744": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2992,
        3978
      ],
      "op": "JUMP",
      "path": "22"
    },
    "745": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "746": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x8"
    },
    "748": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "749": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D"
    },
    "752": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "753": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FF"
    },
    "760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "763": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25F6"
    },
    "766": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "767": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD1D"
    },
    "771": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "772": {
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "773": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "775": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "776": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A6"
    },
    "779": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "offset": [
        614,
        637
      ],
      "op": "AND",
      "path": "22"
    },
    "789": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "790": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "791": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "792": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D"
    },
    "795": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x325"
    },
    "798": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "799": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "801": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25CC"
    },
    "804": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "805": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "806": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD4E"
    },
    "809": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "810": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "811": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "814": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x338"
    },
    "817": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "818": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "820": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2632"
    },
    "823": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMP",
      "path": "22"
    },
    "824": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "825": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDE4"
    },
    "828": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMP",
      "path": "22"
    },
    "829": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34B"
    },
    "836": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25F6"
    },
    "842": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "843": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "844": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE15"
    },
    "847": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "848": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "849": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "852": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x35E"
    },
    "855": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "856": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "858": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "861": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMP",
      "path": "22"
    },
    "862": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "863": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE30"
    },
    "866": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMP",
      "path": "22"
    },
    "867": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "868": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D"
    },
    "871": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x371"
    },
    "874": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "875": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "877": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2597"
    },
    "880": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "881": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "882": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE72"
    },
    "885": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A6"
    },
    "890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x384"
    },
    "893": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2597"
    },
    "899": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF05"
    },
    "904": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "905": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "906": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D"
    },
    "909": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x397"
    },
    "912": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "913": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x268F"
    },
    "918": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "919": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "920": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7C"
    },
    "923": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "925": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D1"
    },
    "928": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1003"
    },
    "931": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "932": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "933": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "936": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3B2"
    },
    "939": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "940": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "942": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "945": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMP",
      "path": "22"
    },
    "946": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "947": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1039"
    },
    "950": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMP",
      "path": "22"
    },
    "951": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "952": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "955": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C5"
    },
    "958": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "959": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "961": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26AA"
    },
    "964": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMP",
      "path": "22"
    },
    "965": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "966": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1147"
    },
    "969": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMP",
      "path": "22"
    },
    "970": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "971": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x234"
    },
    "974": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D8"
    },
    "977": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "978": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "980": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "983": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        1986,
        2142
      ],
      "op": "JUMP",
      "path": "22"
    },
    "984": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "985": {
      "fn": "Wizards.isActive",
      "offset": [
        2043,
        2047
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "987": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 1
    },
    "988": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "DUP2",
      "path": "22"
    },
    "989": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "990": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2081
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "992": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "994": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "995": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "997": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "998": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2092
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "999": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2116
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1001": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2116
      ],
      "op": "ADD",
      "path": "22"
    },
    "1002": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2116
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1003": {
      "fn": "Wizards.isActive",
      "offset": [
        2119,
        2134
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "1004": {
      "op": "LT"
    },
    "1005": {
      "fn": "Wizards.isActive",
      "offset": [
        2067,
        2134
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1006": {
      "fn": "Wizards.isActive",
      "offset": [
        1986,
        2142
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1007": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1008": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "1011": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3FD"
    },
    "1014": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1015": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1017": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26F7"
    },
    "1020": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1021": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1022": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12AF"
    },
    "1025": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1026": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1027": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x415"
    },
    "1030": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x410"
    },
    "1033": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1034": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1036": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "1039": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1040": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1041": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1342"
    },
    "1044": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1045": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1046": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1048": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1049": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "1052": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1053": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1054": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2751"
    },
    "1057": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1058": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1059": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0xA"
    },
    "1061": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "op": "SUB"
    },
    "1070": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "1071": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A6"
    },
    "1074": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1075": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1076": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25C"
    },
    "1079": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1429"
    },
    "1082": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1083": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1084": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "1087": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x449"
    },
    "1090": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1091": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1093": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x268F"
    },
    "1096": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1097": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1098": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1438"
    },
    "1101": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1102": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1103": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "1106": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45C"
    },
    "1109": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1110": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1112": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27FB"
    },
    "1115": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1116": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1117": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1524"
    },
    "1120": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1121": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1122": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "1125": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46F"
    },
    "1128": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1129": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2837"
    },
    "1134": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1135": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1136": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E8"
    },
    "1139": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1140": {
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1141": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1143": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1144": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A6"
    },
    "1147": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "SUB"
    },
    "1156": {
      "offset": [
        548,
        570
      ],
      "op": "AND",
      "path": "22"
    },
    "1157": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1158": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1159": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1160": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25C"
    },
    "1163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x495"
    },
    "1166": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1169": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "1172": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1620"
    },
    "1177": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1178": {
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1179": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x519"
    },
    "1182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4A8"
    },
    "1185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1188": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2597"
    },
    "1191": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1198": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1199": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1200": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1203": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1204": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1209": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1211": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1214": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1215": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1216": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1219": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1222": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1224": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1225": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1226": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1227": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1230": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1235": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1236": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1237": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1239": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1240": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1241": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1242": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "1244": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP9",
      "path": "22"
    },
    "1245": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1246": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1247": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "1249": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP10",
      "path": "22"
    },
    "1250": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1251": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1252": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1254": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP11",
      "path": "22"
    },
    "1255": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1256": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1257": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1259": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1260": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1261": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1262": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1263": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1264": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1265": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1266": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1268": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP13",
      "path": "22"
    },
    "1269": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1270": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1271": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1273": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1274": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1275": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1276": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1277": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1278": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1279": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1280": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1281": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1282": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1283": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1284": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1285": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1286": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1287": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1288": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1289": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1290": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1291": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1292": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1293": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1294": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1295": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1296": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1297": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1298": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1299": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1300": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1302": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "AND",
      "path": "22"
    },
    "1303": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP15",
      "path": "22"
    },
    "1304": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1305": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1306": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1308": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1309": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "1312": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP15",
      "path": "22"
    },
    "1313": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP14",
      "path": "22"
    },
    "1314": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1315": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1316": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1317": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1318": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1319": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1320": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1321": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1322": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1323": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1324": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1325": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1326": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1327": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28B3"
    },
    "1330": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1331": {
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1332": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x53B"
    },
    "1335": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1780"
    },
    "1338": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1339": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1340": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1342": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1343": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x240"
    },
    "1346": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1347": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1348": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1349": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1350": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1351": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1352": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1353": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1354": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x292D"
    },
    "1357": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1358": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1359": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D1"
    },
    "1362": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x55C"
    },
    "1365": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1366": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1368": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x268F"
    },
    "1371": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        12552,
        12778
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1372": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1373": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1839"
    },
    "1376": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        12552,
        12778
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1377": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1378": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x234"
    },
    "1381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x56F"
    },
    "1384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1387": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2979"
    },
    "1390": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1391": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 3
    },
    "1401": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1402": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "1403": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1405": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1406": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1407": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1408": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1410": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1414": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1417": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1418": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1419": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1420": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1421": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1422": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1423": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1424": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1426": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1427": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1428": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1429": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1430": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1431": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1432": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1435": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1436": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D1"
    },
    "1441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5AB"
    },
    "1444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x268F"
    },
    "1450": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x191E"
    },
    "1455": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1456": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1457": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "op": "SUB"
    },
    "1467": {
      "op": "NOT"
    },
    "1468": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 4
    },
    "1469": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "7"
    },
    "1470": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1477": {
      "op": "SHL"
    },
    "1478": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "7"
    },
    "1479": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1480": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D5"
    },
    "1483": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1484": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "7"
    },
    "1485": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5D5"
    },
    "1488": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1489": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19B6"
    },
    "1492": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1493": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1494": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1495": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1496": {
      "op": "POP"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1499": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1500": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7605,
        7618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1502": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7706
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1504": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7723
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1506": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7724,
        7732
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1509": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1510": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1511": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1513": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1514": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1515": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1516": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1517": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1519": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1520": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1522": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7709,
        7733
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1523": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1525": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1526": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "1530": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1531": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1534": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1535": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1536": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1538": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1539": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1540": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1541": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1542": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1543": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1545": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1546": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1548": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1549": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1550": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1551": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1552": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1553": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1555": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1556": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1558": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1559": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1560": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1561": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1562": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1565": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1566": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1568": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1569": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1572": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1575": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1576": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1579": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1580": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1581": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1591": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1592": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1595": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1598": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1599": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1602": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1605": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "1608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1609": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1610": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1611": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1612": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1615": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "1618": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1619": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1620": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1621": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1622": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1623": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1625": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1626": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1628": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1630": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1631": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1632": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1633": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1635": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1636": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1638": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1639": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1640": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1641": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1642": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1643": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1645": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1646": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1648": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1649": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1650": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1651": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1652": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1653": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1655": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1656": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1658": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1659": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1660": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1661": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1662": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1665": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1666": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1668": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1669": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ADD",
      "path": "22"
    },
    "1670": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1672": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1674": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1675": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1678": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "EXP",
      "path": "22"
    },
    "1679": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1680": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DIV",
      "path": "22"
    },
    "1681": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1683": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "AND",
      "path": "22"
    },
    "1684": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1686": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1687": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "GT",
      "path": "22"
    },
    "1688": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1689": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6A4"
    },
    "1692": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1693": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6A4"
    },
    "1696": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "1699": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1700": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1701": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1703": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1704": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "GT",
      "path": "22"
    },
    "1705": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1706": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6B5"
    },
    "1709": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1710": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6B5"
    },
    "1713": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "1716": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1717": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1718": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1719": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1720": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "POP",
      "path": "22"
    },
    "1721": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "POP",
      "path": "22"
    },
    "1722": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1723": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7686,
        7733
      ],
      "op": "POP",
      "path": "22"
    },
    "1724": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7746,
        7768
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1726": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7971,
        7979
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1727": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8154,
        8185
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6CB"
    },
    "1730": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8171,
        8178
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1731": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8171,
        8184
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1733": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8171,
        8184
      ],
      "op": "ADD",
      "path": "22"
    },
    "1734": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8171,
        8184
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1735": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8154,
        8170
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1738": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8154,
        8185
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1739": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8154,
        8185
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1740": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1742": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1743": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1745": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "ADD",
      "path": "22"
    },
    "1746": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6DC"
    },
    "1749": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1750": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1751": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1752": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29C8"
    },
    "1755": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        7778,
        8202
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1756": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1757": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1759": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1760": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1762": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1763": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1764": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SUB",
      "path": "22"
    },
    "1765": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SUB",
      "path": "22"
    },
    "1766": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1767": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1768": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1769": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1771": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7778,
        8202
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1772": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7746,
        8203
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1773": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7746,
        8203
      ],
      "op": "POP",
      "path": "22"
    },
    "1774": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8303,
        8311
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 5
    },
    "1775": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8401,
        8429
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6FB"
    },
    "1778": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8418,
        8425
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1779": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8418,
        8428
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1781": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8418,
        8428
      ],
      "op": "ADD",
      "path": "22"
    },
    "1782": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8418,
        8428
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1783": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8401,
        8417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1786": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8401,
        8429
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1787": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8401,
        8429
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1788": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8538,
        8576
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x708"
    },
    "1791": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8555,
        8562
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1792": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8555,
        8575
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1794": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8555,
        8575
      ],
      "op": "ADD",
      "path": "22"
    },
    "1795": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8555,
        8575
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1796": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8538,
        8554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1799": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8538,
        8576
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1800": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8538,
        8576
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1801": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8691,
        8731
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x715"
    },
    "1804": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8708,
        8715
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1805": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8708,
        8730
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1807": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8708,
        8730
      ],
      "op": "ADD",
      "path": "22"
    },
    "1808": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8708,
        8730
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1809": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8691,
        8707
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1812": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8691,
        8731
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1813": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8691,
        8731
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1814": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1816": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1817": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1819": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "ADD",
      "path": "22"
    },
    "1820": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x728"
    },
    "1823": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1824": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1825": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1826": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1827": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1828": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B22"
    },
    "1831": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8286,
        8750
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1832": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1833": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1835": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1836": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1838": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1839": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1840": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SUB",
      "path": "22"
    },
    "1841": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SUB",
      "path": "22"
    },
    "1842": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1843": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1844": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1845": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1847": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8286,
        8750
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1848": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8268,
        8751
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1849": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8268,
        8751
      ],
      "op": "POP",
      "path": "22"
    },
    "1850": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8851,
        8859
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 6
    },
    "1851": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8952,
        8983
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x747"
    },
    "1854": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8969,
        8976
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1855": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8969,
        8982
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "1857": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8969,
        8982
      ],
      "op": "ADD",
      "path": "22"
    },
    "1858": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8969,
        8982
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1859": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8952,
        8968
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1862": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8952,
        8983
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1863": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8952,
        8983
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1864": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9081,
        9111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x754"
    },
    "1867": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9098,
        9105
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1868": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9098,
        9110
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "1870": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9098,
        9110
      ],
      "op": "ADD",
      "path": "22"
    },
    "1871": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9098,
        9110
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1872": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9081,
        9097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1875": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9081,
        9111
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1876": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9081,
        9111
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1877": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1879": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1880": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1882": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "ADD",
      "path": "22"
    },
    "1883": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x766"
    },
    "1886": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1887": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1888": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1889": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1890": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C54"
    },
    "1893": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        8834,
        9130
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1894": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1895": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1897": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1898": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1900": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1901": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1902": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SUB",
      "path": "22"
    },
    "1903": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SUB",
      "path": "22"
    },
    "1904": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1905": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1906": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1907": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1909": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8834,
        9130
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1910": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8816,
        9131
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1911": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        8816,
        9131
      ],
      "op": "POP",
      "path": "22"
    },
    "1912": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9233,
        9241
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 7
    },
    "1913": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9335,
        9367
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x785"
    },
    "1916": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9352,
        9359
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1917": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9352,
        9366
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "1919": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9352,
        9366
      ],
      "op": "ADD",
      "path": "22"
    },
    "1920": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9352,
        9366
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1921": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9335,
        9351
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1924": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9335,
        9367
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1925": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9335,
        9367
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1926": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9470,
        9503
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x792"
    },
    "1929": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9487,
        9494
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1930": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9487,
        9502
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "1932": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9487,
        9502
      ],
      "op": "ADD",
      "path": "22"
    },
    "1933": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9487,
        9502
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1934": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9470,
        9486
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1937": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9470,
        9503
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1938": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9470,
        9503
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1939": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9616,
        9655
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7A0"
    },
    "1942": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9633,
        9640
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1943": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9633,
        9654
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1946": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9633,
        9654
      ],
      "op": "ADD",
      "path": "22"
    },
    "1947": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9633,
        9654
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1948": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9616,
        9632
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "1951": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9616,
        9655
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1952": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9616,
        9655
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1953": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1955": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1956": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1958": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "ADD",
      "path": "22"
    },
    "1959": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7B3"
    },
    "1962": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1963": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1964": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1965": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1966": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1967": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D31"
    },
    "1970": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9216,
        9674
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1971": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1972": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1974": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1975": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1977": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1978": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1979": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SUB",
      "path": "22"
    },
    "1980": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SUB",
      "path": "22"
    },
    "1981": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1982": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1983": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1984": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1986": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9216,
        9674
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1987": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9198,
        9675
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1988": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9198,
        9675
      ],
      "op": "POP",
      "path": "22"
    },
    "1989": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9746,
        9754
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 8
    },
    "1990": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1992": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1993": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1995": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "ADD",
      "path": "22"
    },
    "1996": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7D5"
    },
    "1999": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2000": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2001": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E47"
    },
    "2004": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        9729,
        9764
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2005": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2006": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2008": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2009": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2010": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2011": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2012": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SUB",
      "path": "22"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2015": {
      "op": "NOT"
    },
    "2016": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "ADD",
      "path": "22"
    },
    "2017": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2018": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2019": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2020": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2021": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2022": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        9729,
        9764
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2023": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        7518,
        10753
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        7518,
        10753
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2030": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2031": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2033": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "2035": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2036": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2037": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7FD"
    },
    "2040": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2041": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E76"
    },
    "2044": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2045": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2046": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2047": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2049": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2050": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2052": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2053": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2054": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2055": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2056": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2058": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2059": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2061": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2062": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2063": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2064": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2065": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2067": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2068": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2069": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2070": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2071": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2072": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2073": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2074": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2075": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2077": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2078": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2079": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2080": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2081": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x829"
    },
    "2084": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2085": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E76"
    },
    "2088": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2089": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2090": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2091": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2092": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x876"
    },
    "2095": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2096": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2097": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2099": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "6"
    },
    "2100": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x84B"
    },
    "2103": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2104": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2107": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2108": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2109": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2110": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2111": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2112": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2113": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2114": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2115": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2117": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2118": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2119": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x876"
    },
    "2122": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2123": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2124": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2125": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2126": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2127": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2128": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2130": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2131": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2133": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2135": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2136": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2137": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2138": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2139": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2140": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2141": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2142": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2143": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2145": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2146": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2147": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2149": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2150": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2151": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2152": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "6"
    },
    "2153": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x859"
    },
    "2156": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2157": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2158": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2159": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "6"
    },
    "2160": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2162": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "6"
    },
    "2163": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2164": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2165": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2166": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2167": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2168": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2169": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2170": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2171": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2172": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2173": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2174": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2175": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2176": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2177": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2179": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 10
    },
    "2180": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2181": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2182": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2184": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2186": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2187": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2189": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2190": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2191": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "2201": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0x8FE"
    },
    "2204": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2205": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2207": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2216": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2219": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2221": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2222": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "6"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2228": {
      "op": "DUP3"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "op": "MSTORE"
    },
    "2231": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2266": {
      "op": "DUP3"
    },
    "2267": {
      "op": "ADD"
    },
    "2268": {
      "op": "MSTORE"
    },
    "2269": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2284": {
      "op": "SHL"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2287": {
      "op": "DUP3"
    },
    "2288": {
      "op": "ADD"
    },
    "2289": {
      "op": "MSTORE"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2294": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2296": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2297": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2298": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2299": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "6"
    },
    "2300": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2301": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "2302": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2303": {
      "op": "POP"
    },
    "2304": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x0"
    },
    "2306": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2307": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2308": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2309": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2311": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2313": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2314": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2316": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2317": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2318": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "op": "SUB"
    },
    "2327": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "6"
    },
    "2328": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2329": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2330": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2331": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2333": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x925"
    },
    "2336": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2337": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF05"
    },
    "2340": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2341": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2342": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2343": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "6"
    },
    "2344": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "op": "SUB"
    },
    "2353": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2354": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2361": {
      "op": "SHL"
    },
    "2362": {
      "op": "SUB"
    },
    "2363": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2364": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "SUB",
      "path": "6"
    },
    "2365": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x992"
    },
    "2368": {
      "branch": 124,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2369": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2380": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2383": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2385": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2386": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "6"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2392": {
      "op": "DUP3"
    },
    "2393": {
      "op": "ADD"
    },
    "2394": {
      "op": "MSTORE"
    },
    "2395": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2430": {
      "op": "DUP3"
    },
    "2431": {
      "op": "ADD"
    },
    "2432": {
      "op": "MSTORE"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "2437": {
      "op": "SHL"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2440": {
      "op": "DUP3"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "MSTORE"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2445": {
      "op": "ADD"
    },
    "2446": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "2449": {
      "op": "JUMP"
    },
    "2450": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2451": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 14
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "op": "SUB"
    },
    "2460": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 15
    },
    "2461": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "6"
    },
    "2462": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "6"
    },
    "2463": {
      "branch": 125,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2464": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9AE"
    },
    "2467": {
      "branch": 125,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2468": {
      "op": "POP"
    },
    "2469": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9AE"
    },
    "2472": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2473": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2474": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x56F"
    },
    "2477": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2478": {
      "branch": 126,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2479": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA20"
    },
    "2482": {
      "branch": 126,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2483": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2485": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2494": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2497": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2499": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2500": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "6"
    },
    "2501": {
      "op": "MSTORE"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2506": {
      "op": "DUP3"
    },
    "2507": {
      "op": "ADD"
    },
    "2508": {
      "op": "MSTORE"
    },
    "2509": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2544": {
      "op": "DUP3"
    },
    "2545": {
      "op": "ADD"
    },
    "2546": {
      "op": "MSTORE"
    },
    "2547": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2582": {
      "op": "DUP3"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "op": "MSTORE"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "2591": {
      "op": "JUMP"
    },
    "2592": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2593": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0xA2A"
    },
    "2596": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2597": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2598": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B07"
    },
    "2601": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2602": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2603": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2604": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2605": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2606": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2607": {
      "fn": "Wizards.mint",
      "offset": [
        2992,
        3978
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2608": {
      "fn": "Wizards.mint",
      "offset": [
        3052,
        3078
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x10"
    },
    "2610": {
      "fn": "Wizards.mint",
      "offset": [
        3052,
        3078
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2611": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2613": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2614": {
      "branch": 113,
      "fn": "Wizards.mint",
      "offset": [
        3036,
        3078
      ],
      "op": "LT",
      "path": "22"
    },
    "2615": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA73"
    },
    "2618": {
      "branch": 113,
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2619": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2621": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2628": {
      "op": "SHL"
    },
    "2629": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2630": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2633": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2635": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2636": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "ADD",
      "path": "22"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2642": {
      "op": "DUP3"
    },
    "2643": {
      "op": "ADD"
    },
    "2644": {
      "op": "MSTORE"
    },
    "2645": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2662": {
      "op": "SHL"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2665": {
      "op": "DUP3"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "op": "MSTORE"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "2674": {
      "op": "JUMP"
    },
    "2675": {
      "fn": "Wizards.mint",
      "offset": [
        3028,
        3097
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2676": {
      "fn": "Wizards.mint",
      "offset": [
        3215,
        3236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2678": {
      "fn": "Wizards.mint",
      "offset": [
        3274,
        3287
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA7E"
    },
    "2681": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2683": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2684": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2685": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2686": {
      "fn": "Wizards.mint",
      "offset": [
        3274,
        3287
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2687": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2689": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2690": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2691": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2693": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2694": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "ADD",
      "path": "22"
    },
    "2695": {
      "op": "SWAP3"
    },
    "2696": {
      "op": "SWAP1"
    },
    "2697": {
      "op": "SWAP3"
    },
    "2698": {
      "op": "MSTORE"
    },
    "2699": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2712": {
      "op": "NOT"
    },
    "2713": {
      "fn": "Wizards.mint",
      "offset": [
        3289,
        3299
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "op": "AND"
    },
    "2718": {
      "op": "SWAP1"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "fn": "Wizards.mint",
      "offset": [
        3301,
        3316
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "2725": {
      "op": "DUP3"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "op": "MSTORE"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2730": {
      "op": "ADD"
    },
    "2731": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2733": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2734": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2737": {
      "op": "NOT"
    },
    "2738": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2739": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2740": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "SUB",
      "path": "22"
    },
    "2741": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "ADD",
      "path": "22"
    },
    "2742": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2743": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2744": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2745": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2746": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2747": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2748": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2749": {
      "fn": "Wizards.mint",
      "offset": [
        3257,
        3317
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2751": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2752": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2753": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "ADD",
      "path": "22"
    },
    "2754": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2755": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2756": {
      "op": "POP"
    },
    "2757": {
      "fn": "Wizards.mint",
      "offset": [
        3239,
        3319
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2759": {
      "fn": "Wizards.mint",
      "offset": [
        3462,
        3480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD1"
    },
    "2762": {
      "fn": "Wizards.mint",
      "offset": [
        3478,
        3480
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "2764": {
      "fn": "Wizards.mint",
      "offset": [
        3247,
        3318
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2765": {
      "fn": "Wizards.mint",
      "offset": [
        3462,
        3480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EC6"
    },
    "2768": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3462,
        3480
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2769": {
      "fn": "Wizards.mint",
      "offset": [
        3462,
        3480
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2770": {
      "fn": "Wizards.mint",
      "offset": [
        3457,
        3480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xADC"
    },
    "2773": {
      "fn": "Wizards.mint",
      "offset": [
        3457,
        3480
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2774": {
      "fn": "Wizards.mint",
      "offset": [
        3457,
        3459
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "2776": {
      "fn": "Wizards.mint",
      "offset": [
        3457,
        3480
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "2779": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3457,
        3480
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2780": {
      "fn": "Wizards.mint",
      "offset": [
        3457,
        3480
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2781": {
      "fn": "Wizards.mint",
      "offset": [
        3444,
        3480
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2782": {
      "op": "POP"
    },
    "2783": {
      "fn": "Wizards.mint",
      "offset": [
        3491,
        3511
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2785": {
      "fn": "Wizards.mint",
      "offset": [
        3541,
        3543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "2787": {
      "fn": "Wizards.mint",
      "offset": [
        3520,
        3537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAED"
    },
    "2790": {
      "fn": "Wizards.mint",
      "offset": [
        3534,
        3537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2792": {
      "fn": "Wizards.mint",
      "offset": [
        3520,
        3533
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2793": {
      "fn": "Wizards.mint",
      "offset": [
        3520,
        3537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "2796": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3520,
        3537
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2797": {
      "fn": "Wizards.mint",
      "offset": [
        3520,
        3537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2798": {
      "fn": "Wizards.mint",
      "offset": [
        3519,
        3543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAF7"
    },
    "2801": {
      "fn": "Wizards.mint",
      "offset": [
        3519,
        3543
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2802": {
      "fn": "Wizards.mint",
      "offset": [
        3519,
        3543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2803": {
      "fn": "Wizards.mint",
      "offset": [
        3519,
        3543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EC6"
    },
    "2806": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3519,
        3543
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2807": {
      "fn": "Wizards.mint",
      "offset": [
        3519,
        3543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2808": {
      "fn": "Wizards.mint",
      "offset": [
        3514,
        3543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB02"
    },
    "2811": {
      "fn": "Wizards.mint",
      "offset": [
        3514,
        3543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2812": {
      "fn": "Wizards.mint",
      "offset": [
        3514,
        3516
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "2814": {
      "fn": "Wizards.mint",
      "offset": [
        3514,
        3543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "2817": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3514,
        3543
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2818": {
      "fn": "Wizards.mint",
      "offset": [
        3514,
        3543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2819": {
      "fn": "Wizards.mint",
      "offset": [
        3491,
        3543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "fn": "Wizards.mint",
      "offset": [
        3554,
        3576
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2823": {
      "fn": "Wizards.mint",
      "offset": [
        3607,
        3609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2825": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB12"
    },
    "2828": {
      "fn": "Wizards.mint",
      "offset": [
        3607,
        3609
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2829": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3598
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2830": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "2833": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3585,
        3601
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2834": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3601
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2835": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3603
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB1D"
    },
    "2838": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3603
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2839": {
      "fn": "Wizards.mint",
      "offset": [
        3602,
        3603
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2841": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3603
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1C"
    },
    "2844": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3585,
        3603
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2845": {
      "fn": "Wizards.mint",
      "offset": [
        3585,
        3603
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2846": {
      "fn": "Wizards.mint",
      "offset": [
        3584,
        3609
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB27"
    },
    "2849": {
      "fn": "Wizards.mint",
      "offset": [
        3584,
        3609
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2850": {
      "fn": "Wizards.mint",
      "offset": [
        3584,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2851": {
      "fn": "Wizards.mint",
      "offset": [
        3584,
        3609
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EC6"
    },
    "2854": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3584,
        3609
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2855": {
      "fn": "Wizards.mint",
      "offset": [
        3584,
        3609
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2856": {
      "fn": "Wizards.mint",
      "offset": [
        3579,
        3609
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB32"
    },
    "2859": {
      "fn": "Wizards.mint",
      "offset": [
        3579,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2860": {
      "fn": "Wizards.mint",
      "offset": [
        3579,
        3581
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2862": {
      "fn": "Wizards.mint",
      "offset": [
        3579,
        3609
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "2865": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3579,
        3609
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2866": {
      "fn": "Wizards.mint",
      "offset": [
        3579,
        3609
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2867": {
      "fn": "Wizards.mint",
      "offset": [
        3554,
        3609
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "fn": "Wizards.mint",
      "offset": [
        3620,
        3633
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2871": {
      "fn": "Wizards.mint",
      "offset": [
        3664,
        3666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2873": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3658
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB42"
    },
    "2876": {
      "fn": "Wizards.mint",
      "offset": [
        3664,
        3666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2877": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3655
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2878": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3658
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "2881": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3642,
        3658
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2882": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3658
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2883": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3660
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB4D"
    },
    "2886": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3660
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2887": {
      "fn": "Wizards.mint",
      "offset": [
        3659,
        3660
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "2889": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3660
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1C"
    },
    "2892": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3642,
        3660
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2893": {
      "fn": "Wizards.mint",
      "offset": [
        3642,
        3660
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2894": {
      "fn": "Wizards.mint",
      "offset": [
        3641,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB57"
    },
    "2897": {
      "fn": "Wizards.mint",
      "offset": [
        3641,
        3666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2898": {
      "fn": "Wizards.mint",
      "offset": [
        3641,
        3666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2899": {
      "fn": "Wizards.mint",
      "offset": [
        3641,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EC6"
    },
    "2902": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3641,
        3666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2903": {
      "fn": "Wizards.mint",
      "offset": [
        3641,
        3666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2904": {
      "fn": "Wizards.mint",
      "offset": [
        3636,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB62"
    },
    "2907": {
      "fn": "Wizards.mint",
      "offset": [
        3636,
        3666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2908": {
      "fn": "Wizards.mint",
      "offset": [
        3636,
        3638
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2910": {
      "fn": "Wizards.mint",
      "offset": [
        3636,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "2913": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3636,
        3666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2914": {
      "fn": "Wizards.mint",
      "offset": [
        3636,
        3666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2915": {
      "fn": "Wizards.mint",
      "offset": [
        3620,
        3666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "fn": "Wizards.mint",
      "offset": [
        3677,
        3692
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2919": {
      "fn": "Wizards.mint",
      "offset": [
        3726,
        3727
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2921": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3720
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB73"
    },
    "2924": {
      "fn": "Wizards.mint",
      "offset": [
        3718,
        3720
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2926": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3717
      ],
      "op": "DUP9",
      "path": "22"
    },
    "2927": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3720
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "2930": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3704,
        3720
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2931": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3720
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2932": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3722
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB7E"
    },
    "2935": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3722
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2936": {
      "fn": "Wizards.mint",
      "offset": [
        3721,
        3722
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "2938": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3722
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F1C"
    },
    "2941": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3704,
        3722
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2942": {
      "fn": "Wizards.mint",
      "offset": [
        3704,
        3722
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2943": {
      "fn": "Wizards.mint",
      "offset": [
        3703,
        3727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB88"
    },
    "2946": {
      "fn": "Wizards.mint",
      "offset": [
        3703,
        3727
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2947": {
      "fn": "Wizards.mint",
      "offset": [
        3703,
        3727
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2948": {
      "fn": "Wizards.mint",
      "offset": [
        3703,
        3727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EC6"
    },
    "2951": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3703,
        3727
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2952": {
      "fn": "Wizards.mint",
      "offset": [
        3703,
        3727
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2953": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2955": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2956": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "GT",
      "path": "22"
    },
    "2957": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2958": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB99"
    },
    "2961": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2962": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB99"
    },
    "2965": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "2968": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3695,
        3728
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2969": {
      "fn": "Wizards.mint",
      "offset": [
        3695,
        3728
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2970": {
      "fn": "Wizards.mint",
      "offset": [
        3677,
        3728
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2971": {
      "fn": "Wizards.mint",
      "offset": [
        3677,
        3728
      ],
      "op": "POP",
      "path": "22"
    },
    "2972": {
      "fn": "Wizards.mint",
      "offset": [
        3741,
        3761
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2974": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2976": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2977": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2978": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "2981": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "2982": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2984": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2985": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2986": {
      "fn": "Wizards.mint",
      "offset": [
        3771,
        3772
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2988": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2989": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2990": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2992": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "2993": {
      "fn": "Wizards.mint",
      "offset": [
        3774,
        3776
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2994": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2995": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2996": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2998": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "2999": {
      "fn": "Wizards.mint",
      "offset": [
        3778,
        3790
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3000": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3001": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3002": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3004": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3005": {
      "fn": "Wizards.mint",
      "offset": [
        3792,
        3806
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3006": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3007": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3008": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3010": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3011": {
      "fn": "Wizards.mint",
      "offset": [
        3808,
        3813
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3012": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3013": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3014": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3016": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3017": {
      "fn": "Wizards.mint",
      "offset": [
        3815,
        3816
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3019": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3020": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3021": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3023": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3024": {
      "fn": "Wizards.mint",
      "offset": [
        3818,
        3819
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3026": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3027": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3028": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3030": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3031": {
      "fn": "Wizards.mint",
      "offset": [
        3821,
        3822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3033": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3034": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3035": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3037": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3038": {
      "fn": "Wizards.mint",
      "offset": [
        3824,
        3825
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3040": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3041": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3042": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3044": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3045": {
      "fn": "Wizards.mint",
      "offset": [
        3827,
        3828
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3047": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3048": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3049": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3051": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3052": {
      "fn": "Wizards.mint",
      "offset": [
        3830,
        3831
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3054": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3055": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3056": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3058": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3059": {
      "fn": "Wizards.mint",
      "offset": [
        3833,
        3834
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3061": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3062": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3063": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3065": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3066": {
      "fn": "Wizards.mint",
      "offset": [
        3836,
        3837
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3068": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3069": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3070": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3072": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ADD",
      "path": "22"
    },
    "3073": {
      "fn": "Wizards.mint",
      "offset": [
        3839,
        3846
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3074": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3076": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3077": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "GT",
      "path": "22"
    },
    "3078": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3079": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC12"
    },
    "3082": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3083": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC12"
    },
    "3086": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "3089": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3765,
        3847
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3090": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3091": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3092": {
      "fn": "Wizards.mint",
      "offset": [
        3765,
        3847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3093": {
      "fn": "Wizards.mint",
      "offset": [
        3741,
        3847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "fn": "Wizards.mint",
      "offset": [
        3741,
        3847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3096": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3872
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0xB"
    },
    "3098": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3100": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3886
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC24"
    },
    "3103": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3105": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3106": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3107": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3108": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3886
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3109": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3888
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC2F"
    },
    "3112": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3888
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3113": {
      "fn": "Wizards.mint",
      "offset": [
        3887,
        3888
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3115": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3888
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "3118": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3873,
        3888
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3119": {
      "fn": "Wizards.mint",
      "offset": [
        3873,
        3888
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3120": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3121": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3122": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3124": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "ADD",
      "path": "22"
    },
    "3125": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3126": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3127": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3128": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3130": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "ADD",
      "path": "22"
    },
    "3131": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3133": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3889
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3134": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3136": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3137": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3138": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3139": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3140": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3142": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3143": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3144": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3146": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3147": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3148": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3149": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3150": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3152": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3153": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3154": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3156": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3157": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3158": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3159": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3160": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3162": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3163": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3164": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "3166": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3167": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3168": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3169": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3170": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3172": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3173": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3174": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "3176": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3177": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3178": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3179": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3180": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3182": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3183": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3184": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "3186": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3187": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3188": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3189": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3190": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3192": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3193": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3194": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "3196": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3197": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3198": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3199": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3200": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3202": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3203": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3204": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3206": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3207": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3208": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3209": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3210": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "3212": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3213": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3214": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3217": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3218": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3219": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3220": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3221": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "3223": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3224": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3225": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x120"
    },
    "3228": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3229": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3230": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3231": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3232": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "3234": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3235": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3236": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x140"
    },
    "3239": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3240": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3241": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3242": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3243": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3245": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3246": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3247": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x160"
    },
    "3250": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3251": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3252": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3253": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3254": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "3256": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3257": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3258": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x180"
    },
    "3261": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3262": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3263": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3264": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3265": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "3267": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3268": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3269": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A0"
    },
    "3272": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3273": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3274": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3275": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3276": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3278": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ADD",
      "path": "22"
    },
    "3279": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3281": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3284": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "EXP",
      "path": "22"
    },
    "3285": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3286": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3287": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3288": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3290": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MUL",
      "path": "22"
    },
    "3291": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "NOT",
      "path": "22"
    },
    "3292": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "AND",
      "path": "22"
    },
    "3293": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3294": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3295": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3297": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3298": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "GT",
      "path": "22"
    },
    "3299": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3300": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCEF"
    },
    "3303": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3304": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCEF"
    },
    "3307": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "3310": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3858,
        3899
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3311": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3312": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "MUL",
      "path": "22"
    },
    "3313": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "OR",
      "path": "22"
    },
    "3314": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3315": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3316": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "POP",
      "path": "22"
    },
    "3317": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3318": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "POP",
      "path": "22"
    },
    "3319": {
      "fn": "Wizards.mint",
      "offset": [
        3858,
        3899
      ],
      "op": "POP",
      "path": "22"
    },
    "3320": {
      "fn": "Wizards.mint",
      "offset": [
        3910,
        3949
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 19,
      "value": "0xD14"
    },
    "3323": {
      "fn": "Wizards.mint",
      "offset": [
        3920,
        3930
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3324": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3945
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD04"
    },
    "3327": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3329": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3330": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3331": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3332": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3945
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3333": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3947
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD0F"
    },
    "3336": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3947
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3337": {
      "fn": "Wizards.mint",
      "offset": [
        3946,
        3947
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3339": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3947
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "3342": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3932,
        3947
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3343": {
      "fn": "Wizards.mint",
      "offset": [
        3932,
        3947
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3344": {
      "fn": "Wizards.mint",
      "offset": [
        3910,
        3919
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B75"
    },
    "3347": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        3910,
        3949
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3348": {
      "fn": "Wizards.mint",
      "offset": [
        3910,
        3949
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3349": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3350": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3351": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3352": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3353": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3354": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3355": {
      "fn": "Wizards.mint",
      "offset": [
        3017,
        3978
      ],
      "op": "POP",
      "path": "22"
    },
    "3356": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        2992,
        3978
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3357": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3358": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 20,
      "value": "0xD27"
    },
    "3361": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3362": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3363": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B93"
    },
    "3366": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3367": {
      "branch": 127,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3368": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD43"
    },
    "3371": {
      "branch": 127,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3372": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3374": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3381": {
      "op": "SHL"
    },
    "3382": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3383": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3384": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3386": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "6"
    },
    "3387": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "3390": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3391": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3B"
    },
    "3394": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3395": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3396": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xA2A"
    },
    "3399": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3400": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3401": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3402": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C86"
    },
    "3405": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3406": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3407": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3409": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0xD59"
    },
    "3412": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3413": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF7C"
    },
    "3416": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3417": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3418": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3419": {
      "branch": 137,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "7"
    },
    "3420": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDBB"
    },
    "3423": {
      "branch": 137,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3424": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3426": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3433": {
      "op": "SHL"
    },
    "3434": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3435": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3438": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3440": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3441": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "7"
    },
    "3442": {
      "op": "MSTORE"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3447": {
      "op": "DUP3"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "op": "MSTORE"
    },
    "3450": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3485": {
      "op": "DUP3"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3502": {
      "op": "SHL"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3505": {
      "op": "DUP3"
    },
    "3506": {
      "op": "ADD"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F5"
    },
    "3514": {
      "op": "JUMP"
    },
    "3515": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3516": {
      "op": "POP"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 23
    },
    "3526": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3527": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3528": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "7"
    },
    "3529": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3531": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3532": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3533": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3534": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3536": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3538": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3539": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3540": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3541": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3543": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3544": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3545": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3546": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3547": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3548": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3549": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3550": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3551": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3552": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3553": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3554": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3555": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3556": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3557": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3559": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3566": {
      "op": "SHL"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "3569": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3570": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "3571": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE0E"
    },
    "3574": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3575": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3577": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3584": {
      "op": "SHL"
    },
    "3585": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3586": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3587": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3589": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "3590": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "3593": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3594": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8C"
    },
    "3597": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3598": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3599": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "POP",
      "path": "22"
    },
    "3600": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "POP",
      "path": "22"
    },
    "3601": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "POP",
      "path": "22"
    },
    "3602": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "POP",
      "path": "22"
    },
    "3603": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        11412,
        11833
      ],
      "op": "POP",
      "path": "22"
    },
    "3604": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "o",
      "offset": [
        11412,
        11833
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0xA2A"
    },
    "3609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3612": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "6"
    },
    "3619": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3627": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "6"
    },
    "3628": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E8"
    },
    "3631": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3632": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3633": {
      "offset": [
        12178,
        12182
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "3634": {
      "offset": [
        12156,
        12166
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3635": {
      "offset": [
        12156,
        12183
      ],
      "op": "SUB",
      "path": "22"
    },
    "3636": {
      "offset": [
        12148,
        12201
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE6F"
    },
    "3639": {
      "offset": [
        12148,
        12201
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3640": {
      "fn": "Wizards.crush",
      "offset": [
        12148,
        12201
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3642": {
      "fn": "Wizards.crush",
      "offset": [
        12148,
        12201
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3649": {
      "op": "SHL"
    },
    "3650": {
      "offset": [
        12148,
        12201
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3651": {
      "fn": "Wizards.crush",
      "offset": [
        12148,
        12201
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3654": {
      "offset": [
        12148,
        12201
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3656": {
      "fn": "Wizards.crush",
      "offset": [
        12148,
        12201
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3657": {
      "fn": "Wizards.crush",
      "offset": [
        12148,
        12201
      ],
      "op": "ADD",
      "path": "22"
    },
    "3658": {
      "op": "MSTORE"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "op": "MSTORE"
    },
    "3666": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "3682": {
      "op": "SHL"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3685": {
      "op": "DUP3"
    },
    "3686": {
      "op": "ADD"
    },
    "3687": {
      "op": "MSTORE"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "offset": [
        12148,
        12201
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "3694": {
      "op": "JUMP"
    },
    "3695": {
      "offset": [
        12148,
        12201
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3696": {
      "fn": "Wizards.crush",
      "offset": [
        6481,
        6542
      ],
      "op": "POP",
      "path": "22"
    },
    "3697": {
      "fn": "Wizards.crush",
      "jump": "o",
      "offset": [
        6481,
        6542
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3698": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3699": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3701": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 25,
      "value": "0xE7D"
    },
    "3704": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3706": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3707": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3708": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3709": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3710": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3711": {
      "branch": 138,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "7"
    },
    "3712": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEE0"
    },
    "3715": {
      "branch": 138,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3716": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3718": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3727": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3730": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3732": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3733": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3739": {
      "op": "DUP3"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "MSTORE"
    },
    "3742": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3777": {
      "op": "DUP3"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "MSTORE"
    },
    "3780": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3798": {
      "op": "DUP3"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8F5"
    },
    "3807": {
      "op": "JUMP"
    },
    "3808": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3809": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 26,
      "value": "0x8"
    },
    "3811": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3812": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3813": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3814": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3815": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "7"
    },
    "3816": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF3"
    },
    "3819": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3820": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEF3"
    },
    "3823": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FC1"
    },
    "3826": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3827": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3828": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3829": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3831": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3832": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3834": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3836": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3837": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "7"
    },
    "3838": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3839": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3840": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "7"
    },
    "3841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3842": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3843": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "7"
    },
    "3844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3845": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3846": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3848": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3849": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3850": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3851": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3853": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3855": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3856": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3858": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3859": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "6"
    },
    "3870": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3871": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 27,
      "value": "0x5D5"
    },
    "3874": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3884": {
      "op": "SHL"
    },
    "3885": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3889": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3892": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "6"
    },
    "3893": {
      "op": "MSTORE"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "MSTORE"
    },
    "3901": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3936": {
      "op": "DUP3"
    },
    "3937": {
      "op": "ADD"
    },
    "3938": {
      "op": "MSTORE"
    },
    "3939": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3954": {
      "op": "DUP3"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "3963": {
      "op": "JUMP"
    },
    "3964": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3965": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3973": {
      "op": "SHL"
    },
    "3974": {
      "op": "SUB"
    },
    "3975": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 28
    },
    "3976": {
      "branch": 128,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "6"
    },
    "3977": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFE7"
    },
    "3980": {
      "branch": 128,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3981": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3983": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3990": {
      "op": "SHL"
    },
    "3991": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3992": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3997": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3998": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "6"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4042": {
      "op": "DUP3"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "MSTORE"
    },
    "4045": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4058": {
      "op": "SHL"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4061": {
      "op": "DUP3"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "MSTORE"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4066": {
      "op": "ADD"
    },
    "4067": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "4070": {
      "op": "JUMP"
    },
    "4071": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4079": {
      "op": "SHL"
    },
    "4080": {
      "op": "SUB"
    },
    "4081": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "6",
      "statement": 29
    },
    "4082": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4084": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4085": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4086": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4091": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4094": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4096": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4098": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4100": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4102": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "op": "SUB"
    },
    "4111": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4112": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4113": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4114": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x102D"
    },
    "4117": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4118": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4120": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4127": {
      "op": "SHL"
    },
    "4128": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4129": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4130": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4132": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4133": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "4136": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4137": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8C"
    },
    "4140": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4141": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 30,
      "value": "0x1037"
    },
    "4145": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4147": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E31"
    },
    "4150": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4152": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4153": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4154": {
      "fn": "Wizards.initiate",
      "offset": [
        4138,
        4148
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 31
    },
    "4155": {
      "fn": "Wizards.initiate",
      "offset": [
        4117,
        4134
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1043"
    },
    "4158": {
      "fn": "Wizards.initiate",
      "offset": [
        4125,
        4133
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4159": {
      "fn": "Wizards.initiate",
      "offset": [
        4117,
        4124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF05"
    },
    "4162": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4117,
        4134
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4163": {
      "fn": "Wizards.initiate",
      "offset": [
        4117,
        4134
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4170": {
      "op": "SHL"
    },
    "4171": {
      "op": "SUB"
    },
    "4172": {
      "fn": "Wizards.initiate",
      "offset": [
        4117,
        4148
      ],
      "op": "AND",
      "path": "22"
    },
    "4173": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        4117,
        4148
      ],
      "op": "EQ",
      "path": "22"
    },
    "4174": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1089"
    },
    "4177": {
      "branch": 114,
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4178": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4180": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4189": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4192": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4194": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4195": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "ADD",
      "path": "22"
    },
    "4196": {
      "op": "MSTORE"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "op": "MSTORE"
    },
    "4204": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4220": {
      "op": "SHL"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4223": {
      "op": "DUP3"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "op": "MSTORE"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "4232": {
      "op": "JUMP"
    },
    "4233": {
      "fn": "Wizards.initiate",
      "offset": [
        4109,
        4166
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4234": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 32,
      "value": "0x0"
    },
    "4236": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4237": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4238": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4239": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4241": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4243": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4244": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4245": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4246": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4248": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4249": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4250": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4209
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4251": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4229
      ],
      "op": "ADD",
      "path": "22"
    },
    "4252": {
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4229
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4253": {
      "branch": 115,
      "fn": "Wizards.initiate",
      "offset": [
        4185,
        4234
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4254": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10DD"
    },
    "4257": {
      "branch": 115,
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4258": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4260": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4267": {
      "op": "SHL"
    },
    "4268": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4269": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4272": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4274": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4275": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "ADD",
      "path": "22"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4281": {
      "op": "DUP3"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4304": {
      "op": "SHL"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "ADD"
    },
    "4309": {
      "op": "MSTORE"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4312": {
      "op": "ADD"
    },
    "4313": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "4316": {
      "op": "JUMP"
    },
    "4317": {
      "fn": "Wizards.initiate",
      "offset": [
        4177,
        4256
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4318": {
      "fn": "Wizards.initiate",
      "offset": [
        4352,
        4373
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4320": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4321": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4322": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4323": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4325": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4327": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4328": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4329": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4330": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4332": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4333": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4334": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4335": {
      "fn": "Wizards.initiate",
      "offset": [
        4441,
        4456
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 33
    },
    "4336": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4438
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4337": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4438
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4338": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4438
      ],
      "op": "ADD",
      "path": "22"
    },
    "4339": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4456
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4340": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4456
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4341": {
      "fn": "Wizards.initiate",
      "offset": [
        4411,
        4456
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4342": {
      "fn": "Wizards.initiate",
      "offset": [
        4519,
        4559
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 34,
      "value": "0x11"
    },
    "4344": {
      "fn": "Wizards.initiate",
      "offset": [
        4519,
        4559
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4345": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4346": {
      "fn": "Wizards.initiate",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4347": {
      "fn": "Wizards.initiate",
      "offset": [
        4501,
        4559
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1104"
    },
    "4350": {
      "fn": "Wizards.initiate",
      "offset": [
        4501,
        4559
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4351": {
      "fn": "Wizards.initiate",
      "offset": [
        4519,
        4559
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4352": {
      "fn": "Wizards.initiate",
      "offset": [
        4501,
        4559
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4355": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        4501,
        4559
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4356": {
      "fn": "Wizards.initiate",
      "offset": [
        4501,
        4559
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4357": {
      "fn": "Wizards.initiate",
      "offset": [
        4467,
        4498
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4359": {
      "fn": "Wizards.initiate",
      "offset": [
        4467,
        4498
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4360": {
      "fn": "Wizards.initiate",
      "offset": [
        4467,
        4498
      ],
      "op": "ADD",
      "path": "22"
    },
    "4361": {
      "fn": "Wizards.initiate",
      "offset": [
        4467,
        4559
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4362": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0x40"
    },
    "4364": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4365": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4366": {
      "fn": "Wizards.initiate",
      "offset": [
        4587,
        4597
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4367": {
      "op": "DUP2"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "fn": "Wizards.initiate",
      "offset": [
        4609,
        4624
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4372": {
      "op": "DUP3"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "MSTORE"
    },
    "4375": {
      "fn": "Wizards.initiate",
      "offset": [
        4599,
        4607
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4376": {
      "fn": "Wizards.initiate",
      "offset": [
        4599,
        4607
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4377": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "4410": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4411": {
      "op": "ADD"
    },
    "4412": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4414": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4415": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4416": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4417": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "SUB",
      "path": "22"
    },
    "4418": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4419": {
      "fn": "Wizards.initiate",
      "offset": [
        4577,
        4625
      ],
      "op": "LOG2",
      "path": "22"
    },
    "4420": {
      "fn": "Wizards.initiate",
      "offset": [
        4098,
        4633
      ],
      "op": "POP",
      "path": "22"
    },
    "4421": {
      "fn": "Wizards.initiate",
      "offset": [
        4053,
        4633
      ],
      "op": "POP",
      "path": "22"
    },
    "4422": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        4053,
        4633
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4423": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4424": {
      "offset": [
        12356,
        12363
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4426": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12356,
        12363
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "offset": [
        12356,
        12363
      ],
      "op": "AND",
      "path": "22"
    },
    "4436": {
      "offset": [
        12342,
        12352
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4437": {
      "offset": [
        12342,
        12363
      ],
      "op": "EQ",
      "path": "22"
    },
    "4438": {
      "offset": [
        12320,
        12427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11AD"
    },
    "4441": {
      "offset": [
        12320,
        12427
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4442": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12320,
        12427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4444": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12320,
        12427
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4451": {
      "op": "SHL"
    },
    "4452": {
      "offset": [
        12320,
        12427
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4453": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12320,
        12427
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "offset": [
        12320,
        12427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4458": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12320,
        12427
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4459": {
      "fn": "Wizards.reportBattle",
      "offset": [
        12320,
        12427
      ],
      "op": "ADD",
      "path": "22"
    },
    "4460": {
      "op": "MSTORE"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4463": {
      "op": "DUP1"
    },
    "4464": {
      "op": "DUP3"
    },
    "4465": {
      "op": "ADD"
    },
    "4466": {
      "op": "MSTORE"
    },
    "4467": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "MSTORE"
    },
    "4505": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4520": {
      "op": "ADD"
    },
    "4521": {
      "offset": [
        12320,
        12427
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "4524": {
      "op": "JUMP"
    },
    "4525": {
      "offset": [
        12320,
        12427
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4526": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4819,
        4830
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4528": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4815
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4529": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4531": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4532": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "GT",
      "path": "22"
    },
    "4533": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4534": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11C1"
    },
    "4537": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4538": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11C1"
    },
    "4541": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "4544": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4808,
        4830
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4545": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4546": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4808,
        4830
      ],
      "op": "SUB",
      "path": "22"
    },
    "4547": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x121A"
    },
    "4550": {
      "branch": 116,
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4551": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 36,
      "value": "0x0"
    },
    "4553": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4554": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4555": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4556": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4860
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4558": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4560": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4561": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4563": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4564": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4565": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4878
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4567": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4878
      ],
      "op": "ADD",
      "path": "22"
    },
    "4568": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4569": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4570": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4882,
        4883
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4572": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4882,
        4883
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4573": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4873
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4574": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11E8"
    },
    "4577": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4578": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4882,
        4883
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4579": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4882,
        4883
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4580": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4583": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4846,
        4883
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4584": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4585": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4586": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4587": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4846,
        4883
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "POP"
    },
    "4590": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x0"
    },
    "4592": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4593": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4594": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4595": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4912
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4597": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4599": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4600": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4602": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4603": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4604": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4932
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "4606": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4932
      ],
      "op": "ADD",
      "path": "22"
    },
    "4607": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4608": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4609": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4936,
        4937
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4611": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4936,
        4937
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4612": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4925
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4613": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x120F"
    },
    "4616": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4617": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4936,
        4937
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4618": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4936,
        4937
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4619": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4622": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4898,
        4937
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4623": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4624": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4625": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4626": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4898,
        4937
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4627": {
      "op": "POP"
    },
    "4628": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1282"
    },
    "4631": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4632": {
      "op": "POP"
    },
    "4633": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4634": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4805,
        5111
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4635": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4980,
        4992
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4637": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4976
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4638": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "4640": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4641": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "GT",
      "path": "22"
    },
    "4642": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4643": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x122E"
    },
    "4646": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4647": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x122E"
    },
    "4650": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "4653": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        4969,
        4992
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4654": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4655": {
      "branch": 117,
      "fn": "Wizards.reportBattle",
      "offset": [
        4969,
        4992
      ],
      "op": "SUB",
      "path": "22"
    },
    "4656": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4966,
        5111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1282"
    },
    "4659": {
      "branch": 117,
      "fn": "Wizards.reportBattle",
      "offset": [
        4966,
        5111
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4660": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 38,
      "value": "0x0"
    },
    "4662": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4663": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4664": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4665": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4667": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4669": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4670": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4672": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4673": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4674": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5042
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "4676": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5042
      ],
      "op": "ADD",
      "path": "22"
    },
    "4677": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4678": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4679": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5046,
        5047
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4681": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5046,
        5047
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4682": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5035
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4683": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1255"
    },
    "4686": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4687": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5046,
        5047
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4688": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5046,
        5047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4689": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4692": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        5008,
        5047
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4693": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4694": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4695": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4696": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5008,
        5047
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "POP"
    },
    "4699": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 39,
      "value": "0x0"
    },
    "4701": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4702": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4703": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4704": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5076
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4706": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4708": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4709": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4711": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4712": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4713": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5094
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "4715": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5094
      ],
      "op": "ADD",
      "path": "22"
    },
    "4716": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4717": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4718": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5098,
        5099
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4720": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5098,
        5099
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4721": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4722": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x127C"
    },
    "4725": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4726": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5098,
        5099
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4727": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5098,
        5099
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4728": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4731": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        5062,
        5099
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4732": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4733": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4734": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4735": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5062,
        5099
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4736": {
      "op": "POP"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "fn": "Wizards.reportBattle",
      "offset": [
        4966,
        5111
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4739": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 40,
      "value": "0x0"
    },
    "4741": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP6",
      "path": "22"
    },
    "4742": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4743": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4744": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5137
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4746": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4748": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4749": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4751": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4752": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4753": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5164
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "4755": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5164
      ],
      "op": "ADD",
      "path": "22"
    },
    "4756": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4757": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4758": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5168,
        5178
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4759": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5168,
        5178
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4760": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5150
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4761": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12A3"
    },
    "4764": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4765": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5168,
        5178
      ],
      "op": "DUP5",
      "path": "22"
    },
    "4766": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5168,
        5178
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4767": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4770": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        5123,
        5178
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4771": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4772": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4773": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4774": {
      "fn": "Wizards.reportBattle",
      "offset": [
        5123,
        5178
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4775": {
      "op": "POP"
    },
    "4776": {
      "op": "POP"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        4641,
        5560
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4783": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4784": {
      "offset": [
        12007,
        12011
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4785": {
      "offset": [
        11985,
        11995
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4786": {
      "offset": [
        11985,
        12012
      ],
      "op": "SUB",
      "path": "22"
    },
    "4787": {
      "offset": [
        11977,
        12030
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12EE"
    },
    "4790": {
      "offset": [
        11977,
        12030
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4791": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        11977,
        12030
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4793": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        11977,
        12030
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "offset": [
        11977,
        12030
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4802": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        11977,
        12030
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4805": {
      "offset": [
        11977,
        12030
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4807": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        11977,
        12030
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4808": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        11977,
        12030
      ],
      "op": "ADD",
      "path": "22"
    },
    "4809": {
      "op": "MSTORE"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4814": {
      "op": "DUP3"
    },
    "4815": {
      "op": "ADD"
    },
    "4816": {
      "op": "MSTORE"
    },
    "4817": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "ADD"
    },
    "4838": {
      "op": "MSTORE"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4841": {
      "op": "ADD"
    },
    "4842": {
      "offset": [
        11977,
        12030
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "4845": {
      "op": "JUMP"
    },
    "4846": {
      "offset": [
        11977,
        12030
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4847": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 41,
      "value": "0x0"
    },
    "4849": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4850": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4851": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4852": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6136
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4854": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4856": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4857": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4859": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4860": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6146
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4861": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6170
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4863": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6170
      ],
      "op": "ADD",
      "path": "22"
    },
    "4864": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6170
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4865": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6173,
        6188
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "4866": {
      "op": "GT"
    },
    "4867": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x131D"
    },
    "4870": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4871": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4873": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4874": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4875": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4876": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6241
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4878": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4880": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4881": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4883": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4884": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6251
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4885": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6275
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4887": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6275
      ],
      "op": "ADD",
      "path": "22"
    },
    "4888": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6227,
        6275
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4889": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x131F"
    },
    "4892": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4893": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4894": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6209,
        6224
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "4895": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6122,
        6275
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4896": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6107,
        6276
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1329"
    },
    "4899": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6107,
        6276
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4900": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6107,
        6118
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4901": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6107,
        6276
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EF0"
    },
    "4904": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        6107,
        6276
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4905": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6107,
        6276
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4906": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4908": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4909": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4910": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4911": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4913": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4915": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4916": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4918": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4919": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4920": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6080
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4921": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6104
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4923": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6104
      ],
      "op": "ADD",
      "path": "22"
    },
    "4924": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6276
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4925": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6276
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4926": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6276
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4927": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6056,
        6276
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        5926,
        6376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4930": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4931": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x134A"
    },
    "4934": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2380"
    },
    "4937": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4938": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4939": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2262
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 42,
      "value": "0xB"
    },
    "4941": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4943": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2263,
        2272
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4944": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4945": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4946": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4948": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4949": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4950": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4951": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4952": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4954": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4955": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4957": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2248,
        2273
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4958": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4960": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4961": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4962": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "4965": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4966": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4968": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4969": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4970": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4971": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4973": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4974": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4975": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4976": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4977": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4978": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4980": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4981": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "4983": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4984": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4985": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4986": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4987": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4988": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4990": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4991": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4993": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4994": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "4995": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4996": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4997": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4998": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5000": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5001": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5003": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5004": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5005": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5006": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5007": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5008": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5010": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5011": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5013": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5014": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5015": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5016": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5017": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5018": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5020": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5021": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "5023": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5024": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5025": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5026": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5027": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5028": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5030": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5031": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "5033": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5034": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5035": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5036": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5037": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5038": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5040": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5041": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "5043": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5044": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5045": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5046": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5047": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5048": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5050": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5051": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5053": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5054": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5055": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5056": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5057": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5058": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5060": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5061": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "5063": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5064": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5065": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5066": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5067": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5068": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5070": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5071": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "5073": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5074": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5075": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5076": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5077": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5078": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5080": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5081": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5083": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5084": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5085": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5086": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5087": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5088": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5090": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5091": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5093": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5094": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5095": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5096": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5097": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5098": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5100": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5101": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5103": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5104": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ADD",
      "path": "22"
    },
    "5105": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5107": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5108": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5109": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5110": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "5113": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "EXP",
      "path": "22"
    },
    "5114": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5115": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DIV",
      "path": "22"
    },
    "5116": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "5118": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "AND",
      "path": "22"
    },
    "5119": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5121": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5122": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "GT",
      "path": "22"
    },
    "5123": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5124": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x140F"
    },
    "5127": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5128": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x140F"
    },
    "5131": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "5134": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5135": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5136": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5138": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5139": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "GT",
      "path": "22"
    },
    "5140": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5141": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1420"
    },
    "5144": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5145": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1420"
    },
    "5148": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2719"
    },
    "5151": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5152": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5153": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5154": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2241,
        2273
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5157": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2150,
        2281
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "op": "POP"
    },
    "5160": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "o",
      "offset": [
        2150,
        2281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5161": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5162": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5164": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x1"
    },
    "5166": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5167": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5168": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7FD"
    },
    "5171": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5172": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E76"
    },
    "5175": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5176": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5177": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "5179": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5186": {
      "op": "SHL"
    },
    "5187": {
      "op": "SUB"
    },
    "5188": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "5189": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5190": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "5191": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1462"
    },
    "5194": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5195": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5197": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5204": {
      "op": "SHL"
    },
    "5205": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5206": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5207": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "5209": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "5210": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "5213": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5214": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8C"
    },
    "5217": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5218": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5225": {
      "op": "SHL"
    },
    "5226": {
      "op": "SUB"
    },
    "5227": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 44
    },
    "5228": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "AND",
      "path": "22"
    },
    "5229": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5230": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5231": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5232": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12890
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5233": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12915
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1488"
    },
    "5236": {
      "branch": 118,
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12915
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5237": {
      "op": "POP"
    },
    "5238": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12907,
        12915
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5240": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12907,
        12915
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "op": "SUB"
    },
    "5249": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12894,
        12915
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5250": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12894,
        12915
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5251": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12894,
        12915
      ],
      "op": "AND",
      "path": "22"
    },
    "5252": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12907,
        12915
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5253": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12907,
        12915
      ],
      "op": "AND",
      "path": "22"
    },
    "5254": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12894,
        12915
      ],
      "op": "EQ",
      "path": "22"
    },
    "5255": {
      "branch": 119,
      "fn": "Wizards.updateVerifier",
      "offset": [
        12894,
        12915
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5256": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12867,
        12915
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5257": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14CF"
    },
    "5260": {
      "branch": 119,
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5261": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5263": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5270": {
      "op": "SHL"
    },
    "5271": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5272": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5275": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5277": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5278": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "ADD",
      "path": "22"
    },
    "5279": {
      "op": "MSTORE"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "5282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5284": {
      "op": "DUP3"
    },
    "5285": {
      "op": "ADD"
    },
    "5286": {
      "op": "MSTORE"
    },
    "5287": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5314": {
      "op": "SHL"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5317": {
      "op": "DUP3"
    },
    "5318": {
      "op": "ADD"
    },
    "5319": {
      "op": "MSTORE"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5322": {
      "op": "ADD"
    },
    "5323": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "5326": {
      "op": "JUMP"
    },
    "5327": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12859,
        12944
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5328": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12963
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 45,
      "value": "0xD"
    },
    "5330": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5331": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5338": {
      "op": "SHL"
    },
    "5339": {
      "op": "SUB"
    },
    "5340": {
      "op": "NOT"
    },
    "5341": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "AND",
      "path": "22"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5348": {
      "op": "SHL"
    },
    "5349": {
      "op": "SUB"
    },
    "5350": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5351": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "AND",
      "path": "22"
    },
    "5352": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5353": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5354": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "OR",
      "path": "22"
    },
    "5355": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5356": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5357": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12955,
        12975
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5358": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 46,
      "value": "0x40"
    },
    "5360": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5361": {
      "op": "SWAP1"
    },
    "5362": {
      "op": "DUP2"
    },
    "5363": {
      "op": "MSTORE"
    },
    "5364": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "5397": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5402": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5404": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5405": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5406": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5407": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "SUB",
      "path": "22"
    },
    "5408": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5409": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12991,
        13013
      ],
      "op": "LOG1",
      "path": "22"
    },
    "5410": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        12786,
        13021
      ],
      "op": "POP",
      "path": "22"
    },
    "5411": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        12786,
        13021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5412": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5413": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5420": {
      "op": "SHL"
    },
    "5421": {
      "op": "SUB"
    },
    "5422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 47
    },
    "5423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "6"
    },
    "5424": {
      "branch": 129,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "SUB",
      "path": "6"
    },
    "5425": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157C"
    },
    "5428": {
      "branch": 129,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5431": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5438": {
      "op": "SHL"
    },
    "5439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5440": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5446": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "6"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "MSTORE"
    },
    "5455": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5490": {
      "op": "DUP3"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5495": {
      "op": "ADD"
    },
    "5496": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "5499": {
      "op": "JUMP"
    },
    "5500": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5501": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5502": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 48,
      "value": "0x0"
    },
    "5504": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5505": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5506": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5507": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "5509": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5511": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5512": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5513": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5514": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5518": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "SUB"
    },
    "5527": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5528": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "6"
    },
    "5529": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5530": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "6"
    },
    "5531": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5532": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5533": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5534": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5535": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5536": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5537": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5538": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5539": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5540": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5543": {
      "op": "NOT"
    },
    "5544": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "6"
    },
    "5545": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5546": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5547": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5548": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5549": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5550": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "6"
    },
    "5551": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5552": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5553": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5554": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 49
    },
    "5555": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5556": {
      "op": "SWAP1"
    },
    "5557": {
      "op": "DUP2"
    },
    "5558": {
      "op": "MSTORE"
    },
    "5559": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5560": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5561": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "5595": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5596": {
      "op": "ADD"
    },
    "5597": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5599": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5600": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5601": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5602": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "6"
    },
    "5603": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5604": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "6"
    },
    "5605": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "5606": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "5607": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5608": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 50,
      "value": "0x15F2"
    },
    "5612": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B93"
    },
    "5617": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5618": {
      "branch": 130,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5619": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x160E"
    },
    "5622": {
      "branch": 130,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5632": {
      "op": "SHL"
    },
    "5633": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5634": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5635": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5637": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "6"
    },
    "5638": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "5641": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5642": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3B"
    },
    "5645": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5646": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5647": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 51,
      "value": "0x161A"
    },
    "5650": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5651": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5652": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5653": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5654": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E83"
    },
    "5657": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5658": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5659": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5660": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5661": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5662": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "5663": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5664": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5665": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5667": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5668": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5669": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5670": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5672": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5674": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5675": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5677": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5678": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5679": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5680": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6626,
        6639
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5682": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6626,
        6639
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5689": {
      "op": "SHL"
    },
    "5690": {
      "op": "SUB"
    },
    "5691": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "5692": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 52,
      "value": "0x169F"
    },
    "5695": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5696": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5698": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5705": {
      "op": "SHL"
    },
    "5706": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5707": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5710": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5712": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5713": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "ADD",
      "path": "22"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5719": {
      "op": "DUP3"
    },
    "5720": {
      "op": "ADD"
    },
    "5721": {
      "op": "MSTORE"
    },
    "5722": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5757": {
      "op": "DUP3"
    },
    "5758": {
      "op": "ADD"
    },
    "5759": {
      "op": "MSTORE"
    },
    "5760": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "5776": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5778": {
      "op": "SHL"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5781": {
      "op": "DUP3"
    },
    "5782": {
      "op": "ADD"
    },
    "5783": {
      "op": "MSTORE"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5786": {
      "op": "ADD"
    },
    "5787": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "5790": {
      "op": "JUMP"
    },
    "5791": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6652,
        6729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5792": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5794": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5795": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5796": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5797": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6828
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5799": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5801": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5802": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5803": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5804": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5806": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5807": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6838
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5808": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6858
      ],
      "op": "ADD",
      "path": "22"
    },
    "5809": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6858
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5810": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6773,
        6800
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5812": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6773,
        6800
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5813": {
      "branch": 120,
      "fn": "Wizards.tokenURI",
      "offset": [
        6814,
        6861
      ],
      "op": "SUB",
      "path": "22"
    },
    "5814": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16D7"
    },
    "5817": {
      "branch": 120,
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5818": {
      "op": "POP"
    },
    "5819": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 53,
      "value": "0x40"
    },
    "5821": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5822": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5823": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5824": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5825": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "ADD",
      "path": "22"
    },
    "5826": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5827": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5828": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5829": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5831": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5832": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5835": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "5837": {
      "op": "SHL"
    },
    "5838": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5840": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5841": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "ADD",
      "path": "22"
    },
    "5842": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6892,
        6911
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5843": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1746"
    },
    "5846": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5847": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5848": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7139,
        7169
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 54,
      "value": "0x13"
    },
    "5850": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7139,
        7169
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5851": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5853": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5854": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5855": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5856": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7105
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5858": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5860": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5861": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5862": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5863": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5865": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5866": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5867": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7115
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5868": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7135
      ],
      "op": "ADD",
      "path": "22"
    },
    "5869": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7091,
        7135
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5870": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7031,
        7325
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1743"
    },
    "5873": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7031,
        7325
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5874": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7195,
        7196
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "5876": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7195,
        7196
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5877": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7073,
        7135
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16FE"
    },
    "5880": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7073,
        7135
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5881": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7073,
        7088
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "5882": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7073,
        7135
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "5885": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7073,
        7135
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5886": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7073,
        7135
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5887": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7169
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1708"
    },
    "5890": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7169
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5891": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7169
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5892": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7169
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "5895": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7072,
        7169
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5896": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7169
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5897": {
      "branch": 121,
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7196
      ],
      "op": "GT",
      "path": "22"
    },
    "5898": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7300
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x173C"
    },
    "5901": {
      "branch": 121,
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7300
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5902": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7270,
        7300
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "5904": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7270,
        7300
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5905": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5907": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5908": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5909": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5910": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5912": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5914": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5915": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5916": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5917": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5919": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5920": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5921": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7246
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5922": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7266
      ],
      "op": "ADD",
      "path": "22"
    },
    "5923": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7222,
        7266
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5924": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7204,
        7266
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x172D"
    },
    "5927": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7204,
        7266
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5928": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7204,
        7219
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "5929": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7204,
        7266
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FD7"
    },
    "5932": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7204,
        7266
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5933": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7204,
        7266
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5934": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7203,
        7300
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1737"
    },
    "5937": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7203,
        7300
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5938": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7203,
        7300
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5939": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7203,
        7300
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2F08"
    },
    "5942": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7203,
        7300
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5943": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7203,
        7300
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5944": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7031,
        7047
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "5947": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7031,
        7325
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5948": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7072,
        7300
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5949": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7199,
        7200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "5951": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7031,
        7047
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A06"
    },
    "5954": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7031,
        7325
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5955": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7031,
        7325
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5956": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6992,
        7325
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5957": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6992,
        7325
      ],
      "op": "POP",
      "path": "22"
    },
    "5958": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6811,
        7337
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5959": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5961": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5962": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7347,
        7369
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5964": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7347,
        7369
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5965": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x175D"
    },
    "5968": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5969": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7396,
        7425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "5971": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7396,
        7425
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5972": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7427,
        7440
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5973": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7427,
        7440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5974": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5976": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "ADD",
      "path": "22"
    },
    "5977": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FEE"
    },
    "5980": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7379,
        7449
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5981": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5982": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5984": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5985": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5987": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5988": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5989": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "SUB",
      "path": "22"
    },
    "5990": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "SUB",
      "path": "22"
    },
    "5991": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5992": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5993": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5994": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5996": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7379,
        7449
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5997": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7347,
        7450
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5998": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7347,
        7450
      ],
      "op": "POP",
      "path": "22"
    },
    "5999": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7468,
        7502
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 55,
      "value": "0x1778"
    },
    "6002": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7483,
        7491
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6003": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7493,
        7501
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6004": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7468,
        7482
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5DB"
    },
    "6007": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        7468,
        7502
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6008": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7468,
        7502
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6009": {
      "fn": "Wizards.tokenURI",
      "offset": [
        7461,
        7502
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6010": {
      "fn": "Wizards.tokenURI",
      "offset": [
        6552,
        7510
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6011": {
      "op": "POP"
    },
    "6012": {
      "op": "POP"
    },
    "6013": {
      "op": "POP"
    },
    "6014": {
      "op": "POP"
    },
    "6015": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        6552,
        7510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6016": {
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6017": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "6019": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6020": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6021": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "6023": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6024": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "6026": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6027": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "6029": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6030": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "6032": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6033": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "6035": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6036": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "6038": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6039": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6040": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "6041": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "6042": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "6043": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "6044": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6045": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "6046": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6047": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6054": {
      "op": "SHL"
    },
    "6055": {
      "op": "SUB"
    },
    "6056": {
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6057": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6058": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "AND",
      "path": "22"
    },
    "6059": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6060": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6061": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6062": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B6"
    },
    "6065": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6066": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E76"
    },
    "6069": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6070": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6071": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6072": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6074": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6075": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6077": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6078": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6079": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DIV",
      "path": "22"
    },
    "6080": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MUL",
      "path": "22"
    },
    "6081": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6083": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6084": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6086": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6087": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6088": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6089": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6090": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6092": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6093": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6094": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6095": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6096": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6097": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6098": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6099": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6100": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6102": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6103": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6104": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6105": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6106": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17E2"
    },
    "6109": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6110": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E76"
    },
    "6113": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6114": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6115": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6116": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x182F"
    },
    "6120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6121": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6122": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6124": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "LT",
      "path": "22"
    },
    "6125": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1804"
    },
    "6128": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6129": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "6132": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6133": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6134": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6135": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DIV",
      "path": "22"
    },
    "6136": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MUL",
      "path": "22"
    },
    "6137": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6138": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6140": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6142": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x182F"
    },
    "6147": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6148": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6150": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6151": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6152": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6153": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6155": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6156": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6158": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6160": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6161": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6162": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6164": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6166": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "6170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6171": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6172": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6176": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6177": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "GT",
      "path": "22"
    },
    "6178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1812"
    },
    "6181": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6183": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6184": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SUB",
      "path": "22"
    },
    "6185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "AND",
      "path": "22"
    },
    "6188": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6189": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "ADD",
      "path": "22"
    },
    "6190": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6194": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6196": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6198": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "POP",
      "path": "22"
    },
    "6199": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1630,
        1670
      ],
      "op": "DUP8",
      "path": "22"
    },
    "6200": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        1630,
        1670
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6201": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12552,
        12778
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6202": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "6204": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6211": {
      "op": "SHL"
    },
    "6212": {
      "op": "SUB"
    },
    "6213": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "6214": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6215": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "6216": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1863"
    },
    "6219": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6220": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6222": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6229": {
      "op": "SHL"
    },
    "6230": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6231": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6232": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6234": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "6235": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "6238": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6239": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8C"
    },
    "6242": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6243": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6250": {
      "op": "SHL"
    },
    "6251": {
      "op": "SUB"
    },
    "6252": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 56
    },
    "6253": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "AND",
      "path": "22"
    },
    "6254": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6255": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6256": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6257": {
      "branch": 122,
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12653
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6258": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12676
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1889"
    },
    "6261": {
      "branch": 122,
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12676
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6262": {
      "op": "POP"
    },
    "6263": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12669,
        12676
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "6265": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12669,
        12676
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6272": {
      "op": "SHL"
    },
    "6273": {
      "op": "SUB"
    },
    "6274": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12657,
        12676
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6275": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12657,
        12676
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6276": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12657,
        12676
      ],
      "op": "AND",
      "path": "22"
    },
    "6277": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12669,
        12676
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6278": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12669,
        12676
      ],
      "op": "AND",
      "path": "22"
    },
    "6279": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12657,
        12676
      ],
      "op": "EQ",
      "path": "22"
    },
    "6280": {
      "branch": 123,
      "fn": "Wizards.updateBattler",
      "offset": [
        12657,
        12676
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6281": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12631,
        12676
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6282": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18D0"
    },
    "6285": {
      "branch": 123,
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6286": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6288": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6295": {
      "op": "SHL"
    },
    "6296": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6297": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6300": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6302": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6303": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "ADD",
      "path": "22"
    },
    "6304": {
      "op": "MSTORE"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6309": {
      "op": "DUP3"
    },
    "6310": {
      "op": "ADD"
    },
    "6311": {
      "op": "MSTORE"
    },
    "6312": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6339": {
      "op": "SHL"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6342": {
      "op": "DUP3"
    },
    "6343": {
      "op": "ADD"
    },
    "6344": {
      "op": "MSTORE"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6347": {
      "op": "ADD"
    },
    "6348": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F5"
    },
    "6351": {
      "op": "JUMP"
    },
    "6352": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12623,
        12705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6353": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12723
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 57,
      "value": "0xC"
    },
    "6355": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6356": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "op": "SUB"
    },
    "6365": {
      "op": "NOT"
    },
    "6366": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "AND",
      "path": "22"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6373": {
      "op": "SHL"
    },
    "6374": {
      "op": "SUB"
    },
    "6375": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6376": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "AND",
      "path": "22"
    },
    "6377": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6378": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6379": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "OR",
      "path": "22"
    },
    "6380": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6381": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6382": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12716,
        12734
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6383": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12750,
        12770
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 58,
      "value": "0x40"
    },
    "6385": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12750,
        12770
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6386": {
      "op": "SWAP1"
    },
    "6387": {
      "op": "DUP2"
    },
    "6388": {
      "op": "MSTORE"
    },
    "6389": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12750,
        12770
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "6422": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12750,
        12770
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6425": {
      "op": "ADD"
    },
    "6426": {
      "fn": "Wizards.updateBattler",
      "offset": [
        12750,
        12770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1519"
    },
    "6429": {
      "op": "JUMP"
    },
    "6430": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6431": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "6433": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6440": {
      "op": "SHL"
    },
    "6441": {
      "op": "SUB"
    },
    "6442": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "6443": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6444": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "6445": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1948"
    },
    "6448": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6449": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6451": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6458": {
      "op": "SHL"
    },
    "6459": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6460": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6461": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6463": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "6464": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "6467": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6468": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2F8C"
    },
    "6471": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6472": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6479": {
      "op": "SHL"
    },
    "6480": {
      "op": "SUB"
    },
    "6481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 59
    },
    "6482": {
      "branch": 144,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "8"
    },
    "6483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19AD"
    },
    "6486": {
      "branch": 144,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6489": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6496": {
      "op": "SHL"
    },
    "6497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "8"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6510": {
      "op": "DUP3"
    },
    "6511": {
      "op": "ADD"
    },
    "6512": {
      "op": "MSTORE"
    },
    "6513": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6548": {
      "op": "DUP3"
    },
    "6549": {
      "op": "ADD"
    },
    "6550": {
      "op": "MSTORE"
    },
    "6551": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6560": {
      "op": "SHL"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6563": {
      "op": "DUP3"
    },
    "6564": {
      "op": "ADD"
    },
    "6565": {
      "op": "MSTORE"
    },
    "6566": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6568": {
      "op": "ADD"
    },
    "6569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8F5"
    },
    "6572": {
      "op": "JUMP"
    },
    "6573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 60,
      "value": "0xE6F"
    },
    "6577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E31"
    },
    "6581": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6582": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6583": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6591": {
      "op": "SHL"
    },
    "6592": {
      "op": "SUB"
    },
    "6593": {
      "op": "NOT"
    },
    "6594": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 61
    },
    "6595": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "6596": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6603": {
      "op": "SHL"
    },
    "6604": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "6"
    },
    "6605": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19E7"
    },
    "6609": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6610": {
      "op": "POP"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6617": {
      "op": "SHL"
    },
    "6618": {
      "op": "SUB"
    },
    "6619": {
      "op": "NOT"
    },
    "6620": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6621": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "6"
    },
    "6622": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6629": {
      "op": "SHL"
    },
    "6630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "6"
    },
    "6631": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6632": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6633": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D5"
    },
    "6636": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6645": {
      "op": "SHL"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6652": {
      "op": "SHL"
    },
    "6653": {
      "op": "SUB"
    },
    "6654": {
      "op": "NOT"
    },
    "6655": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 62
    },
    "6656": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "6657": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "4"
    },
    "6658": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5D5"
    },
    "6661": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6662": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6663": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "6665": {
      "fn": "Strings.toString",
      "offset": [
        563,
        568
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6666": {
      "fn": "Strings.toString",
      "offset": [
        572,
        573
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6668": {
      "branch": 145,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "SUB",
      "path": "21"
    },
    "6669": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A2D"
    },
    "6672": {
      "branch": 145,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6673": {
      "op": "POP"
    },
    "6674": {
      "op": "POP"
    },
    "6675": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 63,
      "value": "0x40"
    },
    "6677": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6678": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6679": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6680": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6681": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "6682": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6683": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6684": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6685": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "6687": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6688": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "6693": {
      "op": "SHL"
    },
    "6694": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6696": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6697": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "6698": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6699": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6700": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6701": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6702": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6703": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6705": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6706": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6707": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6708": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A57"
    },
    "6711": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6712": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 64
    },
    "6713": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A41"
    },
    "6716": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6717": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x30A2"
    },
    "6720": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6721": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6722": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6723": {
      "op": "POP"
    },
    "6724": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 65,
      "value": "0x1A50"
    },
    "6727": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6728": {
      "op": "POP"
    },
    "6729": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6731": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6732": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F08"
    },
    "6735": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6736": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6737": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6738": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "21"
    },
    "6739": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A31"
    },
    "6742": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6743": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6744": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6746": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6747": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6756": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6757": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "21"
    },
    "6758": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6759": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A72"
    },
    "6762": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6763": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A72"
    },
    "6766": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2439"
    },
    "6769": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6770": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6771": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6773": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6774": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6775": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6776": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6777": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6778": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6779": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "6781": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6782": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "6784": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "21"
    },
    "6785": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "21"
    },
    "6786": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6788": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6789": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6790": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6791": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "6793": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "6794": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6795": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6796": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A9C"
    },
    "6799": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6800": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6802": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "6803": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6804": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6805": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "6806": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "6807": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6808": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "21"
    },
    "6809": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "6810": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6811": {
      "op": "POP"
    },
    "6812": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6813": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "6814": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6815": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "6816": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6817": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "21"
    },
    "6818": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "6819": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1778"
    },
    "6822": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6823": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 66,
      "value": "0x1AB1"
    },
    "6826": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "6828": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6829": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FD7"
    },
    "6832": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6833": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6834": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "6835": {
      "op": "POP"
    },
    "6836": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 67,
      "value": "0x1ABE"
    },
    "6839": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6841": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "21"
    },
    "6842": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EC6"
    },
    "6845": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6846": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6847": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1AC9"
    },
    "6850": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6851": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x30"
    },
    "6853": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EF0"
    },
    "6856": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6857": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6858": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "6860": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "21"
    },
    "6861": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6862": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "21"
    },
    "6863": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6864": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "6865": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6866": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "21"
    },
    "6867": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1ADE"
    },
    "6870": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "6871": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1ADE"
    },
    "6874": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FC1"
    },
    "6877": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6878": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6879": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "6881": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "6882": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "6883": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6890": {
      "op": "SHL"
    },
    "6891": {
      "op": "SUB"
    },
    "6892": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "21"
    },
    "6893": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "21"
    },
    "6894": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6895": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "21"
    },
    "6896": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "6898": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "21"
    },
    "6899": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "6900": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "6901": {
      "op": "POP"
    },
    "6902": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 68,
      "value": "0x1B00"
    },
    "6905": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "6907": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "21"
    },
    "6908": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F08"
    },
    "6911": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6912": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "6913": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "6914": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "21"
    },
    "6915": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1AA0"
    },
    "6918": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "21"
    },
    "6919": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6920": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 69,
      "value": "0x0"
    },
    "6922": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6923": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6924": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6925": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6927": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6929": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6930": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6932": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6933": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6934": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6935": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6942": {
      "op": "SHL"
    },
    "6943": {
      "op": "SUB"
    },
    "6944": {
      "op": "NOT"
    },
    "6945": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6952": {
      "op": "SHL"
    },
    "6953": {
      "op": "SUB"
    },
    "6954": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6955": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "6956": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6957": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6958": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "6"
    },
    "6959": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6960": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6961": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6962": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6963": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6964": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x1B3C"
    },
    "6967": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6968": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF05"
    },
    "6971": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6972": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6979": {
      "op": "SHL"
    },
    "6980": {
      "op": "SUB"
    },
    "6981": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "6"
    },
    "6982": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "7015": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7017": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7018": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7020": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7021": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7022": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7023": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "6"
    },
    "7024": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7025": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "6"
    },
    "7026": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "7027": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "7028": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7029": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7030": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x1B8F"
    },
    "7033": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7034": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7035": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7037": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7038": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7039": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7041": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "6"
    },
    "7042": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7044": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7045": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7046": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7048": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7049": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7050": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "6"
    },
    "7051": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EB6"
    },
    "7054": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7055": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7056": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "7057": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "7058": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7059": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7060": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7062": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7063": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7064": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7065": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "7067": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7069": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7070": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7072": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7073": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7074": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7081": {
      "op": "SHL"
    },
    "7082": {
      "op": "SUB"
    },
    "7083": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "7084": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 72,
      "value": "0x1C0C"
    },
    "7087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7088": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7097": {
      "op": "SHL"
    },
    "7098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7099": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "6"
    },
    "7106": {
      "op": "MSTORE"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "7109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7111": {
      "op": "DUP3"
    },
    "7112": {
      "op": "ADD"
    },
    "7113": {
      "op": "MSTORE"
    },
    "7114": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7149": {
      "op": "DUP3"
    },
    "7150": {
      "op": "ADD"
    },
    "7151": {
      "op": "MSTORE"
    },
    "7152": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "7167": {
      "op": "SHL"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7170": {
      "op": "DUP3"
    },
    "7171": {
      "op": "ADD"
    },
    "7172": {
      "op": "MSTORE"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7175": {
      "op": "ADD"
    },
    "7176": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "7179": {
      "op": "JUMP"
    },
    "7180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7183": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C17"
    },
    "7186": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7187": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF05"
    },
    "7190": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7191": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7192": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7193": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "6"
    },
    "7194": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 73
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7201": {
      "op": "SHL"
    },
    "7202": {
      "op": "SUB"
    },
    "7203": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "7204": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "op": "SUB"
    },
    "7213": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "7214": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "6"
    },
    "7215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C52"
    },
    "7219": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "6"
    },
    "7221": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7228": {
      "op": "SHL"
    },
    "7229": {
      "op": "SUB"
    },
    "7230": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "7231": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C47"
    },
    "7234": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7235": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x880"
    },
    "7238": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7239": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7246": {
      "op": "SHL"
    },
    "7247": {
      "op": "SUB"
    },
    "7248": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "7249": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "6"
    },
    "7250": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7252": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1778"
    },
    "7255": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7256": {
      "op": "POP"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7263": {
      "op": "SHL"
    },
    "7264": {
      "op": "SUB"
    },
    "7265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "7268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "7275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7277": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7280": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7283": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7285": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7286": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "6"
    },
    "7287": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "7288": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7289": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7290": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7291": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7292": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7294": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7295": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "7297": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "7298": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1778"
    },
    "7301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7302": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7303": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 74
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7310": {
      "op": "SHL"
    },
    "7311": {
      "op": "SUB"
    },
    "7312": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "7313": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C99"
    },
    "7316": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7317": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF05"
    },
    "7320": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7321": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7328": {
      "op": "SHL"
    },
    "7329": {
      "op": "SUB"
    },
    "7330": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "7331": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "6"
    },
    "7332": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D01"
    },
    "7335": {
      "branch": 131,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7336": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7338": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7345": {
      "op": "SHL"
    },
    "7346": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7347": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7350": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7352": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7353": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "6"
    },
    "7354": {
      "op": "MSTORE"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7359": {
      "op": "DUP3"
    },
    "7360": {
      "op": "ADD"
    },
    "7361": {
      "op": "MSTORE"
    },
    "7362": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7397": {
      "op": "DUP3"
    },
    "7398": {
      "op": "ADD"
    },
    "7399": {
      "op": "MSTORE"
    },
    "7400": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "7412": {
      "op": "SHL"
    },
    "7413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7415": {
      "op": "DUP3"
    },
    "7416": {
      "op": "ADD"
    },
    "7417": {
      "op": "MSTORE"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7420": {
      "op": "ADD"
    },
    "7421": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "7424": {
      "op": "JUMP"
    },
    "7425": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7432": {
      "op": "SHL"
    },
    "7433": {
      "op": "SUB"
    },
    "7434": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 75
    },
    "7435": {
      "branch": 132,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "6"
    },
    "7436": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D63"
    },
    "7439": {
      "branch": 132,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7440": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7442": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7449": {
      "op": "SHL"
    },
    "7450": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7451": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7454": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7456": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7457": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "6"
    },
    "7458": {
      "op": "MSTORE"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7461": {
      "op": "DUP1"
    },
    "7462": {
      "op": "DUP3"
    },
    "7463": {
      "op": "ADD"
    },
    "7464": {
      "op": "MSTORE"
    },
    "7465": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7500": {
      "op": "DUP3"
    },
    "7501": {
      "op": "ADD"
    },
    "7502": {
      "op": "MSTORE"
    },
    "7503": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7510": {
      "op": "SHL"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7513": {
      "op": "DUP3"
    },
    "7514": {
      "op": "ADD"
    },
    "7515": {
      "op": "MSTORE"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7518": {
      "op": "ADD"
    },
    "7519": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "7522": {
      "op": "JUMP"
    },
    "7523": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7524": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 76,
      "value": "0x1D6E"
    },
    "7527": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7528": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7529": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7530": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EE9"
    },
    "7533": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7534": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7535": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 77,
      "value": "0x1D79"
    },
    "7538": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7540": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7541": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B07"
    },
    "7544": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7545": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7552": {
      "op": "SHL"
    },
    "7553": {
      "op": "SUB"
    },
    "7554": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 78
    },
    "7555": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "6"
    },
    "7556": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7558": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7559": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7560": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7561": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "7563": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7565": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7566": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7568": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7569": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7570": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7571": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7572": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7574": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7575": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7576": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DA2"
    },
    "7579": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7580": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7581": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7582": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FD7"
    },
    "7585": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7586": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7587": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7588": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7589": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7590": {
      "op": "POP"
    },
    "7591": {
      "op": "POP"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7598": {
      "op": "SHL"
    },
    "7599": {
      "op": "SUB"
    },
    "7600": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 79
    },
    "7601": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "6"
    },
    "7602": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7604": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7605": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7606": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7607": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "7609": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7611": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7612": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7614": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7615": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7616": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7617": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7618": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "7620": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7621": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7622": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DD0"
    },
    "7625": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7626": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7627": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7628": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EF0"
    },
    "7631": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7632": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7633": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7634": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7635": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7636": {
      "op": "POP"
    },
    "7637": {
      "op": "POP"
    },
    "7638": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 80,
      "value": "0x0"
    },
    "7640": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7641": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7642": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7643": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "7645": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7647": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7648": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7650": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7651": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7652": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "7653": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7654": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7661": {
      "op": "SHL"
    },
    "7662": {
      "op": "SUB"
    },
    "7663": {
      "op": "NOT"
    },
    "7664": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7671": {
      "op": "SHL"
    },
    "7672": {
      "op": "SUB"
    },
    "7673": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "6"
    },
    "7674": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7675": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "7676": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7677": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7678": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "6"
    },
    "7679": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7680": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7681": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "7682": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 81
    },
    "7683": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7684": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7685": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "7686": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7687": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "6"
    },
    "7688": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "6"
    },
    "7689": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7690": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7723": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7724": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "6"
    },
    "7725": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7726": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7727": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "7728": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7729": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7730": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "7732": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7733": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7740": {
      "op": "SHL"
    },
    "7741": {
      "op": "SUB"
    },
    "7742": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 82
    },
    "7743": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7744": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7751": {
      "op": "SHL"
    },
    "7752": {
      "op": "SUB"
    },
    "7753": {
      "op": "NOT"
    },
    "7754": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8"
    },
    "7755": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "7756": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7757": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "8"
    },
    "7758": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7759": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "7760": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "7761": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 83,
      "value": "0x40"
    },
    "7763": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7764": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7765": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "8"
    },
    "7766": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "7767": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7768": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7769": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7770": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7803": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7804": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "7806": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7807": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "8"
    },
    "7808": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "7809": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "7810": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7811": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7812": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 84,
      "value": "0x1E8E"
    },
    "7815": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7816": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7817": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7818": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C86"
    },
    "7821": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7822": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7823": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 85,
      "value": "0x1E9A"
    },
    "7826": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7827": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7828": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7829": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7830": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FA1"
    },
    "7833": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7834": {
      "branch": 133,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7835": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x161A"
    },
    "7838": {
      "branch": 133,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7842": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7848": {
      "op": "SHL"
    },
    "7849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "6"
    },
    "7854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "7857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30BB"
    },
    "7861": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7862": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7863": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 86,
      "value": "0x1EC0"
    },
    "7866": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7867": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "6"
    },
    "7868": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20A2"
    },
    "7871": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7872": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7873": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 87,
      "value": "0x1ECD"
    },
    "7876": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7878": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7879": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7880": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "6"
    },
    "7881": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FA1"
    },
    "7884": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7885": {
      "branch": 134,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7886": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA2A"
    },
    "7889": {
      "branch": 134,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7890": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7892": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7899": {
      "op": "SHL"
    },
    "7900": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7901": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7902": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7904": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "6"
    },
    "7905": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "7908": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7909": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30BB"
    },
    "7912": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7913": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7920": {
      "op": "SHL"
    },
    "7921": {
      "op": "SUB"
    },
    "7922": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7923": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "7"
    },
    "7924": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F44"
    },
    "7927": {
      "branch": 139,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7928": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 88,
      "value": "0x1F3F"
    },
    "7931": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7932": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 89,
      "value": "0x8"
    },
    "7934": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7935": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7936": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7938": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7939": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7940": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7941": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "7943": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7945": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7946": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7948": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7949": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7950": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7951": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7952": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7953": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 90,
      "value": "0x1"
    },
    "7955": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7956": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "7957": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7958": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7959": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7960": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7961": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7962": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7963": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7996": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "7997": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7998": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7999": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8000": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F67"
    },
    "8003": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8004": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8005": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8012": {
      "op": "SHL"
    },
    "8013": {
      "op": "SUB"
    },
    "8014": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "8015": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8022": {
      "op": "SHL"
    },
    "8023": {
      "op": "SUB"
    },
    "8024": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "8025": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "7"
    },
    "8026": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F67"
    },
    "8029": {
      "branch": 140,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8030": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 91,
      "value": "0x1F67"
    },
    "8033": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8034": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8035": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21F0"
    },
    "8038": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8039": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8046": {
      "op": "SHL"
    },
    "8047": {
      "op": "SUB"
    },
    "8048": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8049": {
      "branch": 141,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "7"
    },
    "8050": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F7E"
    },
    "8053": {
      "branch": 141,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8054": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 92,
      "value": "0xA2A"
    },
    "8057": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8058": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x228D"
    },
    "8061": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8062": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8063": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8070": {
      "op": "SHL"
    },
    "8071": {
      "op": "SUB"
    },
    "8072": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "8073": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8080": {
      "op": "SHL"
    },
    "8081": {
      "op": "SUB"
    },
    "8082": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "8083": {
      "branch": 142,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "7"
    },
    "8084": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA2A"
    },
    "8087": {
      "branch": 142,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8088": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 93,
      "value": "0xA2A"
    },
    "8091": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8092": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8093": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x233C"
    },
    "8096": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8106": {
      "op": "SHL"
    },
    "8107": {
      "op": "SUB"
    },
    "8108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "6"
    },
    "8110": {
      "op": "EXTCODESIZE"
    },
    "8111": {
      "op": "ISZERO"
    },
    "8112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2097"
    },
    "8115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8119": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8126": {
      "op": "SHL"
    },
    "8127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8135": {
      "op": "SHL"
    },
    "8136": {
      "op": "SUB"
    },
    "8137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "6"
    },
    "8138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "6"
    },
    "8139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x150B7A02"
    },
    "8145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FE5"
    },
    "8149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8150": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "8151": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "6"
    },
    "8153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "6"
    },
    "8155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "6"
    },
    "8157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "8161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x310D"
    },
    "8164": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "6"
    },
    "8174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "6"
    },
    "8178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "6"
    },
    "8179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "6"
    },
    "8180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "8182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "8183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "8184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2020"
    },
    "8189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8190": {
      "op": "POP"
    },
    "8191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "8197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8203": {
      "op": "NOT"
    },
    "8204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "6"
    },
    "8205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "8207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x201D"
    },
    "8213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "8216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x314A"
    },
    "8220": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x207D"
    },
    "8228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x204E"
    },
    "8236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "8242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "8244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "6"
    },
    "8245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "8247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "8249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "6"
    },
    "8250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "8252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "8259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "8265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "8266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2053"
    },
    "8269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "8273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "8275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "8277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12663
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12674,
        12675
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8281": {
      "branch": 135,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12675
      ],
      "op": "SUB",
      "path": "6"
    },
    "8282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2075"
    },
    "8285": {
      "branch": 135,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 94,
      "value": "0x40"
    },
    "8288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8295": {
      "op": "SHL"
    },
    "8296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "6"
    },
    "8301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "8304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30BB"
    },
    "8308": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "6"
    },
    "8316": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "6"
    },
    "8317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8322": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8324": {
      "op": "SHL"
    },
    "8325": {
      "op": "SUB"
    },
    "8326": {
      "op": "NOT"
    },
    "8327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "6",
      "statement": 95
    },
    "8328": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8335": {
      "op": "SHL"
    },
    "8336": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "6"
    },
    "8337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8338": {
      "op": "POP"
    },
    "8339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1778"
    },
    "8342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8344": {
      "op": "POP"
    },
    "8345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 96,
      "value": "0x1"
    },
    "8347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "8348": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "8350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "8351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "8352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "8353": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8354": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8361": {
      "op": "SHL"
    },
    "8362": {
      "op": "SUB"
    },
    "8363": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 97
    },
    "8364": {
      "branch": 136,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "6"
    },
    "8365": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20F8"
    },
    "8368": {
      "branch": 136,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8369": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8371": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8378": {
      "op": "SHL"
    },
    "8379": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8380": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8383": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8385": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8386": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "6"
    },
    "8387": {
      "op": "DUP2"
    },
    "8388": {
      "op": "SWAP1"
    },
    "8389": {
      "op": "MSTORE"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8392": {
      "op": "DUP3"
    },
    "8393": {
      "op": "ADD"
    },
    "8394": {
      "op": "MSTORE"
    },
    "8395": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8430": {
      "op": "DUP3"
    },
    "8431": {
      "op": "ADD"
    },
    "8432": {
      "op": "MSTORE"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8435": {
      "op": "ADD"
    },
    "8436": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "8439": {
      "op": "JUMP"
    },
    "8440": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8441": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8443": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8444": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8445": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8446": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8448": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8450": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8451": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8453": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8454": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8455": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8462": {
      "op": "SHL"
    },
    "8463": {
      "op": "SUB"
    },
    "8464": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "8465": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8466": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 98,
      "value": "0x215D"
    },
    "8469": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8470": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8472": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8473": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8479": {
      "op": "SHL"
    },
    "8480": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8481": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8484": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8486": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8487": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "6"
    },
    "8488": {
      "op": "MSTORE"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8493": {
      "op": "DUP3"
    },
    "8494": {
      "op": "ADD"
    },
    "8495": {
      "op": "MSTORE"
    },
    "8496": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8531": {
      "op": "DUP3"
    },
    "8532": {
      "op": "ADD"
    },
    "8533": {
      "op": "MSTORE"
    },
    "8534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8536": {
      "op": "ADD"
    },
    "8537": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F5"
    },
    "8540": {
      "op": "JUMP"
    },
    "8541": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8542": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 99,
      "value": "0x2169"
    },
    "8545": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8547": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8548": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8549": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EE9"
    },
    "8552": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8553": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8560": {
      "op": "SHL"
    },
    "8561": {
      "op": "SUB"
    },
    "8562": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 100
    },
    "8563": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "6"
    },
    "8564": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8566": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8567": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8568": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8569": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8571": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8573": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8574": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8576": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8577": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8578": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8579": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8580": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8582": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8583": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8584": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2192"
    },
    "8587": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8588": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8589": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8590": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EF0"
    },
    "8593": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8594": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8595": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8596": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8597": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8598": {
      "op": "POP"
    },
    "8599": {
      "op": "POP"
    },
    "8600": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 101,
      "value": "0x0"
    },
    "8602": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8603": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8604": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8605": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8607": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8609": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8610": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8612": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8613": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8614": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8615": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8616": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8623": {
      "op": "SHL"
    },
    "8624": {
      "op": "SUB"
    },
    "8625": {
      "op": "NOT"
    },
    "8626": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8633": {
      "op": "SHL"
    },
    "8634": {
      "op": "SUB"
    },
    "8635": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8636": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "8637": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8638": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8639": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "6"
    },
    "8640": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8641": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8642": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8643": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 102
    },
    "8644": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8645": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8646": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8647": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8648": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8681": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8682": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8683": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8684": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "6"
    },
    "8685": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "8686": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "8687": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8688": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8689": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8691": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8693": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21FD"
    },
    "8696": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8697": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF7C"
    },
    "8700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8701": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8702": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2207"
    },
    "8705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8706": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8707": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FD7"
    },
    "8710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8719": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8729": {
      "op": "POP"
    },
    "8730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8732": {
      "branch": 143,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "7"
    },
    "8733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x225A"
    },
    "8736": {
      "branch": 143,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8743": {
      "op": "SHL"
    },
    "8744": {
      "op": "SUB"
    },
    "8745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "7"
    },
    "8747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8750": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8752": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "8754": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8756": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "7"
    },
    "8765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8768": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8770": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8772": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8773": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 103
    },
    "8774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8775": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8776": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8781": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 104
    },
    "8783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8795": {
      "op": "POP"
    },
    "8796": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 105,
      "value": "0x0"
    },
    "8798": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8801": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "8803": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8805": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8806": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8807": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8808": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8810": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8811": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8812": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8813": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8814": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8815": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8822": {
      "op": "SHL"
    },
    "8823": {
      "op": "SUB"
    },
    "8824": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 106
    },
    "8825": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8826": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "7"
    },
    "8827": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8828": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8829": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "8831": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8832": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8833": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8834": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8835": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8836": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8837": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8838": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8839": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8840": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8841": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8842": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8843": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8844": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8845": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8846": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8852": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x229F"
    },
    "8855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8859": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FD7"
    },
    "8862": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8864": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8869": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "8871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8877": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8884": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "8885": {
      "op": "POP"
    },
    "8886": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "7"
    },
    "8892": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C7"
    },
    "8895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C7"
    },
    "8899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FC1"
    },
    "8902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "7"
    },
    "8914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8916": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "7"
    },
    "8917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 107
    },
    "8918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "8920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8921": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "7"
    },
    "8925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22E8"
    },
    "8928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22E8"
    },
    "8932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2FC1"
    },
    "8935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8936": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8942": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8945": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "7"
    },
    "8950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 108
    },
    "8955": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8957": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "8959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 109
    },
    "8971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8974": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8975": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8976": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 110,
      "value": "0x8"
    },
    "8978": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8979": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8980": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8981": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2320"
    },
    "8984": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "8985": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2320"
    },
    "8988": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3167"
    },
    "8991": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8992": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8993": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8995": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8996": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "7"
    },
    "8997": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8998": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8999": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9000": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9002": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9003": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9005": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9007": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9008": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "7"
    },
    "9009": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9011": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9012": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9013": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9014": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9015": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "9016": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "9017": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "9018": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "9019": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9020": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9021": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9023": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2347"
    },
    "9026": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9027": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF7C"
    },
    "9030": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9031": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9038": {
      "op": "SHL"
    },
    "9039": {
      "op": "SUB"
    },
    "9040": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 111
    },
    "9041": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "9042": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "7"
    },
    "9043": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9045": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9046": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9047": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9048": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "9050": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9052": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9053": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9054": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9055": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9057": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9058": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9059": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9060": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "7"
    },
    "9061": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9062": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9063": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9064": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9065": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9066": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9067": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9068": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "7"
    },
    "9069": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9070": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9071": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 112
    },
    "9072": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9073": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9074": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "9076": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9077": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9078": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9079": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9080": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9081": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9082": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9083": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9084": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9085": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9086": {
      "op": "POP"
    },
    "9087": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9088": {
      "op": "JUMPDEST"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9091": {
      "op": "MLOAD"
    },
    "9092": {
      "op": "DUP1"
    },
    "9093": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9099": {
      "op": "MSTORE"
    },
    "9100": {
      "op": "DUP1"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9103": {
      "op": "DUP2"
    },
    "9104": {
      "op": "MSTORE"
    },
    "9105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9107": {
      "op": "ADD"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9110": {
      "op": "DUP2"
    },
    "9111": {
      "op": "MSTORE"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9114": {
      "op": "ADD"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9117": {
      "op": "DUP2"
    },
    "9118": {
      "op": "MSTORE"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9124": {
      "op": "DUP2"
    },
    "9125": {
      "op": "MSTORE"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9128": {
      "op": "ADD"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9131": {
      "op": "DUP2"
    },
    "9132": {
      "op": "MSTORE"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9135": {
      "op": "ADD"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9138": {
      "op": "DUP2"
    },
    "9139": {
      "op": "MSTORE"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9142": {
      "op": "ADD"
    },
    "9143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9145": {
      "op": "DUP2"
    },
    "9146": {
      "op": "MSTORE"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9149": {
      "op": "ADD"
    },
    "9150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9152": {
      "op": "DUP2"
    },
    "9153": {
      "op": "MSTORE"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9156": {
      "op": "ADD"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9159": {
      "op": "DUP2"
    },
    "9160": {
      "op": "MSTORE"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9163": {
      "op": "ADD"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9166": {
      "op": "DUP2"
    },
    "9167": {
      "op": "MSTORE"
    },
    "9168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9170": {
      "op": "ADD"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9173": {
      "op": "DUP2"
    },
    "9174": {
      "op": "MSTORE"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9177": {
      "op": "ADD"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9180": {
      "op": "DUP2"
    },
    "9181": {
      "op": "MSTORE"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9184": {
      "op": "ADD"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9187": {
      "op": "DUP2"
    },
    "9188": {
      "op": "MSTORE"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9191": {
      "op": "ADD"
    },
    "9192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9194": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "9196": {
      "op": "DUP2"
    },
    "9197": {
      "op": "GT"
    },
    "9198": {
      "op": "ISZERO"
    },
    "9199": {
      "op": "PUSH2",
      "value": "0x23FA"
    },
    "9202": {
      "op": "JUMPI"
    },
    "9203": {
      "op": "PUSH2",
      "value": "0x23FA"
    },
    "9206": {
      "op": "PUSH2",
      "value": "0x2719"
    },
    "9209": {
      "jump": "i",
      "op": "JUMP"
    },
    "9210": {
      "op": "JUMPDEST"
    },
    "9211": {
      "op": "SWAP1"
    },
    "9212": {
      "op": "MSTORE"
    },
    "9213": {
      "op": "SWAP1"
    },
    "9214": {
      "jump": "o",
      "op": "JUMP"
    },
    "9215": {
      "op": "JUMPDEST"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9222": {
      "op": "SHL"
    },
    "9223": {
      "op": "SUB"
    },
    "9224": {
      "op": "NOT"
    },
    "9225": {
      "op": "DUP2"
    },
    "9226": {
      "op": "AND"
    },
    "9227": {
      "op": "DUP2"
    },
    "9228": {
      "op": "EQ"
    },
    "9229": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "9232": {
      "op": "JUMPI"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9235": {
      "op": "DUP1"
    },
    "9236": {
      "op": "REVERT"
    },
    "9237": {
      "op": "JUMPDEST"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9242": {
      "op": "DUP3"
    },
    "9243": {
      "op": "DUP5"
    },
    "9244": {
      "op": "SUB"
    },
    "9245": {
      "op": "SLT"
    },
    "9246": {
      "op": "ISZERO"
    },
    "9247": {
      "op": "PUSH2",
      "value": "0x2427"
    },
    "9250": {
      "op": "JUMPI"
    },
    "9251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9253": {
      "op": "DUP1"
    },
    "9254": {
      "op": "REVERT"
    },
    "9255": {
      "op": "JUMPDEST"
    },
    "9256": {
      "op": "DUP2"
    },
    "9257": {
      "op": "CALLDATALOAD"
    },
    "9258": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9261": {
      "op": "DUP2"
    },
    "9262": {
      "op": "PUSH2",
      "value": "0x23FF"
    },
    "9265": {
      "jump": "i",
      "op": "JUMP"
    },
    "9266": {
      "op": "JUMPDEST"
    },
    "9267": {
      "op": "SWAP4"
    },
    "9268": {
      "op": "SWAP3"
    },
    "9269": {
      "op": "POP"
    },
    "9270": {
      "op": "POP"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "jump": "o",
      "op": "JUMP"
    },
    "9273": {
      "op": "JUMPDEST"
    },
    "9274": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9281": {
      "op": "SHL"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9284": {
      "op": "MSTORE"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9289": {
      "op": "MSTORE"
    },
    "9290": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9294": {
      "op": "REVERT"
    },
    "9295": {
      "op": "JUMPDEST"
    },
    "9296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9298": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9307": {
      "op": "DUP1"
    },
    "9308": {
      "op": "DUP5"
    },
    "9309": {
      "op": "GT"
    },
    "9310": {
      "op": "ISZERO"
    },
    "9311": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9314": {
      "op": "JUMPI"
    },
    "9315": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x2439"
    },
    "9321": {
      "jump": "i",
      "op": "JUMP"
    },
    "9322": {
      "op": "JUMPDEST"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9325": {
      "op": "MLOAD"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9328": {
      "op": "DUP6"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9332": {
      "op": "NOT"
    },
    "9333": {
      "op": "SWAP1"
    },
    "9334": {
      "op": "DUP2"
    },
    "9335": {
      "op": "AND"
    },
    "9336": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9338": {
      "op": "ADD"
    },
    "9339": {
      "op": "AND"
    },
    "9340": {
      "op": "DUP2"
    },
    "9341": {
      "op": "ADD"
    },
    "9342": {
      "op": "SWAP1"
    },
    "9343": {
      "op": "DUP3"
    },
    "9344": {
      "op": "DUP3"
    },
    "9345": {
      "op": "GT"
    },
    "9346": {
      "op": "DUP2"
    },
    "9347": {
      "op": "DUP4"
    },
    "9348": {
      "op": "LT"
    },
    "9349": {
      "op": "OR"
    },
    "9350": {
      "op": "ISZERO"
    },
    "9351": {
      "op": "PUSH2",
      "value": "0x2492"
    },
    "9354": {
      "op": "JUMPI"
    },
    "9355": {
      "op": "PUSH2",
      "value": "0x2492"
    },
    "9358": {
      "op": "PUSH2",
      "value": "0x2439"
    },
    "9361": {
      "jump": "i",
      "op": "JUMP"
    },
    "9362": {
      "op": "JUMPDEST"
    },
    "9363": {
      "op": "DUP2"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9366": {
      "op": "MSTORE"
    },
    "9367": {
      "op": "DUP1"
    },
    "9368": {
      "op": "SWAP4"
    },
    "9369": {
      "op": "POP"
    },
    "9370": {
      "op": "DUP6"
    },
    "9371": {
      "op": "DUP2"
    },
    "9372": {
      "op": "MSTORE"
    },
    "9373": {
      "op": "DUP7"
    },
    "9374": {
      "op": "DUP7"
    },
    "9375": {
      "op": "DUP7"
    },
    "9376": {
      "op": "ADD"
    },
    "9377": {
      "op": "GT"
    },
    "9378": {
      "op": "ISZERO"
    },
    "9379": {
      "op": "PUSH2",
      "value": "0x24AB"
    },
    "9382": {
      "op": "JUMPI"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9385": {
      "op": "DUP1"
    },
    "9386": {
      "op": "REVERT"
    },
    "9387": {
      "op": "JUMPDEST"
    },
    "9388": {
      "op": "DUP6"
    },
    "9389": {
      "op": "DUP6"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9392": {
      "op": "DUP4"
    },
    "9393": {
      "op": "ADD"
    },
    "9394": {
      "op": "CALLDATACOPY"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9399": {
      "op": "DUP8"
    },
    "9400": {
      "op": "DUP4"
    },
    "9401": {
      "op": "ADD"
    },
    "9402": {
      "op": "ADD"
    },
    "9403": {
      "op": "MSTORE"
    },
    "9404": {
      "op": "POP"
    },
    "9405": {
      "op": "POP"
    },
    "9406": {
      "op": "POP"
    },
    "9407": {
      "op": "SWAP4"
    },
    "9408": {
      "op": "SWAP3"
    },
    "9409": {
      "op": "POP"
    },
    "9410": {
      "op": "POP"
    },
    "9411": {
      "op": "POP"
    },
    "9412": {
      "jump": "o",
      "op": "JUMP"
    },
    "9413": {
      "op": "JUMPDEST"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9416": {
      "op": "DUP3"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9419": {
      "op": "DUP4"
    },
    "9420": {
      "op": "ADD"
    },
    "9421": {
      "op": "SLT"
    },
    "9422": {
      "op": "PUSH2",
      "value": "0x24D6"
    },
    "9425": {
      "op": "JUMPI"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9428": {
      "op": "DUP1"
    },
    "9429": {
      "op": "REVERT"
    },
    "9430": {
      "op": "JUMPDEST"
    },
    "9431": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9434": {
      "op": "DUP4"
    },
    "9435": {
      "op": "DUP4"
    },
    "9436": {
      "op": "CALLDATALOAD"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9439": {
      "op": "DUP6"
    },
    "9440": {
      "op": "ADD"
    },
    "9441": {
      "op": "PUSH2",
      "value": "0x244F"
    },
    "9444": {
      "jump": "i",
      "op": "JUMP"
    },
    "9445": {
      "op": "JUMPDEST"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9448": {
      "op": "DUP1"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9451": {
      "op": "DUP4"
    },
    "9452": {
      "op": "DUP6"
    },
    "9453": {
      "op": "SUB"
    },
    "9454": {
      "op": "SLT"
    },
    "9455": {
      "op": "ISZERO"
    },
    "9456": {
      "op": "PUSH2",
      "value": "0x24F8"
    },
    "9459": {
      "op": "JUMPI"
    },
    "9460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9462": {
      "op": "DUP1"
    },
    "9463": {
      "op": "REVERT"
    },
    "9464": {
      "op": "JUMPDEST"
    },
    "9465": {
      "op": "DUP3"
    },
    "9466": {
      "op": "CALLDATALOAD"
    },
    "9467": {
      "op": "SWAP2"
    },
    "9468": {
      "op": "POP"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9471": {
      "op": "DUP4"
    },
    "9472": {
      "op": "ADD"
    },
    "9473": {
      "op": "CALLDATALOAD"
    },
    "9474": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9483": {
      "op": "DUP2"
    },
    "9484": {
      "op": "GT"
    },
    "9485": {
      "op": "ISZERO"
    },
    "9486": {
      "op": "PUSH2",
      "value": "0x2516"
    },
    "9489": {
      "op": "JUMPI"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9492": {
      "op": "DUP1"
    },
    "9493": {
      "op": "REVERT"
    },
    "9494": {
      "op": "JUMPDEST"
    },
    "9495": {
      "op": "PUSH2",
      "value": "0x2522"
    },
    "9498": {
      "op": "DUP6"
    },
    "9499": {
      "op": "DUP3"
    },
    "9500": {
      "op": "DUP7"
    },
    "9501": {
      "op": "ADD"
    },
    "9502": {
      "op": "PUSH2",
      "value": "0x24C5"
    },
    "9505": {
      "jump": "i",
      "op": "JUMP"
    },
    "9506": {
      "op": "JUMPDEST"
    },
    "9507": {
      "op": "SWAP2"
    },
    "9508": {
      "op": "POP"
    },
    "9509": {
      "op": "POP"
    },
    "9510": {
      "op": "SWAP3"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "op": "SWAP3"
    },
    "9513": {
      "op": "SWAP1"
    },
    "9514": {
      "op": "POP"
    },
    "9515": {
      "jump": "o",
      "op": "JUMP"
    },
    "9516": {
      "op": "JUMPDEST"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9519": {
      "op": "JUMPDEST"
    },
    "9520": {
      "op": "DUP4"
    },
    "9521": {
      "op": "DUP2"
    },
    "9522": {
      "op": "LT"
    },
    "9523": {
      "op": "ISZERO"
    },
    "9524": {
      "op": "PUSH2",
      "value": "0x2547"
    },
    "9527": {
      "op": "JUMPI"
    },
    "9528": {
      "op": "DUP2"
    },
    "9529": {
      "op": "DUP2"
    },
    "9530": {
      "op": "ADD"
    },
    "9531": {
      "op": "MLOAD"
    },
    "9532": {
      "op": "DUP4"
    },
    "9533": {
      "op": "DUP3"
    },
    "9534": {
      "op": "ADD"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9538": {
      "op": "ADD"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0x252F"
    },
    "9542": {
      "op": "JUMP"
    },
    "9543": {
      "op": "JUMPDEST"
    },
    "9544": {
      "op": "DUP4"
    },
    "9545": {
      "op": "DUP2"
    },
    "9546": {
      "op": "GT"
    },
    "9547": {
      "op": "ISZERO"
    },
    "9548": {
      "op": "PUSH2",
      "value": "0x161A"
    },
    "9551": {
      "op": "JUMPI"
    },
    "9552": {
      "op": "POP"
    },
    "9553": {
      "op": "POP"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9556": {
      "op": "SWAP2"
    },
    "9557": {
      "op": "ADD"
    },
    "9558": {
      "op": "MSTORE"
    },
    "9559": {
      "jump": "o",
      "op": "JUMP"
    },
    "9560": {
      "op": "JUMPDEST"
    },
    "9561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9563": {
      "op": "DUP2"
    },
    "9564": {
      "op": "MLOAD"
    },
    "9565": {
      "op": "DUP1"
    },
    "9566": {
      "op": "DUP5"
    },
    "9567": {
      "op": "MSTORE"
    },
    "9568": {
      "op": "PUSH2",
      "value": "0x2570"
    },
    "9571": {
      "op": "DUP2"
    },
    "9572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9574": {
      "op": "DUP7"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9578": {
      "op": "DUP7"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "9583": {
      "jump": "i",
      "op": "JUMP"
    },
    "9584": {
      "op": "JUMPDEST"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9590": {
      "op": "NOT"
    },
    "9591": {
      "op": "AND"
    },
    "9592": {
      "op": "SWAP3"
    },
    "9593": {
      "op": "SWAP1"
    },
    "9594": {
      "op": "SWAP3"
    },
    "9595": {
      "op": "ADD"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9598": {
      "op": "ADD"
    },
    "9599": {
      "op": "SWAP3"
    },
    "9600": {
      "op": "SWAP2"
    },
    "9601": {
      "op": "POP"
    },
    "9602": {
      "op": "POP"
    },
    "9603": {
      "jump": "o",
      "op": "JUMP"
    },
    "9604": {
      "op": "JUMPDEST"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9607": {
      "op": "DUP2"
    },
    "9608": {
      "op": "MSTORE"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9611": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9616": {
      "op": "DUP4"
    },
    "9617": {
      "op": "ADD"
    },
    "9618": {
      "op": "DUP5"
    },
    "9619": {
      "op": "PUSH2",
      "value": "0x2558"
    },
    "9622": {
      "jump": "i",
      "op": "JUMP"
    },
    "9623": {
      "op": "JUMPDEST"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9628": {
      "op": "DUP3"
    },
    "9629": {
      "op": "DUP5"
    },
    "9630": {
      "op": "SUB"
    },
    "9631": {
      "op": "SLT"
    },
    "9632": {
      "op": "ISZERO"
    },
    "9633": {
      "op": "PUSH2",
      "value": "0x25A9"
    },
    "9636": {
      "op": "JUMPI"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9639": {
      "op": "DUP1"
    },
    "9640": {
      "op": "REVERT"
    },
    "9641": {
      "op": "JUMPDEST"
    },
    "9642": {
      "op": "POP"
    },
    "9643": {
      "op": "CALLDATALOAD"
    },
    "9644": {
      "op": "SWAP2"
    },
    "9645": {
      "op": "SWAP1"
    },
    "9646": {
      "op": "POP"
    },
    "9647": {
      "jump": "o",
      "op": "JUMP"
    },
    "9648": {
      "op": "JUMPDEST"
    },
    "9649": {
      "op": "DUP1"
    },
    "9650": {
      "op": "CALLDATALOAD"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9657": {
      "op": "SHL"
    },
    "9658": {
      "op": "SUB"
    },
    "9659": {
      "op": "DUP2"
    },
    "9660": {
      "op": "AND"
    },
    "9661": {
      "op": "DUP2"
    },
    "9662": {
      "op": "EQ"
    },
    "9663": {
      "op": "PUSH2",
      "value": "0x25C7"
    },
    "9666": {
      "op": "JUMPI"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9669": {
      "op": "DUP1"
    },
    "9670": {
      "op": "REVERT"
    },
    "9671": {
      "op": "JUMPDEST"
    },
    "9672": {
      "op": "SWAP2"
    },
    "9673": {
      "op": "SWAP1"
    },
    "9674": {
      "op": "POP"
    },
    "9675": {
      "jump": "o",
      "op": "JUMP"
    },
    "9676": {
      "op": "JUMPDEST"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9679": {
      "op": "DUP1"
    },
    "9680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9682": {
      "op": "DUP4"
    },
    "9683": {
      "op": "DUP6"
    },
    "9684": {
      "op": "SUB"
    },
    "9685": {
      "op": "SLT"
    },
    "9686": {
      "op": "ISZERO"
    },
    "9687": {
      "op": "PUSH2",
      "value": "0x25DF"
    },
    "9690": {
      "op": "JUMPI"
    },
    "9691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9693": {
      "op": "DUP1"
    },
    "9694": {
      "op": "REVERT"
    },
    "9695": {
      "op": "JUMPDEST"
    },
    "9696": {
      "op": "PUSH2",
      "value": "0x25E8"
    },
    "9699": {
      "op": "DUP4"
    },
    "9700": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9703": {
      "jump": "i",
      "op": "JUMP"
    },
    "9704": {
      "op": "JUMPDEST"
    },
    "9705": {
      "op": "SWAP5"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9708": {
      "op": "SWAP4"
    },
    "9709": {
      "op": "SWAP1"
    },
    "9710": {
      "op": "SWAP4"
    },
    "9711": {
      "op": "ADD"
    },
    "9712": {
      "op": "CALLDATALOAD"
    },
    "9713": {
      "op": "SWAP4"
    },
    "9714": {
      "op": "POP"
    },
    "9715": {
      "op": "POP"
    },
    "9716": {
      "op": "POP"
    },
    "9717": {
      "jump": "o",
      "op": "JUMP"
    },
    "9718": {
      "op": "JUMPDEST"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9721": {
      "op": "DUP1"
    },
    "9722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9726": {
      "op": "DUP5"
    },
    "9727": {
      "op": "DUP7"
    },
    "9728": {
      "op": "SUB"
    },
    "9729": {
      "op": "SLT"
    },
    "9730": {
      "op": "ISZERO"
    },
    "9731": {
      "op": "PUSH2",
      "value": "0x260B"
    },
    "9734": {
      "op": "JUMPI"
    },
    "9735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9737": {
      "op": "DUP1"
    },
    "9738": {
      "op": "REVERT"
    },
    "9739": {
      "op": "JUMPDEST"
    },
    "9740": {
      "op": "PUSH2",
      "value": "0x2614"
    },
    "9743": {
      "op": "DUP5"
    },
    "9744": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9747": {
      "jump": "i",
      "op": "JUMP"
    },
    "9748": {
      "op": "JUMPDEST"
    },
    "9749": {
      "op": "SWAP3"
    },
    "9750": {
      "op": "POP"
    },
    "9751": {
      "op": "PUSH2",
      "value": "0x2622"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9756": {
      "op": "DUP6"
    },
    "9757": {
      "op": "ADD"
    },
    "9758": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9761": {
      "jump": "i",
      "op": "JUMP"
    },
    "9762": {
      "op": "JUMPDEST"
    },
    "9763": {
      "op": "SWAP2"
    },
    "9764": {
      "op": "POP"
    },
    "9765": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9767": {
      "op": "DUP5"
    },
    "9768": {
      "op": "ADD"
    },
    "9769": {
      "op": "CALLDATALOAD"
    },
    "9770": {
      "op": "SWAP1"
    },
    "9771": {
      "op": "POP"
    },
    "9772": {
      "op": "SWAP3"
    },
    "9773": {
      "op": "POP"
    },
    "9774": {
      "op": "SWAP3"
    },
    "9775": {
      "op": "POP"
    },
    "9776": {
      "op": "SWAP3"
    },
    "9777": {
      "jump": "o",
      "op": "JUMP"
    },
    "9778": {
      "op": "JUMPDEST"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9781": {
      "op": "DUP1"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9784": {
      "op": "DUP1"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9789": {
      "op": "DUP7"
    },
    "9790": {
      "op": "DUP9"
    },
    "9791": {
      "op": "SUB"
    },
    "9792": {
      "op": "SLT"
    },
    "9793": {
      "op": "ISZERO"
    },
    "9794": {
      "op": "PUSH2",
      "value": "0x264A"
    },
    "9797": {
      "op": "JUMPI"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9800": {
      "op": "DUP1"
    },
    "9801": {
      "op": "REVERT"
    },
    "9802": {
      "op": "JUMPDEST"
    },
    "9803": {
      "op": "DUP6"
    },
    "9804": {
      "op": "CALLDATALOAD"
    },
    "9805": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9814": {
      "op": "DUP2"
    },
    "9815": {
      "op": "GT"
    },
    "9816": {
      "op": "ISZERO"
    },
    "9817": {
      "op": "PUSH2",
      "value": "0x2661"
    },
    "9820": {
      "op": "JUMPI"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9823": {
      "op": "DUP1"
    },
    "9824": {
      "op": "REVERT"
    },
    "9825": {
      "op": "JUMPDEST"
    },
    "9826": {
      "op": "PUSH2",
      "value": "0x266D"
    },
    "9829": {
      "op": "DUP9"
    },
    "9830": {
      "op": "DUP3"
    },
    "9831": {
      "op": "DUP10"
    },
    "9832": {
      "op": "ADD"
    },
    "9833": {
      "op": "PUSH2",
      "value": "0x24C5"
    },
    "9836": {
      "jump": "i",
      "op": "JUMP"
    },
    "9837": {
      "op": "JUMPDEST"
    },
    "9838": {
      "op": "SWAP9"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9841": {
      "op": "DUP9"
    },
    "9842": {
      "op": "ADD"
    },
    "9843": {
      "op": "CALLDATALOAD"
    },
    "9844": {
      "op": "SWAP9"
    },
    "9845": {
      "op": "POP"
    },
    "9846": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9848": {
      "op": "DUP9"
    },
    "9849": {
      "op": "ADD"
    },
    "9850": {
      "op": "CALLDATALOAD"
    },
    "9851": {
      "op": "SWAP8"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9854": {
      "op": "DUP2"
    },
    "9855": {
      "op": "ADD"
    },
    "9856": {
      "op": "CALLDATALOAD"
    },
    "9857": {
      "op": "SWAP8"
    },
    "9858": {
      "op": "POP"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9861": {
      "op": "ADD"
    },
    "9862": {
      "op": "CALLDATALOAD"
    },
    "9863": {
      "op": "SWAP6"
    },
    "9864": {
      "op": "POP"
    },
    "9865": {
      "op": "SWAP4"
    },
    "9866": {
      "op": "POP"
    },
    "9867": {
      "op": "POP"
    },
    "9868": {
      "op": "POP"
    },
    "9869": {
      "op": "POP"
    },
    "9870": {
      "jump": "o",
      "op": "JUMP"
    },
    "9871": {
      "op": "JUMPDEST"
    },
    "9872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9876": {
      "op": "DUP3"
    },
    "9877": {
      "op": "DUP5"
    },
    "9878": {
      "op": "SUB"
    },
    "9879": {
      "op": "SLT"
    },
    "9880": {
      "op": "ISZERO"
    },
    "9881": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9884": {
      "op": "JUMPI"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9887": {
      "op": "DUP1"
    },
    "9888": {
      "op": "REVERT"
    },
    "9889": {
      "op": "JUMPDEST"
    },
    "9890": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "9893": {
      "op": "DUP3"
    },
    "9894": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "9897": {
      "jump": "i",
      "op": "JUMP"
    },
    "9898": {
      "op": "JUMPDEST"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9901": {
      "op": "DUP1"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9904": {
      "op": "DUP1"
    },
    "9905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9909": {
      "op": "DUP7"
    },
    "9910": {
      "op": "DUP9"
    },
    "9911": {
      "op": "SUB"
    },
    "9912": {
      "op": "SLT"
    },
    "9913": {
      "op": "ISZERO"
    },
    "9914": {
      "op": "PUSH2",
      "value": "0x26C2"
    },
    "9917": {
      "op": "JUMPI"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9920": {
      "op": "DUP1"
    },
    "9921": {
      "op": "REVERT"
    },
    "9922": {
      "op": "JUMPDEST"
    },
    "9923": {
      "op": "DUP6"
    },
    "9924": {
      "op": "CALLDATALOAD"
    },
    "9925": {
      "op": "SWAP5"
    },
    "9926": {
      "op": "POP"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9929": {
      "op": "DUP7"
    },
    "9930": {
      "op": "ADD"
    },
    "9931": {
      "op": "CALLDATALOAD"
    },
    "9932": {
      "op": "SWAP4"
    },
    "9933": {
      "op": "POP"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9936": {
      "op": "DUP7"
    },
    "9937": {
      "op": "ADD"
    },
    "9938": {
      "op": "CALLDATALOAD"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9941": {
      "op": "DUP2"
    },
    "9942": {
      "op": "LT"
    },
    "9943": {
      "op": "PUSH2",
      "value": "0x26DF"
    },
    "9946": {
      "op": "JUMPI"
    },
    "9947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9949": {
      "op": "DUP1"
    },
    "9950": {
      "op": "REVERT"
    },
    "9951": {
      "op": "JUMPDEST"
    },
    "9952": {
      "op": "SWAP5"
    },
    "9953": {
      "op": "SWAP8"
    },
    "9954": {
      "op": "SWAP4"
    },
    "9955": {
      "op": "SWAP7"
    },
    "9956": {
      "op": "POP"
    },
    "9957": {
      "op": "SWAP4"
    },
    "9958": {
      "op": "SWAP5"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9961": {
      "op": "DUP2"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "CALLDATALOAD"
    },
    "9964": {
      "op": "SWAP5"
    },
    "9965": {
      "op": "POP"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9968": {
      "op": "ADD"
    },
    "9969": {
      "op": "CALLDATALOAD"
    },
    "9970": {
      "op": "SWAP3"
    },
    "9971": {
      "op": "SWAP2"
    },
    "9972": {
      "op": "POP"
    },
    "9973": {
      "op": "POP"
    },
    "9974": {
      "jump": "o",
      "op": "JUMP"
    },
    "9975": {
      "op": "JUMPDEST"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9978": {
      "op": "DUP1"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9981": {
      "op": "DUP4"
    },
    "9982": {
      "op": "DUP6"
    },
    "9983": {
      "op": "SUB"
    },
    "9984": {
      "op": "SLT"
    },
    "9985": {
      "op": "ISZERO"
    },
    "9986": {
      "op": "PUSH2",
      "value": "0x270A"
    },
    "9989": {
      "op": "JUMPI"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "DUP1"
    },
    "9993": {
      "op": "REVERT"
    },
    "9994": {
      "op": "JUMPDEST"
    },
    "9995": {
      "op": "POP"
    },
    "9996": {
      "op": "POP"
    },
    "9997": {
      "op": "DUP1"
    },
    "9998": {
      "op": "CALLDATALOAD"
    },
    "9999": {
      "op": "SWAP3"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10002": {
      "op": "SWAP1"
    },
    "10003": {
      "op": "SWAP2"
    },
    "10004": {
      "op": "ADD"
    },
    "10005": {
      "op": "CALLDATALOAD"
    },
    "10006": {
      "op": "SWAP2"
    },
    "10007": {
      "op": "POP"
    },
    "10008": {
      "jump": "o",
      "op": "JUMP"
    },
    "10009": {
      "op": "JUMPDEST"
    },
    "10010": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10017": {
      "op": "SHL"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10020": {
      "op": "MSTORE"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10025": {
      "op": "MSTORE"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10030": {
      "op": "REVERT"
    },
    "10031": {
      "op": "JUMPDEST"
    },
    "10032": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10034": {
      "op": "DUP2"
    },
    "10035": {
      "op": "LT"
    },
    "10036": {
      "op": "PUSH2",
      "value": "0x274D"
    },
    "10039": {
      "op": "JUMPI"
    },
    "10040": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10047": {
      "op": "SHL"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10050": {
      "op": "MSTORE"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10055": {
      "op": "MSTORE"
    },
    "10056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10060": {
      "op": "REVERT"
    },
    "10061": {
      "op": "JUMPDEST"
    },
    "10062": {
      "op": "SWAP1"
    },
    "10063": {
      "op": "MSTORE"
    },
    "10064": {
      "jump": "o",
      "op": "JUMP"
    },
    "10065": {
      "op": "JUMPDEST"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10068": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "10071": {
      "op": "DUP3"
    },
    "10072": {
      "op": "ADD"
    },
    "10073": {
      "op": "SWAP1"
    },
    "10074": {
      "op": "POP"
    },
    "10075": {
      "op": "DUP3"
    },
    "10076": {
      "op": "MLOAD"
    },
    "10077": {
      "op": "DUP3"
    },
    "10078": {
      "op": "MSTORE"
    },
    "10079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10081": {
      "op": "DUP4"
    },
    "10082": {
      "op": "ADD"
    },
    "10083": {
      "op": "MLOAD"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10086": {
      "op": "DUP4"
    },
    "10087": {
      "op": "ADD"
    },
    "10088": {
      "op": "MSTORE"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10091": {
      "op": "DUP4"
    },
    "10092": {
      "op": "ADD"
    },
    "10093": {
      "op": "MLOAD"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10096": {
      "op": "DUP4"
    },
    "10097": {
      "op": "ADD"
    },
    "10098": {
      "op": "MSTORE"
    },
    "10099": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10101": {
      "op": "DUP4"
    },
    "10102": {
      "op": "ADD"
    },
    "10103": {
      "op": "MLOAD"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10106": {
      "op": "DUP4"
    },
    "10107": {
      "op": "ADD"
    },
    "10108": {
      "op": "MSTORE"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10111": {
      "op": "DUP4"
    },
    "10112": {
      "op": "ADD"
    },
    "10113": {
      "op": "MLOAD"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10116": {
      "op": "DUP4"
    },
    "10117": {
      "op": "ADD"
    },
    "10118": {
      "op": "MSTORE"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10121": {
      "op": "DUP4"
    },
    "10122": {
      "op": "ADD"
    },
    "10123": {
      "op": "MLOAD"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10126": {
      "op": "DUP4"
    },
    "10127": {
      "op": "ADD"
    },
    "10128": {
      "op": "MSTORE"
    },
    "10129": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10131": {
      "op": "DUP4"
    },
    "10132": {
      "op": "ADD"
    },
    "10133": {
      "op": "MLOAD"
    },
    "10134": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10136": {
      "op": "DUP4"
    },
    "10137": {
      "op": "ADD"
    },
    "10138": {
      "op": "MSTORE"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10141": {
      "op": "DUP4"
    },
    "10142": {
      "op": "ADD"
    },
    "10143": {
      "op": "MLOAD"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10146": {
      "op": "DUP4"
    },
    "10147": {
      "op": "ADD"
    },
    "10148": {
      "op": "MSTORE"
    },
    "10149": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10152": {
      "op": "DUP1"
    },
    "10153": {
      "op": "DUP5"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "MLOAD"
    },
    "10156": {
      "op": "DUP2"
    },
    "10157": {
      "op": "DUP5"
    },
    "10158": {
      "op": "ADD"
    },
    "10159": {
      "op": "MSTORE"
    },
    "10160": {
      "op": "POP"
    },
    "10161": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10164": {
      "op": "DUP1"
    },
    "10165": {
      "op": "DUP5"
    },
    "10166": {
      "op": "ADD"
    },
    "10167": {
      "op": "MLOAD"
    },
    "10168": {
      "op": "DUP2"
    },
    "10169": {
      "op": "DUP5"
    },
    "10170": {
      "op": "ADD"
    },
    "10171": {
      "op": "MSTORE"
    },
    "10172": {
      "op": "POP"
    },
    "10173": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10176": {
      "op": "DUP1"
    },
    "10177": {
      "op": "DUP5"
    },
    "10178": {
      "op": "ADD"
    },
    "10179": {
      "op": "MLOAD"
    },
    "10180": {
      "op": "DUP2"
    },
    "10181": {
      "op": "DUP5"
    },
    "10182": {
      "op": "ADD"
    },
    "10183": {
      "op": "MSTORE"
    },
    "10184": {
      "op": "POP"
    },
    "10185": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "10188": {
      "op": "DUP1"
    },
    "10189": {
      "op": "DUP5"
    },
    "10190": {
      "op": "ADD"
    },
    "10191": {
      "op": "MLOAD"
    },
    "10192": {
      "op": "DUP2"
    },
    "10193": {
      "op": "DUP5"
    },
    "10194": {
      "op": "ADD"
    },
    "10195": {
      "op": "MSTORE"
    },
    "10196": {
      "op": "POP"
    },
    "10197": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10200": {
      "op": "DUP1"
    },
    "10201": {
      "op": "DUP5"
    },
    "10202": {
      "op": "ADD"
    },
    "10203": {
      "op": "MLOAD"
    },
    "10204": {
      "op": "DUP2"
    },
    "10205": {
      "op": "DUP5"
    },
    "10206": {
      "op": "ADD"
    },
    "10207": {
      "op": "MSTORE"
    },
    "10208": {
      "op": "POP"
    },
    "10209": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "10212": {
      "op": "DUP1"
    },
    "10213": {
      "op": "DUP5"
    },
    "10214": {
      "op": "ADD"
    },
    "10215": {
      "op": "MLOAD"
    },
    "10216": {
      "op": "PUSH2",
      "value": "0x27F3"
    },
    "10219": {
      "op": "DUP3"
    },
    "10220": {
      "op": "DUP6"
    },
    "10221": {
      "op": "ADD"
    },
    "10222": {
      "op": "DUP3"
    },
    "10223": {
      "op": "PUSH2",
      "value": "0x272F"
    },
    "10226": {
      "jump": "i",
      "op": "JUMP"
    },
    "10227": {
      "op": "JUMPDEST"
    },
    "10228": {
      "op": "POP"
    },
    "10229": {
      "op": "POP"
    },
    "10230": {
      "op": "SWAP3"
    },
    "10231": {
      "op": "SWAP2"
    },
    "10232": {
      "op": "POP"
    },
    "10233": {
      "op": "POP"
    },
    "10234": {
      "jump": "o",
      "op": "JUMP"
    },
    "10235": {
      "op": "JUMPDEST"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10238": {
      "op": "DUP1"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10241": {
      "op": "DUP4"
    },
    "10242": {
      "op": "DUP6"
    },
    "10243": {
      "op": "SUB"
    },
    "10244": {
      "op": "SLT"
    },
    "10245": {
      "op": "ISZERO"
    },
    "10246": {
      "op": "PUSH2",
      "value": "0x280E"
    },
    "10249": {
      "op": "JUMPI"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10252": {
      "op": "DUP1"
    },
    "10253": {
      "op": "REVERT"
    },
    "10254": {
      "op": "JUMPDEST"
    },
    "10255": {
      "op": "PUSH2",
      "value": "0x2817"
    },
    "10258": {
      "op": "DUP4"
    },
    "10259": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "10262": {
      "jump": "i",
      "op": "JUMP"
    },
    "10263": {
      "op": "JUMPDEST"
    },
    "10264": {
      "op": "SWAP2"
    },
    "10265": {
      "op": "POP"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10268": {
      "op": "DUP4"
    },
    "10269": {
      "op": "ADD"
    },
    "10270": {
      "op": "CALLDATALOAD"
    },
    "10271": {
      "op": "DUP1"
    },
    "10272": {
      "op": "ISZERO"
    },
    "10273": {
      "op": "ISZERO"
    },
    "10274": {
      "op": "DUP2"
    },
    "10275": {
      "op": "EQ"
    },
    "10276": {
      "op": "PUSH2",
      "value": "0x282C"
    },
    "10279": {
      "op": "JUMPI"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10282": {
      "op": "DUP1"
    },
    "10283": {
      "op": "REVERT"
    },
    "10284": {
      "op": "JUMPDEST"
    },
    "10285": {
      "op": "DUP1"
    },
    "10286": {
      "op": "SWAP2"
    },
    "10287": {
      "op": "POP"
    },
    "10288": {
      "op": "POP"
    },
    "10289": {
      "op": "SWAP3"
    },
    "10290": {
      "op": "POP"
    },
    "10291": {
      "op": "SWAP3"
    },
    "10292": {
      "op": "SWAP1"
    },
    "10293": {
      "op": "POP"
    },
    "10294": {
      "jump": "o",
      "op": "JUMP"
    },
    "10295": {
      "op": "JUMPDEST"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10298": {
      "op": "DUP1"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10301": {
      "op": "DUP1"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10304": {
      "op": "DUP6"
    },
    "10305": {
      "op": "DUP8"
    },
    "10306": {
      "op": "SUB"
    },
    "10307": {
      "op": "SLT"
    },
    "10308": {
      "op": "ISZERO"
    },
    "10309": {
      "op": "PUSH2",
      "value": "0x284D"
    },
    "10312": {
      "op": "JUMPI"
    },
    "10313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10315": {
      "op": "DUP1"
    },
    "10316": {
      "op": "REVERT"
    },
    "10317": {
      "op": "JUMPDEST"
    },
    "10318": {
      "op": "PUSH2",
      "value": "0x2856"
    },
    "10321": {
      "op": "DUP6"
    },
    "10322": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "10325": {
      "jump": "i",
      "op": "JUMP"
    },
    "10326": {
      "op": "JUMPDEST"
    },
    "10327": {
      "op": "SWAP4"
    },
    "10328": {
      "op": "POP"
    },
    "10329": {
      "op": "PUSH2",
      "value": "0x2864"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10334": {
      "op": "DUP7"
    },
    "10335": {
      "op": "ADD"
    },
    "10336": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "10339": {
      "jump": "i",
      "op": "JUMP"
    },
    "10340": {
      "op": "JUMPDEST"
    },
    "10341": {
      "op": "SWAP3"
    },
    "10342": {
      "op": "POP"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10345": {
      "op": "DUP6"
    },
    "10346": {
      "op": "ADD"
    },
    "10347": {
      "op": "CALLDATALOAD"
    },
    "10348": {
      "op": "SWAP2"
    },
    "10349": {
      "op": "POP"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10352": {
      "op": "DUP6"
    },
    "10353": {
      "op": "ADD"
    },
    "10354": {
      "op": "CALLDATALOAD"
    },
    "10355": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10364": {
      "op": "DUP2"
    },
    "10365": {
      "op": "GT"
    },
    "10366": {
      "op": "ISZERO"
    },
    "10367": {
      "op": "PUSH2",
      "value": "0x2887"
    },
    "10370": {
      "op": "JUMPI"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10373": {
      "op": "DUP1"
    },
    "10374": {
      "op": "REVERT"
    },
    "10375": {
      "op": "JUMPDEST"
    },
    "10376": {
      "op": "DUP6"
    },
    "10377": {
      "op": "ADD"
    },
    "10378": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10380": {
      "op": "DUP2"
    },
    "10381": {
      "op": "ADD"
    },
    "10382": {
      "op": "DUP8"
    },
    "10383": {
      "op": "SGT"
    },
    "10384": {
      "op": "PUSH2",
      "value": "0x2898"
    },
    "10387": {
      "op": "JUMPI"
    },
    "10388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10390": {
      "op": "DUP1"
    },
    "10391": {
      "op": "REVERT"
    },
    "10392": {
      "op": "JUMPDEST"
    },
    "10393": {
      "op": "PUSH2",
      "value": "0x28A7"
    },
    "10396": {
      "op": "DUP8"
    },
    "10397": {
      "op": "DUP3"
    },
    "10398": {
      "op": "CALLDATALOAD"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10401": {
      "op": "DUP5"
    },
    "10402": {
      "op": "ADD"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x244F"
    },
    "10406": {
      "jump": "i",
      "op": "JUMP"
    },
    "10407": {
      "op": "JUMPDEST"
    },
    "10408": {
      "op": "SWAP2"
    },
    "10409": {
      "op": "POP"
    },
    "10410": {
      "op": "POP"
    },
    "10411": {
      "op": "SWAP3"
    },
    "10412": {
      "op": "SWAP6"
    },
    "10413": {
      "op": "SWAP2"
    },
    "10414": {
      "op": "SWAP5"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "op": "SWAP3"
    },
    "10417": {
      "op": "POP"
    },
    "10418": {
      "jump": "o",
      "op": "JUMP"
    },
    "10419": {
      "op": "JUMPDEST"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10422": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "10425": {
      "op": "DUP3"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "SWAP1"
    },
    "10428": {
      "op": "POP"
    },
    "10429": {
      "op": "DUP16"
    },
    "10430": {
      "op": "DUP3"
    },
    "10431": {
      "op": "MSTORE"
    },
    "10432": {
      "op": "DUP15"
    },
    "10433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10435": {
      "op": "DUP4"
    },
    "10436": {
      "op": "ADD"
    },
    "10437": {
      "op": "MSTORE"
    },
    "10438": {
      "op": "DUP14"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10441": {
      "op": "DUP4"
    },
    "10442": {
      "op": "ADD"
    },
    "10443": {
      "op": "MSTORE"
    },
    "10444": {
      "op": "DUP13"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10447": {
      "op": "DUP4"
    },
    "10448": {
      "op": "ADD"
    },
    "10449": {
      "op": "MSTORE"
    },
    "10450": {
      "op": "DUP12"
    },
    "10451": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10453": {
      "op": "DUP4"
    },
    "10454": {
      "op": "ADD"
    },
    "10455": {
      "op": "MSTORE"
    },
    "10456": {
      "op": "DUP11"
    },
    "10457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10459": {
      "op": "DUP4"
    },
    "10460": {
      "op": "ADD"
    },
    "10461": {
      "op": "MSTORE"
    },
    "10462": {
      "op": "DUP10"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10465": {
      "op": "DUP4"
    },
    "10466": {
      "op": "ADD"
    },
    "10467": {
      "op": "MSTORE"
    },
    "10468": {
      "op": "DUP9"
    },
    "10469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10471": {
      "op": "DUP4"
    },
    "10472": {
      "op": "ADD"
    },
    "10473": {
      "op": "MSTORE"
    },
    "10474": {
      "op": "DUP8"
    },
    "10475": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10478": {
      "op": "DUP4"
    },
    "10479": {
      "op": "ADD"
    },
    "10480": {
      "op": "MSTORE"
    },
    "10481": {
      "op": "DUP7"
    },
    "10482": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10485": {
      "op": "DUP4"
    },
    "10486": {
      "op": "ADD"
    },
    "10487": {
      "op": "MSTORE"
    },
    "10488": {
      "op": "DUP6"
    },
    "10489": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10492": {
      "op": "DUP4"
    },
    "10493": {
      "op": "ADD"
    },
    "10494": {
      "op": "MSTORE"
    },
    "10495": {
      "op": "DUP5"
    },
    "10496": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "10499": {
      "op": "DUP4"
    },
    "10500": {
      "op": "ADD"
    },
    "10501": {
      "op": "MSTORE"
    },
    "10502": {
      "op": "DUP4"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10506": {
      "op": "DUP4"
    },
    "10507": {
      "op": "ADD"
    },
    "10508": {
      "op": "MSTORE"
    },
    "10509": {
      "op": "PUSH2",
      "value": "0x291A"
    },
    "10512": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "10515": {
      "op": "DUP4"
    },
    "10516": {
      "op": "ADD"
    },
    "10517": {
      "op": "DUP5"
    },
    "10518": {
      "op": "PUSH2",
      "value": "0x272F"
    },
    "10521": {
      "jump": "i",
      "op": "JUMP"
    },
    "10522": {
      "op": "JUMPDEST"
    },
    "10523": {
      "op": "SWAP16"
    },
    "10524": {
      "op": "SWAP15"
    },
    "10525": {
      "op": "POP"
    },
    "10526": {
      "op": "POP"
    },
    "10527": {
      "op": "POP"
    },
    "10528": {
      "op": "POP"
    },
    "10529": {
      "op": "POP"
    },
    "10530": {
      "op": "POP"
    },
    "10531": {
      "op": "POP"
    },
    "10532": {
      "op": "POP"
    },
    "10533": {
      "op": "POP"
    },
    "10534": {
      "op": "POP"
    },
    "10535": {
      "op": "POP"
    },
    "10536": {
      "op": "POP"
    },
    "10537": {
      "op": "POP"
    },
    "10538": {
      "op": "POP"
    },
    "10539": {
      "op": "POP"
    },
    "10540": {
      "jump": "o",
      "op": "JUMP"
    },
    "10541": {
      "op": "JUMPDEST"
    },
    "10542": {
      "op": "DUP8"
    },
    "10543": {
      "op": "DUP2"
    },
    "10544": {
      "op": "MSTORE"
    },
    "10545": {
      "op": "DUP7"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10548": {
      "op": "DUP3"
    },
    "10549": {
      "op": "ADD"
    },
    "10550": {
      "op": "MSTORE"
    },
    "10551": {
      "op": "DUP6"
    },
    "10552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10554": {
      "op": "DUP3"
    },
    "10555": {
      "op": "ADD"
    },
    "10556": {
      "op": "MSTORE"
    },
    "10557": {
      "op": "DUP5"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10560": {
      "op": "DUP3"
    },
    "10561": {
      "op": "ADD"
    },
    "10562": {
      "op": "MSTORE"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10565": {
      "op": "DUP1"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10568": {
      "op": "SHL"
    },
    "10569": {
      "op": "SUB"
    },
    "10570": {
      "op": "DUP5"
    },
    "10571": {
      "op": "AND"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10574": {
      "op": "DUP3"
    },
    "10575": {
      "op": "ADD"
    },
    "10576": {
      "op": "MSTORE"
    },
    "10577": {
      "op": "DUP3"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10580": {
      "op": "DUP3"
    },
    "10581": {
      "op": "ADD"
    },
    "10582": {
      "op": "MSTORE"
    },
    "10583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10587": {
      "op": "DUP3"
    },
    "10588": {
      "op": "ADD"
    },
    "10589": {
      "op": "MSTORE"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10592": {
      "op": "PUSH2",
      "value": "0x296C"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10597": {
      "op": "DUP4"
    },
    "10598": {
      "op": "ADD"
    },
    "10599": {
      "op": "DUP5"
    },
    "10600": {
      "op": "PUSH2",
      "value": "0x2558"
    },
    "10603": {
      "jump": "i",
      "op": "JUMP"
    },
    "10604": {
      "op": "JUMPDEST"
    },
    "10605": {
      "op": "SWAP10"
    },
    "10606": {
      "op": "SWAP9"
    },
    "10607": {
      "op": "POP"
    },
    "10608": {
      "op": "POP"
    },
    "10609": {
      "op": "POP"
    },
    "10610": {
      "op": "POP"
    },
    "10611": {
      "op": "POP"
    },
    "10612": {
      "op": "POP"
    },
    "10613": {
      "op": "POP"
    },
    "10614": {
      "op": "POP"
    },
    "10615": {
      "op": "POP"
    },
    "10616": {
      "jump": "o",
      "op": "JUMP"
    },
    "10617": {
      "op": "JUMPDEST"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10620": {
      "op": "DUP1"
    },
    "10621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10623": {
      "op": "DUP4"
    },
    "10624": {
      "op": "DUP6"
    },
    "10625": {
      "op": "SUB"
    },
    "10626": {
      "op": "SLT"
    },
    "10627": {
      "op": "ISZERO"
    },
    "10628": {
      "op": "PUSH2",
      "value": "0x298C"
    },
    "10631": {
      "op": "JUMPI"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10634": {
      "op": "DUP1"
    },
    "10635": {
      "op": "REVERT"
    },
    "10636": {
      "op": "JUMPDEST"
    },
    "10637": {
      "op": "PUSH2",
      "value": "0x2995"
    },
    "10640": {
      "op": "DUP4"
    },
    "10641": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "10644": {
      "jump": "i",
      "op": "JUMP"
    },
    "10645": {
      "op": "JUMPDEST"
    },
    "10646": {
      "op": "SWAP2"
    },
    "10647": {
      "op": "POP"
    },
    "10648": {
      "op": "PUSH2",
      "value": "0x29A3"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10653": {
      "op": "DUP5"
    },
    "10654": {
      "op": "ADD"
    },
    "10655": {
      "op": "PUSH2",
      "value": "0x25B0"
    },
    "10658": {
      "jump": "i",
      "op": "JUMP"
    },
    "10659": {
      "op": "JUMPDEST"
    },
    "10660": {
      "op": "SWAP1"
    },
    "10661": {
      "op": "POP"
    },
    "10662": {
      "op": "SWAP3"
    },
    "10663": {
      "op": "POP"
    },
    "10664": {
      "op": "SWAP3"
    },
    "10665": {
      "op": "SWAP1"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "jump": "o",
      "op": "JUMP"
    },
    "10668": {
      "op": "JUMPDEST"
    },
    "10669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10671": {
      "op": "DUP2"
    },
    "10672": {
      "op": "MLOAD"
    },
    "10673": {
      "op": "PUSH2",
      "value": "0x29BE"
    },
    "10676": {
      "op": "DUP2"
    },
    "10677": {
      "op": "DUP6"
    },
    "10678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10680": {
      "op": "DUP7"
    },
    "10681": {
      "op": "ADD"
    },
    "10682": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "10685": {
      "jump": "i",
      "op": "JUMP"
    },
    "10686": {
      "op": "JUMPDEST"
    },
    "10687": {
      "op": "SWAP3"
    },
    "10688": {
      "op": "SWAP1"
    },
    "10689": {
      "op": "SWAP3"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "op": "SWAP3"
    },
    "10692": {
      "op": "SWAP2"
    },
    "10693": {
      "op": "POP"
    },
    "10694": {
      "op": "POP"
    },
    "10695": {
      "jump": "o",
      "op": "JUMP"
    },
    "10696": {
      "op": "JUMPDEST"
    },
    "10697": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "10730": {
      "op": "DUP2"
    },
    "10731": {
      "op": "MSTORE"
    },
    "10732": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "10765": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "10767": {
      "op": "DUP3"
    },
    "10768": {
      "op": "ADD"
    },
    "10769": {
      "op": "MSTORE"
    },
    "10770": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "10805": {
      "op": "DUP3"
    },
    "10806": {
      "op": "ADD"
    },
    "10807": {
      "op": "MSTORE"
    },
    "10808": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10817": {
      "op": "SHL"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "10820": {
      "op": "DUP3"
    },
    "10821": {
      "op": "ADD"
    },
    "10822": {
      "op": "MSTORE"
    },
    "10823": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10838": {
      "op": "SHL"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10841": {
      "op": "DUP3"
    },
    "10842": {
      "op": "ADD"
    },
    "10843": {
      "op": "MSTORE"
    },
    "10844": {
      "op": "DUP3"
    },
    "10845": {
      "op": "MLOAD"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10848": {
      "op": "SWAP1"
    },
    "10849": {
      "op": "PUSH2",
      "value": "0x2A71"
    },
    "10852": {
      "op": "DUP2"
    },
    "10853": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10855": {
      "op": "DUP6"
    },
    "10856": {
      "op": "ADD"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10859": {
      "op": "DUP9"
    },
    "10860": {
      "op": "ADD"
    },
    "10861": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "10864": {
      "jump": "i",
      "op": "JUMP"
    },
    "10865": {
      "op": "JUMPDEST"
    },
    "10866": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "10870": {
      "op": "SHL"
    },
    "10871": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "10873": {
      "op": "SWAP2"
    },
    "10874": {
      "op": "DUP5"
    },
    "10875": {
      "op": "ADD"
    },
    "10876": {
      "op": "SWAP2"
    },
    "10877": {
      "op": "DUP3"
    },
    "10878": {
      "op": "ADD"
    },
    "10879": {
      "op": "MSTORE"
    },
    "10880": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "10901": {
      "op": "SHL"
    },
    "10902": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "10904": {
      "op": "DUP3"
    },
    "10905": {
      "op": "ADD"
    },
    "10906": {
      "op": "MSTORE"
    },
    "10907": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "10942": {
      "op": "DUP3"
    },
    "10943": {
      "op": "ADD"
    },
    "10944": {
      "op": "MSTORE"
    },
    "10945": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "10980": {
      "op": "DUP3"
    },
    "10981": {
      "op": "ADD"
    },
    "10982": {
      "op": "MSTORE"
    },
    "10983": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "10996": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "10998": {
      "op": "SHL"
    },
    "10999": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11001": {
      "op": "DUP3"
    },
    "11002": {
      "op": "ADD"
    },
    "11003": {
      "op": "MSTORE"
    },
    "11004": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "11007": {
      "op": "PUSH2",
      "value": "0x2B0B"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "11012": {
      "op": "DUP4"
    },
    "11013": {
      "op": "ADD"
    },
    "11014": {
      "op": "DUP7"
    },
    "11015": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "11018": {
      "jump": "i",
      "op": "JUMP"
    },
    "11019": {
      "op": "JUMPDEST"
    },
    "11020": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "11023": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11025": {
      "op": "SHL"
    },
    "11026": {
      "op": "DUP2"
    },
    "11027": {
      "op": "MSTORE"
    },
    "11028": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11030": {
      "op": "ADD"
    },
    "11031": {
      "op": "SWAP1"
    },
    "11032": {
      "op": "JUMP"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "SWAP6"
    },
    "11035": {
      "op": "SWAP5"
    },
    "11036": {
      "op": "POP"
    },
    "11037": {
      "op": "POP"
    },
    "11038": {
      "op": "POP"
    },
    "11039": {
      "op": "POP"
    },
    "11040": {
      "op": "POP"
    },
    "11041": {
      "jump": "o",
      "op": "JUMP"
    },
    "11042": {
      "op": "JUMPDEST"
    },
    "11043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11045": {
      "op": "DUP6"
    },
    "11046": {
      "op": "MLOAD"
    },
    "11047": {
      "op": "PUSH2",
      "value": "0x2B34"
    },
    "11050": {
      "op": "DUP2"
    },
    "11051": {
      "op": "DUP5"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11054": {
      "op": "DUP11"
    },
    "11055": {
      "op": "ADD"
    },
    "11056": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11059": {
      "jump": "i",
      "op": "JUMP"
    },
    "11060": {
      "op": "JUMPDEST"
    },
    "11061": {
      "op": "DUP1"
    },
    "11062": {
      "op": "DUP4"
    },
    "11063": {
      "op": "ADD"
    },
    "11064": {
      "op": "SWAP1"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "11099": {
      "op": "DUP1"
    },
    "11100": {
      "op": "DUP3"
    },
    "11101": {
      "op": "MSTORE"
    },
    "11102": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11137": {
      "op": "DUP4"
    },
    "11138": {
      "op": "ADD"
    },
    "11139": {
      "op": "MSTORE"
    },
    "11140": {
      "op": "DUP7"
    },
    "11141": {
      "op": "MLOAD"
    },
    "11142": {
      "op": "PUSH2",
      "value": "0x2B96"
    },
    "11145": {
      "op": "DUP2"
    },
    "11146": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "11148": {
      "op": "DUP6"
    },
    "11149": {
      "op": "ADD"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11152": {
      "op": "DUP12"
    },
    "11153": {
      "op": "ADD"
    },
    "11154": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11157": {
      "jump": "i",
      "op": "JUMP"
    },
    "11158": {
      "op": "JUMPDEST"
    },
    "11159": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "11162": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11164": {
      "op": "SHL"
    },
    "11165": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "11167": {
      "op": "SWAP4"
    },
    "11168": {
      "op": "SWAP1"
    },
    "11169": {
      "op": "SWAP2"
    },
    "11170": {
      "op": "ADD"
    },
    "11171": {
      "op": "SWAP3"
    },
    "11172": {
      "op": "DUP4"
    },
    "11173": {
      "op": "ADD"
    },
    "11174": {
      "op": "DUP2"
    },
    "11175": {
      "op": "SWAP1"
    },
    "11176": {
      "op": "MSTORE"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "11179": {
      "op": "DUP4"
    },
    "11180": {
      "op": "ADD"
    },
    "11181": {
      "op": "DUP3"
    },
    "11182": {
      "op": "SWAP1"
    },
    "11183": {
      "op": "MSTORE"
    },
    "11184": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C"
    },
    "11217": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "11219": {
      "op": "DUP5"
    },
    "11220": {
      "op": "ADD"
    },
    "11221": {
      "op": "MSTORE"
    },
    "11222": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "11228": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "11230": {
      "op": "SHL"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "11233": {
      "op": "DUP5"
    },
    "11234": {
      "op": "ADD"
    },
    "11235": {
      "op": "MSTORE"
    },
    "11236": {
      "op": "DUP7"
    },
    "11237": {
      "op": "MLOAD"
    },
    "11238": {
      "op": "PUSH2",
      "value": "0x2BF6"
    },
    "11241": {
      "op": "DUP2"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "11244": {
      "op": "DUP7"
    },
    "11245": {
      "op": "ADD"
    },
    "11246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11248": {
      "op": "DUP12"
    },
    "11249": {
      "op": "ADD"
    },
    "11250": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11253": {
      "jump": "i",
      "op": "JUMP"
    },
    "11254": {
      "op": "JUMPDEST"
    },
    "11255": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "11257": {
      "op": "SWAP4"
    },
    "11258": {
      "op": "ADD"
    },
    "11259": {
      "op": "SWAP3"
    },
    "11260": {
      "op": "DUP4"
    },
    "11261": {
      "op": "ADD"
    },
    "11262": {
      "op": "MSTORE"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "11265": {
      "op": "DUP3"
    },
    "11266": {
      "op": "ADD"
    },
    "11267": {
      "op": "MSTORE"
    },
    "11268": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276"
    },
    "11301": {
      "op": "PUSH1",
      "value": "0xA3"
    },
    "11303": {
      "op": "DUP3"
    },
    "11304": {
      "op": "ADD"
    },
    "11305": {
      "op": "MSTORE"
    },
    "11306": {
      "op": "PUSH7",
      "value": "0x30B63AB2911D1"
    },
    "11314": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "11316": {
      "op": "SHL"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "11319": {
      "op": "DUP3"
    },
    "11320": {
      "op": "ADD"
    },
    "11321": {
      "op": "MSTORE"
    },
    "11322": {
      "op": "PUSH2",
      "value": "0x2C49"
    },
    "11325": {
      "op": "PUSH2",
      "value": "0x2B0B"
    },
    "11328": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "11330": {
      "op": "DUP4"
    },
    "11331": {
      "op": "ADD"
    },
    "11332": {
      "op": "DUP7"
    },
    "11333": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "11336": {
      "jump": "i",
      "op": "JUMP"
    },
    "11337": {
      "op": "JUMPDEST"
    },
    "11338": {
      "op": "SWAP8"
    },
    "11339": {
      "op": "SWAP7"
    },
    "11340": {
      "op": "POP"
    },
    "11341": {
      "op": "POP"
    },
    "11342": {
      "op": "POP"
    },
    "11343": {
      "op": "POP"
    },
    "11344": {
      "op": "POP"
    },
    "11345": {
      "op": "POP"
    },
    "11346": {
      "op": "POP"
    },
    "11347": {
      "jump": "o",
      "op": "JUMP"
    },
    "11348": {
      "op": "JUMPDEST"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11351": {
      "op": "DUP5"
    },
    "11352": {
      "op": "MLOAD"
    },
    "11353": {
      "op": "PUSH2",
      "value": "0x2C66"
    },
    "11356": {
      "op": "DUP2"
    },
    "11357": {
      "op": "DUP5"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11360": {
      "op": "DUP10"
    },
    "11361": {
      "op": "ADD"
    },
    "11362": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11365": {
      "jump": "i",
      "op": "JUMP"
    },
    "11366": {
      "op": "JUMPDEST"
    },
    "11367": {
      "op": "DUP1"
    },
    "11368": {
      "op": "DUP4"
    },
    "11369": {
      "op": "ADD"
    },
    "11370": {
      "op": "SWAP1"
    },
    "11371": {
      "op": "POP"
    },
    "11372": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "11405": {
      "op": "DUP1"
    },
    "11406": {
      "op": "DUP3"
    },
    "11407": {
      "op": "MSTORE"
    },
    "11408": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20227370656564222C202276616C7565223A20000000"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11443": {
      "op": "DUP4"
    },
    "11444": {
      "op": "ADD"
    },
    "11445": {
      "op": "MSTORE"
    },
    "11446": {
      "op": "DUP6"
    },
    "11447": {
      "op": "MLOAD"
    },
    "11448": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11451": {
      "op": "DUP2"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "11454": {
      "op": "DUP6"
    },
    "11455": {
      "op": "ADD"
    },
    "11456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11458": {
      "op": "DUP11"
    },
    "11459": {
      "op": "ADD"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11463": {
      "jump": "i",
      "op": "JUMP"
    },
    "11464": {
      "op": "JUMPDEST"
    },
    "11465": {
      "op": "DUP1"
    },
    "11466": {
      "op": "DUP4"
    },
    "11467": {
      "op": "ADD"
    },
    "11468": {
      "op": "SWAP3"
    },
    "11469": {
      "op": "POP"
    },
    "11470": {
      "op": "POP"
    },
    "11471": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11476": {
      "op": "SHL"
    },
    "11477": {
      "op": "DUP1"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "11480": {
      "op": "DUP5"
    },
    "11481": {
      "op": "ADD"
    },
    "11482": {
      "op": "MSTORE"
    },
    "11483": {
      "op": "DUP2"
    },
    "11484": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11486": {
      "op": "DUP5"
    },
    "11487": {
      "op": "ADD"
    },
    "11488": {
      "op": "MSTORE"
    },
    "11489": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D70222C202276616C7565223A20000000000000"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "11524": {
      "op": "DUP5"
    },
    "11525": {
      "op": "ADD"
    },
    "11526": {
      "op": "MSTORE"
    },
    "11527": {
      "op": "DUP6"
    },
    "11528": {
      "op": "MLOAD"
    },
    "11529": {
      "op": "SWAP2"
    },
    "11530": {
      "op": "POP"
    },
    "11531": {
      "op": "PUSH2",
      "value": "0x2D1B"
    },
    "11534": {
      "op": "DUP3"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "11537": {
      "op": "DUP6"
    },
    "11538": {
      "op": "ADD"
    },
    "11539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11541": {
      "op": "DUP10"
    },
    "11542": {
      "op": "ADD"
    },
    "11543": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11546": {
      "jump": "i",
      "op": "JUMP"
    },
    "11547": {
      "op": "JUMPDEST"
    },
    "11548": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "11550": {
      "op": "SWAP3"
    },
    "11551": {
      "op": "SWAP1"
    },
    "11552": {
      "op": "SWAP2"
    },
    "11553": {
      "op": "ADD"
    },
    "11554": {
      "op": "SWAP2"
    },
    "11555": {
      "op": "DUP3"
    },
    "11556": {
      "op": "ADD"
    },
    "11557": {
      "op": "MSTORE"
    },
    "11558": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "11560": {
      "op": "ADD"
    },
    "11561": {
      "op": "SWAP6"
    },
    "11562": {
      "op": "SWAP5"
    },
    "11563": {
      "op": "POP"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "op": "POP"
    },
    "11566": {
      "op": "POP"
    },
    "11567": {
      "op": "POP"
    },
    "11568": {
      "jump": "o",
      "op": "JUMP"
    },
    "11569": {
      "op": "JUMPDEST"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11572": {
      "op": "DUP6"
    },
    "11573": {
      "op": "MLOAD"
    },
    "11574": {
      "op": "PUSH2",
      "value": "0x2D43"
    },
    "11577": {
      "op": "DUP2"
    },
    "11578": {
      "op": "DUP5"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11581": {
      "op": "DUP11"
    },
    "11582": {
      "op": "ADD"
    },
    "11583": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11586": {
      "jump": "i",
      "op": "JUMP"
    },
    "11587": {
      "op": "JUMPDEST"
    },
    "11588": {
      "op": "DUP1"
    },
    "11589": {
      "op": "DUP4"
    },
    "11590": {
      "op": "ADD"
    },
    "11591": {
      "op": "SWAP1"
    },
    "11592": {
      "op": "POP"
    },
    "11593": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "11626": {
      "op": "DUP1"
    },
    "11627": {
      "op": "DUP3"
    },
    "11628": {
      "op": "MSTORE"
    },
    "11629": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11664": {
      "op": "DUP4"
    },
    "11665": {
      "op": "ADD"
    },
    "11666": {
      "op": "MSTORE"
    },
    "11667": {
      "op": "DUP7"
    },
    "11668": {
      "op": "MLOAD"
    },
    "11669": {
      "op": "PUSH2",
      "value": "0x2DA5"
    },
    "11672": {
      "op": "DUP2"
    },
    "11673": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "11675": {
      "op": "DUP6"
    },
    "11676": {
      "op": "ADD"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11679": {
      "op": "DUP12"
    },
    "11680": {
      "op": "ADD"
    },
    "11681": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11684": {
      "jump": "i",
      "op": "JUMP"
    },
    "11685": {
      "op": "JUMPDEST"
    },
    "11686": {
      "op": "DUP1"
    },
    "11687": {
      "op": "DUP4"
    },
    "11688": {
      "op": "ADD"
    },
    "11689": {
      "op": "SWAP3"
    },
    "11690": {
      "op": "POP"
    },
    "11691": {
      "op": "POP"
    },
    "11692": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11697": {
      "op": "SHL"
    },
    "11698": {
      "op": "DUP1"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "11701": {
      "op": "DUP5"
    },
    "11702": {
      "op": "ADD"
    },
    "11703": {
      "op": "MSTORE"
    },
    "11704": {
      "op": "DUP2"
    },
    "11705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11707": {
      "op": "DUP5"
    },
    "11708": {
      "op": "ADD"
    },
    "11709": {
      "op": "MSTORE"
    },
    "11710": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11745": {
      "op": "DUP5"
    },
    "11746": {
      "op": "ADD"
    },
    "11747": {
      "op": "MSTORE"
    },
    "11748": {
      "op": "DUP7"
    },
    "11749": {
      "op": "MLOAD"
    },
    "11750": {
      "op": "PUSH2",
      "value": "0x2DF6"
    },
    "11753": {
      "op": "DUP2"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11756": {
      "op": "DUP7"
    },
    "11757": {
      "op": "ADD"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11760": {
      "op": "DUP12"
    },
    "11761": {
      "op": "ADD"
    },
    "11762": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11765": {
      "jump": "i",
      "op": "JUMP"
    },
    "11766": {
      "op": "JUMPDEST"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11769": {
      "op": "SWAP4"
    },
    "11770": {
      "op": "ADD"
    },
    "11771": {
      "op": "SWAP3"
    },
    "11772": {
      "op": "DUP4"
    },
    "11773": {
      "op": "ADD"
    },
    "11774": {
      "op": "MSTORE"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "11777": {
      "op": "DUP3"
    },
    "11778": {
      "op": "ADD"
    },
    "11779": {
      "op": "MSTORE"
    },
    "11780": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "11813": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "11815": {
      "op": "DUP3"
    },
    "11816": {
      "op": "ADD"
    },
    "11817": {
      "op": "MSTORE"
    },
    "11818": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "11824": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "11826": {
      "op": "SHL"
    },
    "11827": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "11829": {
      "op": "DUP3"
    },
    "11830": {
      "op": "ADD"
    },
    "11831": {
      "op": "MSTORE"
    },
    "11832": {
      "op": "PUSH2",
      "value": "0x2C49"
    },
    "11835": {
      "op": "PUSH2",
      "value": "0x2B0B"
    },
    "11838": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "11840": {
      "op": "DUP4"
    },
    "11841": {
      "op": "ADD"
    },
    "11842": {
      "op": "DUP7"
    },
    "11843": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "11846": {
      "jump": "i",
      "op": "JUMP"
    },
    "11847": {
      "op": "JUMPDEST"
    },
    "11848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11850": {
      "op": "DUP3"
    },
    "11851": {
      "op": "MLOAD"
    },
    "11852": {
      "op": "PUSH2",
      "value": "0x2E59"
    },
    "11855": {
      "op": "DUP2"
    },
    "11856": {
      "op": "DUP5"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11859": {
      "op": "DUP8"
    },
    "11860": {
      "op": "ADD"
    },
    "11861": {
      "op": "PUSH2",
      "value": "0x252C"
    },
    "11864": {
      "jump": "i",
      "op": "JUMP"
    },
    "11865": {
      "op": "JUMPDEST"
    },
    "11866": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11870": {
      "op": "SHL"
    },
    "11871": {
      "op": "SWAP3"
    },
    "11872": {
      "op": "ADD"
    },
    "11873": {
      "op": "SWAP2"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "MSTORE"
    },
    "11876": {
      "op": "POP"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11881": {
      "op": "SHL"
    },
    "11882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11884": {
      "op": "DUP3"
    },
    "11885": {
      "op": "ADD"
    },
    "11886": {
      "op": "MSTORE"
    },
    "11887": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "11889": {
      "op": "ADD"
    },
    "11890": {
      "op": "SWAP2"
    },
    "11891": {
      "op": "SWAP1"
    },
    "11892": {
      "op": "POP"
    },
    "11893": {
      "jump": "o",
      "op": "JUMP"
    },
    "11894": {
      "op": "JUMPDEST"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11897": {
      "op": "DUP2"
    },
    "11898": {
      "op": "DUP2"
    },
    "11899": {
      "op": "SHR"
    },
    "11900": {
      "op": "SWAP1"
    },
    "11901": {
      "op": "DUP3"
    },
    "11902": {
      "op": "AND"
    },
    "11903": {
      "op": "DUP1"
    },
    "11904": {
      "op": "PUSH2",
      "value": "0x2E8A"
    },
    "11907": {
      "op": "JUMPI"
    },
    "11908": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11910": {
      "op": "DUP3"
    },
    "11911": {
      "op": "AND"
    },
    "11912": {
      "op": "SWAP2"
    },
    "11913": {
      "op": "POP"
    },
    "11914": {
      "op": "JUMPDEST"
    },
    "11915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11917": {
      "op": "DUP3"
    },
    "11918": {
      "op": "LT"
    },
    "11919": {
      "op": "DUP2"
    },
    "11920": {
      "op": "SUB"
    },
    "11921": {
      "op": "PUSH2",
      "value": "0x2EAA"
    },
    "11924": {
      "op": "JUMPI"
    },
    "11925": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11932": {
      "op": "SHL"
    },
    "11933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11935": {
      "op": "MSTORE"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11940": {
      "op": "MSTORE"
    },
    "11941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11945": {
      "op": "REVERT"
    },
    "11946": {
      "op": "JUMPDEST"
    },
    "11947": {
      "op": "POP"
    },
    "11948": {
      "op": "SWAP2"
    },
    "11949": {
      "op": "SWAP1"
    },
    "11950": {
      "op": "POP"
    },
    "11951": {
      "jump": "o",
      "op": "JUMP"
    },
    "11952": {
      "op": "JUMPDEST"
    },
    "11953": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11958": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11960": {
      "op": "SHL"
    },
    "11961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11963": {
      "op": "MSTORE"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11968": {
      "op": "MSTORE"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11973": {
      "op": "REVERT"
    },
    "11974": {
      "op": "JUMPDEST"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11977": {
      "op": "DUP3"
    },
    "11978": {
      "op": "PUSH2",
      "value": "0x2ED5"
    },
    "11981": {
      "op": "JUMPI"
    },
    "11982": {
      "op": "PUSH2",
      "value": "0x2ED5"
    },
    "11985": {
      "op": "PUSH2",
      "value": "0x2EB0"
    },
    "11988": {
      "jump": "i",
      "op": "JUMP"
    },
    "11989": {
      "op": "JUMPDEST"
    },
    "11990": {
      "op": "POP"
    },
    "11991": {
      "op": "MOD"
    },
    "11992": {
      "op": "SWAP1"
    },
    "11993": {
      "jump": "o",
      "op": "JUMP"
    },
    "11994": {
      "op": "JUMPDEST"
    },
    "11995": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12000": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12002": {
      "op": "SHL"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12005": {
      "op": "MSTORE"
    },
    "12006": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12008": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12010": {
      "op": "MSTORE"
    },
    "12011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12015": {
      "op": "REVERT"
    },
    "12016": {
      "op": "JUMPDEST"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12019": {
      "op": "DUP3"
    },
    "12020": {
      "op": "NOT"
    },
    "12021": {
      "op": "DUP3"
    },
    "12022": {
      "op": "GT"
    },
    "12023": {
      "op": "ISZERO"
    },
    "12024": {
      "op": "PUSH2",
      "value": "0x2F03"
    },
    "12027": {
      "op": "JUMPI"
    },
    "12028": {
      "op": "PUSH2",
      "value": "0x2F03"
    },
    "12031": {
      "op": "PUSH2",
      "value": "0x2EDA"
    },
    "12034": {
      "jump": "i",
      "op": "JUMP"
    },
    "12035": {
      "op": "JUMPDEST"
    },
    "12036": {
      "op": "POP"
    },
    "12037": {
      "op": "ADD"
    },
    "12038": {
      "op": "SWAP1"
    },
    "12039": {
      "jump": "o",
      "op": "JUMP"
    },
    "12040": {
      "op": "JUMPDEST"
    },
    "12041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12043": {
      "op": "DUP3"
    },
    "12044": {
      "op": "PUSH2",
      "value": "0x2F17"
    },
    "12047": {
      "op": "JUMPI"
    },
    "12048": {
      "op": "PUSH2",
      "value": "0x2F17"
    },
    "12051": {
      "op": "PUSH2",
      "value": "0x2EB0"
    },
    "12054": {
      "jump": "i",
      "op": "JUMP"
    },
    "12055": {
      "op": "JUMPDEST"
    },
    "12056": {
      "op": "POP"
    },
    "12057": {
      "op": "DIV"
    },
    "12058": {
      "op": "SWAP1"
    },
    "12059": {
      "jump": "o",
      "op": "JUMP"
    },
    "12060": {
      "op": "JUMPDEST"
    },
    "12061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12063": {
      "op": "DUP2"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12066": {
      "op": "NOT"
    },
    "12067": {
      "op": "DIV"
    },
    "12068": {
      "op": "DUP4"
    },
    "12069": {
      "op": "GT"
    },
    "12070": {
      "op": "DUP3"
    },
    "12071": {
      "op": "ISZERO"
    },
    "12072": {
      "op": "ISZERO"
    },
    "12073": {
      "op": "AND"
    },
    "12074": {
      "op": "ISZERO"
    },
    "12075": {
      "op": "PUSH2",
      "value": "0x2F36"
    },
    "12078": {
      "op": "JUMPI"
    },
    "12079": {
      "op": "PUSH2",
      "value": "0x2F36"
    },
    "12082": {
      "op": "PUSH2",
      "value": "0x2EDA"
    },
    "12085": {
      "jump": "i",
      "op": "JUMP"
    },
    "12086": {
      "op": "JUMPDEST"
    },
    "12087": {
      "op": "POP"
    },
    "12088": {
      "op": "MUL"
    },
    "12089": {
      "op": "SWAP1"
    },
    "12090": {
      "jump": "o",
      "op": "JUMP"
    },
    "12091": {
      "op": "JUMPDEST"
    },
    "12092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12094": {
      "op": "DUP1"
    },
    "12095": {
      "op": "DUP3"
    },
    "12096": {
      "op": "MSTORE"
    },
    "12097": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12099": {
      "op": "SWAP1"
    },
    "12100": {
      "op": "DUP3"
    },
    "12101": {
      "op": "ADD"
    },
    "12102": {
      "op": "MSTORE"
    },
    "12103": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "12136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12138": {
      "op": "DUP3"
    },
    "12139": {
      "op": "ADD"
    },
    "12140": {
      "op": "MSTORE"
    },
    "12141": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "12161": {
      "op": "SHL"
    },
    "12162": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12164": {
      "op": "DUP3"
    },
    "12165": {
      "op": "ADD"
    },
    "12166": {
      "op": "MSTORE"
    },
    "12167": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12169": {
      "op": "ADD"
    },
    "12170": {
      "op": "SWAP1"
    },
    "12171": {
      "jump": "o",
      "op": "JUMP"
    },
    "12172": {
      "op": "JUMPDEST"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12175": {
      "op": "DUP1"
    },
    "12176": {
      "op": "DUP3"
    },
    "12177": {
      "op": "MSTORE"
    },
    "12178": {
      "op": "DUP2"
    },
    "12179": {
      "op": "DUP2"
    },
    "12180": {
      "op": "ADD"
    },
    "12181": {
      "op": "MSTORE"
    },
    "12182": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12217": {
      "op": "DUP3"
    },
    "12218": {
      "op": "ADD"
    },
    "12219": {
      "op": "MSTORE"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12222": {
      "op": "ADD"
    },
    "12223": {
      "op": "SWAP1"
    },
    "12224": {
      "jump": "o",
      "op": "JUMP"
    },
    "12225": {
      "op": "JUMPDEST"
    },
    "12226": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12233": {
      "op": "SHL"
    },
    "12234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12236": {
      "op": "MSTORE"
    },
    "12237": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12239": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12241": {
      "op": "MSTORE"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12246": {
      "op": "REVERT"
    },
    "12247": {
      "op": "JUMPDEST"
    },
    "12248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12250": {
      "op": "DUP3"
    },
    "12251": {
      "op": "DUP3"
    },
    "12252": {
      "op": "LT"
    },
    "12253": {
      "op": "ISZERO"
    },
    "12254": {
      "op": "PUSH2",
      "value": "0x2FE9"
    },
    "12257": {
      "op": "JUMPI"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x2FE9"
    },
    "12261": {
      "op": "PUSH2",
      "value": "0x2EDA"
    },
    "12264": {
      "jump": "i",
      "op": "JUMP"
    },
    "12265": {
      "op": "JUMPDEST"
    },
    "12266": {
      "op": "POP"
    },
    "12267": {
      "op": "SUB"
    },
    "12268": {
      "op": "SWAP1"
    },
    "12269": {
      "jump": "o",
      "op": "JUMP"
    },
    "12270": {
      "op": "JUMPDEST"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12273": {
      "op": "DUP1"
    },
    "12274": {
      "op": "DUP5"
    },
    "12275": {
      "op": "SLOAD"
    },
    "12276": {
      "op": "DUP2"
    },
    "12277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12279": {
      "op": "DUP3"
    },
    "12280": {
      "op": "DUP2"
    },
    "12281": {
      "op": "SHR"
    },
    "12282": {
      "op": "SWAP2"
    },
    "12283": {
      "op": "POP"
    },
    "12284": {
      "op": "DUP1"
    },
    "12285": {
      "op": "DUP4"
    },
    "12286": {
      "op": "AND"
    },
    "12287": {
      "op": "DUP1"
    },
    "12288": {
      "op": "PUSH2",
      "value": "0x300A"
    },
    "12291": {
      "op": "JUMPI"
    },
    "12292": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12294": {
      "op": "DUP4"
    },
    "12295": {
      "op": "AND"
    },
    "12296": {
      "op": "SWAP3"
    },
    "12297": {
      "op": "POP"
    },
    "12298": {
      "op": "JUMPDEST"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12301": {
      "op": "DUP1"
    },
    "12302": {
      "op": "DUP5"
    },
    "12303": {
      "op": "LT"
    },
    "12304": {
      "op": "DUP3"
    },
    "12305": {
      "op": "SUB"
    },
    "12306": {
      "op": "PUSH2",
      "value": "0x3029"
    },
    "12309": {
      "op": "JUMPI"
    },
    "12310": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12317": {
      "op": "SHL"
    },
    "12318": {
      "op": "DUP7"
    },
    "12319": {
      "op": "MSTORE"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12324": {
      "op": "MSTORE"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12327": {
      "op": "DUP7"
    },
    "12328": {
      "op": "REVERT"
    },
    "12329": {
      "op": "JUMPDEST"
    },
    "12330": {
      "op": "DUP2"
    },
    "12331": {
      "op": "DUP1"
    },
    "12332": {
      "op": "ISZERO"
    },
    "12333": {
      "op": "PUSH2",
      "value": "0x303D"
    },
    "12336": {
      "op": "JUMPI"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12339": {
      "op": "DUP2"
    },
    "12340": {
      "op": "EQ"
    },
    "12341": {
      "op": "PUSH2",
      "value": "0x3052"
    },
    "12344": {
      "op": "JUMPI"
    },
    "12345": {
      "op": "PUSH2",
      "value": "0x307F"
    },
    "12348": {
      "op": "JUMP"
    },
    "12349": {
      "op": "JUMPDEST"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12352": {
      "op": "NOT"
    },
    "12353": {
      "op": "DUP7"
    },
    "12354": {
      "op": "AND"
    },
    "12355": {
      "op": "DUP10"
    },
    "12356": {
      "op": "MSTORE"
    },
    "12357": {
      "op": "DUP5"
    },
    "12358": {
      "op": "ISZERO"
    },
    "12359": {
      "op": "ISZERO"
    },
    "12360": {
      "op": "DUP6"
    },
    "12361": {
      "op": "MUL"
    },
    "12362": {
      "op": "DUP10"
    },
    "12363": {
      "op": "ADD"
    },
    "12364": {
      "op": "SWAP7"
    },
    "12365": {
      "op": "POP"
    },
    "12366": {
      "op": "PUSH2",
      "value": "0x307F"
    },
    "12369": {
      "op": "JUMP"
    },
    "12370": {
      "op": "JUMPDEST"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12373": {
      "op": "DUP12"
    },
    "12374": {
      "op": "DUP2"
    },
    "12375": {
      "op": "MSTORE"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12378": {
      "op": "SWAP1"
    },
    "12379": {
      "op": "KECCAK256"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12382": {
      "op": "JUMPDEST"
    },
    "12383": {
      "op": "DUP7"
    },
    "12384": {
      "op": "DUP2"
    },
    "12385": {
      "op": "LT"
    },
    "12386": {
      "op": "ISZERO"
    },
    "12387": {
      "op": "PUSH2",
      "value": "0x3077"
    },
    "12390": {
      "op": "JUMPI"
    },
    "12391": {
      "op": "DUP2"
    },
    "12392": {
      "op": "SLOAD"
    },
    "12393": {
      "op": "DUP12"
    },
    "12394": {
      "op": "DUP3"
    },
    "12395": {
      "op": "ADD"
    },
    "12396": {
      "op": "MSTORE"
    },
    "12397": {
      "op": "SWAP1"
    },
    "12398": {
      "op": "DUP6"
    },
    "12399": {
      "op": "ADD"
    },
    "12400": {
      "op": "SWAP1"
    },
    "12401": {
      "op": "DUP4"
    },
    "12402": {
      "op": "ADD"
    },
    "12403": {
      "op": "PUSH2",
      "value": "0x305E"
    },
    "12406": {
      "op": "JUMP"
    },
    "12407": {
      "op": "JUMPDEST"
    },
    "12408": {
      "op": "POP"
    },
    "12409": {
      "op": "POP"
    },
    "12410": {
      "op": "DUP5"
    },
    "12411": {
      "op": "DUP10"
    },
    "12412": {
      "op": "ADD"
    },
    "12413": {
      "op": "SWAP7"
    },
    "12414": {
      "op": "POP"
    },
    "12415": {
      "op": "JUMPDEST"
    },
    "12416": {
      "op": "POP"
    },
    "12417": {
      "op": "POP"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "op": "POP"
    },
    "12420": {
      "op": "POP"
    },
    "12421": {
      "op": "POP"
    },
    "12422": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "12425": {
      "op": "PUSH2",
      "value": "0x3092"
    },
    "12428": {
      "op": "DUP3"
    },
    "12429": {
      "op": "DUP7"
    },
    "12430": {
      "op": "PUSH2",
      "value": "0x29AC"
    },
    "12433": {
      "jump": "i",
      "op": "JUMP"
    },
    "12434": {
      "op": "JUMPDEST"
    },
    "12435": {
      "op": "PUSH4",
      "value": "0x2E6A7067"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12442": {
      "op": "SHL"
    },
    "12443": {
      "op": "DUP2"
    },
    "12444": {
      "op": "MSTORE"
    },
    "12445": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12447": {
      "op": "ADD"
    },
    "12448": {
      "op": "SWAP1"
    },
    "12449": {
      "op": "JUMP"
    },
    "12450": {
      "op": "JUMPDEST"
    },
    "12451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12455": {
      "op": "DUP3"
    },
    "12456": {
      "op": "ADD"
    },
    "12457": {
      "op": "PUSH2",
      "value": "0x30B4"
    },
    "12460": {
      "op": "JUMPI"
    },
    "12461": {
      "op": "PUSH2",
      "value": "0x30B4"
    },
    "12464": {
      "op": "PUSH2",
      "value": "0x2EDA"
    },
    "12467": {
      "jump": "i",
      "op": "JUMP"
    },
    "12468": {
      "op": "JUMPDEST"
    },
    "12469": {
      "op": "POP"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12472": {
      "op": "ADD"
    },
    "12473": {
      "op": "SWAP1"
    },
    "12474": {
      "jump": "o",
      "op": "JUMP"
    },
    "12475": {
      "op": "JUMPDEST"
    },
    "12476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12478": {
      "op": "DUP1"
    },
    "12479": {
      "op": "DUP3"
    },
    "12480": {
      "op": "MSTORE"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12483": {
      "op": "SWAP1"
    },
    "12484": {
      "op": "DUP3"
    },
    "12485": {
      "op": "ADD"
    },
    "12486": {
      "op": "MSTORE"
    },
    "12487": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "12520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12522": {
      "op": "DUP3"
    },
    "12523": {
      "op": "ADD"
    },
    "12524": {
      "op": "MSTORE"
    },
    "12525": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "12546": {
      "op": "SHL"
    },
    "12547": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12549": {
      "op": "DUP3"
    },
    "12550": {
      "op": "ADD"
    },
    "12551": {
      "op": "MSTORE"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12554": {
      "op": "ADD"
    },
    "12555": {
      "op": "SWAP1"
    },
    "12556": {
      "jump": "o",
      "op": "JUMP"
    },
    "12557": {
      "op": "JUMPDEST"
    },
    "12558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12564": {
      "op": "SHL"
    },
    "12565": {
      "op": "SUB"
    },
    "12566": {
      "op": "DUP6"
    },
    "12567": {
      "op": "DUP2"
    },
    "12568": {
      "op": "AND"
    },
    "12569": {
      "op": "DUP3"
    },
    "12570": {
      "op": "MSTORE"
    },
    "12571": {
      "op": "DUP5"
    },
    "12572": {
      "op": "AND"
    },
    "12573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12575": {
      "op": "DUP3"
    },
    "12576": {
      "op": "ADD"
    },
    "12577": {
      "op": "MSTORE"
    },
    "12578": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12580": {
      "op": "DUP2"
    },
    "12581": {
      "op": "ADD"
    },
    "12582": {
      "op": "DUP4"
    },
    "12583": {
      "op": "SWAP1"
    },
    "12584": {
      "op": "MSTORE"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12587": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12589": {
      "op": "DUP3"
    },
    "12590": {
      "op": "ADD"
    },
    "12591": {
      "op": "DUP2"
    },
    "12592": {
      "op": "SWAP1"
    },
    "12593": {
      "op": "MSTORE"
    },
    "12594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12596": {
      "op": "SWAP1"
    },
    "12597": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "12600": {
      "op": "SWAP1"
    },
    "12601": {
      "op": "DUP4"
    },
    "12602": {
      "op": "ADD"
    },
    "12603": {
      "op": "DUP5"
    },
    "12604": {
      "op": "PUSH2",
      "value": "0x2558"
    },
    "12607": {
      "jump": "i",
      "op": "JUMP"
    },
    "12608": {
      "op": "JUMPDEST"
    },
    "12609": {
      "op": "SWAP7"
    },
    "12610": {
      "op": "SWAP6"
    },
    "12611": {
      "op": "POP"
    },
    "12612": {
      "op": "POP"
    },
    "12613": {
      "op": "POP"
    },
    "12614": {
      "op": "POP"
    },
    "12615": {
      "op": "POP"
    },
    "12616": {
      "op": "POP"
    },
    "12617": {
      "jump": "o",
      "op": "JUMP"
    },
    "12618": {
      "op": "JUMPDEST"
    },
    "12619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12623": {
      "op": "DUP3"
    },
    "12624": {
      "op": "DUP5"
    },
    "12625": {
      "op": "SUB"
    },
    "12626": {
      "op": "SLT"
    },
    "12627": {
      "op": "ISZERO"
    },
    "12628": {
      "op": "PUSH2",
      "value": "0x315C"
    },
    "12631": {
      "op": "JUMPI"
    },
    "12632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12634": {
      "op": "DUP1"
    },
    "12635": {
      "op": "REVERT"
    },
    "12636": {
      "op": "JUMPDEST"
    },
    "12637": {
      "op": "DUP2"
    },
    "12638": {
      "op": "MLOAD"
    },
    "12639": {
      "op": "PUSH2",
      "value": "0x2432"
    },
    "12642": {
      "op": "DUP2"
    },
    "12643": {
      "op": "PUSH2",
      "value": "0x23FF"
    },
    "12646": {
      "jump": "i",
      "op": "JUMP"
    },
    "12647": {
      "op": "JUMPDEST"
    },
    "12648": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12653": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12655": {
      "op": "SHL"
    },
    "12656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12658": {
      "op": "MSTORE"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12663": {
      "op": "MSTORE"
    },
    "12664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12668": {
      "op": "REVERT"
    }
  },
  "sha1": "8f61e32e82bdfdebc069fe4bdff0fc56a9b129f2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n    enum OUTCOME {LOSS, WIN, TIE, CAPTURE}\n\n    // note -- stack gets too deep if add more\n    struct Stats { // todo -- reduce uint amount\n        uint256 level;\n        uint256 hp;\n        uint256 magicalPower;\n        uint256 magicalDefense;\n        uint256 speed;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n        uint256 phaseDuration;\n        string imageBaseURI;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n    function getStatsGivenId(uint256 _wizardId) external view returns(Stats memory) {\n        return tokenIdToStats[_wizardId];\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address, string memory _imageBaseURI) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n        contractSettings.phaseDuration = 60*60;// todo --\n        contractSettings.imageBaseURI = _imageBaseURI;// todo --\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        // todo -- randomly create stats\n        //\n        // hp, base = 25\n        // mp base = 25\n\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp)));\n//        uint256 addOn = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp))) % 26;\n        uint256 hp = 25 + pseudoRandNum % 26;\n        uint256 magicalPower = 25 + (pseudoRandNum/100) % 26;\n        uint256 magicalDefense = 10 + (pseudoRandNum/10*4) % 10;\n        uint256 speed = 10 + (pseudoRandNum/10*5) % 10;\n        ELEMENT element = ELEMENT((pseudoRandNum/10*6) % 4);\n\n        Stats memory myStats =  Stats(1, hp, magicalPower, magicalDefense, speed, 0, 0, 0, 0, 0, 0, 0, 0, element);\n        tokenIdToStats[totalSupply()+1] = myStats;\n        _safeMint(msg.sender, totalSupply()+1 ); // with with 1 as id\n    }\n\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        // todo -- must be beyond time limitation\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n\n        emit Initiated(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, OUTCOME outcome, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        if(outcome == OUTCOME.WIN){\n            tokenIdToStats[_attackerId].wins += 1;\n            tokenIdToStats[_defenderId].losses += 1;\n\n        }\n        else if(outcome == OUTCOME.LOSS){\n            tokenIdToStats[_attackerId].losses += 1;\n            tokenIdToStats[_defenderId].wins += 1;\n        }\n\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n\n        // todo -- tokens waged?\n//        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n        // todo -- add stat for last time attacked to limit attack frequency?\n\n        // we switched to ETH\n//        if(_won==OUTCOME.LOSS) {\n//            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n//        }\n    }\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public returns(uint256) {\n\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId, uint256 _timeReward) external onlyVerifier {\n        // add time entension to NFT\n        tokenIdToStats[_tokenId].protectedUntilTimestamp = _timeReward + (tokenIdToStats[_tokenId].protectedUntilTimestamp < block.timestamp\n                 ? block.timestamp : tokenIdToStats[_tokenId].protectedUntilTimestamp);\n\n        // increase stats of NFT\n//        tokenIdToStats[_tokenId].tasksCompleted +=1;\n    }\n\n\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        string memory linkExtension;\n        if(tokenIdToStats[_tokenId].initiationTimestamp==0){ // uninitiated\n            linkExtension = \"0\"; // todo -- shameful uninitiated picture\n        }\n        else{\n            linkExtension =\n                      Strings.toString(\n                      (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n                      > 7 ? 7 : (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n                      );\n        }\n        string memory imageURI = string(abi.encodePacked(contractSettings.imageBaseURI, linkExtension, '.jpg'));\n        return formatTokenURI(_tokenId, imageURI);\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        Stats memory myStats = tokenIdToStats[_tokenId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(myStats.hp),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": ',\n            Strings.toString(myStats.magicalPower),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": ',\n            Strings.toString(myStats.magicalDefense),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": ',\n            Strings.toString(myStats.speed),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n            Strings.toString(myStats.wins),   ' }'\n        ));\n\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(myStats.losses),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(myStats.battles),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    /////////////////////////////////\n    ////// Admin Functions      /////\n    /////////////////////////////////\n\n\n    function modifyContractSettings(string memory _imageBaseURI, uint256 _phaseDuration, uint256 _protectionTimeExtension, uint256 _mintCost,\n                    uint256 _initiationCost) external onlyOwner {\n        contractSettings.imageBaseURI;\n        contractSettings.phaseDuration;\n        contractSettings.protectionTimeExtension;\n        contractSettings.mintCost;\n        contractSettings.initiationCost;\n    }\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "359:12667:22:-:0;;;2390:594;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2500:5;2507:7;1459:5:6;:13;2500:5:22;1459::6;:13;:::i;:::-;-1:-1:-1;1483:7:6;:17;1493:7;1483;:17;:::i;:::-;;1392:116;;889:23:8;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;2556:5:22::1;2527:26:::0;:34;2606:1:::1;2572:31:::0;:35;2646:1:::1;2527:16;2618:29:::0;2729:6:::1;2686:40:::0;:49;2774:38;:49;;-1:-1:-1;;;;;;2774:49:22::1;-1:-1:-1::0;;;;;2774:49:22;::::1;;::::0;;2895:5:::1;2862:30:::0;:38;2921:29;:45:::1;2953:13:::0;2921:29;:45:::1;:::i;:::-;;2390:594:::0;;;;359:12667;;599:98:3;679:10;;599:98::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:23;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1680:2;1665:18;;1659:25;1564:73;;-1:-1:-1;1659:25:23;-1:-1:-1;;;;;;1713:31:23;;1703:42;;1693:70;;1759:1;1756;1749:12;1693:70;1833:2;1818:18;;1812:25;1782:5;;-1:-1:-1;1849:16:23;;;1846:36;;;1878:1;1875;1868:12;1846:36;;1901:63;1956:7;1945:8;1934:9;1930:24;1901:63;:::i;:::-;1891:73;;;1036:934;;;;;;;:::o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;2486:545::-;2588:2;2583:3;2580:11;2577:448;;;2624:1;2649:5;2645:2;2638:17;2694:4;2690:2;2680:19;2764:2;2752:10;2748:19;2745:1;2741:27;2735:4;2731:38;2800:4;2788:10;2785:20;2782:47;;;-1:-1:-1;2823:4:23;2782:47;2878:2;2873:3;2869:12;2866:1;2862:20;2856:4;2852:31;2842:41;;2933:82;2951:2;2944:5;2941:13;2933:82;;;2996:17;;;2977:1;2966:13;2933:82;;;2937:3;;;2577:448;2486:545;;;:::o;3207:1352::-;3327:10;;-1:-1:-1;;;;;3349:30:23;;3346:56;;;3382:18;;:::i;:::-;3411:97;3501:6;3461:38;3493:4;3487:11;3461:38;:::i;:::-;3455:4;3411:97;:::i;:::-;3563:4;;3627:2;3616:14;;3644:1;3639:663;;;;4346:1;4363:6;4360:89;;;-1:-1:-1;4415:19:23;;;4409:26;4360:89;-1:-1:-1;;3164:1:23;3160:11;;;3156:24;3152:29;3142:40;3188:1;3184:11;;;3139:57;4462:81;;3609:944;;3639:663;2433:1;2426:14;;;2470:4;2457:18;;-1:-1:-1;;3675:20:23;;;3793:236;3807:7;3804:1;3801:14;3793:236;;;3896:19;;;3890:26;3875:42;;3988:27;;;;3956:1;3944:14;;;;3823:19;;3793:236;;;3797:3;4057:6;4048:7;4045:19;4042:201;;;4118:19;;;4112:26;-1:-1:-1;;4201:1:23;4197:14;;;4213:3;4193:24;4189:37;4185:42;4170:58;4155:74;;4042:201;-1:-1:-1;;;;;4289:1:23;4273:14;;;4269:22;4256:36;;-1:-1:-1;3207:1352:23:o;:::-;359:12667:22;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}