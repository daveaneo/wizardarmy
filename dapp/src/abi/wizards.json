{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_ERC20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "exilee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Exiled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "appointer",
          "type": "address"
        }
      ],
      "name": "NewAppointer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "culler",
          "type": "address"
        }
      ],
      "name": "NewCuller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_role",
          "type": "uint16"
        }
      ],
      "name": "appointRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "appointer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exileTimePenalty",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPhases",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maturityThreshold",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "cull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "culler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "exile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getRole",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getStatsGivenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "level",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "tokensClaimed",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "contributionKarma",
              "type": "uint128"
            },
            {
              "internalType": "uint16",
              "name": "role",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "uplineId",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "initiationTimestamp",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "protectedUntilTimestamp",
              "type": "uint40"
            },
            {
              "internalType": "enum Wizards.ELEMENT",
              "name": "element",
              "type": "uint8"
            }
          ],
          "internalType": "struct Wizards.Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getUplineId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "hasDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        },
        {
          "internalType": "uint40",
          "name": "_timeReward",
          "type": "uint40"
        }
      ],
      "name": "increaseProtectedUntilTimestamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isExiled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isMature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_uplineId",
          "type": "uint16"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maturityThreshold",
          "type": "uint256"
        }
      ],
      "name": "modifyContractSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "level",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "tokensClaimed",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "contributionKarma",
          "type": "uint128"
        },
        {
          "internalType": "uint16",
          "name": "role",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "uplineId",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "initiationTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "protectedUntilTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_appointer",
          "type": "address"
        }
      ],
      "name": "updateAppointer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_culler",
          "type": "address"
        }
      ],
      "name": "updateCuller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/helpers/ERC721.sol",
    "12": "contracts/helpers/ERC721Enumerable.sol",
    "13": "contracts/helpers/Ownable.sol",
    "17": "contracts/interfaces/IERC165.sol",
    "21": "contracts/interfaces/IERC721.sol",
    "22": "contracts/interfaces/IERC721Enumerable.sol",
    "23": "contracts/interfaces/IERC721Metadata.sol",
    "26": "contracts/libraries/Strings.sol",
    "28": "contracts/wizards.sol",
    "7": "contracts/helpers/Context.sol",
    "8": "contracts/helpers/ERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        9291
      ],
      "Context": [
        6765
      ],
      "ERC165": [
        6789
      ],
      "ERC721": [
        7692
      ],
      "ERC721Enumerable": [
        11007
      ],
      "IERC165": [
        8775
      ],
      "IERC721": [
        8964
      ],
      "IERC721Enumerable": [
        8995
      ],
      "IERC721Metadata": [
        12924
      ],
      "IERC721Receiver": [
        12942
      ],
      "Ownable": [
        6363
      ],
      "Strings": [
        9494
      ],
      "Wizards": [
        10668
      ]
    },
    "id": 10669,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9496,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:28"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 9497,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10669,
        "sourceUnit": 6364,
        "src": "94:31:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 9498,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10669,
        "sourceUnit": 11008,
        "src": "127:40:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 9499,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10669,
        "sourceUnit": 9495,
        "src": "169:33:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9500,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11007,
              "src": "379:16:28"
            },
            "id": 9501,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:28"
          },
          {
            "baseName": {
              "id": 9502,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6363,
              "src": "397:7:28"
            },
            "id": 9503,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:28"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10668,
        "linearizedBaseContracts": [
          10668,
          6363,
          11007,
          8995,
          7692,
          12924,
          8964,
          6789,
          8775,
          6765
        ],
        "name": "Wizards",
        "nameLocation": "368:7:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 9508,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "446:14:28",
            "nodeType": "VariableDeclaration",
            "scope": 10668,
            "src": "412:48:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 9507,
              "keyType": {
                "id": 9504,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "412:26:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 9506,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9505,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9539,
                  "src": "432:5:28"
                },
                "referencedDeclaration": 9539,
                "src": "432:5:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b7ac3f3",
            "id": 9510,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "482:8:28",
            "nodeType": "VariableDeclaration",
            "scope": 10668,
            "src": "467:23:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9509,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "467:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9511,
              "nodeType": "StructuredDocumentation",
              "src": "492:36:28",
              "text": "contract address to update stats"
            },
            "functionSelector": "ad275cbb",
            "id": 9513,
            "mutability": "mutable",
            "name": "culler",
            "nameLocation": "549:6:28",
            "nodeType": "VariableDeclaration",
            "scope": 10668,
            "src": "534:21:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9514,
              "nodeType": "StructuredDocumentation",
              "src": "557:40:28",
              "text": "contract address to exile any wizard"
            },
            "functionSelector": "c3cf52be",
            "id": 9516,
            "mutability": "mutable",
            "name": "appointer",
            "nameLocation": "618:9:28",
            "nodeType": "VariableDeclaration",
            "scope": 10668,
            "src": "603:24:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "603:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 9521,
            "members": [
              {
                "id": 9517,
                "name": "FIRE",
                "nameLocation": "687:4:28",
                "nodeType": "EnumValue",
                "src": "687:4:28"
              },
              {
                "id": 9518,
                "name": "WIND",
                "nameLocation": "693:4:28",
                "nodeType": "EnumValue",
                "src": "693:4:28"
              },
              {
                "id": 9519,
                "name": "WATER",
                "nameLocation": "699:5:28",
                "nodeType": "EnumValue",
                "src": "699:5:28"
              },
              {
                "id": 9520,
                "name": "EARTH",
                "nameLocation": "706:5:28",
                "nodeType": "EnumValue",
                "src": "706:5:28"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "678:7:28",
            "nodeType": "EnumDefinition",
            "src": "673:39:28"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 9539,
            "members": [
              {
                "constant": false,
                "id": 9523,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "830:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "822:13:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 9522,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "822:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9525,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "854:13:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "846:21:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 9524,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "846:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9527,
                "mutability": "mutable",
                "name": "contributionKarma",
                "nameLocation": "895:17:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "887:25:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 9526,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "887:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9529,
                "mutability": "mutable",
                "name": "role",
                "nameLocation": "939:4:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "932:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 9528,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "932:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9531,
                "mutability": "mutable",
                "name": "uplineId",
                "nameLocation": "1007:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "1000:15:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 9530,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9533,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1060:19:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "1053:26:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 9532,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1053:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9535,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1117:23:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "1110:30:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 9534,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1110:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9538,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1203:7:28",
                "nodeType": "VariableDeclaration",
                "scope": 9539,
                "src": "1195:15:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$9521",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 9537,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9536,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9521,
                    "src": "1195:7:28"
                  },
                  "referencedDeclaration": 9521,
                  "src": "1195:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$9521",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "775:5:28",
            "nodeType": "StructDefinition",
            "scope": 10668,
            "src": "768:450:28",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 9560,
            "members": [
              {
                "constant": false,
                "id": 9541,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1299:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1291:16:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9540,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1291:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9543,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1326:14:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1318:22:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9542,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9545,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1445:9:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1437:17:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9544,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1437:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9547,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1473:23:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1465:31:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9546,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1465:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9549,
                "mutability": "mutable",
                "name": "exileTimePenalty",
                "nameLocation": "1515:16:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1507:24:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9548,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9551,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1550:21:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1542:29:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9550,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1542:7:28",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9553,
                "mutability": "mutable",
                "name": "phaseDuration",
                "nameLocation": "1590:13:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1582:21:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9552,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1582:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9555,
                "mutability": "mutable",
                "name": "totalPhases",
                "nameLocation": "1622:11:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1614:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9554,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1614:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9557,
                "mutability": "mutable",
                "name": "maturityThreshold",
                "nameLocation": "1652:17:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1644:25:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9556,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1644:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9559,
                "mutability": "mutable",
                "name": "imageBaseURI",
                "nameLocation": "1735:12:28",
                "nodeType": "VariableDeclaration",
                "scope": 9560,
                "src": "1728:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9558,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1728:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1233:16:28",
            "nodeType": "StructDefinition",
            "scope": 10668,
            "src": "1226:529:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 9563,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1787:16:28",
            "nodeType": "VariableDeclaration",
            "scope": 10668,
            "src": "1763:40:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 9562,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9561,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9560,
                "src": "1763:16:28"
              },
              "referencedDeclaration": 9560,
              "src": "1763:16:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$9560_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5",
            "id": 9567,
            "name": "NewVerifier",
            "nameLocation": "1879:11:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9565,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1899:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9567,
                  "src": "1891:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:18:28"
            },
            "src": "1873:36:28"
          },
          {
            "anonymous": false,
            "eventSelector": "98543b1b9bbf23b0ca565be0f1a833222e982f36322287bf2e001b1227473afe",
            "id": 9571,
            "name": "NewCuller",
            "nameLocation": "1921:9:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9569,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "culler",
                  "nameLocation": "1939:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9571,
                  "src": "1931:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1930:16:28"
            },
            "src": "1915:32:28"
          },
          {
            "anonymous": false,
            "eventSelector": "35829bf1dc2d1c476529eca85a3ba530615d11b4a5255ff7b730b4e1153e92c0",
            "id": 9575,
            "name": "NewAppointer",
            "nameLocation": "1959:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9573,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "appointer",
                  "nameLocation": "1980:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9575,
                  "src": "1972:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1971:19:28"
            },
            "src": "1953:38:28"
          },
          {
            "anonymous": false,
            "eventSelector": "1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7",
            "id": 9583,
            "name": "Initiated",
            "nameLocation": "2003:9:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9577,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "2021:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9583,
                  "src": "2013:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9579,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "2048:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9583,
                  "src": "2032:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9581,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2066:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9583,
                  "src": "2058:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2012:64:28"
            },
            "src": "1997:80:28"
          },
          {
            "anonymous": false,
            "eventSelector": "1e4222a1a41116c1e56339c51578b511f8211120c25d6503d763540dfd06e950",
            "id": 9591,
            "name": "Exiled",
            "nameLocation": "2089:6:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exilee",
                  "nameLocation": "2104:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9591,
                  "src": "2096:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9587,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "2128:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9591,
                  "src": "2112:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2146:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9591,
                  "src": "2138:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:61:28"
            },
            "src": "2083:74:28"
          },
          {
            "body": {
              "id": 9619,
              "nodeType": "Block",
              "src": "2466:173:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9600,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9594,
                            "src": "2485:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2496:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2485:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9603,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9594,
                            "src": "2501:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9604,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "2514:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2514:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2501:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2485:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2529:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2477:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9610,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:69:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 9611,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "2564:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 9613,
                        "indexExpression": {
                          "id": 9612,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9594,
                          "src": "2579:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2564:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 9614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9535,
                      "src": "2564:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 9615,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2616:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2616:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2564:67:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9598,
                  "id": 9618,
                  "nodeType": "Return",
                  "src": "2557:74:28"
                }
              ]
            },
            "documentation": {
              "id": 9592,
              "nodeType": "StructuredDocumentation",
              "src": "2262:135:28",
              "text": "@dev Check if wizard is active\n @param _wizardId id of wizard.\n @return true if active, false if inactive"
            },
            "functionSelector": "82afd23b",
            "id": 9620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "2412:8:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9594,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2429:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9620,
                  "src": "2421:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2420:19:28"
            },
            "returnParameters": {
              "id": 9598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9620,
                  "src": "2460:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:6:28"
            },
            "scope": 10668,
            "src": "2403:236:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9654,
              "nodeType": "Block",
              "src": "2884:213:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9629,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9623,
                            "src": "2903:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2914:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2903:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9632,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9623,
                            "src": "2919:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9633,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "2932:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2932:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2919:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2903:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2895:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9639,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:69:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      },
                      "id": 9645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9640,
                            "name": "tokenIdToStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "2982:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                              "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                            }
                          },
                          "id": 9642,
                          "indexExpression": {
                            "id": 9641,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9623,
                            "src": "2997:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2982:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$9539_storage",
                            "typeString": "struct Wizards.Stats storage ref"
                          }
                        },
                        "id": 9643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectedUntilTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9535,
                        "src": "2982:49:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3035:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2982:54:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      },
                      "id": 9651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9646,
                            "name": "tokenIdToStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "3040:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                              "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                            }
                          },
                          "id": 9648,
                          "indexExpression": {
                            "id": 9647,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9623,
                            "src": "3055:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3040:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$9539_storage",
                            "typeString": "struct Wizards.Stats storage ref"
                          }
                        },
                        "id": 9649,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initiationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9533,
                        "src": "3040:45:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3088:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3040:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2982:107:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9627,
                  "id": 9653,
                  "nodeType": "Return",
                  "src": "2975:114:28"
                }
              ]
            },
            "documentation": {
              "id": 9621,
              "nodeType": "StructuredDocumentation",
              "src": "2649:166:28",
              "text": "@dev check if wizard has been exiled (temporarily banished)\n @param _wizardId id of wizard.\n @return true -> exiled; false -> not exiled"
            },
            "functionSelector": "e833bf63",
            "id": 9655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExiled",
            "nameLocation": "2830:8:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9623,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2847:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "2839:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2838:19:28"
            },
            "returnParameters": {
              "id": 9627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9655,
                  "src": "2878:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9625,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2878:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2877:6:28"
            },
            "scope": 10668,
            "src": "2821:276:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9690,
              "nodeType": "Block",
              "src": "3348:226:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9664,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9658,
                            "src": "3367:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3378:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3367:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9667,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9658,
                            "src": "3383:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9668,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "3396:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3396:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3383:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3367:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3411:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3359:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9674,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:69:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9675,
                            "name": "tokenIdToStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "3446:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                              "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                            }
                          },
                          "id": 9677,
                          "indexExpression": {
                            "id": 9676,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9658,
                            "src": "3461:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3446:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$9539_storage",
                            "typeString": "struct Wizards.Stats storage ref"
                          }
                        },
                        "id": 9678,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectedUntilTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9535,
                        "src": "3446:49:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 9679,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3498:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 9680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3498:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3446:67:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      },
                      "id": 9687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 9682,
                            "name": "tokenIdToStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9508,
                            "src": "3517:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                              "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                            }
                          },
                          "id": 9684,
                          "indexExpression": {
                            "id": 9683,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9658,
                            "src": "3532:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3517:25:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$9539_storage",
                            "typeString": "struct Wizards.Stats storage ref"
                          }
                        },
                        "id": 9685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initiationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9533,
                        "src": "3517:45:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 9686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3517:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3446:120:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9662,
                  "id": 9689,
                  "nodeType": "Return",
                  "src": "3439:127:28"
                }
              ]
            },
            "documentation": {
              "id": 9656,
              "nodeType": "StructuredDocumentation",
              "src": "3105:171:28",
              "text": "@dev check if wizard has deserted and thus can be exiled\n @param _wizardId id of wizard.\n @return true -> deserted; false -> has not deserted"
            },
            "functionSelector": "8da5179a",
            "id": 9691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasDeserted",
            "nameLocation": "3291:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9658,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "3311:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9691,
                  "src": "3303:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:19:28"
            },
            "returnParameters": {
              "id": 9662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9691,
                  "src": "3342:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3342:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3341:6:28"
            },
            "scope": 10668,
            "src": "3282:292:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9718,
              "nodeType": "Block",
              "src": "3788:165:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9700,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9694,
                            "src": "3807:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3818:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3807:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9703,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9694,
                            "src": "3823:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9704,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "3836:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3836:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3823:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3807:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3851:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3799:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3799:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9710,
                  "nodeType": "ExpressionStatement",
                  "src": "3799:69:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 9712,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9694,
                          "src": "3897:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9711,
                        "name": "getPhaseOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9856,
                        "src": "3886:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 9713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3886:21:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 9714,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "3911:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9715,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "maturityThreshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9557,
                      "src": "3911:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3886:59:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9698,
                  "id": 9717,
                  "nodeType": "Return",
                  "src": "3879:66:28"
                }
              ]
            },
            "documentation": {
              "id": 9692,
              "nodeType": "StructuredDocumentation",
              "src": "3584:135:28",
              "text": "@dev Check if wizard is active\n @param _wizardId id of wizard.\n @return true if active, false if inactive"
            },
            "functionSelector": "3e55e63d",
            "id": 9719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMature",
            "nameLocation": "3734:8:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9694,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "3751:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9719,
                  "src": "3743:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3742:19:28"
            },
            "returnParameters": {
              "id": 9698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9697,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9719,
                  "src": "3782:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9696,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3782:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3781:6:28"
            },
            "scope": 10668,
            "src": "3725:228:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9744,
              "nodeType": "Block",
              "src": "4158:140:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9728,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9722,
                            "src": "4177:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4188:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4177:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9731,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9722,
                            "src": "4193:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9732,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "4206:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4206:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4193:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4177:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4221:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4169:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9738,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:69:28"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 9739,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9508,
                        "src": "4256:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 9741,
                      "indexExpression": {
                        "id": 9740,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9722,
                        "src": "4271:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4256:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "id": 9742,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "uplineId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9531,
                    "src": "4256:34:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 9726,
                  "id": 9743,
                  "nodeType": "Return",
                  "src": "4249:41:28"
                }
              ]
            },
            "documentation": {
              "id": 9720,
              "nodeType": "StructuredDocumentation",
              "src": "3963:120:28",
              "text": "@dev Check if wizard is active\n @param _wizardId id of wizard.\n @return wizardId of upline"
            },
            "functionSelector": "8b8555d6",
            "id": 9745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUplineId",
            "nameLocation": "4098:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9722,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "4118:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "4110:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4110:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4109:19:28"
            },
            "returnParameters": {
              "id": 9726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "4149:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4148:9:28"
            },
            "scope": 10668,
            "src": "4089:209:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9769,
              "nodeType": "Block",
              "src": "4371:136:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9753,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9747,
                            "src": "4390:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4401:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4390:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9756,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9747,
                            "src": "4406:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9757,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "4419:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4419:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4406:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4390:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4382:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9763,
                  "nodeType": "ExpressionStatement",
                  "src": "4382:69:28"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 9764,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9508,
                        "src": "4469:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 9766,
                      "indexExpression": {
                        "id": 9765,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9747,
                        "src": "4484:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4469:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "id": 9767,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "role",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9529,
                    "src": "4469:30:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 9751,
                  "id": 9768,
                  "nodeType": "Return",
                  "src": "4462:37:28"
                }
              ]
            },
            "functionSelector": "5312fdc2",
            "id": 9770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRole",
            "nameLocation": "4315:7:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9747,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "4331:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9770,
                  "src": "4323:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4323:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4322:19:28"
            },
            "returnParameters": {
              "id": 9751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9770,
                  "src": "4362:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4362:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4361:9:28"
            },
            "scope": 10668,
            "src": "4306:201:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9795,
              "nodeType": "Block",
              "src": "4749:131:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9780,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9773,
                            "src": "4768:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4779:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4768:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9783,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9773,
                            "src": "4784:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9784,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "4797:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4797:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4784:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4768:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4812:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4760:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4760:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9790,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:69:28"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 9791,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9508,
                      "src": "4847:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 9793,
                    "indexExpression": {
                      "id": 9792,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9773,
                      "src": "4862:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4847:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "functionReturnParameters": 9778,
                  "id": 9794,
                  "nodeType": "Return",
                  "src": "4840:32:28"
                }
              ]
            },
            "documentation": {
              "id": 9771,
              "nodeType": "StructuredDocumentation",
              "src": "4517:146:28",
              "text": "@dev returns stats of wizard, potentially amplified by level or phase\n @param _wizardId id of wizard.\n @return stats"
            },
            "functionSelector": "8cb22518",
            "id": 9796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatsGivenId",
            "nameLocation": "4678:15:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9773,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "4702:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9796,
                  "src": "4694:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4694:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4693:19:28"
            },
            "returnParameters": {
              "id": 9778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9796,
                  "src": "4735:12:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                    "typeString": "struct Wizards.Stats"
                  },
                  "typeName": {
                    "id": 9776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9775,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9539,
                      "src": "4735:5:28"
                    },
                    "referencedDeclaration": 9539,
                    "src": "4735:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                      "typeString": "struct Wizards.Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4734:14:28"
            },
            "scope": 10668,
            "src": "4669:211:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9855,
              "nodeType": "Block",
              "src": "5089:445:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9805,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9799,
                            "src": "5108:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 9806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5119:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5108:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9808,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9799,
                            "src": "5124:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9809,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "5137:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5137:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5124:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5108:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 9813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5152:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 9804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5100:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9815,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:69:28"
                },
                {
                  "assignments": [
                    9817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9817,
                      "mutability": "mutable",
                      "name": "phase",
                      "nameLocation": "5188:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 9855,
                      "src": "5180:13:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9816,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5180:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9852,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 9818,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5208:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 9819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5208:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 9820,
                                    "name": "tokenIdToStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9508,
                                    "src": "5226:14:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                                      "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                    }
                                  },
                                  "id": 9822,
                                  "indexExpression": {
                                    "id": 9821,
                                    "name": "_wizardId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9799,
                                    "src": "5241:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5226:25:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$9539_storage",
                                    "typeString": "struct Wizards.Stats storage ref"
                                  }
                                },
                                "id": 9823,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiationTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9533,
                                "src": "5226:45:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "src": "5208:63:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 9825,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5207:65:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 9826,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9563,
                            "src": "5275:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 9827,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phaseDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9553,
                          "src": "5275:30:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5207:98:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9829,
                                "name": "contractSettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9563,
                                "src": "5320:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                                  "typeString": "struct Wizards.ContractSettings storage ref"
                                }
                              },
                              "id": 9830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalPhases",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9555,
                              "src": "5320:28:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 9831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5351:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5320:32:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 9833,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5319:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5207:146:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 9840,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5394:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 9841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5394:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 9842,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9508,
                                  "src": "5412:14:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 9844,
                                "indexExpression": {
                                  "id": 9843,
                                  "name": "_wizardId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9799,
                                  "src": "5427:9:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5412:25:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$9539_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 9845,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiationTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9533,
                              "src": "5412:45:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "5394:63:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 9847,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5393:65:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 9848,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9563,
                          "src": "5461:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 9849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "phaseDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9553,
                        "src": "5461:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5393:98:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5207:284:28",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9835,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9563,
                              "src": "5357:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 9836,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalPhases",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9555,
                            "src": "5357:28:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 9837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5388:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5357:32:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 9839,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5356:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5180:311:28"
                },
                {
                  "expression": {
                    "id": 9853,
                    "name": "phase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9817,
                    "src": "5521:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9803,
                  "id": 9854,
                  "nodeType": "Return",
                  "src": "5514:12:28"
                }
              ]
            },
            "documentation": {
              "id": 9797,
              "nodeType": "StructuredDocumentation",
              "src": "4890:125:28",
              "text": "@dev Returns phase of wizard\n @param _wizardId id of wizard.\n @return number representing phase"
            },
            "functionSelector": "05106353",
            "id": 9856,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "5030:10:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9799,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "5049:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "5041:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5041:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5040:19:28"
            },
            "returnParameters": {
              "id": 9803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "5080:7:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:9:28"
            },
            "scope": 10668,
            "src": "5021:513:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9943,
              "nodeType": "Block",
              "src": "6016:683:28",
              "statements": [
                {
                  "expression": {
                    "id": 9876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9872,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6027:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9874,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9545,
                      "src": "6027:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 9875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6056:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "6027:34:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9877,
                  "nodeType": "ExpressionStatement",
                  "src": "6027:34:28"
                },
                {
                  "expression": {
                    "id": 9882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9878,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6072:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9880,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9543,
                      "src": "6072:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6106:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6072:35:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9883,
                  "nodeType": "ExpressionStatement",
                  "src": "6072:35:28"
                },
                {
                  "expression": {
                    "id": 9888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9884,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6118:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9886,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9541,
                      "src": "6118:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 9887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6146:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "6118:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9889,
                  "nodeType": "ExpressionStatement",
                  "src": "6118:29:28"
                },
                {
                  "expression": {
                    "id": 9894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9890,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6186:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9547,
                      "src": "6186:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6229:6:28",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "6186:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9895,
                  "nodeType": "ExpressionStatement",
                  "src": "6186:49:28"
                },
                {
                  "expression": {
                    "id": 9900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9896,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6274:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9551,
                      "src": "6274:38:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9899,
                      "name": "_ERC20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9863,
                      "src": "6315:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6274:54:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9901,
                  "nodeType": "ExpressionStatement",
                  "src": "6274:54:28"
                },
                {
                  "expression": {
                    "id": 9908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9902,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6367:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9553,
                      "src": "6367:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "id": 9907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3630",
                        "id": 9905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6400:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 9906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6403:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "6400:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      }
                    },
                    "src": "6367:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9909,
                  "nodeType": "ExpressionStatement",
                  "src": "6367:38:28"
                },
                {
                  "expression": {
                    "id": 9914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9910,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6426:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "imageBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9559,
                      "src": "6426:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9913,
                      "name": "_imageBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9865,
                      "src": "6458:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6426:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 9915,
                  "nodeType": "ExpressionStatement",
                  "src": "6426:45:28"
                },
                {
                  "expression": {
                    "id": 9920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9916,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6492:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9918,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalPhases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9555,
                      "src": "6492:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38",
                      "id": 9919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6523:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "6492:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9921,
                  "nodeType": "ExpressionStatement",
                  "src": "6492:32:28"
                },
                {
                  "expression": {
                    "id": 9926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9922,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "6535:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 9924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maturityThreshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9557,
                      "src": "6535:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 9925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6572:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6535:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9927,
                  "nodeType": "ExpressionStatement",
                  "src": "6535:38:28"
                },
                {
                  "expression": {
                    "id": 9931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9928,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9510,
                      "src": "6605:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9929,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6616:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6616:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6605:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9932,
                  "nodeType": "ExpressionStatement",
                  "src": "6605:21:28"
                },
                {
                  "expression": {
                    "id": 9936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9933,
                      "name": "culler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9513,
                      "src": "6637:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9934,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6646:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6646:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6637:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9937,
                  "nodeType": "ExpressionStatement",
                  "src": "6637:19:28"
                },
                {
                  "expression": {
                    "id": 9941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9938,
                      "name": "appointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9516,
                      "src": "6667:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9939,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6679:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6679:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6667:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9942,
                  "nodeType": "ExpressionStatement",
                  "src": "6667:22:28"
                }
              ]
            },
            "documentation": {
              "id": 9857,
              "nodeType": "StructuredDocumentation",
              "src": "5643:236:28",
              "text": "@dev initiate Wizards NFT\n @param _name name of NFT\n @param _symbol symbol for NFT\n @param _ERC20Address address for ecosystem token (currency)\n @param _imageBaseURI base URI used for images"
            },
            "id": 9944,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9868,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9859,
                    "src": "6000:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 9869,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9861,
                    "src": "6007:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 9870,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9867,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7692,
                  "src": "5993:6:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "5993:22:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9859,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5911:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9944,
                  "src": "5897:19:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9858,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5897:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9861,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "5932:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9944,
                  "src": "5918:21:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9860,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5918:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9863,
                  "mutability": "mutable",
                  "name": "_ERC20Address",
                  "nameLocation": "5949:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9944,
                  "src": "5941:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5941:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9865,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "5978:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9944,
                  "src": "5964:27:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5964:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5896:96:28"
            },
            "returnParameters": {
              "id": 9871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6016:0:28"
            },
            "scope": 10668,
            "src": "5885:814:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10030,
              "nodeType": "Block",
              "src": "6897:566:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9951,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10758,
                            "src": "6916:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 9952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6916:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 9953,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9563,
                            "src": "6932:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 9954,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9545,
                          "src": "6932:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6916:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 9956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6960:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 9950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6908:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6908:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9958,
                  "nodeType": "ExpressionStatement",
                  "src": "6908:69:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9960,
                          "name": "_uplineId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9947,
                          "src": "6996:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9961,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10758,
                            "src": "7009:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 9962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7009:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6996:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642075706c696e652d2d6d757374206265206c657373207468616e20746f74616c20737570706c79",
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7024:48:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c78a64b162d019a7792e8821b05f2f35ed59f636209908d69ba63492409a99b0",
                          "typeString": "literal_string \"invalid upline--must be less than total supply\""
                        },
                        "value": "invalid upline--must be less than total supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c78a64b162d019a7792e8821b05f2f35ed59f636209908d69ba63492409a99b0",
                          "typeString": "literal_string \"invalid upline--must be less than total supply\""
                        }
                      ],
                      "id": 9959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6988:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6988:85:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "6988:85:28"
                },
                {
                  "assignments": [
                    9968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9968,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "7094:13:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10030,
                      "src": "7086:21:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9967,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7086:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9983,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 9974,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10758,
                                  "src": "7145:11:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 9975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7145:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 9976,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7160:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 9977,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7160:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 9978,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7172:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 9979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7172:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9972,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7128:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 9973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "7128:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 9980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7128:60:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 9971,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7118:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 9981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7118:71:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 9970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7110:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 9969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7110:7:28",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 9982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7110:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7086:104:28"
                },
                {
                  "assignments": [
                    9986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9986,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "7209:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10030,
                      "src": "7201:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$9521",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 9985,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9984,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9521,
                          "src": "7201:7:28"
                        },
                        "referencedDeclaration": 9521,
                        "src": "7201:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$9521",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9997,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 9990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9988,
                                  "name": "pseudoRandNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9968,
                                  "src": "7228:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 9989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7242:2:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "7228:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 9991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7245:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "7228:18:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 9993,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7227:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 9994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7250:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "7227:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9987,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9521,
                      "src": "7219:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$9521_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 9996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7219:33:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$9521",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7201:51:28"
                },
                {
                  "assignments": [
                    10000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10000,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "7278:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10030,
                      "src": "7265:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 9999,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9998,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9539,
                          "src": "7265:5:28"
                        },
                        "referencedDeclaration": 9539,
                        "src": "7265:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10011,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 10002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7295:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 10003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7298:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 10004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7301:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 10005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7304:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 10006,
                        "name": "_uplineId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9947,
                        "src": "7307:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 10007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7318:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 10008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7321:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 10009,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9986,
                        "src": "7324:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$9521",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$9521",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 10001,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9539,
                      "src": "7289:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$9539_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 10010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7289:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7265:67:28"
                },
                {
                  "expression": {
                    "id": 10019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10012,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9508,
                        "src": "7343:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 10017,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10013,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10758,
                            "src": "7358:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7358:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 10015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7372:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7358:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7343:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10018,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10000,
                      "src": "7377:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "7343:41:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 10020,
                  "nodeType": "ExpressionStatement",
                  "src": "7343:41:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7405:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7405:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10024,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10758,
                            "src": "7417:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7417:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 10026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7431:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7417:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10021,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7386,
                        7415
                      ],
                      "referencedDeclaration": 7386,
                      "src": "7395:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7395:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10029,
                  "nodeType": "ExpressionStatement",
                  "src": "7395:39:28"
                }
              ]
            },
            "documentation": {
              "id": 9945,
              "nodeType": "StructuredDocumentation",
              "src": "6709:141:28",
              "text": "@dev check if wizard has deserted and thus can be exiled\n @param _uplineId id of referring wizard. use 0 if no referral"
            },
            "functionSelector": "23cf0a22",
            "id": 10031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "6865:4:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9947,
                  "mutability": "mutable",
                  "name": "_uplineId",
                  "nameLocation": "6877:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10031,
                  "src": "6870:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 9946,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6869:18:28"
            },
            "returnParameters": {
              "id": 9949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6897:0:28"
            },
            "scope": 10668,
            "src": "6856:607:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10118,
              "nodeType": "Block",
              "src": "7642:765:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10039,
                              "name": "_wizardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10034,
                              "src": "7669:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10038,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7020,
                            "src": "7661:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 10040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7661:18:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10041,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7683:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7683:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7661:32:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 10044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7695:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 10037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7653:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:58:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10046,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:58:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        "id": 10053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 10048,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9508,
                              "src": "7730:14:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 10050,
                            "indexExpression": {
                              "id": 10049,
                              "name": "_wizardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10034,
                              "src": "7745:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7730:25:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$9539_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 10051,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9533,
                          "src": "7730:45:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7779:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7730:50:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 10054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7782:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 10047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7722:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7722:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10056,
                  "nodeType": "ExpressionStatement",
                  "src": "7722:80:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 10058,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9508,
                                "src": "7821:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 10060,
                              "indexExpression": {
                                "id": 10059,
                                "name": "_wizardId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10034,
                                "src": "7836:9:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7821:25:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$9539_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 10061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "protectedUntilTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9535,
                            "src": "7821:49:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 10062,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9563,
                              "src": "7873:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exileTimePenalty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9549,
                            "src": "7873:33:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7821:85:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 10065,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7910:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7910:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7821:104:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4578696c65642077697a617264206e6f742079657420616c6c6f77656420746f2072657475726e2e",
                        "id": 10068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7927:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef449e85d3c2df013a9da0661309aabac6fa52999e9823f94ace76fb4d2edf49",
                          "typeString": "literal_string \"Exiled wizard not yet allowed to return.\""
                        },
                        "value": "Exiled wizard not yet allowed to return."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef449e85d3c2df013a9da0661309aabac6fa52999e9823f94ace76fb4d2edf49",
                          "typeString": "literal_string \"Exiled wizard not yet allowed to return.\""
                        }
                      ],
                      "id": 10057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7813:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7813:157:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10070,
                  "nodeType": "ExpressionStatement",
                  "src": "7813:157:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10072,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8023:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8023:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10074,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9563,
                            "src": "8036:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 10075,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationCost",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9543,
                          "src": "8036:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8023:44:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f727265637420696e69746961746f6e20666565",
                        "id": 10077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8069:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c04703cddae98961a830f44f120826f3276437432093d9147faca069242e5697",
                          "typeString": "literal_string \"incorrect initiaton fee\""
                        },
                        "value": "incorrect initiaton fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c04703cddae98961a830f44f120826f3276437432093d9147faca069242e5697",
                          "typeString": "literal_string \"incorrect initiaton fee\""
                        }
                      ],
                      "id": 10071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8015:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8015:80:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10079,
                  "nodeType": "ExpressionStatement",
                  "src": "8015:80:28"
                },
                {
                  "assignments": [
                    10082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10082,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "8122:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10118,
                      "src": "8108:21:28",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 10081,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10080,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9539,
                          "src": "8108:5:28"
                        },
                        "referencedDeclaration": 9539,
                        "src": "8108:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10086,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10083,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9508,
                      "src": "8132:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 10085,
                    "indexExpression": {
                      "id": 10084,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "8147:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8132:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8108:49:28"
                },
                {
                  "expression": {
                    "id": 10095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10087,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10082,
                        "src": "8168:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 10089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9533,
                      "src": "8168:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10092,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8205:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8205:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8198:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint40_$",
                          "typeString": "type(uint40)"
                        },
                        "typeName": {
                          "id": 10090,
                          "name": "uint40",
                          "nodeType": "ElementaryTypeName",
                          "src": "8198:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8198:23:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8168:53:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 10096,
                  "nodeType": "ExpressionStatement",
                  "src": "8168:53:28"
                },
                {
                  "expression": {
                    "id": 10108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10097,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10082,
                        "src": "8232:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 10099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9535,
                      "src": "8232:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10102,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8273:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 10103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8273:15:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 10104,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9563,
                              "src": "8291:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 10105,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "protectionTimeExtension",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9547,
                            "src": "8291:40:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8273:58:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8266:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint40_$",
                          "typeString": "type(uint40)"
                        },
                        "typeName": {
                          "id": 10100,
                          "name": "uint40",
                          "nodeType": "ElementaryTypeName",
                          "src": "8266:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8266:66:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "8232:100:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 10109,
                  "nodeType": "ExpressionStatement",
                  "src": "8232:100:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10111,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8360:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8360:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10113,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10034,
                        "src": "8372:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10114,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8383:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 10115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "8383:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10110,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9583,
                      "src": "8350:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 10116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8350:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10117,
                  "nodeType": "EmitStatement",
                  "src": "8345:54:28"
                }
              ]
            },
            "documentation": {
              "id": 10032,
              "nodeType": "StructuredDocumentation",
              "src": "7473:109:28",
              "text": "@dev Changes NFT from uninitated or exiled to initiated\n @param _wizardId id of wizard."
            },
            "functionSelector": "7901ea78",
            "id": 10119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "7597:8:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10034,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "7614:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10119,
                  "src": "7606:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7606:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7605:19:28"
            },
            "returnParameters": {
              "id": 10036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7642:0:28"
            },
            "scope": 10668,
            "src": "7588:819:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10131,
              "nodeType": "Block",
              "src": "8598:36:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10128,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10122,
                        "src": "8616:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10127,
                      "name": "_exile",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10187,
                      "src": "8609:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8609:17:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10130,
                  "nodeType": "ExpressionStatement",
                  "src": "8609:17:28"
                }
              ]
            },
            "documentation": {
              "id": 10120,
              "nodeType": "StructuredDocumentation",
              "src": "8417:122:28",
              "text": "@dev exile an NFT that is negligent in duties. Use only for culling.\n @param _wizardId id of wizard."
            },
            "functionSelector": "690c8e18",
            "id": 10132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10124,
                  "name": "onlyCuller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10574,
                  "src": "8587:10:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "8587:10:28"
              }
            ],
            "name": "cull",
            "nameLocation": "8554:4:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10122,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "8567:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10132,
                  "src": "8559:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8559:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8558:19:28"
            },
            "returnParameters": {
              "id": 10126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8598:0:28"
            },
            "scope": 10668,
            "src": "8545:89:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10149,
              "nodeType": "Block",
              "src": "8848:107:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10140,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10135,
                            "src": "8879:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10139,
                          "name": "hasDeserted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9691,
                          "src": "8867:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8867:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697a6172642063616e206e6f74206265206578696c65642e",
                        "id": 10142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8891:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a50914d50a4dfbae734450bafe5d3d81e7b5a2cabd4f4adef9e424eb983c0bb",
                          "typeString": "literal_string \"wizard can not be exiled.\""
                        },
                        "value": "wizard can not be exiled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a50914d50a4dfbae734450bafe5d3d81e7b5a2cabd4f4adef9e424eb983c0bb",
                          "typeString": "literal_string \"wizard can not be exiled.\""
                        }
                      ],
                      "id": 10138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8859:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8859:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10144,
                  "nodeType": "ExpressionStatement",
                  "src": "8859:60:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10146,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10135,
                        "src": "8937:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10145,
                      "name": "_exile",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10187,
                      "src": "8930:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 10147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8930:17:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10148,
                  "nodeType": "ExpressionStatement",
                  "src": "8930:17:28"
                }
              ]
            },
            "documentation": {
              "id": 10133,
              "nodeType": "StructuredDocumentation",
              "src": "8642:157:28",
              "text": "@dev exile an NFT that is negligent in duties. Any address can call this, but wizard must have deserted\n @param _wizardId id of wizard."
            },
            "functionSelector": "40ebcb8e",
            "id": 10150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exile",
            "nameLocation": "8814:5:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10135,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "8828:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10150,
                  "src": "8820:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8820:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8819:19:28"
            },
            "returnParameters": {
              "id": 10137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8848:0:28"
            },
            "scope": 10668,
            "src": "8805:150:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10186,
              "nodeType": "Block",
              "src": "9169:315:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10157,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10153,
                            "src": "9188:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9199:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9188:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10160,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10153,
                            "src": "9204:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10161,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "9217:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9217:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9204:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9188:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206964",
                        "id": 10165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9232:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        },
                        "value": "invalid id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        }
                      ],
                      "id": 10156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9180:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9180:65:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10167,
                  "nodeType": "ExpressionStatement",
                  "src": "9180:65:28"
                },
                {
                  "expression": {
                    "id": 10177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10168,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "9301:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 10170,
                        "indexExpression": {
                          "id": 10169,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10153,
                          "src": "9316:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9301:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 10171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9535,
                      "src": "9301:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 10174,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9360:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9360:15:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9353:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint40_$",
                          "typeString": "type(uint40)"
                        },
                        "typeName": {
                          "id": 10172,
                          "name": "uint40",
                          "nodeType": "ElementaryTypeName",
                          "src": "9353:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9353:23:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "9301:75:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 10178,
                  "nodeType": "ExpressionStatement",
                  "src": "9301:75:28"
                },
                {
                  "expression": {
                    "id": 10184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10179,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "9427:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 10181,
                        "indexExpression": {
                          "id": 10180,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10153,
                          "src": "9442:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9427:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 10182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9533,
                      "src": "9427:45:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 10183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9475:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9427:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 10185,
                  "nodeType": "ExpressionStatement",
                  "src": "9427:49:28"
                }
              ]
            },
            "documentation": {
              "id": 10151,
              "nodeType": "StructuredDocumentation",
              "src": "8963:156:28",
              "text": "@dev exile an NFT that is negligent in duties. Never called by address directly, only by cull or exile\n @param _wizardId id of wizard."
            },
            "id": 10187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exile",
            "nameLocation": "9134:6:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10153,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "9149:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10187,
                  "src": "9141:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9141:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9140:19:28"
            },
            "returnParameters": {
              "id": 10155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9169:0:28"
            },
            "scope": 10668,
            "src": "9125:359:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              7082
            ],
            "body": {
              "id": 10265,
              "nodeType": "Block",
              "src": "9886:932:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10198,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10190,
                            "src": "9913:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10197,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7330,
                          "src": "9905:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 10199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9905:18:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 10200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9925:49:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 10196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9897:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9897:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10202,
                  "nodeType": "ExpressionStatement",
                  "src": "9897:78:28"
                },
                {
                  "assignments": [
                    10204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10204,
                      "mutability": "mutable",
                      "name": "linkExtension",
                      "nameLocation": "10033:13:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10265,
                      "src": "10019:27:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10203,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10019:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10205,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10019:27:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    },
                    "id": 10211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 10206,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "10060:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 10208,
                        "indexExpression": {
                          "id": 10207,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10190,
                          "src": "10075:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10060:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 10209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9533,
                      "src": "10060:45:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10107:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10060:48:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 10218,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10190,
                          "src": "10247:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 10217,
                        "name": "isExiled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9655,
                        "src": "10238:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 10219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10238:19:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "id": 10228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10381:20:28",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 10226,
                              "name": "_wizardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10190,
                              "src": "10391:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10225,
                            "name": "isActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9620,
                            "src": "10382:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 10227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10382:19:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 10243,
                        "nodeType": "Block",
                        "src": "10524:120:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 10241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 10234,
                                "name": "linkExtension",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10204,
                                "src": "10577:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 10238,
                                        "name": "_wizardId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10190,
                                        "src": "10621:9:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 10237,
                                      "name": "getPhaseOf",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9856,
                                      "src": "10610:10:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) view returns (uint256)"
                                      }
                                    },
                                    "id": 10239,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10610:21:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10235,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9494,
                                    "src": "10593:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 10236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9376,
                                  "src": "10593:16:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 10240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10593:39:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "src": "10577:55:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "id": 10242,
                            "nodeType": "ExpressionStatement",
                            "src": "10577:55:28"
                          }
                        ]
                      },
                      "id": 10244,
                      "nodeType": "IfStatement",
                      "src": "10378:266:28",
                      "trueBody": {
                        "id": 10233,
                        "nodeType": "Block",
                        "src": "10402:108:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 10231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 10229,
                                "name": "linkExtension",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10204,
                                "src": "10434:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "696e616374697665",
                                "id": 10230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10450:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_356250a37e7b79ef3e2fe3277f6474c0525db5da262fe508599c7b0d71c99b35",
                                  "typeString": "literal_string \"inactive\""
                                },
                                "value": "inactive"
                              },
                              "src": "10434:26:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "id": 10232,
                            "nodeType": "ExpressionStatement",
                            "src": "10434:26:28"
                          }
                        ]
                      }
                    },
                    "id": 10245,
                    "nodeType": "IfStatement",
                    "src": "10235:409:28",
                    "trueBody": {
                      "id": 10224,
                      "nodeType": "Block",
                      "src": "10258:105:28",
                      "statements": [
                        {
                          "expression": {
                            "id": 10222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10220,
                              "name": "linkExtension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10204,
                              "src": "10283:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "6578696c6564",
                              "id": 10221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10299:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255ded7d5be9035f2e5323e20c663d91ca6544f1fd8a236035ee2773b77bc6d7",
                                "typeString": "literal_string \"exiled\""
                              },
                              "value": "exiled"
                            },
                            "src": "10283:24:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "id": 10223,
                          "nodeType": "ExpressionStatement",
                          "src": "10283:24:28"
                        }
                      ]
                    }
                  },
                  "id": 10246,
                  "nodeType": "IfStatement",
                  "src": "10057:587:28",
                  "trueBody": {
                    "id": 10216,
                    "nodeType": "Block",
                    "src": "10109:111:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 10214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10212,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10204,
                            "src": "10139:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "756e696e69746961746564",
                            "id": 10213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10155:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51880eef324f0b7eb6fc17db54185b23bf5dece9de9001c56dfd42819dbc12c7",
                              "typeString": "literal_string \"uninitiated\""
                            },
                            "value": "uninitiated"
                          },
                          "src": "10139:29:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 10215,
                        "nodeType": "ExpressionStatement",
                        "src": "10139:29:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    10248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10248,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "10668:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10265,
                      "src": "10654:22:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10247,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10654:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10259,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10253,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9563,
                              "src": "10703:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 10254,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "imageBaseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9559,
                            "src": "10703:29:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 10255,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10204,
                            "src": "10734:13:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a7067",
                            "id": 10256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10749:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            },
                            "value": ".jpg"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            }
                          ],
                          "expression": {
                            "id": 10251,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10686:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10686:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10686:70:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10679:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 10249,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10679:6:28",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10679:78:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10654:103:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10261,
                        "name": "_wizardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10190,
                        "src": "10790:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10262,
                        "name": "imageURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10248,
                        "src": "10801:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 10260,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10399,
                      "src": "10775:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 10263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10775:35:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 10195,
                  "id": 10264,
                  "nodeType": "Return",
                  "src": "10768:42:28"
                }
              ]
            },
            "documentation": {
              "id": 10188,
              "nodeType": "StructuredDocumentation",
              "src": "9672:118:28",
              "text": "@dev get token URI\n @param _wizardId id of wizard.\n @return returns inline URI as string"
            },
            "functionSelector": "c87b56dd",
            "id": 10266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9805:8:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9853:8:28"
            },
            "parameters": {
              "id": 10191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10190,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "9822:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10266,
                  "src": "9814:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9814:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9813:19:28"
            },
            "returnParameters": {
              "id": 10195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10266,
                  "src": "9871:13:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10193,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9871:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9870:15:28"
            },
            "scope": 10668,
            "src": "9796:1022:28",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10398,
              "nodeType": "Block",
              "src": "11123:2997:28",
              "statements": [
                {
                  "assignments": [
                    10278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10278,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "11147:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10398,
                      "src": "11134:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 10277,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10276,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9539,
                          "src": "11134:5:28"
                        },
                        "referencedDeclaration": 9539,
                        "src": "11134:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10282,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10279,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9508,
                      "src": "11157:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 10281,
                    "indexExpression": {
                      "id": 10280,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10269,
                      "src": "11172:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11157:25:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$9539_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11134:48:28"
                },
                {
                  "assignments": [
                    10284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10284,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "11209:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10398,
                      "src": "11195:22:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10283,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "11195:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10304,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 10289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11258:30:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 10290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11303:72:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 10291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11390:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 10292,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10271,
                            "src": "11420:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 10293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11430:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 10294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11448:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 10295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11510:78:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 10298,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10278,
                                  "src": "11620:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 10299,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9523,
                                "src": "11620:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 10296,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9494,
                                "src": "11603:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 10297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9376,
                              "src": "11603:16:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 10300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11603:31:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 10301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11636:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 10287,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11227:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11227:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11227:424:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11220:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 10285,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "11220:6:28",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 10303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11220:432:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11195:457:28"
                },
                {
                  "expression": {
                    "id": 10331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10305,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "11717:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 10310,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10284,
                              "src": "11752:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 10311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11775:60:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11867:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10312,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "11850:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "11850:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11850:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11875:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20706f776572222c202276616c7565223a20",
                              "id": 10317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11894:71:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11997:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10318,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "11980:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "11980:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11980:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12005:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20646566656e7365222c202276616c7565223a20",
                              "id": 10323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12028:73:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "39393939",
                                  "id": 10326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12133:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9999_by_1",
                                    "typeString": "int_const 9999"
                                  },
                                  "value": "9999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_9999_by_1",
                                    "typeString": "int_const 9999"
                                  }
                                ],
                                "expression": {
                                  "id": 10324,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12116:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12116:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12116:22:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12142:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 10308,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11735:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 10309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "11735:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 10329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11735:422:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 10307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11728:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 10306,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11728:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11728:430:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11717:441:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10332,
                  "nodeType": "ExpressionStatement",
                  "src": "11717:441:28"
                },
                {
                  "expression": {
                    "id": 10353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10333,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "12223:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 10338,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10284,
                              "src": "12258:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20227370656564222c202276616c7565223a20",
                              "id": 10339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12281:63:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12376:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10340,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12359:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12359:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12359:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12384:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a202277696e73222c202276616c7565223a20",
                              "id": 10345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12403:62:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12497:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10346,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12480:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12480:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12480:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12505:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 10336,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12241:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 10337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "12241:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 10351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12241:279:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 10335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12234:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 10334,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12234:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12234:287:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "12223:298:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10354,
                  "nodeType": "ExpressionStatement",
                  "src": "12223:298:28"
                },
                {
                  "expression": {
                    "id": 10382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10355,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "12588:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 10360,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10284,
                              "src": "12623:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 10361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12646:64:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12742:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10362,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12725:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12725:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12725:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12750:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 10367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12769:65:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "393939",
                                  "id": 10370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12866:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  },
                                  "value": "999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_999_by_1",
                                    "typeString": "int_const 999"
                                  }
                                ],
                                "expression": {
                                  "id": 10368,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12849:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12849:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12849:21:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12874:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 10373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12897:71:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 10376,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10278,
                                    "src": "13000:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$9539_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 10377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9525,
                                  "src": "13000:21:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "expression": {
                                  "id": 10374,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9494,
                                  "src": "12983:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$9494_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 10375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9376,
                                "src": "12983:16:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 10378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12983:39:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 10379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13026:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 10358,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12606:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 10359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "12606:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 10380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12606:435:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 10357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12599:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 10356,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12599:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12599:443:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "12588:454:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10383,
                  "nodeType": "ExpressionStatement",
                  "src": "12588:454:28"
                },
                {
                  "expression": {
                    "id": 10394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10384,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10284,
                      "src": "13078:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 10389,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10284,
                              "src": "13113:8:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 10390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13123:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 10391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13127:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 10387,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "13096:3:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 10388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "13096:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 10392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13096:35:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 10386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13089:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 10385,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "13089:6:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13089:43:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13078:54:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10395,
                  "nodeType": "ExpressionStatement",
                  "src": "13078:54:28"
                },
                {
                  "expression": {
                    "id": 10396,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10284,
                    "src": "14104:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 10275,
                  "id": 10397,
                  "nodeType": "Return",
                  "src": "14097:15:28"
                }
              ]
            },
            "documentation": {
              "id": 10267,
              "nodeType": "StructuredDocumentation",
              "src": "10826:188:28",
              "text": "@dev format URI based on image and _wizardId\n @param _wizardId id of wizard.\n @param imageURI inline SVG string.\n @return returns inline URI as string"
            },
            "functionSelector": "0419e314",
            "id": 10399,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "11029:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10269,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "11052:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10399,
                  "src": "11044:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11044:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10271,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "11077:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10399,
                  "src": "11063:22:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10270,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11063:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11043:43:28"
            },
            "returnParameters": {
              "id": 10275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10399,
                  "src": "11108:13:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10273,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11108:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11107:15:28"
            },
            "scope": 10668,
            "src": "11020:3100:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10438,
              "nodeType": "Block",
              "src": "15133:247:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10410,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10402,
                            "src": "15152:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15163:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15152:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10413,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10402,
                            "src": "15168:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10414,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "15181:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15181:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15168:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15152:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206964",
                        "id": 10418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15196:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        },
                        "value": "invalid id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c270178c73806a8dbbf8aad0f9eb77e61abe0b7a93239d42f99fae572eed526",
                          "typeString": "literal_string \"invalid id\""
                        }
                      ],
                      "id": 10409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15144:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15144:65:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10420,
                  "nodeType": "ExpressionStatement",
                  "src": "15144:65:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        "id": 10427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 10422,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9508,
                              "src": "15228:14:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 10424,
                            "indexExpression": {
                              "id": 10423,
                              "name": "_wizardId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10402,
                              "src": "15243:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15228:25:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$9539_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 10425,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9533,
                          "src": "15228:45:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15275:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15228:48:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6973206e6f7420696e69746961746564",
                        "id": 10428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15278:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d36cb4a9ffc3052b50cdb8ac4c633042533ea2120465048b663ce23368d1af65",
                          "typeString": "literal_string \"is not initiated\""
                        },
                        "value": "is not initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d36cb4a9ffc3052b50cdb8ac4c633042533ea2120465048b663ce23368d1af65",
                          "typeString": "literal_string \"is not initiated\""
                        }
                      ],
                      "id": 10421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15220:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15220:77:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10430,
                  "nodeType": "ExpressionStatement",
                  "src": "15220:77:28"
                },
                {
                  "expression": {
                    "id": 10436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10431,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "15308:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 10433,
                        "indexExpression": {
                          "id": 10432,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10402,
                          "src": "15323:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15308:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 10434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9535,
                      "src": "15308:49:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 10435,
                      "name": "_timeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10404,
                      "src": "15361:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15308:64:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 10437,
                  "nodeType": "ExpressionStatement",
                  "src": "15308:64:28"
                }
              ]
            },
            "documentation": {
              "id": 10400,
              "nodeType": "StructuredDocumentation",
              "src": "14783:242:28",
              "text": "@dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n @param _wizardId id of wizard.\n @param _timeReward amout of time in seconds to add to current protectedUntilTimestamp"
            },
            "functionSelector": "86954c5e",
            "id": 10439,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10406,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10535,
                  "src": "15120:12:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "15120:12:28"
              }
            ],
            "name": "increaseProtectedUntilTimestamp",
            "nameLocation": "15040:31:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10402,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "15080:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10439,
                  "src": "15072:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15072:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10404,
                  "mutability": "mutable",
                  "name": "_timeReward",
                  "nameLocation": "15098:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10439,
                  "src": "15091:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 10403,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15091:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15071:39:28"
            },
            "returnParameters": {
              "id": 10408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15133:0:28"
            },
            "scope": 10668,
            "src": "15031:349:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10467,
              "nodeType": "Block",
              "src": "15595:137:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10449,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10441,
                            "src": "15614:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15625:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15614:12:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10452,
                            "name": "_wizardId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10441,
                            "src": "15630:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10453,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10758,
                              "src": "15643:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15643:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15630:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15614:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642077697a617264",
                        "id": 10457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15658:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        },
                        "value": "invalid wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf03592f048f8821a0e322e5c7192bef1173ff20e8f17c1bb2eb88319556f218",
                          "typeString": "literal_string \"invalid wizard\""
                        }
                      ],
                      "id": 10448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15606:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15606:69:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10459,
                  "nodeType": "ExpressionStatement",
                  "src": "15606:69:28"
                },
                {
                  "expression": {
                    "id": 10465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 10460,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9508,
                          "src": "15686:14:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$9539_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 10462,
                        "indexExpression": {
                          "id": 10461,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10441,
                          "src": "15701:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15686:25:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$9539_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 10463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "role",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9529,
                      "src": "15686:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10464,
                      "name": "_role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10443,
                      "src": "15719:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "15686:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 10466,
                  "nodeType": "ExpressionStatement",
                  "src": "15686:38:28"
                }
              ]
            },
            "functionSelector": "6dc1a993",
            "id": 10468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10445,
                  "name": "onlyAppointer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10547,
                  "src": "15581:13:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "15581:13:28"
              }
            ],
            "name": "appointRole",
            "nameLocation": "15527:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10441,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "15547:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10468,
                  "src": "15539:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15539:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10443,
                  "mutability": "mutable",
                  "name": "_role",
                  "nameLocation": "15565:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10468,
                  "src": "15558:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 10442,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15558:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15538:33:28"
            },
            "returnParameters": {
              "id": 10447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15595:0:28"
            },
            "scope": 10668,
            "src": "15518:214:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10522,
              "nodeType": "Block",
              "src": "16412:374:28",
              "statements": [
                {
                  "expression": {
                    "id": 10490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10486,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16423:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "imageBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9559,
                      "src": "16423:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10489,
                      "name": "_imageBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10471,
                      "src": "16455:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16423:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10491,
                  "nodeType": "ExpressionStatement",
                  "src": "16423:45:28"
                },
                {
                  "expression": {
                    "id": 10496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10492,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16479:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10494,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9553,
                      "src": "16479:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10495,
                      "name": "_phaseDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10473,
                      "src": "16512:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16479:47:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10497,
                  "nodeType": "ExpressionStatement",
                  "src": "16479:47:28"
                },
                {
                  "expression": {
                    "id": 10502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10498,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16537:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10500,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9547,
                      "src": "16537:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10501,
                      "name": "_protectionTimeExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10475,
                      "src": "16580:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16537:67:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10503,
                  "nodeType": "ExpressionStatement",
                  "src": "16537:67:28"
                },
                {
                  "expression": {
                    "id": 10508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10504,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16615:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9541,
                      "src": "16615:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10507,
                      "name": "_mintCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10477,
                      "src": "16643:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16615:37:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10509,
                  "nodeType": "ExpressionStatement",
                  "src": "16615:37:28"
                },
                {
                  "expression": {
                    "id": 10514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10510,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16663:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9543,
                      "src": "16663:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10513,
                      "name": "_initiationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10479,
                      "src": "16697:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16663:49:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10515,
                  "nodeType": "ExpressionStatement",
                  "src": "16663:49:28"
                },
                {
                  "expression": {
                    "id": 10520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10516,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9563,
                        "src": "16723:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$9560_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 10518,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maturityThreshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9557,
                      "src": "16723:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10519,
                      "name": "_maturityThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10481,
                      "src": "16760:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16723:55:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10521,
                  "nodeType": "ExpressionStatement",
                  "src": "16723:55:28"
                }
              ]
            },
            "documentation": {
              "id": 10469,
              "nodeType": "StructuredDocumentation",
              "src": "15863:312:28",
              "text": "@dev modify contract settings. Only available to owner\n @param _imageBaseURI baseURI for images\n @param _phaseDuration period in seconds for phases\n @param _protectionTimeExtension problby remove this // todo -- delete\n @param _initiationCost cost in ETH to initiate"
            },
            "functionSelector": "4a535a55",
            "id": 10523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10483,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6306,
                  "src": "16402:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "16402:9:28"
              }
            ],
            "name": "modifyContractSettings",
            "nameLocation": "16190:22:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10471,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "16227:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16213:27:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16213:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10473,
                  "mutability": "mutable",
                  "name": "_phaseDuration",
                  "nameLocation": "16250:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16242:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16242:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10475,
                  "mutability": "mutable",
                  "name": "_protectionTimeExtension",
                  "nameLocation": "16274:24:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16266:32:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16266:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10477,
                  "mutability": "mutable",
                  "name": "_mintCost",
                  "nameLocation": "16308:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16300:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16300:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10479,
                  "mutability": "mutable",
                  "name": "_initiationCost",
                  "nameLocation": "16348:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16340:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16340:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10481,
                  "mutability": "mutable",
                  "name": "_maturityThreshold",
                  "nameLocation": "16373:18:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10523,
                  "src": "16365:26:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16365:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16212:180:28"
            },
            "returnParameters": {
              "id": 10485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16412:0:28"
            },
            "scope": 10668,
            "src": "16181:605:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10534,
              "nodeType": "Block",
              "src": "16919:136:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16938:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16938:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10528,
                          "name": "verifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9510,
                          "src": "16952:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16938:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 10530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16962:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 10525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16930:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16930:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10532,
                  "nodeType": "ExpressionStatement",
                  "src": "16930:48:28"
                },
                {
                  "id": 10533,
                  "nodeType": "PlaceholderStatement",
                  "src": "17046:1:28"
                }
              ]
            },
            "id": 10535,
            "name": "onlyVerifier",
            "nameLocation": "16904:12:28",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16916:2:28"
            },
            "src": "16895:160:28",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10546,
              "nodeType": "Block",
              "src": "17088:81:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10538,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17107:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17107:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10540,
                          "name": "appointer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9516,
                          "src": "17121:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17107:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206170706f696e746572",
                        "id": 10542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17132:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc05b461d47f910c90bb1341a3ccdd95b133eadc18be7c96c1cbfbd38947cd4e",
                          "typeString": "literal_string \"only appointer\""
                        },
                        "value": "only appointer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc05b461d47f910c90bb1341a3ccdd95b133eadc18be7c96c1cbfbd38947cd4e",
                          "typeString": "literal_string \"only appointer\""
                        }
                      ],
                      "id": 10537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17099:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17099:50:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10544,
                  "nodeType": "ExpressionStatement",
                  "src": "17099:50:28"
                },
                {
                  "id": 10545,
                  "nodeType": "PlaceholderStatement",
                  "src": "17160:1:28"
                }
              ]
            },
            "id": 10547,
            "name": "onlyAppointer",
            "nameLocation": "17072:13:28",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17085:2:28"
            },
            "src": "17063:106:28",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10561,
              "nodeType": "Block",
              "src": "17201:139:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10550,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17220:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17220:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10554,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "17242:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$10668",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$10668",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 10553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17234:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17234:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17234:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17220:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920686f6c646572",
                        "id": 10557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17249:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98d7871fcb76c25b5ababb26c761a842cc9216a1d88d6dca7eb976809234cda5",
                          "typeString": "literal_string \"only holder\""
                        },
                        "value": "only holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98d7871fcb76c25b5ababb26c761a842cc9216a1d88d6dca7eb976809234cda5",
                          "typeString": "literal_string \"only holder\""
                        }
                      ],
                      "id": 10549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17212:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17212:51:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10559,
                  "nodeType": "ExpressionStatement",
                  "src": "17212:51:28"
                },
                {
                  "id": 10560,
                  "nodeType": "PlaceholderStatement",
                  "src": "17331:1:28"
                }
              ]
            },
            "id": 10562,
            "name": "onlyHolder",
            "nameLocation": "17188:10:28",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17198:2:28"
            },
            "src": "17179:161:28",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10573,
              "nodeType": "Block",
              "src": "17370:170:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10565,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17403:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17403:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10567,
                          "name": "culler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9513,
                          "src": "17417:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17403:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792063756c6c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 10569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17472:37:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65c7592100ff9555a87e9778fb5fdaf24e3d2809c75ebc9f002e367a871abc1c",
                          "typeString": "literal_string \"Only culler can call this function.\""
                        },
                        "value": "Only culler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65c7592100ff9555a87e9778fb5fdaf24e3d2809c75ebc9f002e367a871abc1c",
                          "typeString": "literal_string \"Only culler can call this function.\""
                        }
                      ],
                      "id": 10564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17381:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17381:139:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10571,
                  "nodeType": "ExpressionStatement",
                  "src": "17381:139:28"
                },
                {
                  "id": 10572,
                  "nodeType": "PlaceholderStatement",
                  "src": "17531:1:28"
                }
              ]
            },
            "id": 10574,
            "name": "onlyCuller",
            "nameLocation": "17357:10:28",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17367:2:28"
            },
            "src": "17348:192:28",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10604,
              "nodeType": "Block",
              "src": "17926:159:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10583,
                            "name": "_culler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10577,
                            "src": "17945:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17964:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17956:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10584,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17956:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17956:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17945:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10589,
                            "name": "_culler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10577,
                            "src": "17970:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 10590,
                            "name": "culler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9513,
                            "src": "17981:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17970:17:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17945:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 10593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17989:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 10582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17937:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17937:79:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10595,
                  "nodeType": "ExpressionStatement",
                  "src": "17937:79:28"
                },
                {
                  "expression": {
                    "id": 10598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10596,
                      "name": "culler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9513,
                      "src": "18027:6:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10597,
                      "name": "_culler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10577,
                      "src": "18036:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18027:16:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10599,
                  "nodeType": "ExpressionStatement",
                  "src": "18027:16:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10601,
                        "name": "_culler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10577,
                        "src": "18069:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10600,
                      "name": "NewCuller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9571,
                      "src": "18059:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18059:18:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10603,
                  "nodeType": "EmitStatement",
                  "src": "18054:23:28"
                }
              ]
            },
            "documentation": {
              "id": 10575,
              "nodeType": "StructuredDocumentation",
              "src": "17645:217:28",
              "text": "@dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n @param _culler new address for culler, the wallet/contract which can exile wizards without contraint"
            },
            "functionSelector": "54e14151",
            "id": 10605,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10580,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10579,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6306,
                  "src": "17916:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "17916:9:28"
              }
            ],
            "name": "updateCuller",
            "nameLocation": "17877:12:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10577,
                  "mutability": "mutable",
                  "name": "_culler",
                  "nameLocation": "17898:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10605,
                  "src": "17890:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17890:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17889:17:28"
            },
            "returnParameters": {
              "id": 10581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17926:0:28"
            },
            "scope": 10668,
            "src": "17868:217:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10635,
              "nodeType": "Block",
              "src": "18383:173:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10614,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10608,
                            "src": "18402:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18423:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18415:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18415:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18415:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18402:23:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10620,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10608,
                            "src": "18429:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 10621,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9510,
                            "src": "18442:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18429:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18402:48:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 10624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18452:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 10613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18394:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18394:85:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10626,
                  "nodeType": "ExpressionStatement",
                  "src": "18394:85:28"
                },
                {
                  "expression": {
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10627,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9510,
                      "src": "18490:8:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10628,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10608,
                      "src": "18501:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18490:20:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "18490:20:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10632,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10608,
                        "src": "18538:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10631,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9567,
                      "src": "18526:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18526:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10634,
                  "nodeType": "EmitStatement",
                  "src": "18521:27:28"
                }
              ]
            },
            "documentation": {
              "id": 10606,
              "nodeType": "StructuredDocumentation",
              "src": "18093:222:28",
              "text": "@dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n @param _verifier the new address for verifier, the contract which can add protectedUntil time for wizards"
            },
            "functionSelector": "97fc007c",
            "id": 10636,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10611,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10610,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6306,
                  "src": "18373:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "18373:9:28"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "18330:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10608,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "18353:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10636,
                  "src": "18345:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18345:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18344:19:28"
            },
            "returnParameters": {
              "id": 10612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18383:0:28"
            },
            "scope": 10668,
            "src": "18321:235:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10666,
              "nodeType": "Block",
              "src": "18847:180:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10645,
                            "name": "_appointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10639,
                            "src": "18866:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 10648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18888:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 10647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18880:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10646,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18880:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18880:10:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18866:24:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10651,
                            "name": "_appointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10639,
                            "src": "18894:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 10652,
                            "name": "appointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9516,
                            "src": "18908:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18894:23:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18866:51:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 10655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18919:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 10644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18858:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18858:88:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10657,
                  "nodeType": "ExpressionStatement",
                  "src": "18858:88:28"
                },
                {
                  "expression": {
                    "id": 10660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10658,
                      "name": "appointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9516,
                      "src": "18957:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10659,
                      "name": "_appointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10639,
                      "src": "18969:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18957:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10661,
                  "nodeType": "ExpressionStatement",
                  "src": "18957:22:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10663,
                        "name": "_appointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10639,
                        "src": "19008:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10662,
                      "name": "NewAppointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9575,
                      "src": "18995:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18995:24:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10665,
                  "nodeType": "EmitStatement",
                  "src": "18990:29:28"
                }
              ]
            },
            "documentation": {
              "id": 10637,
              "nodeType": "StructuredDocumentation",
              "src": "18564:213:28",
              "text": "@dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n @param _appointer the new address for appointer, the contract which can appoint and create roles"
            },
            "functionSelector": "30df0612",
            "id": 10667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10641,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6306,
                  "src": "18837:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "18837:9:28"
              }
            ],
            "name": "updateAppointer",
            "nameLocation": "18792:15:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10639,
                  "mutability": "mutable",
                  "name": "_appointer",
                  "nameLocation": "18816:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 10667,
                  "src": "18808:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18808:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18807:20:28"
            },
            "returnParameters": {
              "id": 10643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18847:0:28"
            },
            "scope": 10668,
            "src": "18783:244:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10669,
        "src": "359:18675:28",
        "usedErrors": []
      }
    ],
    "src": "33:19003:28"
  },
  "bytecode": "",
  "bytecodeSha1": "65379a6a40d887defa9e2efe159dbf59a79d7f67",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "10": {
        "ERC721._checkOnERC721Received": {
          "195": [
            12657,
            12675,
            false
          ]
        },
        "ERC721._mint": {
          "196": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "194": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "193": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "191": [
            10896,
            10927,
            true
          ],
          "192": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "184": [
            3746,
            3757,
            true
          ],
          "185": [
            3830,
            3851,
            true
          ],
          "186": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "188": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "190": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "189": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "187": [
            5169,
            5210,
            true
          ]
        }
      },
      "12": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "199": [
            2870,
            2888,
            false
          ],
          "200": [
            2967,
            2977,
            false
          ],
          "201": [
            3067,
            3083,
            false
          ],
          "202": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "203": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "198": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "197": [
            1421,
            1452,
            true
          ]
        }
      },
      "13": {
        "Ownable.transferOwnership": {
          "204": [
            1990,
            2012,
            true
          ]
        }
      },
      "17": {},
      "21": {},
      "22": {},
      "23": {},
      "26": {
        "Strings.toString": {
          "205": [
            563,
            573,
            false
          ]
        }
      },
      "28": {
        "Wizards._exile": {
          "182": [
            9188,
            9200,
            false
          ],
          "183": [
            9204,
            9230,
            true
          ]
        },
        "Wizards.appointRole": {
          "158": [
            15614,
            15626,
            false
          ],
          "159": [
            15630,
            15656,
            true
          ]
        },
        "Wizards.exile": {
          "153": [
            8867,
            8889,
            true
          ]
        },
        "Wizards.getPhaseOf": {
          "144": [
            5108,
            5120,
            false
          ],
          "145": [
            5124,
            5150,
            true
          ],
          "146": [
            5207,
            5353,
            true
          ]
        },
        "Wizards.getRole": {
          "154": [
            4390,
            4402,
            false
          ],
          "155": [
            4406,
            4432,
            true
          ]
        },
        "Wizards.getStatsGivenId": {
          "171": [
            4768,
            4780,
            false
          ],
          "172": [
            4784,
            4810,
            true
          ]
        },
        "Wizards.getUplineId": {
          "169": [
            4177,
            4189,
            false
          ],
          "170": [
            4193,
            4219,
            true
          ]
        },
        "Wizards.hasDeserted": {
          "173": [
            3367,
            3379,
            false
          ],
          "174": [
            3383,
            3409,
            true
          ]
        },
        "Wizards.increaseProtectedUntilTimestamp": {
          "166": [
            15152,
            15164,
            false
          ],
          "167": [
            15168,
            15194,
            true
          ],
          "168": [
            15228,
            15276,
            true
          ]
        },
        "Wizards.initiate": {
          "160": [
            7661,
            7693,
            true
          ],
          "161": [
            7730,
            7780,
            true
          ],
          "162": [
            7821,
            7925,
            true
          ],
          "163": [
            8023,
            8067,
            true
          ]
        },
        "Wizards.isActive": {
          "164": [
            2485,
            2497,
            false
          ],
          "165": [
            2501,
            2527,
            true
          ]
        },
        "Wizards.isExiled": {
          "180": [
            2903,
            2915,
            false
          ],
          "181": [
            2919,
            2945,
            true
          ]
        },
        "Wizards.isMature": {
          "151": [
            3807,
            3819,
            false
          ],
          "152": [
            3823,
            3849,
            true
          ]
        },
        "Wizards.mint": {
          "147": [
            6916,
            6958,
            true
          ],
          "148": [
            6996,
            7022,
            true
          ]
        },
        "Wizards.tokenURI": {
          "177": [
            10060,
            10108,
            false
          ],
          "178": [
            10238,
            10257,
            false
          ],
          "179": [
            10382,
            10401,
            false
          ]
        },
        "Wizards.updateAppointer": {
          "149": [
            18866,
            18890,
            false
          ],
          "150": [
            18894,
            18917,
            true
          ]
        },
        "Wizards.updateCuller": {
          "156": [
            17945,
            17966,
            false
          ],
          "157": [
            17970,
            17987,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "175": [
            18402,
            18425,
            false
          ],
          "176": [
            18429,
            18450,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "10": {
        "ERC721._approve": {
          "97": [
            11535,
            11564
          ],
          "98": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "125": [
            12700,
            12760
          ],
          "126": [
            12527,
            12589
          ],
          "127": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "10": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "99": [
            7882,
            7955
          ],
          "100": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "138": [
            9528,
            9589
          ],
          "139": [
            9600,
            9658
          ],
          "140": [
            9671,
            9716
          ],
          "141": [
            9729,
            9747
          ],
          "142": [
            9758,
            9779
          ],
          "143": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "109": [
            8538,
            8564
          ],
          "123": [
            8929,
            8947
          ],
          "124": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "115": [
            7007,
            7035
          ],
          "116": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "101": [
            10888,
            10973
          ],
          "102": [
            10984,
            11049
          ],
          "103": [
            11062,
            11101
          ],
          "104": [
            11166,
            11195
          ],
          "105": [
            11208,
            11228
          ],
          "106": [
            11239,
            11257
          ],
          "107": [
            11268,
            11289
          ],
          "108": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "13": [
            3738,
            3795
          ],
          "15": [
            3808,
            3976
          ],
          "16": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "49": [
            2041,
            2115
          ],
          "50": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "11": [
            4180,
            4253
          ],
          "12": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "2": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "9": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "46": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "32": [
            5522,
            5561
          ],
          "77": [
            5807,
            5910
          ],
          "78": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "74": [
            4472,
            4534
          ],
          "75": [
            4547,
            4600
          ],
          "76": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "89": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "70": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            5161,
            5264
          ],
          "18": [
            5277,
            5305
          ]
        }
      },
      "12": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "118": [
            4053,
            4097
          ],
          "119": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "136": [
            3687,
            3721
          ],
          "137": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "117": [
            2905,
            2945
          ],
          "120": [
            2994,
            3041
          ],
          "121": [
            3100,
            3145
          ],
          "122": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "132": [
            6793,
            6829
          ],
          "133": [
            6898,
            6939
          ],
          "134": [
            7063,
            7094
          ],
          "135": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "128": [
            5367,
            5411
          ],
          "129": [
            5484,
            5527
          ],
          "130": [
            5662,
            5695
          ],
          "131": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "3": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "39": [
            1913,
            2008
          ],
          "40": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "23": [
            1413,
            1500
          ],
          "24": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "13": {
        "Ownable._setOwner": {
          "113": [
            2193,
            2210
          ],
          "114": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "1": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "51": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "87": [
            1982,
            2055
          ],
          "88": [
            2066,
            2085
          ]
        }
      },
      "17": {},
      "21": {},
      "22": {},
      "23": {},
      "26": {
        "Strings.toString": {
          "91": [
            590,
            600
          ],
          "92": [
            711,
            719
          ],
          "93": [
            734,
            744
          ],
          "94": [
            850,
            861
          ],
          "95": [
            876,
            932
          ],
          "96": [
            947,
            958
          ]
        }
      },
      "28": {
        "Wizards._exile": {
          "110": [
            9180,
            9245
          ],
          "111": [
            9301,
            9376
          ],
          "112": [
            9427,
            9476
          ]
        },
        "Wizards.appointRole": {
          "47": [
            15606,
            15675
          ],
          "48": [
            15686,
            15724
          ]
        },
        "Wizards.exile": {
          "30": [
            8859,
            8919
          ],
          "31": [
            8930,
            8947
          ]
        },
        "Wizards.formatTokenURI": {
          "4": [
            11717,
            12158
          ],
          "5": [
            12223,
            12521
          ],
          "6": [
            12588,
            13042
          ],
          "7": [
            13078,
            13132
          ]
        },
        "Wizards.getPhaseOf": {
          "8": [
            5100,
            5169
          ]
        },
        "Wizards.getRole": {
          "41": [
            4382,
            4451
          ],
          "42": [
            4462,
            4499
          ]
        },
        "Wizards.getStatsGivenId": {
          "66": [
            4760,
            4829
          ],
          "67": [
            4840,
            4872
          ]
        },
        "Wizards.getUplineId": {
          "64": [
            4169,
            4238
          ],
          "65": [
            4249,
            4290
          ]
        },
        "Wizards.hasDeserted": {
          "68": [
            3359,
            3428
          ],
          "69": [
            3439,
            3566
          ]
        },
        "Wizards.increaseProtectedUntilTimestamp": {
          "61": [
            15144,
            15209
          ],
          "62": [
            15220,
            15297
          ],
          "63": [
            15308,
            15372
          ]
        },
        "Wizards.initiate": {
          "52": [
            7653,
            7711
          ],
          "53": [
            7722,
            7802
          ],
          "54": [
            7813,
            7970
          ],
          "55": [
            8015,
            8095
          ],
          "56": [
            8168,
            8221
          ],
          "57": [
            8232,
            8332
          ],
          "58": [
            8345,
            8399
          ]
        },
        "Wizards.isActive": {
          "59": [
            2477,
            2546
          ],
          "60": [
            2557,
            2631
          ]
        },
        "Wizards.isExiled": {
          "85": [
            2895,
            2964
          ],
          "86": [
            2975,
            3089
          ]
        },
        "Wizards.isMature": {
          "28": [
            3799,
            3868
          ],
          "29": [
            3879,
            3945
          ]
        },
        "Wizards.mint": {
          "19": [
            6908,
            6977
          ],
          "20": [
            6988,
            7073
          ],
          "21": [
            7343,
            7384
          ],
          "22": [
            7395,
            7434
          ]
        },
        "Wizards.modifyContractSettings": {
          "33": [
            16423,
            16468
          ],
          "34": [
            16479,
            16526
          ],
          "35": [
            16537,
            16604
          ],
          "36": [
            16615,
            16652
          ],
          "37": [
            16663,
            16712
          ],
          "38": [
            16723,
            16778
          ]
        },
        "Wizards.tokenURI": {
          "79": [
            9897,
            9975
          ],
          "80": [
            10139,
            10168
          ],
          "81": [
            10283,
            10307
          ],
          "82": [
            10434,
            10460
          ],
          "83": [
            10577,
            10632
          ],
          "84": [
            10768,
            10810
          ]
        },
        "Wizards.updateAppointer": {
          "25": [
            18858,
            18946
          ],
          "26": [
            18957,
            18979
          ],
          "27": [
            18990,
            19019
          ]
        },
        "Wizards.updateCuller": {
          "43": [
            17937,
            18016
          ],
          "44": [
            18027,
            18043
          ],
          "45": [
            18054,
            18077
          ]
        },
        "Wizards.updateVerifier": {
          "71": [
            18394,
            18479
          ],
          "72": [
            18490,
            18510
          ],
          "73": [
            18521,
            18548
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "8": {
        "ERC165.supportsInterface": {
          "90": [
            901,
            948
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "60806040526004361061025c5760003560e01c80636dc1a9931161014457806397fc007c116100b6578063c87b56dd1161007a578063c87b56dd1461071d578063c87bfc7f1461073d578063db2a0a55146107d9578063e833bf6314610804578063e985e9c514610824578063f2fde38b1461086d57600080fd5b806397fc007c1461067d578063a22cb4651461069d578063ad275cbb146106bd578063b88d4fde146106dd578063c3cf52be146106fd57600080fd5b806386954c5e1161010857806386954c5e146105bd5780638b8555d6146105dd5780638cb22518146105fd5780638da5179a1461062a5780638da5cb5b1461064a57806395d89b411461066857600080fd5b80636dc1a9931461053557806370a0823114610555578063715018a6146105755780637901ea781461058a57806382afd23b1461059d57600080fd5b80632f745c59116101dd5780634a535a55116101a15780634a535a55146104755780634f6ccce7146104955780635312fdc2146104b557806354e14151146104d55780636352211e146104f5578063690c8e181461051557600080fd5b80632f745c59146103d557806330df0612146103f55780633e55e63d1461041557806340ebcb8e1461043557806342842e0e1461045557600080fd5b8063095ea7b311610224578063095ea7b31461033e57806318160ddd1461036057806323b872dd1461037557806323cf0a22146103955780632b7ac3f3146103b557600080fd5b806301ffc9a7146102615780630419e3141461029657806305106353146102c357806306fdde03146102f1578063081812fc14610306575b600080fd5b34801561026d57600080fd5b5061028161027c366004612c85565b61088d565b60405190151581526020015b60405180910390f35b3480156102a257600080fd5b506102b66102b1366004612d4e565b6108b8565b60405161028d9190612ded565b3480156102cf57600080fd5b506102e36102de366004612e00565b610ab4565b60405190815260200161028d565b3480156102fd57600080fd5b506102b6610b8c565b34801561031257600080fd5b50610326610321366004612e00565b610c1e565b6040516001600160a01b03909116815260200161028d565b34801561034a57600080fd5b5061035e610359366004612e35565b610cb3565b005b34801561036c57600080fd5b506008546102e3565b34801561038157600080fd5b5061035e610390366004612e5f565b610dc8565b3480156103a157600080fd5b5061035e6103b0366004612ead565b610df9565b3480156103c157600080fd5b50600c54610326906001600160a01b031681565b3480156103e157600080fd5b506102e36103f0366004612e35565b6110d8565b34801561040157600080fd5b5061035e610410366004612ec8565b61116e565b34801561042157600080fd5b50610281610430366004612e00565b61122f565b34801561044157600080fd5b5061035e610450366004612e00565b611272565b34801561046157600080fd5b5061035e610470366004612e5f565b6112d3565b34801561048157600080fd5b5061035e610490366004612ee3565b6112ee565b3480156104a157600080fd5b506102e36104b0366004612e00565b61133d565b3480156104c157600080fd5b506102e36104d0366004612e00565b6113d0565b3480156104e157600080fd5b5061035e6104f0366004612ec8565b611420565b34801561050157600080fd5b50610326610510366004612e00565b6114da565b34801561052157600080fd5b5061035e610530366004612e00565b611551565b34801561054157600080fd5b5061035e610550366004612f48565b6115b7565b34801561056157600080fd5b506102e3610570366004612ec8565b611661565b34801561058157600080fd5b5061035e6116e8565b61035e610598366004612e00565b61171e565b3480156105a957600080fd5b506102816105b8366004612e00565b611957565b3480156105c957600080fd5b5061035e6105d8366004612f74565b6119ad565b3480156105e957600080fd5b506102e36105f8366004612e00565b611af8565b34801561060957600080fd5b5061061d610618366004612e00565b611b48565b60405161028d9190612fe6565b34801561063657600080fd5b50610281610645366004612e00565b611c7d565b34801561065657600080fd5b50600a546001600160a01b0316610326565b34801561067457600080fd5b506102b6611cfb565b34801561068957600080fd5b5061035e610698366004612ec8565b611d0a565b3480156106a957600080fd5b5061035e6106b836600461307f565b611dc4565b3480156106c957600080fd5b50600d54610326906001600160a01b031681565b3480156106e957600080fd5b5061035e6106f83660046130b0565b611e88565b34801561070957600080fd5b50600e54610326906001600160a01b031681565b34801561072957600080fd5b506102b6610738366004612e00565b611eba565b34801561074957600080fd5b506107c5610758366004612e00565b600b60205260009081526040902080546001909101546001600160801b0380831692600160801b908190048216929182169161ffff918104821691600160901b8204169064ffffffffff600160a01b8204811691600160c81b81049091169060ff600160f01b9091041688565b60405161028d98979695949392919061312c565b3480156107e557600080fd5b506107ee61203c565b60405161028d9a9998979695949392919061318e565b34801561081057600080fd5b5061028161081f366004612e00565b612105565b34801561083057600080fd5b5061028161083f3660046131f3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561087957600080fd5b5061035e610888366004612ec8565b612182565b60006001600160e01b0319821663780e9d6360e01b14806108b257506108b28261221a565b92915050565b6000828152600b6020908152604080832081516101008101835281546001600160801b038082168352600160801b9182900481169583019590955260018301549485169382019390935261ffff9284048316606082810191909152600160901b8504909316608082015264ffffffffff600160a01b8504811660a0830152600160c81b85041660c082015291939260e083019060ff600160f01b90910416600381111561096757610967612fae565b600381111561097857610978612fae565b81525050905060008361099783600001516001600160801b031661226a565b6040516020016109a8929190613239565b6040516020818303038152906040529050806109c56103e761226a565b6109d06103e761226a565b6109db61270f61226a565b6040516020016109ee9493929190613393565b604051602081830303815290604052905080610a0b6103e761226a565b610a166103e761226a565b604051602001610a28939291906134c5565b604051602081830303815290604052905080610a456103e761226a565b610a506103e761226a565b610a6685602001516001600160801b031661226a565b604051602001610a7994939291906135a2565b604051602081830303815290604052905080604051602001610a9b91906136b8565b60408051808303601f1901815291905295945050505050565b60008115801590610ac757506008548211155b610aec5760405162461bcd60e51b8152600401610ae3906136e7565b60405180910390fd5b601654600090610afe90600190613725565b6015546000858152600b6020526040902060010154610b2b90600160a01b900464ffffffffff1642613725565b610b359190613752565b11610b76576015546000848152600b6020526040902060010154610b6790600160a01b900464ffffffffff1642613725565b610b719190613752565b610b85565b601654610b8590600190613725565b9392505050565b606060008054610b9b90613766565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc790613766565b8015610c145780601f10610be957610100808354040283529160200191610c14565b820191906000526020600020905b815481529060010190602001808311610bf757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610c975760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ae3565b506000908152600460205260409020546001600160a01b031690565b6000610cbe826114da565b9050806001600160a01b0316836001600160a01b031603610d2b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610ae3565b336001600160a01b0382161480610d475750610d47813361083f565b610db95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610ae3565b610dc3838361236b565b505050565b610dd233826123d9565b610dee5760405162461bcd60e51b8152600401610ae3906137a0565b610dc38383836124cc565b60115460085410610e3d5760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b6044820152606401610ae3565b6008548161ffff161115610eaa5760405162461bcd60e51b815260206004820152602e60248201527f696e76616c69642075706c696e652d2d6d757374206265206c6573732074686160448201526d6e20746f74616c20737570706c7960901b6064820152608401610ae3565b6000610eb560085490565b6040805160208101929092526bffffffffffffffffffffffff193360601b169082015242605482015260740160408051601f198184030181529190528051602090910120905060006004610f0a600a84613752565b610f159060066137f1565b610f1f9190613810565b6003811115610f3057610f30612fae565b6040805161010081018252600181526000602082018190529181018290526060810182905261ffff8616608082015260a0810182905260c081018290529192509060e08101836003811115610f8757610f87612fae565b9052905080600b6000610f9960085490565b610fa4906001613824565b815260208082019290925260409081016000208351928401516001600160801b03938416600160801b9185168202178255918401516001820180546060870151608088015160a089015160c08a01519590981671ffffffffffffffffffffffffffffffffffff199093169290921761ffff9182169096029590951766ffffffffffffff60901b1916600160901b959091169490940264ffffffffff60a01b191693909317600160a01b64ffffffffff958616021764ffffffffff60c81b198116600160c81b9590921694909402908117835560e0850151919391929165ffffffffffff60c81b191660ff60f01b1990911617600160f01b8360038111156110ad576110ad612fae565b02179055509050506110d2336110c260085490565b6110cd906001613824565b612677565b50505050565b60006110e383611661565b82106111455760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610ae3565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146111985760405162461bcd60e51b8152600401610ae39061383c565b6001600160a01b038116158015906111be5750600e546001600160a01b03828116911614155b6111da5760405162461bcd60e51b8152600401610ae390613871565b600e80546001600160a01b0319166001600160a01b0383169081179091556040519081527f35829bf1dc2d1c476529eca85a3ba530615d11b4a5255ff7b730b4e1153e92c0906020015b60405180910390a150565b6000811580159061124257506008548211155b61125e5760405162461bcd60e51b8152600401610ae3906136e7565b60175461126a83610ab4565b101592915050565b61127b81611c7d565b6112c75760405162461bcd60e51b815260206004820152601960248201527f77697a6172642063616e206e6f74206265206578696c65642e000000000000006044820152606401610ae3565b6112d081612695565b50565b610dc383838360405180602001604052806000815250611e88565b600a546001600160a01b031633146113185760405162461bcd60e51b8152600401610ae39061383c565b601861132487826138f6565b50601594909455601292909255600f5560105560175550565b600061134860085490565b82106113ab5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610ae3565b600882815481106113be576113be6139b6565b90600052602060002001549050919050565b600081158015906113e357506008548211155b6113ff5760405162461bcd60e51b8152600401610ae3906136e7565b506000908152600b6020526040902060010154600160801b900461ffff1690565b600a546001600160a01b0316331461144a5760405162461bcd60e51b8152600401610ae39061383c565b6001600160a01b038116158015906114705750600d546001600160a01b03828116911614155b61148c5760405162461bcd60e51b8152600401610ae390613871565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f98543b1b9bbf23b0ca565be0f1a833222e982f36322287bf2e001b1227473afe90602001611224565b6000818152600260205260408120546001600160a01b0316806108b25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610ae3565b600d546001600160a01b031633146112c75760405162461bcd60e51b815260206004820152602360248201527f4f6e6c792063756c6c65722063616e2063616c6c20746869732066756e63746960448201526237b71760e91b6064820152608401610ae3565b600e546001600160a01b031633146116025760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9030b83837b4b73a32b960911b6044820152606401610ae3565b811580159061161357506008548211155b61162f5760405162461bcd60e51b8152600401610ae3906136e7565b6000918252600b6020526040909120600101805461ffff909216600160801b0261ffff60801b19909216919091179055565b60006001600160a01b0382166116cc5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610ae3565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146117125760405162461bcd60e51b8152600401610ae39061383c565b61171c6000612720565b565b33611728826114da565b6001600160a01b03161461176e5760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b6044820152606401610ae3565b6000818152600b6020526040902060010154600160a01b900464ffffffffff16156117cf5760405162461bcd60e51b8152602060048201526011602482015270185b1c9958591e481a5b9a5d1a585d1959607a1b6044820152606401610ae3565b6013546000828152600b602052604090206001015442916117fd91600160c81b900464ffffffffff16613824565b1061185b5760405162461bcd60e51b815260206004820152602860248201527f4578696c65642077697a617264206e6f742079657420616c6c6f77656420746f604482015267103932ba3ab9371760c11b6064820152608401610ae3565b60105434146118ac5760405162461bcd60e51b815260206004820152601760248201527f696e636f727265637420696e69746961746f6e206665650000000000000000006044820152606401610ae3565b6000818152600b6020526040902060018101805464ffffffffff42908116600160a01b0264ffffffffff60a01b19909216919091179091556012546118f091613824565b60018201805464ffffffffff92909216600160c81b0264ffffffffff60c81b199092169190911790556040805133815242602082015283917f1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7910160405180910390a25050565b6000811580159061196a57506008548211155b6119865760405162461bcd60e51b8152600401610ae3906136e7565b506000908152600b602052604090206001015442600160c81b90910464ffffffffff161190565b600c546001600160a01b031633146119f75760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b6044820152606401610ae3565b8115801590611a0857506008548211155b611a415760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610ae3565b6000828152600b6020526040812060010154600160a01b900464ffffffffff169003611aa25760405162461bcd60e51b815260206004820152601060248201526f1a5cc81b9bdd081a5b9a5d1a585d195960821b6044820152606401610ae3565b6000828152600b602052604090206001018054829190601990611ad4908490600160c81b900464ffffffffff166139cc565b92506101000a81548164ffffffffff021916908364ffffffffff1602179055505050565b60008115801590611b0b57506008548211155b611b275760405162461bcd60e51b8152600401610ae3906136e7565b506000908152600b6020526040902060010154600160901b900461ffff1690565b611b8d6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529060e082015290565b8115801590611b9e57506008548211155b611bba5760405162461bcd60e51b8152600401610ae3906136e7565b6000828152600b602090815260409182902082516101008101845281546001600160801b038082168352600160801b9182900481169483019490945260018301549384169482019490945292820461ffff9081166060850152600160901b8304166080840152600160a01b820464ffffffffff90811660a0850152600160c81b83041660c08401529060e0830190600160f01b900460ff166003811115611c6357611c63612fae565b6003811115611c7457611c74612fae565b90525092915050565b60008115801590611c9057506008548211155b611cac5760405162461bcd60e51b8152600401610ae3906136e7565b6000828152600b602052604090206001015442600160c81b90910464ffffffffff161080156108b25750506000908152600b6020526040902060010154600160a01b900464ffffffffff161590565b606060018054610b9b90613766565b600a546001600160a01b03163314611d345760405162461bcd60e51b8152600401610ae39061383c565b6001600160a01b03811615801590611d5a5750600c546001600160a01b03828116911614155b611d765760405162461bcd60e51b8152600401610ae390613871565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e590602001611224565b336001600160a01b03831603611e1c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610ae3565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611e9233836123d9565b611eae5760405162461bcd60e51b8152600401610ae3906137a0565b6110d284848484612772565b6000818152600260205260409020546060906001600160a01b0316611f395760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ae3565b6000828152600b6020526040812060010154606091600160a01b90910464ffffffffff169003611f8b575060408051808201909152600b81526a1d5b9a5b9a5d1a585d195960aa1b6020820152612002565b611f9483612105565b15611fbc5750604080518082019091526006815265195e1a5b195960d21b6020820152612002565b611fc583611957565b611fee5750604080518082019091526008815267696e61637469766560c01b6020820152612002565b611fff611ffa84610ab4565b61226a565b90505b6040516000906120199060189084906020016139f5565b604051602081830303815290604052905061203484826108b8565b949350505050565b600f805460105460115460125460135460145460155460165460175460188054999a98999798969795966001600160a01b03909516959394929391929161208290613766565b80601f01602080910402602001604051908101604052809291908181526020018280546120ae90613766565b80156120fb5780601f106120d0576101008083540402835291602001916120fb565b820191906000526020600020905b8154815290600101906020018083116120de57829003601f168201915b505050505090508a565b6000811580159061211857506008548211155b6121345760405162461bcd60e51b8152600401610ae3906136e7565b6000828152600b6020526040902060010154600160c81b900464ffffffffff16158015906108b25750506000908152600b6020526040902060010154600160a01b900464ffffffffff161590565b600a546001600160a01b031633146121ac5760405162461bcd60e51b8152600401610ae39061383c565b6001600160a01b0381166122115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ae3565b6112d081612720565b60006001600160e01b031982166380ac58cd60e01b148061224b57506001600160e01b03198216635b5e139f60e01b145b806108b257506301ffc9a760e01b6001600160e01b03198316146108b2565b6060816000036122915750506040805180820190915260018152600360fc1b602082015290565b8160005b81156122bb57806122a581613a8b565b91506122b49050600a83613752565b9150612295565b60008167ffffffffffffffff8111156122d6576122d6612ca2565b6040519080825280601f01601f191660200182016040528015612300576020820181803683370190505b5090505b841561203457612315600183613725565b9150612322600a86613810565b61232d906030613824565b60f81b818381518110612342576123426139b6565b60200101906001600160f81b031916908160001a905350612364600a86613752565b9450612304565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906123a0826114da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166124525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610ae3565b600061245d836114da565b9050806001600160a01b0316846001600160a01b031614806124985750836001600160a01b031661248d84610c1e565b6001600160a01b0316145b8061203457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16612034565b826001600160a01b03166124df826114da565b6001600160a01b0316146125475760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610ae3565b6001600160a01b0382166125a95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610ae3565b6125b48383836127a5565b6125bf60008261236b565b6001600160a01b03831660009081526003602052604081208054600192906125e8908490613725565b90915550506001600160a01b0382166000908152600360205260408120805460019290612616908490613824565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61269182826040518060200160405280600081525061285d565b5050565b80158015906126a657506008548111155b6126df5760405162461bcd60e51b815260206004820152600a6024820152691a5b9d985b1a59081a5960b21b6044820152606401610ae3565b6000908152600b60205260409020600101805469ffffffffffffffffffff60a01b1916600160c81b4264ffffffffff160264ffffffffff60a01b1916179055565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61277d8484846124cc565b61278984848484612890565b6110d25760405162461bcd60e51b8152600401610ae390613aa4565b6001600160a01b038316612800576127fb81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b612823565b816001600160a01b0316836001600160a01b031614612823576128238382612991565b6001600160a01b03821661283a57610dc381612a2e565b826001600160a01b0316826001600160a01b031614610dc357610dc38282612add565b6128678383612b21565b6128746000848484612890565b610dc35760405162461bcd60e51b8152600401610ae390613aa4565b60006001600160a01b0384163b1561298657604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906128d4903390899088908890600401613af6565b6020604051808303816000875af192505050801561290f575060408051601f3d908101601f1916820190925261290c91810190613b33565b60015b61296c573d80801561293d576040519150601f19603f3d011682016040523d82523d6000602084013e612942565b606091505b5080516000036129645760405162461bcd60e51b8152600401610ae390613aa4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612034565b506001949350505050565b6000600161299e84611661565b6129a89190613725565b6000838152600760205260409020549091508082146129fb576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612a4090600190613725565b60008381526009602052604081205460088054939450909284908110612a6857612a686139b6565b906000526020600020015490508060088381548110612a8957612a896139b6565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480612ac157612ac1613b50565b6001900381819060005260206000200160009055905550505050565b6000612ae883611661565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216612b775760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610ae3565b6000818152600260205260409020546001600160a01b031615612bdc5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610ae3565b612be8600083836127a5565b6001600160a01b0382166000908152600360205260408120805460019290612c11908490613824565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146112d057600080fd5b600060208284031215612c9757600080fd5b8135610b8581612c6f565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612cd357612cd3612ca2565b604051601f8501601f19908116603f01168101908282118183101715612cfb57612cfb612ca2565b81604052809350858152868686011115612d1457600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612d3f57600080fd5b610b8583833560208501612cb8565b60008060408385031215612d6157600080fd5b82359150602083013567ffffffffffffffff811115612d7f57600080fd5b612d8b85828601612d2e565b9150509250929050565b60005b83811015612db0578181015183820152602001612d98565b838111156110d25750506000910152565b60008151808452612dd9816020860160208601612d95565b601f01601f19169290920160200192915050565b602081526000610b856020830184612dc1565b600060208284031215612e1257600080fd5b5035919050565b80356001600160a01b0381168114612e3057600080fd5b919050565b60008060408385031215612e4857600080fd5b612e5183612e19565b946020939093013593505050565b600080600060608486031215612e7457600080fd5b612e7d84612e19565b9250612e8b60208501612e19565b9150604084013590509250925092565b803561ffff81168114612e3057600080fd5b600060208284031215612ebf57600080fd5b610b8582612e9b565b600060208284031215612eda57600080fd5b610b8582612e19565b60008060008060008060c08789031215612efc57600080fd5b863567ffffffffffffffff811115612f1357600080fd5b612f1f89828a01612d2e565b9960208901359950604089013598606081013598506080810135975060a0013595509350505050565b60008060408385031215612f5b57600080fd5b82359150612f6b60208401612e9b565b90509250929050565b60008060408385031215612f8757600080fd5b82359150602083013564ffffffffff81168114612fa357600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60048110612fe257634e487b7160e01b600052602160045260246000fd5b9052565b6000610100820190506001600160801b0380845116835280602085015116602084015280604085015116604084015250606083015161ffff8082166060850152806080860151166080850152505060a083015161304c60a084018264ffffffffff169052565b5060c083015161306560c084018264ffffffffff169052565b5060e083015161307860e0840182612fc4565b5092915050565b6000806040838503121561309257600080fd5b61309b83612e19565b915060208301358015158114612fa357600080fd5b600080600080608085870312156130c657600080fd5b6130cf85612e19565b93506130dd60208601612e19565b925060408501359150606085013567ffffffffffffffff81111561310057600080fd5b8501601f8101871361311157600080fd5b61312087823560208401612cb8565b91505092959194509250565b6001600160801b03898116825288811660208301528716604082015261ffff86811660608301528516608082015264ffffffffff84811660a0830152831660c0820152610100810161318160e0830184612fc4565b9998505050505050505050565b60006101408c83528b60208401528a604084015289606084015288608084015260018060a01b03881660a08401528660c08401528560e084015284610100840152806101208401526131e281840185612dc1565b9d9c50505050505050505050505050565b6000806040838503121561320657600080fd5b61320f83612e19565b9150612f6b60208401612e19565b6000815161322f818560208601612d95565b9290920192915050565b7f7b226465736372697074696f6e223a202257697a61726441726d79220000000081527f2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a6172601c8201527f6461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520603c820152653a3434b9949160d11b605c8201526b16101134b6b0b3b2911d101160a11b606282015282516000906132e281606e850160208801612d95565b601160f91b606e91840191820152711610113730b6b2911d10112bb4bd30b9321160711b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260818201527f3a20226e756d626572222c202274726169745f74797065223a20226c6576656c60a18201526b0111610113b30b63ab2911d160a51b60c182015261338a61337c60cd83018661321d565b61207d60f01b815260020190565b95945050505050565b600085516133a5818460208a01612d95565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226870222c202276616c7565223a200000000000006020830152865161340781603a850160208b01612d95565b61207d60f01b603a93909101928301819052603c83018290527f6169745f74797065223a20226d61676963616c20706f776572222c202276616c605c8401526403ab2911d160dd1b607c8401528651613467816081860160208b01612d95565b608193019283015260838201527f6169745f74797065223a20226d61676963616c20646566656e7365222c20227660a382015266030b63ab2911d160cd1b60c38201526134ba61337c60ca83018661321d565b979650505050505050565b600084516134d7818460208901612d95565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20227370656564222c202276616c7565223a200000006020830152855161353981603d850160208a01612d95565b80830192505061207d60f01b80603d84015281603f8401527f6169745f74797065223a202277696e73222c202276616c7565223a2000000000605f8401528551915061358c82607b850160208901612d95565b607b9290910191820152607d0195945050505050565b600085516135b4818460208a01612d95565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a20226c6f73736573222c202276616c7565223a2000006020830152865161361681603e850160208b01612d95565b80830192505061207d60f01b80603e8401528160408401527f6169745f74797065223a2022626174746c6573222c202276616c7565223a20006060840152865161366781607f860160208b01612d95565b607f93019283015260818201527f6169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c60a18201526403ab2911d160dd1b60c18201526134ba61337c60c683018661321d565b600082516136ca818460208701612d95565b605d60f81b920191825250607d60f81b6001820152600201919050565b6020808252600e908201526d1a5b9d985b1a59081dda5e985c9960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156137375761373761370f565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826137615761376161373c565b500490565b600181811c9082168061377a57607f821691505b60208210810361379a57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600081600019048311821515161561380b5761380b61370f565b500290565b60008261381f5761381f61373c565b500690565b600082198211156138375761383761370f565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f496e76616c6964206f70657261746f7220616464726573730000000000000000604082015260600190565b601f821115610dc357600081815260208120601f850160051c810160208610156138cf5750805b601f850160051c820191505b818110156138ee578281556001016138db565b505050505050565b815167ffffffffffffffff81111561391057613910612ca2565b6139248161391e8454613766565b846138a8565b602080601f83116001811461395957600084156139415750858301515b600019600386901b1c1916600185901b1785556138ee565b600085815260208120601f198616915b8281101561398857888601518255948401946001909101908401613969565b50858210156139a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600064ffffffffff8083168185168083038211156139ec576139ec61370f565b01949350505050565b6000808454613a0381613766565b60018281168015613a1b5760018114613a3057613a5f565b60ff1984168752821515830287019450613a5f565b8860005260208060002060005b85811015613a565781548a820152908401908201613a3d565b50505082870194505b505050508351613a73818360208801612d95565b632e6a706760e01b9101908152600401949350505050565b600060018201613a9d57613a9d61370f565b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613b2990830184612dc1565b9695505050505050565b600060208284031215613b4557600080fd5b8151610b8581612c6f565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203011906406a6451bf4516b28c804222eb1d1895f46f5a9a519ce45443ee43c9164736f6c634300080f0033",
  "deployedSourceMap": "359:18675:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:12;;;;;;;;;;-1:-1:-1;988:224:12;;;;;:::i;:::-;;:::i;:::-;;;565:14:29;;558:22;540:41;;528:2;513:18;988:224:12;;;;;;;;11020:3100:28;;;;;;;;;;-1:-1:-1;11020:3100:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5021:513::-;;;;;;;;;;-1:-1:-1;5021:513:28;;;;;:::i;:::-;;:::i;:::-;;;3087:25:29;;;3075:2;3060:18;5021:513:28;2941:177:29;2525:100:10;;;;;;;;;;;;;:::i;4084:221::-;;;;;;;;;;-1:-1:-1;4084:221:10;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3287:32:29;;;3269:51;;3257:2;3242:18;4084:221:10;3123:203:29;3607:411:10;;;;;;;;;;-1:-1:-1;3607:411:10;;;;;:::i;:::-;;:::i;:::-;;1628:113:12;;;;;;;;;;-1:-1:-1;1716:10:12;:17;1628:113;;4974:339:10;;;;;;;;;;-1:-1:-1;4974:339:10;;;;;:::i;:::-;;:::i;6856:607:28:-;;;;;;;;;;-1:-1:-1;6856:607:28;;;;;:::i;:::-;;:::i;467:23::-;;;;;;;;;;-1:-1:-1;467:23:28;;;;-1:-1:-1;;;;;467:23:28;;;1296:256:12;;;;;;;;;;-1:-1:-1;1296:256:12;;;;;:::i;:::-;;:::i;18783:244:28:-;;;;;;;;;;-1:-1:-1;18783:244:28;;;;;:::i;:::-;;:::i;3725:228::-;;;;;;;;;;-1:-1:-1;3725:228:28;;;;;:::i;:::-;;:::i;8805:150::-;;;;;;;;;;-1:-1:-1;8805:150:28;;;;;:::i;:::-;;:::i;5384:185:10:-;;;;;;;;;;-1:-1:-1;5384:185:10;;;;;:::i;:::-;;:::i;16181:605:28:-;;;;;;;;;;-1:-1:-1;16181:605:28;;;;;:::i;:::-;;:::i;1818:233:12:-;;;;;;;;;;-1:-1:-1;1818:233:12;;;;;:::i;:::-;;:::i;4306:201:28:-;;;;;;;;;;-1:-1:-1;4306:201:28;;;;;:::i;:::-;;:::i;17868:217::-;;;;;;;;;;-1:-1:-1;17868:217:28;;;;;:::i;:::-;;:::i;2219:239:10:-;;;;;;;;;;-1:-1:-1;2219:239:10;;;;;:::i;:::-;;:::i;8545:89:28:-;;;;;;;;;;-1:-1:-1;8545:89:28;;;;;:::i;:::-;;:::i;15518:214::-;;;;;;;;;;-1:-1:-1;15518:214:28;;;;;:::i;:::-;;:::i;1949:208:10:-;;;;;;;;;;-1:-1:-1;1949:208:10;;;;;:::i;:::-;;:::i;1652:94:13:-;;;;;;;;;;;;;:::i;7588:819:28:-;;;;;;:::i;:::-;;:::i;2403:236::-;;;;;;;;;;-1:-1:-1;2403:236:28;;;;;:::i;:::-;;:::i;15031:349::-;;;;;;;;;;-1:-1:-1;15031:349:28;;;;;:::i;:::-;;:::i;4089:209::-;;;;;;;;;;-1:-1:-1;4089:209:28;;;;;:::i;:::-;;:::i;4669:211::-;;;;;;;;;;-1:-1:-1;4669:211:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3282:292::-;;;;;;;;;;-1:-1:-1;3282:292:28;;;;;:::i;:::-;;:::i;1001:87:13:-;;;;;;;;;;-1:-1:-1;1074:6:13;;-1:-1:-1;;;;;1074:6:13;1001:87;;2694:104:10;;;;;;;;;;;;;:::i;18321:235:28:-;;;;;;;;;;-1:-1:-1;18321:235:28;;;;;:::i;:::-;;:::i;4377:295:10:-;;;;;;;;;;-1:-1:-1;4377:295:10;;;;;:::i;:::-;;:::i;534:21:28:-;;;;;;;;;;-1:-1:-1;534:21:28;;;;-1:-1:-1;;;;;534:21:28;;;5640:328:10;;;;;;;;;;-1:-1:-1;5640:328:10;;;;;:::i;:::-;;:::i;603:24:28:-;;;;;;;;;;-1:-1:-1;603:24:28;;;;-1:-1:-1;;;;;603:24:28;;;9796:1022;;;;;;;;;;-1:-1:-1;9796:1022:28;;;;;:::i;:::-;;:::i;412:48::-;;;;;;;;;;-1:-1:-1;412:48:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;412:48:28;;;;-1:-1:-1;;;412:48:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;412:48:28;;;;;-1:-1:-1;;;412:48:28;;;;;-1:-1:-1;;;412:48:28;;;;;;;-1:-1:-1;;;412:48:28;;;;;;;;;;;;;;;;;;;;:::i;1763:40::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;2821:276::-;;;;;;;;;;-1:-1:-1;2821:276:28;;;;;:::i;:::-;;:::i;4743:164:10:-;;;;;;;;;;-1:-1:-1;4743:164:10;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:10;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:13;;;;;;;;;;-1:-1:-1;1901:192:13;;;;;:::i;:::-;;:::i;988:224:12:-;1090:4;-1:-1:-1;;;;;;1114:50:12;;-1:-1:-1;;;1114:50:12;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:12:o;11020:3100:28:-;11134:20;11157:25;;;:14;:25;;;;;;;;11134:48;;;;;;;;;-1:-1:-1;;;;;11134:48:28;;;;;-1:-1:-1;;;11134:48:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11108:13;11134:48;;;;;;;-1:-1:-1;;;11134:48:28;;;;;;;;;;-1:-1:-1;;;11134:48:28;;;;;;;;-1:-1:-1;;;11134:48:28;;;;;;;11108:13;;11134:20;:48;;;;;-1:-1:-1;;;11134:48:28;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;11195:22;11420:8;11603:31;11620:7;:13;;;-1:-1:-1;;;;;11603:31:28;:16;:31::i;:::-;11227:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11195:457;;11752:8;11850:21;11867:3;11850:16;:21::i;:::-;11980;11997:3;11980:16;:21::i;:::-;12116:22;12133:4;12116:16;:22::i;:::-;11735:422;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11717:441;;12258:8;12359:21;12376:3;12359:16;:21::i;:::-;12480;12497:3;12480:16;:21::i;:::-;12241:279;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12223:298;;12623:8;12725:21;12742:3;12725:16;:21::i;:::-;12849;12866:3;12849:16;:21::i;:::-;12983:39;13000:7;:21;;;-1:-1:-1;;;;;12983:39:28;:16;:39::i;:::-;12606:435;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12588:454;;13113:8;13096:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;13096:35:28;;;;;;;11020:3100;-1:-1:-1;;;;;11020:3100:28:o;5021:513::-;5080:7;5108:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;5124:9:28;:26;;5108:42;5100:69;;;;-1:-1:-1;;;5100:69:28;;;;;;;:::i;:::-;;;;;;;;;5320:28;;5180:13;;5320:32;;5351:1;;5320:32;:::i;:::-;5275:30;;5226:25;;;;:14;:25;;;;;:45;;;5208:63;;-1:-1:-1;;;5226:45:28;;;;5208:15;:63;:::i;:::-;5207:98;;;;:::i;:::-;:146;:284;;5461:30;;5412:25;;;;:14;:25;;;;;:45;;;5394:63;;-1:-1:-1;;;5412:45:28;;;;5394:15;:63;:::i;:::-;5393:98;;;;:::i;:::-;5207:284;;;5357:28;;:32;;5388:1;;5357:32;:::i;:::-;5180:311;5021:513;-1:-1:-1;;;5021:513:28:o;2525:100:10:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:10;4180:73;;;;-1:-1:-1;;;4180:73:10;;20396:2:29;4180:73:10;;;20378:21:29;20435:2;20415:18;;;20408:30;20474:34;20454:18;;;20447:62;-1:-1:-1;;;20525:18:29;;;20518:42;20577:19;;4180:73:10;20194:408:29;4180:73:10;-1:-1:-1;4273:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:10;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:10;:2;-1:-1:-1;;;;;3746:11:10;;3738:57;;;;-1:-1:-1;;;3738:57:10;;20809:2:29;3738:57:10;;;20791:21:29;20848:2;20828:18;;;20821:30;20887:34;20867:18;;;20860:62;-1:-1:-1;;;20938:18:29;;;20931:31;20979:19;;3738:57:10;20607:397:29;3738:57:10;679:10:7;-1:-1:-1;;;;;3830:21:10;;;;:62;;-1:-1:-1;3855:37:10;3872:5;679:10:7;4743:164:10;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:10;;21211:2:29;3808:168:10;;;21193:21:29;21250:2;21230:18;;;21223:30;21289:34;21269:18;;;21262:62;21360:26;21340:18;;;21333:54;21404:19;;3808:168:10;21009:420:29;3808:168:10;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;4974:339::-;5169:41;679:10:7;5202:7:10;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:10;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;6856:607:28:-;6932:26;;1716:10:12;:17;6916:42:28;6908:69;;;;-1:-1:-1;;;6908:69:28;;22054:2:29;6908:69:28;;;22036:21:29;22093:2;22073:18;;;22066:30;-1:-1:-1;;;22112:18:29;;;22105:44;22166:18;;6908:69:28;21852:338:29;6908:69:28;1716:10:12;:17;6996:9:28;:26;;;;6988:85;;;;-1:-1:-1;;;6988:85:28;;22397:2:29;6988:85:28;;;22379:21:29;22436:2;22416:18;;;22409:30;22475:34;22455:18;;;22448:62;-1:-1:-1;;;22526:18:29;;;22519:44;22580:19;;6988:85:28;22195:410:29;6988:85:28;7086:21;7145:13;1716:10:12;:17;;1628:113;7145:13:28;7128:60;;;;;;22795:19:29;;;;-1:-1:-1;;7160:10:28;22852:2:29;22848:15;22844:53;22830:12;;;22823:75;7172:15:28;22914:12:29;;;22907:28;22951:12;;7128:60:28;;;-1:-1:-1;;7128:60:28;;;;;;;;;7118:71;;7128:60;7118:71;;;;;-1:-1:-1;7110:80:28;7250:1;7228:16;7242:2;7118:71;7228:16;:::i;:::-;:18;;7245:1;7228:18;:::i;:::-;7227:24;;;;:::i;:::-;7219:33;;;;;;;;:::i;:::-;7289:43;;;;;;;;7295:1;7289:43;;7265:20;7289:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7201:51;;-1:-1:-1;7265:20:28;7289:43;;;7201:51;7289:43;;;;;;;;:::i;:::-;;;7265:67;-1:-1:-1;7265:67:28;7343:14;:31;7358:13;1716:10:12;:17;;1628:113;7358:13:28;:15;;7372:1;7358:15;:::i;:::-;7343:31;;;;;;;;;;;;;;-1:-1:-1;7343:31:28;:41;;;;;;-1:-1:-1;;;;;7343:41:28;;;-1:-1:-1;;;7343:41:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7343:41:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7343:41:28;-1:-1:-1;;;7343:41:28;;;;;;;;-1:-1:-1;;;;7343:41:28;;;;;-1:-1:-1;;;7343:41:28;;;;;;-1:-1:-1;;;;7343:41:28;;-1:-1:-1;;;7343:41:28;;;;;;;;;;;;;;;;;:31;;:41;;;-1:-1:-1;;;;7343:41:28;-1:-1:-1;;;;7343:41:28;;;;-1:-1:-1;;;7343:41:28;;;;;;;;;:::i;:::-;;;;;;;;;7395:39;7405:10;7417:13;1716:10:12;:17;;1628:113;7417:13:28;:15;;7431:1;7417:15;:::i;:::-;7395:9;:39::i;:::-;6897:566;;;6856:607;:::o;1296:256:12:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:12;;23599:2:29;1413:87:12;;;23581:21:29;23638:2;23618:18;;;23611:30;23677:34;23657:18;;;23650:62;-1:-1:-1;;;23728:18:29;;;23721:41;23779:19;;1413:87:12;23397:407:29;1413:87:12;-1:-1:-1;;;;;;1518:19:12;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;18783:244:28:-;1074:6:13;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;18866:24:28;::::1;::::0;;::::1;::::0;:51:::1;;-1:-1:-1::0;18908:9:28::1;::::0;-1:-1:-1;;;;;18894:23:28;;::::1;18908:9:::0;::::1;18894:23;;18866:51;18858:88;;;;-1:-1:-1::0;;;18858:88:28::1;;;;;;;:::i;:::-;18957:9;:22:::0;;-1:-1:-1;;;;;;18957:22:28::1;-1:-1:-1::0;;;;;18957:22:28;::::1;::::0;;::::1;::::0;;;18995:24:::1;::::0;3269:51:29;;;18995:24:28::1;::::0;3257:2:29;3242:18;18995:24:28::1;;;;;;;;18783:244:::0;:::o;3725:228::-;3782:4;3807:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;3823:9:28;:26;;3807:42;3799:69;;;;-1:-1:-1;;;3799:69:28;;;;;;;:::i;:::-;3911:34;;3886:21;3897:9;3886:10;:21::i;:::-;:59;;;3725:228;-1:-1:-1;;3725:228:28:o;8805:150::-;8867:22;8879:9;8867:11;:22::i;:::-;8859:60;;;;-1:-1:-1;;;8859:60:28;;24725:2:29;8859:60:28;;;24707:21:29;24764:2;24744:18;;;24737:30;24803:27;24783:18;;;24776:55;24848:18;;8859:60:28;24523:349:29;8859:60:28;8930:17;8937:9;8930:6;:17::i;:::-;8805:150;:::o;5384:185:10:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;16181:605:28:-;1074:6:13;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;16423:29:28;:45:::1;16455:13:::0;16423:29;:45:::1;:::i;:::-;-1:-1:-1::0;16479:30:28;:47;;;;16537:40;:67;;;;16479:16:::1;16615:37:::0;16663:31;:49;16723:34;:55;-1:-1:-1;16181:605:28:o;1818:233:12:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:12;;27283:2:29;1913:95:12;;;27265:21:29;27322:2;27302:18;;;27295:30;27361:34;27341:18;;;27334:62;-1:-1:-1;;;27412:18:29;;;27405:42;27464:19;;1913:95:12;27081:408:29;1913:95:12;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;4306:201:28:-;4362:7;4390:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;4406:9:28;:26;;4390:42;4382:69;;;;-1:-1:-1;;;4382:69:28;;;;;;;:::i;:::-;-1:-1:-1;4469:25:28;;;;:14;:25;;;;;:30;;;-1:-1:-1;;;4469:30:28;;;;;4306:201::o;17868:217::-;1074:6:13;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;17945:21:28;::::1;::::0;;::::1;::::0;:42:::1;;-1:-1:-1::0;17981:6:28::1;::::0;-1:-1:-1;;;;;17970:17:28;;::::1;17981:6:::0;::::1;17970:17;;17945:42;17937:79;;;;-1:-1:-1::0;;;17937:79:28::1;;;;;;;:::i;:::-;18027:6;:16:::0;;-1:-1:-1;;;;;;18027:16:28::1;-1:-1:-1::0;;;;;18027:16:28;::::1;::::0;;::::1;::::0;;;18059:18:::1;::::0;3269:51:29;;;18059:18:28::1;::::0;3257:2:29;3242:18;18059::28::1;3123:203:29::0;2219:239:10;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:10;;2354:73;;;;-1:-1:-1;;;2354:73:10;;27828:2:29;2354:73:10;;;27810:21:29;27867:2;27847:18;;;27840:30;27906:34;27886:18;;;27879:62;-1:-1:-1;;;27957:18:29;;;27950:39;28006:19;;2354:73:10;27626:405:29;8545:89:28;17417:6;;-1:-1:-1;;;;;17417:6:28;17403:10;:20;17381:139;;;;-1:-1:-1;;;17381:139:28;;28238:2:29;17381:139:28;;;28220:21:29;28277:2;28257:18;;;28250:30;28316:34;28296:18;;;28289:62;-1:-1:-1;;;28367:18:29;;;28360:33;28410:19;;17381:139:28;28036:399:29;15518:214:28;17121:9;;-1:-1:-1;;;;;17121:9:28;17107:10;:23;17099:50;;;;-1:-1:-1;;;17099:50:28;;28642:2:29;17099:50:28;;;28624:21:29;28681:2;28661:18;;;28654:30;-1:-1:-1;;;28700:18:29;;;28693:44;28754:18;;17099:50:28;28440:338:29;17099:50:28;15614:12;;;::::1;::::0;:42:::1;;-1:-1:-1::0;1716:10:12;:17;15630:9:28::1;:26;;15614:42;15606:69;;;;-1:-1:-1::0;;;15606:69:28::1;;;;;;;:::i;:::-;15686:25;::::0;;;:14:::1;:25;::::0;;;;;:30:::1;;:38:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;15686:38:28::1;-1:-1:-1::0;;;;15686:38:28;;::::1;::::0;;;::::1;::::0;;15518:214::o;1949:208:10:-;2021:7;-1:-1:-1;;;;;2049:19:10;;2041:74;;;;-1:-1:-1;;;2041:74:10;;28985:2:29;2041:74:10;;;28967:21:29;29024:2;29004:18;;;28997:30;29063:34;29043:18;;;29036:62;-1:-1:-1;;;29114:18:29;;;29107:40;29164:19;;2041:74:10;28783:406:29;2041:74:10;-1:-1:-1;;;;;;2133:16:10;;;;;:9;:16;;;;;;;1949:208::o;1652:94:13:-;1074:6;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;7588:819:28:-;7683:10;7661:18;7669:9;7661:7;:18::i;:::-;-1:-1:-1;;;;;7661:32:28;;7653:58;;;;-1:-1:-1;;;7653:58:28;;29396:2:29;7653:58:28;;;29378:21:29;29435:2;29415:18;;;29408:30;-1:-1:-1;;;29454:18:29;;;29447:43;29507:18;;7653:58:28;29194:337:29;7653:58:28;7730:25;;;;:14;:25;;;;;:45;;;-1:-1:-1;;;7730:45:28;;;;:50;7722:80;;;;-1:-1:-1;;;7722:80:28;;29738:2:29;7722:80:28;;;29720:21:29;29777:2;29757:18;;;29750:30;-1:-1:-1;;;29796:18:29;;;29789:47;29853:18;;7722:80:28;29536:341:29;7722:80:28;7873:33;;7821:25;;;;:14;:25;;;;;:49;;;7910:15;;7821:85;;-1:-1:-1;;;7821:49:28;;;;:85;:::i;:::-;:104;7813:157;;;;-1:-1:-1;;;7813:157:28;;30084:2:29;7813:157:28;;;30066:21:29;30123:2;30103:18;;;30096:30;30162:34;30142:18;;;30135:62;-1:-1:-1;;;30213:18:29;;;30206:38;30261:19;;7813:157:28;29882:404:29;7813:157:28;8036:31;;8023:9;:44;8015:80;;;;-1:-1:-1;;;8015:80:28;;30493:2:29;8015:80:28;;;30475:21:29;30532:2;30512:18;;;30505:30;30571:25;30551:18;;;30544:53;30614:18;;8015:80:28;30291:347:29;8015:80:28;8108:21;8132:25;;;:14;:25;;;;;8168:27;;;:53;;;8205:15;8168:53;;;-1:-1:-1;;;8168:53:28;-1:-1:-1;;;;8168:53:28;;;;;;;;;;8291:40;;8273:58;;;:::i;:::-;8232:31;;;:100;;;;;;;-1:-1:-1;;;8232:100:28;-1:-1:-1;;;;8232:100:28;;;;;;;;;8350:49;;;8360:10;30817:51:29;;8383:15:28;30899:2:29;30884:18;;30877:34;8372:9:28;;8350:49;;30790:18:29;8350:49:28;;;;;;;7642:765;7588:819;:::o;2403:236::-;2460:4;2485:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;2501:9:28;:26;;2485:42;2477:69;;;;-1:-1:-1;;;2477:69:28;;;;;;;:::i;:::-;-1:-1:-1;2564:25:28;;;;:14;:25;;;;;:49;;;2616:15;-1:-1:-1;;;2564:49:28;;;;;:67;;2403:236::o;15031:349::-;16952:8;;-1:-1:-1;;;;;16952:8:28;16938:10;:22;16930:48;;;;-1:-1:-1;;;16930:48:28;;31124:2:29;16930:48:28;;;31106:21:29;31163:2;31143:18;;;31136:30;-1:-1:-1;;;31182:18:29;;;31175:43;31235:18;;16930:48:28;30922:337:29;16930:48:28;15152:12;;;::::1;::::0;:42:::1;;-1:-1:-1::0;1716:10:12;:17;15168:9:28::1;:26;;15152:42;15144:65;;;::::0;-1:-1:-1;;;15144:65:28;;31466:2:29;15144:65:28::1;::::0;::::1;31448:21:29::0;31505:2;31485:18;;;31478:30;-1:-1:-1;;;31524:18:29;;;31517:40;31574:18;;15144:65:28::1;31264:334:29::0;15144:65:28::1;15228:25;::::0;;;:14:::1;:25;::::0;;;;:45:::1;;::::0;-1:-1:-1;;;15228:45:28;::::1;;;:48:::0;;15220:77:::1;;;::::0;-1:-1:-1;;;15220:77:28;;31805:2:29;15220:77:28::1;::::0;::::1;31787:21:29::0;31844:2;31824:18;;;31817:30;-1:-1:-1;;;31863:18:29;;;31856:46;31919:18;;15220:77:28::1;31603:340:29::0;15220:77:28::1;15308:25;::::0;;;:14:::1;:25;::::0;;;;:49:::1;;:64:::0;;15361:11;;15308:49;::::1;::::0;:64:::1;::::0;15361:11;;-1:-1:-1;;;15308:64:28;::::1;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15031:349:::0;;:::o;4089:209::-;4149:7;4177:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;4193:9:28;:26;;4177:42;4169:69;;;;-1:-1:-1;;;4169:69:28;;;;;;;:::i;:::-;-1:-1:-1;4256:25:28;;;;:14;:25;;;;;:34;;;-1:-1:-1;;;4256:34:28;;;;;4089:209::o;4669:211::-;4735:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4735:12:28;4768;;;;;:42;;-1:-1:-1;1716:10:12;:17;4784:9:28;:26;;4768:42;4760:69;;;;-1:-1:-1;;;4760:69:28;;;;;;;:::i;:::-;4847:25;;;;:14;:25;;;;;;;;;4840:32;;;;;;;;;-1:-1:-1;;;;;4840:32:28;;;;;-1:-1:-1;;;4840:32:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4840:32:28;;;;;;;-1:-1:-1;;;4840:32:28;;;;;;;;;;-1:-1:-1;;;4840:32:28;;;;;;;4847:25;4840:32;;;;-1:-1:-1;;;4840:32:28;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;4840:32:28;4669:211;-1:-1:-1;;4669:211:28:o;3282:292::-;3342:4;3367:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;3383:9:28;:26;;3367:42;3359:69;;;;-1:-1:-1;;;3359:69:28;;;;;;;:::i;:::-;3446:25;;;;:14;:25;;;;;:49;;;3498:15;-1:-1:-1;;;3446:49:28;;;;;:67;:120;;;;-1:-1:-1;;3517:25:28;;;;:14;:25;;;;;:45;;;-1:-1:-1;;;3517:45:28;;;;:49;;3282:292::o;2694:104:10:-;2750:13;2783:7;2776:14;;;;;:::i;18321:235:28:-;1074:6:13;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;18402:23:28;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;18442:8:28::1;::::0;-1:-1:-1;;;;;18429:21:28;;::::1;18442:8:::0;::::1;18429:21;;18402:48;18394:85;;;;-1:-1:-1::0;;;18394:85:28::1;;;;;;;:::i;:::-;18490:8;:20:::0;;-1:-1:-1;;;;;;18490:20:28::1;-1:-1:-1::0;;;;;18490:20:28;::::1;::::0;;::::1;::::0;;;18526:22:::1;::::0;3269:51:29;;;18526:22:28::1;::::0;3257:2:29;3242:18;18526:22:28::1;3123:203:29::0;4377:295:10;679:10:7;-1:-1:-1;;;;;4480:24:10;;;4472:62;;;;-1:-1:-1;;;4472:62:10;;32385:2:29;4472:62:10;;;32367:21:29;32424:2;32404:18;;;32397:30;32463:27;32443:18;;;32436:55;32508:18;;4472:62:10;32183:349:29;4472:62:10;679:10:7;4547:32:10;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:10;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:10;;;;;;;;;;4616:48;;540:41:29;;;4547:42:10;;679:10:7;4616:48:10;;513:18:29;4616:48:10;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:7;5848:7:10;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:10;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;9796:1022:28:-;7543:4:10;7567:16;;;:7;:16;;;;;;9871:13:28;;-1:-1:-1;;;;;7567:16:10;9897:78:28;;;;-1:-1:-1;;;9897:78:28;;32739:2:29;9897:78:28;;;32721:21:29;32778:2;32758:18;;;32751:30;32817:34;32797:18;;;32790:62;-1:-1:-1;;;32868:18:29;;;32861:45;32923:19;;9897:78:28;32537:411:29;9897:78:28;10060:25;;;;:14;:25;;;;;:45;;;10019:27;;-1:-1:-1;;;10060:45:28;;;;;:48;;10057:587;;-1:-1:-1;10139:29:28;;;;;;;;;;;;-1:-1:-1;;;10139:29:28;;;;10057:587;;;10238:19;10247:9;10238:8;:19::i;:::-;10235:409;;;-1:-1:-1;10283:24:28;;;;;;;;;;;;-1:-1:-1;;;10283:24:28;;;;10235:409;;;10382:19;10391:9;10382:8;:19::i;:::-;10378:266;;-1:-1:-1;10434:26:28;;;;;;;;;;;;-1:-1:-1;;;10434:26:28;;;;10378:266;;;10593:39;10610:21;10621:9;10610:10;:21::i;:::-;10593:16;:39::i;:::-;10577:55;;10378:266;10686:70;;10654:22;;10686:70;;10703:29;;10734:13;;10686:70;;;:::i;:::-;;;;;;;;;;;;;10654:103;;10775:35;10790:9;10801:8;10775:14;:35::i;:::-;10768:42;9796:1022;-1:-1:-1;;;;9796:1022:28:o;1763:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1763:40:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2821:276::-;2878:4;2903:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;2919:9:28;:26;;2903:42;2895:69;;;;-1:-1:-1;;;2895:69:28;;;;;;;:::i;:::-;2982:25;;;;:14;:25;;;;;:49;;;-1:-1:-1;;;2982:49:28;;;;:54;;;;:107;;-1:-1:-1;;3040:25:28;;;;:14;:25;;;;;:45;;;-1:-1:-1;;;3040:45:28;;;;:49;;2821:276::o;1901:192:13:-;1074:6;;-1:-1:-1;;;;;1074:6:13;679:10:7;1221:23:13;1213:68;;;;-1:-1:-1;;;1213:68:13;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:13;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:13;;34333:2:29;1982:73:13::1;::::0;::::1;34315:21:29::0;34372:2;34352:18;;;34345:30;34411:34;34391:18;;;34384:62;-1:-1:-1;;;34462:18:29;;;34455:36;34508:19;;1982:73:13::1;34131:402:29::0;1982:73:13::1;2066:19;2076:8;2066:9;:19::i;1580:305:10:-:0;1682:4;-1:-1:-1;;;;;;1719:40:10;;-1:-1:-1;;;1719:40:10;;:105;;-1:-1:-1;;;;;;;1776:48:10;;-1:-1:-1;;;1776:48:10;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:8;;;1841:36:10;799:157:8;286:723:26;342:13;563:5;572:1;563:10;559:53;;-1:-1:-1;;590:10:26;;;;;;;;;;;;-1:-1:-1;;;590:10:26;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:26;;-1:-1:-1;742:2:26;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:26;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:26;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:26;;;;;;;;-1:-1:-1;947:11:26;956:2;947:11;;:::i;:::-;;;816:154;;11460:174:10;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:10;-1:-1:-1;;;;;11535:29:10;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:10;;;;;;;;;;;11460:174;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:10;7882:73;;;;-1:-1:-1;;;7882:73:10;;34880:2:29;7882:73:10;;;34862:21:29;34919:2;34899:18;;;34892:30;34958:34;34938:18;;;34931:62;-1:-1:-1;;;35009:18:29;;;35002:42;35061:19;;7882:73:10;34678:408:29;7882:73:10;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:10;:7;-1:-1:-1;;;;;8024:16:10;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:10;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:10;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:10;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:10;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:10;;10888:85;;;;-1:-1:-1;;;10888:85:10;;35293:2:29;10888:85:10;;;35275:21:29;35332:2;35312:18;;;35305:30;35371:34;35351:18;;;35344:62;-1:-1:-1;;;35422:18:29;;;35415:39;35471:19;;10888:85:10;35091:405:29;10888:85:10;-1:-1:-1;;;;;10992:16:10;;10984:65;;;;-1:-1:-1;;;10984:65:10;;35703:2:29;10984:65:10;;;35685:21:29;35742:2;35722:18;;;35715:30;35781:34;35761:18;;;35754:62;-1:-1:-1;;;35832:18:29;;;35825:34;35876:19;;10984:65:10;35501:400:29;10984:65:10;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:10;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:10;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:10;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:10;-1:-1:-1;;;;;11268:21:10;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;9125:359:28:-;9188:12;;;;;:42;;-1:-1:-1;1716:10:12;:17;9204:9:28;:26;;9188:42;9180:65;;;;-1:-1:-1;;;9180:65:28;;31466:2:29;9180:65:28;;;31448:21:29;31505:2;31485:18;;;31478:30;-1:-1:-1;;;31524:18:29;;;31517:40;31574:18;;9180:65:28;31264:334:29;9180:65:28;9301:25;;;;:14;:25;;;;;:49;;:75;;-1:-1:-1;;;;9427:49:28;-1:-1:-1;;;9360:15:28;9301:75;;;-1:-1:-1;;;;9427:49:28;;;;9125:359::o;2101:173:13:-;2176:6;;;-1:-1:-1;;;;;2193:17:13;;;-1:-1:-1;;;;;;2193:17:13;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:10:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:10;;;;;;;:::i;2664:589:12:-;-1:-1:-1;;;;;2870:18:12;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:12;:4;-1:-1:-1;;;;;2967:10:12;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:12;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:12;:2;-1:-1:-1;;;;;3167:10:12;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;8799:321:10:-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:10;;;;;;;:::i;12199:803::-;12354:4;-1:-1:-1;;;;;12375:13:10;;1064:20:25;1112:8;12371:624:10;;12411:72;;-1:-1:-1;;;12411:72:10;;-1:-1:-1;;;;;12411:36:10;;;;;:72;;679:10:7;;12462:4:10;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:10;;;;;;;;-1:-1:-1;;12411:72:10;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12657:6;:13;12674:1;12657:18;12653:272;;12700:60;;-1:-1:-1;;;12700:60:10;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:10;-1:-1:-1;;;12534:55:10;;-1:-1:-1;12527:62:10;;12371:624;-1:-1:-1;12979:4:10;12199:803;;;;;;:::o;4767:988:12:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:12;;;5245:328;;-1:-1:-1;;;;;5316:18:12;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:12;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:12;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:12;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:12;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:12:o;9456:382:10:-;-1:-1:-1;;;;;9536:16:10;;9528:61;;;;-1:-1:-1;;;9528:61:10;;37418:2:29;9528:61:10;;;37400:21:29;;;37437:18;;;37430:30;37496:34;37476:18;;;37469:62;37548:18;;9528:61:10;37216:356:29;9528:61:10;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:10;:30;9600:58;;;;-1:-1:-1;;;9600:58:10;;37779:2:29;9600:58:10;;;37761:21:29;37818:2;37798:18;;;37791:30;37857;37837:18;;;37830:58;37905:18;;9600:58:10;37577:352:29;9600:58:10;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:10;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:10;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:10;-1:-1:-1;;;;;9758:21:10;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;14:131:29:-;-1:-1:-1;;;;;;88:32:29;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:29;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:222::-;1404:5;1457:3;1450:4;1442:6;1438:17;1434:27;1424:55;;1475:1;1472;1465:12;1424:55;1497:80;1573:3;1564:6;1551:20;1544:4;1536:6;1532:17;1497:80;:::i;1588:390::-;1666:6;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1779:9;1766:23;1756:33;;1840:2;1829:9;1825:18;1812:32;1867:18;1859:6;1856:30;1853:50;;;1899:1;1896;1889:12;1853:50;1922;1964:7;1955:6;1944:9;1940:22;1922:50;:::i;:::-;1912:60;;;1588:390;;;;;:::o;1983:258::-;2055:1;2065:113;2079:6;2076:1;2073:13;2065:113;;;2155:11;;;2149:18;2136:11;;;2129:39;2101:2;2094:10;2065:113;;;2196:6;2193:1;2190:13;2187:48;;;-1:-1:-1;;2231:1:29;2213:16;;2206:27;1983:258::o;2246:269::-;2299:3;2337:5;2331:12;2364:6;2359:3;2352:19;2380:63;2436:6;2429:4;2424:3;2420:14;2413:4;2406:5;2402:16;2380:63;:::i;:::-;2497:2;2476:15;-1:-1:-1;;2472:29:29;2463:39;;;;2504:4;2459:50;;2246:269;-1:-1:-1;;2246:269:29:o;2520:231::-;2669:2;2658:9;2651:21;2632:4;2689:56;2741:2;2730:9;2726:18;2718:6;2689:56;:::i;2756:180::-;2815:6;2868:2;2856:9;2847:7;2843:23;2839:32;2836:52;;;2884:1;2881;2874:12;2836:52;-1:-1:-1;2907:23:29;;2756:180;-1:-1:-1;2756:180:29:o;3331:173::-;3399:20;;-1:-1:-1;;;;;3448:31:29;;3438:42;;3428:70;;3494:1;3491;3484:12;3428:70;3331:173;;;:::o;3509:254::-;3577:6;3585;3638:2;3626:9;3617:7;3613:23;3609:32;3606:52;;;3654:1;3651;3644:12;3606:52;3677:29;3696:9;3677:29;:::i;:::-;3667:39;3753:2;3738:18;;;;3725:32;;-1:-1:-1;;;3509:254:29:o;3768:328::-;3845:6;3853;3861;3914:2;3902:9;3893:7;3889:23;3885:32;3882:52;;;3930:1;3927;3920:12;3882:52;3953:29;3972:9;3953:29;:::i;:::-;3943:39;;4001:38;4035:2;4024:9;4020:18;4001:38;:::i;:::-;3991:48;;4086:2;4075:9;4071:18;4058:32;4048:42;;3768:328;;;;;:::o;4101:159::-;4168:20;;4228:6;4217:18;;4207:29;;4197:57;;4250:1;4247;4240:12;4265:184;4323:6;4376:2;4364:9;4355:7;4351:23;4347:32;4344:52;;;4392:1;4389;4382:12;4344:52;4415:28;4433:9;4415:28;:::i;4454:186::-;4513:6;4566:2;4554:9;4545:7;4541:23;4537:32;4534:52;;;4582:1;4579;4572:12;4534:52;4605:29;4624:9;4605:29;:::i;4645:665::-;4759:6;4767;4775;4783;4791;4799;4852:3;4840:9;4831:7;4827:23;4823:33;4820:53;;;4869:1;4866;4859:12;4820:53;4909:9;4896:23;4942:18;4934:6;4931:30;4928:50;;;4974:1;4971;4964:12;4928:50;4997;5039:7;5030:6;5019:9;5015:22;4997:50;:::i;:::-;4987:60;5094:2;5079:18;;5066:32;;-1:-1:-1;5145:2:29;5130:18;;5117:32;;5196:2;5181:18;;5168:32;;-1:-1:-1;5247:3:29;5232:19;;5219:33;;-1:-1:-1;5299:3:29;5284:19;5271:33;;-1:-1:-1;4645:665:29;-1:-1:-1;;;;4645:665:29:o;5315:252::-;5382:6;5390;5443:2;5431:9;5422:7;5418:23;5414:32;5411:52;;;5459:1;5456;5449:12;5411:52;5495:9;5482:23;5472:33;;5524:37;5557:2;5546:9;5542:18;5524:37;:::i;:::-;5514:47;;5315:252;;;;;:::o;5572:346::-;5639:6;5647;5700:2;5688:9;5679:7;5675:23;5671:32;5668:52;;;5716:1;5713;5706:12;5668:52;5752:9;5739:23;5729:33;;5812:2;5801:9;5797:18;5784:32;5856:12;5849:5;5845:24;5838:5;5835:35;5825:63;;5884:1;5881;5874:12;5825:63;5907:5;5897:15;;;5572:346;;;;;:::o;6024:127::-;6085:10;6080:3;6076:20;6073:1;6066:31;6116:4;6113:1;6106:15;6140:4;6137:1;6130:15;6156:235;6235:1;6228:5;6225:12;6215:143;;6280:10;6275:3;6271:20;6268:1;6261:31;6315:4;6312:1;6305:15;6343:4;6340:1;6333:15;6215:143;6367:18;;6156:235::o;6396:1010::-;6534:4;6576:3;6565:9;6561:19;6553:27;;-1:-1:-1;;;;;6679:2:29;6670:6;6664:13;6660:22;6649:9;6642:41;6751:2;6743:4;6735:6;6731:17;6725:24;6721:33;6714:4;6703:9;6699:20;6692:63;6823:2;6815:4;6807:6;6803:17;6797:24;6793:33;6786:4;6775:9;6771:20;6764:63;;6874:4;6866:6;6862:17;6856:24;6899:6;6961:2;6947:12;6943:21;6936:4;6925:9;6921:20;6914:51;7033:2;7025:4;7017:6;7013:17;7007:24;7003:33;6996:4;6985:9;6981:20;6974:63;;;7086:4;7078:6;7074:17;7068:24;7101:55;7150:4;7139:9;7135:20;7119:14;5999:12;5988:24;5976:37;;5923:96;7101:55;;7205:4;7197:6;7193:17;7187:24;7220:55;7269:4;7258:9;7254:20;7238:14;5999:12;5988:24;5976:37;;5923:96;7220:55;;7324:4;7316:6;7312:17;7306:24;7339:61;7394:4;7383:9;7379:20;7363:14;7339:61;:::i;:::-;;6396:1010;;;;:::o;7411:347::-;7476:6;7484;7537:2;7525:9;7516:7;7512:23;7508:32;7505:52;;;7553:1;7550;7543:12;7505:52;7576:29;7595:9;7576:29;:::i;:::-;7566:39;;7655:2;7644:9;7640:18;7627:32;7702:5;7695:13;7688:21;7681:5;7678:32;7668:60;;7724:1;7721;7714:12;7763:667;7858:6;7866;7874;7882;7935:3;7923:9;7914:7;7910:23;7906:33;7903:53;;;7952:1;7949;7942:12;7903:53;7975:29;7994:9;7975:29;:::i;:::-;7965:39;;8023:38;8057:2;8046:9;8042:18;8023:38;:::i;:::-;8013:48;;8108:2;8097:9;8093:18;8080:32;8070:42;;8163:2;8152:9;8148:18;8135:32;8190:18;8182:6;8179:30;8176:50;;;8222:1;8219;8212:12;8176:50;8245:22;;8298:4;8290:13;;8286:27;-1:-1:-1;8276:55:29;;8327:1;8324;8317:12;8276:55;8350:74;8416:7;8411:2;8398:16;8393:2;8389;8385:11;8350:74;:::i;:::-;8340:84;;;7763:667;;;;;;;:::o;8435:870::-;-1:-1:-1;;;;;8851:15:29;;;8833:34;;8903:15;;;8898:2;8883:18;;8876:43;8955:15;;8950:2;8935:18;;8928:43;8990:6;9032:15;;;9027:2;9012:18;;9005:43;9085:15;;9079:3;9064:19;;9057:44;9120:12;9169:15;;;9163:3;9148:19;;9141:44;9222:15;;9216:3;9201:19;;9194:44;8767:3;8752:19;;9247:52;9294:3;9279:19;;9271:6;9247:52;:::i;:::-;8435:870;;;;;;;;;;;:::o;9310:924::-;9674:4;9703:3;9733:6;9722:9;9715:25;9776:6;9771:2;9760:9;9756:18;9749:34;9819:6;9814:2;9803:9;9799:18;9792:34;9862:6;9857:2;9846:9;9842:18;9835:34;9906:6;9900:3;9889:9;9885:19;9878:35;9979:1;9975;9970:3;9966:11;9962:19;9954:6;9950:32;9944:3;9933:9;9929:19;9922:61;10020:6;10014:3;10003:9;9999:19;9992:35;10064:6;10058:3;10047:9;10043:19;10036:35;10108:6;10102:3;10091:9;10087:19;10080:35;10152:2;10146:3;10135:9;10131:19;10124:31;10172:56;10224:2;10213:9;10209:18;10201:6;10172:56;:::i;:::-;10164:64;9310:924;-1:-1:-1;;;;;;;;;;;;;9310:924:29:o;10239:260::-;10307:6;10315;10368:2;10356:9;10347:7;10343:23;10339:32;10336:52;;;10384:1;10381;10374:12;10336:52;10407:29;10426:9;10407:29;:::i;:::-;10397:39;;10455:38;10489:2;10478:9;10474:18;10455:38;:::i;10504:185::-;10546:3;10584:5;10578:12;10599:52;10644:6;10639:3;10632:4;10625:5;10621:16;10599:52;:::i;:::-;10667:16;;;;;10504:185;-1:-1:-1;;10504:185:29:o;10814:1883::-;11730:66;11718:79;;11827:66;11822:2;11813:12;;11806:88;11924:34;11919:2;11910:12;;11903:56;-1:-1:-1;;;11984:2:29;11975:12;;11968:46;-1:-1:-1;;;12039:2:29;12030:12;;12023:58;12104:13;;-1:-1:-1;;12126:61:29;12104:13;12174:3;12165:13;;12160:2;12148:15;;12126:61;:::i;:::-;-1:-1:-1;;;12246:3:29;12206:16;;;12238:12;;;12231:34;-1:-1:-1;;;12289:3:29;12281:12;;12274:70;12374:66;12368:3;12360:12;;12353:88;12471:66;12465:3;12457:12;;12450:88;-1:-1:-1;;;12562:3:29;12554:12;;12547:58;12621:70;12651:39;12685:3;12677:12;;12669:6;12651:39;:::i;:::-;-1:-1:-1;;;10759:17:29;;10801:1;10792:11;;10694:115;12621:70;12614:77;10814:1883;-1:-1:-1;;;;;10814:1883:29:o;12702:2085::-;13583:3;13621:6;13615:13;13637:53;13683:6;13678:3;13671:4;13663:6;13659:17;13637:53;:::i;:::-;13721:6;13716:3;13712:16;13699:29;;13747:66;13836:2;13829:5;13822:17;13873:66;13866:4;13859:5;13855:16;13848:92;13971:6;13965:13;13987:66;14044:8;14039:2;14032:5;14028:14;14021:4;14013:6;14009:17;13987:66;:::i;:::-;-1:-1:-1;;;14139:2:29;14072:20;;;;14131:11;;;14124:23;;;14171:2;14163:11;;14156:23;;;14208:66;14203:2;14195:11;;14188:87;-1:-1:-1;;;14299:3:29;14291:12;;14284:44;14353:13;;14375:64;14353:13;14424:3;14416:12;;14409:4;14397:17;;14375:64;:::i;:::-;14499:3;14458:17;;14491:12;;;14484:24;14532:3;14524:12;;14517:24;14571:66;14565:3;14557:12;;14550:88;-1:-1:-1;;;14662:3:29;14654:12;;14647:48;14711:70;14741:39;14775:3;14767:12;;14759:6;14741:39;:::i;14711:70::-;14704:77;12702:2085;-1:-1:-1;;;;;;;12702:2085:29:o;14792:1537::-;15423:3;15461:6;15455:13;15477:53;15523:6;15518:3;15511:4;15503:6;15499:17;15477:53;:::i;:::-;15561:6;15556:3;15552:16;15539:29;;15587:66;15676:2;15669:5;15662:17;15713:66;15706:4;15699:5;15695:16;15688:92;15811:6;15805:13;15827:66;15884:8;15879:2;15872:5;15868:14;15861:4;15853:6;15849:17;15827:66;:::i;:::-;15923:8;15916:5;15912:20;15902:30;;;-1:-1:-1;;;15984:2:29;15979;15975;15971:11;15964:23;16016:2;16011;16007;16003:11;15996:23;16048:66;16043:2;16039;16035:11;16028:87;16146:6;16140:13;16124:29;;16162:64;16217:8;16211:3;16207:2;16203:12;16196:4;16188:6;16184:17;16162:64;:::i;:::-;16286:3;16245:17;;;;16278:12;;;16271:24;16319:3;16311:12;;14792:1537;-1:-1:-1;;;;;14792:1537:29:o;16334:2028::-;17215:3;17253:6;17247:13;17269:53;17315:6;17310:3;17303:4;17295:6;17291:17;17269:53;:::i;:::-;17353:6;17348:3;17344:16;17331:29;;17379:66;17468:2;17461:5;17454:17;17505:66;17498:4;17491:5;17487:16;17480:92;17603:6;17597:13;17619:66;17676:8;17671:2;17664:5;17660:14;17653:4;17645:6;17641:17;17619:66;:::i;:::-;17715:8;17708:5;17704:20;17694:30;;;-1:-1:-1;;;17776:2:29;17771;17767;17763:11;17756:23;17808:2;17803;17799;17795:11;17788:23;17840:66;17835:2;17831;17827:11;17820:87;17938:6;17932:13;17954:64;18009:8;18003:3;17999:2;17995:12;17988:4;17980:6;17976:17;17954:64;:::i;:::-;18078:3;18037:17;;18070:12;;;18063:24;18111:3;18103:12;;18096:24;18150:66;18144:3;18136:12;;18129:88;-1:-1:-1;;;18241:3:29;18233:12;;18226:44;18286:70;18316:39;18350:3;18342:12;;18334:6;18316:39;:::i;18367:575::-;18700:3;18738:6;18732:13;18754:53;18800:6;18795:3;18788:4;18780:6;18776:17;18754:53;:::i;:::-;-1:-1:-1;;;18829:16:29;;18854:18;;;-1:-1:-1;;;;18899:1:29;18888:13;;18881:26;18934:1;18923:13;;18367:575;-1:-1:-1;18367:575:29:o;18947:338::-;19149:2;19131:21;;;19188:2;19168:18;;;19161:30;-1:-1:-1;;;19222:2:29;19207:18;;19200:44;19276:2;19261:18;;18947:338::o;19290:127::-;19351:10;19346:3;19342:20;19339:1;19332:31;19382:4;19379:1;19372:15;19406:4;19403:1;19396:15;19422:125;19462:4;19490:1;19487;19484:8;19481:34;;;19495:18;;:::i;:::-;-1:-1:-1;19532:9:29;;19422:125::o;19552:127::-;19613:10;19608:3;19604:20;19601:1;19594:31;19644:4;19641:1;19634:15;19668:4;19665:1;19658:15;19684:120;19724:1;19750;19740:35;;19755:18;;:::i;:::-;-1:-1:-1;19789:9:29;;19684:120::o;19809:380::-;19888:1;19884:12;;;;19931;;;19952:61;;20006:4;19998:6;19994:17;19984:27;;19952:61;20059:2;20051:6;20048:14;20028:18;20025:38;20022:161;;20105:10;20100:3;20096:20;20093:1;20086:31;20140:4;20137:1;20130:15;20168:4;20165:1;20158:15;20022:161;;19809:380;;;:::o;21434:413::-;21636:2;21618:21;;;21675:2;21655:18;;;21648:30;21714:34;21709:2;21694:18;;21687:62;-1:-1:-1;;;21780:2:29;21765:18;;21758:47;21837:3;21822:19;;21434:413::o;22974:168::-;23014:7;23080:1;23076;23072:6;23068:14;23065:1;23062:21;23057:1;23050:9;23043:17;23039:45;23036:71;;;23087:18;;:::i;:::-;-1:-1:-1;23127:9:29;;22974:168::o;23147:112::-;23179:1;23205;23195:35;;23210:18;;:::i;:::-;-1:-1:-1;23244:9:29;;23147:112::o;23264:128::-;23304:3;23335:1;23331:6;23328:1;23325:13;23322:39;;;23341:18;;:::i;:::-;-1:-1:-1;23377:9:29;;23264:128::o;23809:356::-;24011:2;23993:21;;;24030:18;;;24023:30;24089:34;24084:2;24069:18;;24062:62;24156:2;24141:18;;23809:356::o;24170:348::-;24372:2;24354:21;;;24411:2;24391:18;;;24384:30;24450:26;24445:2;24430:18;;24423:54;24509:2;24494:18;;24170:348::o;25003:545::-;25105:2;25100:3;25097:11;25094:448;;;25141:1;25166:5;25162:2;25155:17;25211:4;25207:2;25197:19;25281:2;25269:10;25265:19;25262:1;25258:27;25252:4;25248:38;25317:4;25305:10;25302:20;25299:47;;;-1:-1:-1;25340:4:29;25299:47;25395:2;25390:3;25386:12;25383:1;25379:20;25373:4;25369:31;25359:41;;25450:82;25468:2;25461:5;25458:13;25450:82;;;25513:17;;;25494:1;25483:13;25450:82;;;25454:3;;;25003:545;;;:::o;25724:1352::-;25850:3;25844:10;25877:18;25869:6;25866:30;25863:56;;;25899:18;;:::i;:::-;25928:97;26018:6;25978:38;26010:4;26004:11;25978:38;:::i;:::-;25972:4;25928:97;:::i;:::-;26080:4;;26144:2;26133:14;;26161:1;26156:663;;;;26863:1;26880:6;26877:89;;;-1:-1:-1;26932:19:29;;;26926:26;26877:89;-1:-1:-1;;25681:1:29;25677:11;;;25673:24;25669:29;25659:40;25705:1;25701:11;;;25656:57;26979:81;;26126:944;;26156:663;24950:1;24943:14;;;24987:4;24974:18;;-1:-1:-1;;26192:20:29;;;26310:236;26324:7;26321:1;26318:14;26310:236;;;26413:19;;;26407:26;26392:42;;26505:27;;;;26473:1;26461:14;;;;26340:19;;26310:236;;;26314:3;26574:6;26565:7;26562:19;26559:201;;;26635:19;;;26629:26;-1:-1:-1;;26718:1:29;26714:14;;;26730:3;26710:24;26706:37;26702:42;26687:58;26672:74;;26559:201;-1:-1:-1;;;;;26806:1:29;26790:14;;;26786:22;26773:36;;-1:-1:-1;25724:1352:29:o;27494:127::-;27555:10;27550:3;27546:20;27543:1;27536:31;27586:4;27583:1;27576:15;27610:4;27607:1;27600:15;31948:230;31987:3;32015:12;32054:2;32051:1;32047:10;32084:2;32081:1;32077:10;32115:3;32111:2;32107:12;32102:3;32099:21;32096:47;;;32123:18;;:::i;:::-;32159:13;;31948:230;-1:-1:-1;;;;31948:230:29:o;32953:1173::-;33230:3;33259:1;33292:6;33286:13;33322:36;33348:9;33322:36;:::i;:::-;33377:1;33394:18;;;33421:133;;;;33568:1;33563:356;;;;33387:532;;33421:133;-1:-1:-1;;33454:24:29;;33442:37;;33527:14;;33520:22;33508:35;;33499:45;;;-1:-1:-1;33421:133:29;;33563:356;33594:6;33591:1;33584:17;33624:4;33669:2;33666:1;33656:16;33694:1;33708:165;33722:6;33719:1;33716:13;33708:165;;;33800:14;;33787:11;;;33780:35;33843:16;;;;33737:10;;33708:165;;;33712:3;;;33902:6;33897:3;33893:16;33886:23;;33387:532;;;;;33950:6;33944:13;33966:55;34012:8;34007:3;34000:4;33992:6;33988:17;33966:55;:::i;:::-;-1:-1:-1;;;34043:18:29;;34070:21;;;34118:1;34107:13;;32953:1173;-1:-1:-1;;;;32953:1173:29:o;34538:135::-;34577:3;34598:17;;;34595:43;;34618:18;;:::i;:::-;-1:-1:-1;34665:1:29;34654:13;;34538:135::o;35906:414::-;36108:2;36090:21;;;36147:2;36127:18;;;36120:30;36186:34;36181:2;36166:18;;36159:62;-1:-1:-1;;;36252:2:29;36237:18;;36230:48;36310:3;36295:19;;35906:414::o;36325:500::-;-1:-1:-1;;;;;36594:15:29;;;36576:34;;36646:15;;36641:2;36626:18;;36619:43;36693:2;36678:18;;36671:34;;;36741:3;36736:2;36721:18;;36714:31;;;36519:4;;36762:57;;36799:19;;36791:6;36762:57;:::i;:::-;36754:65;36325:500;-1:-1:-1;;;;;;36325:500:29:o;36830:249::-;36899:6;36952:2;36940:9;36931:7;36927:23;36923:32;36920:52;;;36968:1;36965;36958:12;36920:52;37000:9;36994:16;37019:30;37043:5;37019:30;:::i;37084:127::-;37145:10;37140:3;37136:20;37133:1;37126:31;37176:4;37173:1;37166:15;37200:4;37197:1;37190:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "appointer()": {
        "notice": "contract address to exile any wizard"
      },
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "initiate Wizards NFT",
        "params": {
          "_ERC20Address": "address for ecosystem token (currency)",
          "_imageBaseURI": "base URI used for images",
          "_name": "name of NFT",
          "_symbol": "symbol for NFT"
        }
      },
      "cull(uint256)": {
        "details": "exile an NFT that is negligent in duties. Use only for culling.",
        "params": {
          "_wizardId": "id of wizard."
        }
      },
      "culler()": {
        "notice": "contract address to update stats"
      },
      "exile(uint256)": {
        "details": "exile an NFT that is negligent in duties. Any address can call this, but wizard must have deserted",
        "params": {
          "_wizardId": "id of wizard."
        }
      },
      "formatTokenURI(uint256,string)": {
        "details": "format URI based on image and _wizardId",
        "params": {
          "_wizardId": "id of wizard.",
          "imageURI": "inline SVG string."
        },
        "returns": {
          "_0": "returns inline URI as string"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getPhaseOf(uint256)": {
        "details": "Returns phase of wizard",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "number representing phase"
        }
      },
      "getStatsGivenId(uint256)": {
        "details": "returns stats of wizard, potentially amplified by level or phase",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "stats"
        }
      },
      "getUplineId(uint256)": {
        "details": "Check if wizard is active",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "wizardId of upline"
        }
      },
      "hasDeserted(uint256)": {
        "details": "check if wizard has deserted and thus can be exiled",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "true -> deserted; false -> has not deserted"
        }
      },
      "increaseProtectedUntilTimestamp(uint256,uint40)": {
        "details": "increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.",
        "params": {
          "_timeReward": "amout of time in seconds to add to current protectedUntilTimestamp",
          "_wizardId": "id of wizard."
        }
      },
      "initiate(uint256)": {
        "details": "Changes NFT from uninitated or exiled to initiated",
        "params": {
          "_wizardId": "id of wizard."
        }
      },
      "isActive(uint256)": {
        "details": "Check if wizard is active",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "true if active, false if inactive"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "isExiled(uint256)": {
        "details": "check if wizard has been exiled (temporarily banished)",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "true -> exiled; false -> not exiled"
        }
      },
      "isMature(uint256)": {
        "details": "Check if wizard is active",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "true if active, false if inactive"
        }
      },
      "mint(uint16)": {
        "details": "check if wizard has deserted and thus can be exiled",
        "params": {
          "_uplineId": "id of referring wizard. use 0 if no referral"
        }
      },
      "modifyContractSettings(string,uint256,uint256,uint256,uint256,uint256)": {
        "details": "modify contract settings. Only available to owner",
        "params": {
          "_imageBaseURI": "baseURI for images",
          "_initiationCost": "cost in ETH to initiate",
          "_phaseDuration": "period in seconds for phases",
          "_protectionTimeExtension": "problby remove this // todo -- delete"
        }
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "get token URI",
        "params": {
          "_wizardId": "id of wizard."
        },
        "returns": {
          "_0": "returns inline URI as string"
        }
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateAppointer(address)": {
        "details": "increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.",
        "params": {
          "_appointer": "the new address for appointer, the contract which can appoint and create roles"
        }
      },
      "updateCuller(address)": {
        "details": "increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.",
        "params": {
          "_culler": "new address for culler, the wallet/contract which can exile wizards without contraint"
        }
      },
      "updateVerifier(address)": {
        "details": "increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.",
        "params": {
          "_verifier": "the new address for verifier, the contract which can add protectedUntil time for wizards"
        }
      }
    },
    "version": 1
  },
  "offset": [
    359,
    19034
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x25C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DC1A993 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x97FC007C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xE833BF63 EQ PUSH2 0x804 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97FC007C EQ PUSH2 0x67D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x69D JUMPI DUP1 PUSH4 0xAD275CBB EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0xC3CF52BE EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86954C5E GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x86954C5E EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x8B8555D6 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x8CB22518 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5179A EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6DC1A993 EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x4A535A55 GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4A535A55 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x5312FDC2 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x54E14151 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x690C8E18 EQ PUSH2 0x515 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x30DF0612 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x3E55E63D EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x40EBCB8E EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x224 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x23CF0A22 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x306 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x2C85 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4E JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x2DED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0xB8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x28D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E35 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E5F JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAD JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E35 JUMP JUMPDEST PUSH2 0x10D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x116E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E5F JUMP JUMPDEST PUSH2 0x12D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE3 JUMP JUMPDEST PUSH2 0x12EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x13D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x14DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1551 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F48 JUMP JUMPDEST PUSH2 0x15B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x598 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x171E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x5B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1957 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F74 JUMP JUMPDEST PUSH2 0x19AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1AF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x2FE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x326 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x1CFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x698 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x1D0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x6B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x307F JUMP JUMPDEST PUSH2 0x1DC4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x1E88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x1EBA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV DUP3 AND SWAP3 SWAP2 DUP3 AND SWAP2 PUSH2 0xFFFF SWAP2 DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL DUP3 DIV AND SWAP1 PUSH5 0xFFFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x312C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EE PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x318E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x81F CALLDATASIZE PUSH1 0x4 PUSH2 0x2E00 JUMP JUMPDEST PUSH2 0x2105 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x830 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x83F CALLDATASIZE PUSH1 0x4 PUSH2 0x31F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0x888 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EC8 JUMP JUMPDEST PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x8B2 JUMPI POP PUSH2 0x8B2 DUP3 PUSH2 0x221A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP6 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP6 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH2 0xFFFF SWAP3 DUP5 DIV DUP4 AND PUSH1 0x60 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x90 SHL DUP6 DIV SWAP1 SWAP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP6 DIV DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP6 DIV AND PUSH1 0xC0 DUP3 ADD MSTORE SWAP2 SWAP4 SWAP3 PUSH1 0xE0 DUP4 ADD SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x967 PUSH2 0x2FAE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x978 JUMPI PUSH2 0x978 PUSH2 0x2FAE JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x997 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9A8 SWAP3 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x9C5 PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x9D0 PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x270F PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0xA0B PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH2 0xA16 PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA28 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0xA45 PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH2 0xA50 PUSH2 0x3E7 PUSH2 0x226A JUMP JUMPDEST PUSH2 0xA66 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x226A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA79 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x36B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAC7 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xAFE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3725 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB2B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x3725 JUMP JUMPDEST PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x3752 JUMP JUMPDEST GT PUSH2 0xB76 JUMPI PUSH1 0x15 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB67 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP PUSH2 0x3725 JUMP JUMPDEST PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x3752 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x16 SLOAD PUSH2 0xB85 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3725 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xB9B SWAP1 PUSH2 0x3766 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC7 SWAP1 PUSH2 0x3766 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBF7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBE DUP3 PUSH2 0x14DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xD47 JUMPI POP PUSH2 0xD47 DUP2 CALLER PUSH2 0x83F JUMP JUMPDEST PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0xDC3 DUP4 DUP4 PUSH2 0x236B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDD2 CALLER DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0xDC3 DUP4 DUP4 DUP4 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C69642075706C696E652D2D6D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6E20746F74616C20737570706C79 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB5 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xF0A PUSH1 0xA DUP5 PUSH2 0x3752 JUMP JUMPDEST PUSH2 0xF15 SWAP1 PUSH1 0x6 PUSH2 0x37F1 JUMP JUMPDEST PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF30 JUMPI PUSH2 0xF30 PUSH2 0x2FAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xFFFF DUP7 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 PUSH1 0xE0 DUP2 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF87 JUMPI PUSH2 0xF87 PUSH2 0x2FAE JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xF99 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFA4 SWAP1 PUSH1 0x1 PUSH2 0x3824 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP6 AND DUP3 MUL OR DUP3 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 DUP9 ADD MLOAD PUSH1 0xA0 DUP10 ADD MLOAD PUSH1 0xC0 DUP11 ADD MLOAD SWAP6 SWAP1 SWAP9 AND PUSH18 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH2 0xFFFF SWAP2 DUP3 AND SWAP1 SWAP7 MUL SWAP6 SWAP1 SWAP6 OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL SWAP6 SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 MUL PUSH5 0xFFFFFFFFFF PUSH1 0xA0 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH5 0xFFFFFFFFFF SWAP6 DUP7 AND MUL OR PUSH5 0xFFFFFFFFFF PUSH1 0xC8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP6 SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP5 MUL SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0xE0 DUP6 ADD MLOAD SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 PUSH6 0xFFFFFFFFFFFF PUSH1 0xC8 SHL NOT AND PUSH1 0xFF PUSH1 0xF0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10AD JUMPI PUSH2 0x10AD PUSH2 0x2FAE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x10D2 CALLER PUSH2 0x10C2 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10CD SWAP1 PUSH1 0x1 PUSH2 0x3824 JUMP JUMPDEST PUSH2 0x2677 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 DUP4 PUSH2 0x1661 JUMP JUMPDEST DUP3 LT PUSH2 0x1145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11BE JUMPI POP PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x11DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3871 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x35829BF1DC2D1C476529ECA85A3BA530615D11B4A5255FF7B730B4E1153E92C0 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1242 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x125E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0x126A DUP4 PUSH2 0xAB4 JUMP JUMPDEST LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x127B DUP2 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697A6172642063616E206E6F74206265206578696C65642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x12D0 DUP2 PUSH2 0x2695 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDC3 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1E88 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x18 PUSH2 0x1324 DUP8 DUP3 PUSH2 0x38F6 JUMP JUMPDEST POP PUSH1 0x15 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x12 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xF SSTORE PUSH1 0x10 SSTORE PUSH1 0x17 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1348 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13BE JUMPI PUSH2 0x13BE PUSH2 0x39B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13E3 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1470 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3871 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x98543B1B9BBF23B0CA565BE0F1A833222E982F36322287BF2E001B1227473AFE SWAP1 PUSH1 0x20 ADD PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063756C6C65722063616E2063616C6C20746869732066756E637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x37B717 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x37B7363C9030B83837B4B73A32B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1613 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x162F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH2 0xFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH2 0x171C PUSH1 0x0 PUSH2 0x2720 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x1728 DUP3 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x176E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND ISZERO PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP SWAP2 PUSH2 0x17FD SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH2 0x3824 JUMP JUMPDEST LT PUSH2 0x185B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578696C65642077697A617264206E6F742079657420616C6C6F77656420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x103932BA3AB93717 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE EQ PUSH2 0x18AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E636F727265637420696E69746961746F6E20666565000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF TIMESTAMP SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH5 0xFFFFFFFFFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x12 SLOAD PUSH2 0x18F0 SWAP2 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH5 0xFFFFFFFFFF PUSH1 0xC8 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x196A JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND GT SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1A08 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1A41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1A5B9D985B1A59081A59 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 SUB PUSH2 0x1AA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1A5CC81B9BDD081A5B9A5D1A585D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x19 SWAP1 PUSH2 0x1AD4 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH2 0x39CC JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B0B JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1B8D PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B9E JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1BBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH2 0x100 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP2 AND SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP5 AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL DUP4 DIV AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP4 DIV AND PUSH1 0xC0 DUP5 ADD MSTORE SWAP1 PUSH1 0xE0 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C63 JUMPI PUSH2 0x1C63 PUSH2 0x2FAE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C74 PUSH2 0x2FAE JUMP JUMPDEST SWAP1 MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C90 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x1CAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0x8B2 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xB9B SWAP1 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D5A JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1D76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3871 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD PUSH2 0x1224 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1E1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1E92 CALLER DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1EAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x37A0 JUMP JUMPDEST PUSH2 0x10D2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x60 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH5 0xFFFFFFFFFF AND SWAP1 SUB PUSH2 0x1F8B JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x1D5B9A5B9A5D1A585D1959 PUSH1 0xAA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1F94 DUP4 PUSH2 0x2105 JUMP JUMPDEST ISZERO PUSH2 0x1FBC JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x195E1A5B1959 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1FC5 DUP4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x1FEE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x696E616374697665 PUSH1 0xC0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x1FFF PUSH2 0x1FFA DUP5 PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x226A JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2019 SWAP1 PUSH1 0x18 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x39F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x2034 DUP5 DUP3 PUSH2 0x8B8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH1 0x18 DUP1 SLOAD SWAP10 SWAP11 SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0x2082 SWAP1 PUSH2 0x3766 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20AE SWAP1 PUSH2 0x3766 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2118 JUMPI POP PUSH1 0x8 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x36E7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8B2 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x12D0 DUP2 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x224B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8B2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x2291 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x22BB JUMPI DUP1 PUSH2 0x22A5 DUP2 PUSH2 0x3A8B JUMP JUMPDEST SWAP2 POP PUSH2 0x22B4 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3752 JUMP JUMPDEST SWAP2 POP PUSH2 0x2295 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2300 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2034 JUMPI PUSH2 0x2315 PUSH1 0x1 DUP4 PUSH2 0x3725 JUMP JUMPDEST SWAP2 POP PUSH2 0x2322 PUSH1 0xA DUP7 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0x232D SWAP1 PUSH1 0x30 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2342 JUMPI PUSH2 0x2342 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2364 PUSH1 0xA DUP7 PUSH2 0x3752 JUMP JUMPDEST SWAP5 POP PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x23A0 DUP3 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245D DUP4 PUSH2 0x14DA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2498 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x248D DUP5 PUSH2 0xC1E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x2034 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2034 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24DF DUP3 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2547 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x25B4 DUP4 DUP4 DUP4 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x25BF PUSH1 0x0 DUP3 PUSH2 0x236B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x25E8 SWAP1 DUP5 SWAP1 PUSH2 0x3725 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2616 SWAP1 DUP5 SWAP1 PUSH2 0x3824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x2691 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x285D JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x26A6 JUMPI POP PUSH1 0x8 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x26DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1A5B9D985B1A59081A59 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL TIMESTAMP PUSH5 0xFFFFFFFFFF AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x277D DUP5 DUP5 DUP5 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0x2789 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2800 JUMPI PUSH2 0x27FB DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2823 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2823 JUMPI PUSH2 0x2823 DUP4 DUP3 PUSH2 0x2991 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x283A JUMPI PUSH2 0xDC3 DUP2 PUSH2 0x2A2E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDC3 JUMPI PUSH2 0xDC3 DUP3 DUP3 PUSH2 0x2ADD JUMP JUMPDEST PUSH2 0x2867 DUP4 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH2 0x2874 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2986 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x28D4 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3AF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x290F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x290C SWAP2 DUP2 ADD SWAP1 PUSH2 0x3B33 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x296C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x293D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2942 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP1 PUSH2 0x3AA4 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x2034 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x299E DUP5 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x29A8 SWAP2 SWAP1 PUSH2 0x3725 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x29FB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2A40 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3725 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x2A68 JUMPI PUSH2 0x2A68 PUSH2 0x39B6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A89 JUMPI PUSH2 0x2A89 PUSH2 0x39B6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x2AC1 JUMPI PUSH2 0x2AC1 PUSH2 0x3B50 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE8 DUP4 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2B77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2BDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x2BE8 PUSH1 0x0 DUP4 DUP4 PUSH2 0x27A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2C11 SWAP1 DUP5 SWAP1 PUSH2 0x3824 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB85 DUP2 PUSH2 0x2C6F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2CD3 JUMPI PUSH2 0x2CD3 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2CFB PUSH2 0x2CA2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2CB8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8B DUP6 DUP3 DUP7 ADD PUSH2 0x2D2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DB0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D98 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10D2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2DD9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E51 DUP4 PUSH2 0x2E19 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E7D DUP5 PUSH2 0x2E19 JUMP JUMPDEST SWAP3 POP PUSH2 0x2E8B PUSH1 0x20 DUP6 ADD PUSH2 0x2E19 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 DUP3 PUSH2 0x2E9B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 DUP3 PUSH2 0x2E19 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F1F DUP10 DUP3 DUP11 ADD PUSH2 0x2D2E JUMP JUMPDEST SWAP10 PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP10 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP9 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP9 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2F6B PUSH1 0x20 DUP5 ADD PUSH2 0x2E9B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2FA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2FE2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xFFFF DUP1 DUP3 AND PUSH1 0x60 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP7 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x304C PUSH1 0xA0 DUP5 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x3065 PUSH1 0xC0 DUP5 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3078 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x2FC4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x309B DUP4 PUSH2 0x2E19 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2FA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x30C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30CF DUP6 PUSH2 0x2E19 JUMP JUMPDEST SWAP4 POP PUSH2 0x30DD PUSH1 0x20 DUP7 ADD PUSH2 0x2E19 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x3111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3120 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2CB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP10 DUP2 AND DUP3 MSTORE DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xFFFF DUP7 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF DUP5 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE DUP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD PUSH2 0x3181 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x2FC4 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP13 DUP4 MSTORE DUP12 PUSH1 0x20 DUP5 ADD MSTORE DUP11 PUSH1 0x40 DUP5 ADD MSTORE DUP10 PUSH1 0x60 DUP5 ADD MSTORE DUP9 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP7 PUSH1 0xC0 DUP5 ADD MSTORE DUP6 PUSH1 0xE0 DUP5 ADD MSTORE DUP5 PUSH2 0x100 DUP5 ADD MSTORE DUP1 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x31E2 DUP2 DUP5 ADD DUP6 PUSH2 0x2DC1 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x320F DUP4 PUSH2 0x2E19 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6B PUSH1 0x20 DUP5 ADD PUSH2 0x2E19 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x322F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D95 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x32E2 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x338A PUSH2 0x337C PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x321D JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x33A5 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x2D95 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x3407 DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x3A SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3C DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C PUSH1 0x5C DUP5 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0x7C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x3467 DUP2 PUSH1 0x81 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x81 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x83 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276 PUSH1 0xA3 DUP3 ADD MSTORE PUSH7 0x30B63AB2911D1 PUSH1 0xCD SHL PUSH1 0xC3 DUP3 ADD MSTORE PUSH2 0x34BA PUSH2 0x337C PUSH1 0xCA DUP4 ADD DUP7 PUSH2 0x321D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x34D7 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x2D95 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20227370656564222C202276616C7565223A20000000 PUSH1 0x20 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x3539 DUP2 PUSH1 0x3D DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2D95 JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3D DUP5 ADD MSTORE DUP2 PUSH1 0x3F DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000 PUSH1 0x5F DUP5 ADD MSTORE DUP6 MLOAD SWAP2 POP PUSH2 0x358C DUP3 PUSH1 0x7B DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x7B SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7D ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x35B4 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x2D95 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x3616 DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2D95 JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x3667 DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x34BA PUSH2 0x337C PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x321D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x36CA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A59081DDA5E985C99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3737 JUMPI PUSH2 0x3737 PUSH2 0x370F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3761 JUMPI PUSH2 0x3761 PUSH2 0x373C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x377A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x379A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x380B JUMPI PUSH2 0x380B PUSH2 0x370F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x381F JUMPI PUSH2 0x381F PUSH2 0x373C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3837 JUMPI PUSH2 0x3837 PUSH2 0x370F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F70657261746F7220616464726573730000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x38CF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38EE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38DB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3910 JUMPI PUSH2 0x3910 PUSH2 0x2CA2 JUMP JUMPDEST PUSH2 0x3924 DUP2 PUSH2 0x391E DUP5 SLOAD PUSH2 0x3766 JUMP JUMPDEST DUP5 PUSH2 0x38A8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3959 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3941 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x38EE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3988 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3969 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x39A6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x39EC JUMPI PUSH2 0x39EC PUSH2 0x370F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x3A03 DUP2 PUSH2 0x3766 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3A1B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3A30 JUMPI PUSH2 0x3A5F JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3A5F JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3A56 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3A3D JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x3A73 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2D95 JUMP JUMPDEST PUSH4 0x2E6A7067 PUSH1 0xE0 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3A9D JUMPI PUSH2 0x3A9D PUSH2 0x370F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3B29 SWAP1 DUP4 ADD DUP5 PUSH2 0x2DC1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB85 DUP2 PUSH2 0x2C6F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS GT SWAP1 PUSH5 0x6A6451BF4 MLOAD PUSH12 0x28C804222EB1D1895F46F5A9 0xA5 NOT 0xCE GASLIMIT DIFFICULTY RETURNDATACOPY 0xE4 EXTCODECOPY SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "LT",
      "path": "28"
    },
    "9": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x25C"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "13": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "SHR",
      "path": "28"
    },
    "19": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6DC1A993"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x144"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "30": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x97FC007C"
    },
    "36": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "37": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "41": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC87B56DD"
    },
    "47": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "48": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "52": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC87B56DD"
    },
    "58": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "59": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x71D"
    },
    "62": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "63": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC87BFC7F"
    },
    "69": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "70": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x73D"
    },
    "73": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "74": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xDB2A0A55"
    },
    "80": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "81": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7D9"
    },
    "84": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "85": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE833BF63"
    },
    "91": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "92": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x804"
    },
    "95": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "96": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xE985E9C5"
    },
    "102": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "103": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x824"
    },
    "106": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "107": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "108": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xF2FDE38B"
    },
    "113": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "114": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x86D"
    },
    "117": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "118": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "121": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x97FC007C"
    },
    "129": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "130": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x67D"
    },
    "133": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "134": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xA22CB465"
    },
    "140": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "141": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x69D"
    },
    "144": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "145": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xAD275CBB"
    },
    "151": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "152": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6BD"
    },
    "155": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "156": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xB88D4FDE"
    },
    "162": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "163": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6DD"
    },
    "166": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "167": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "168": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0xC3CF52BE"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "174": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6FD"
    },
    "177": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "178": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "181": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "182": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "183": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x86954C5E"
    },
    "189": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "190": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "194": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x86954C5E"
    },
    "200": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "201": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5BD"
    },
    "204": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "205": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8B8555D6"
    },
    "211": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "212": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5DD"
    },
    "215": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "216": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8CB22518"
    },
    "222": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "223": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5FD"
    },
    "226": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "227": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8DA5179A"
    },
    "233": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "234": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x62A"
    },
    "237": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "238": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "239": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x8DA5CB5B"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "245": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x64A"
    },
    "248": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "249": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "250": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x95D89B41"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "256": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x668"
    },
    "259": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "260": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "263": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "264": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "265": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6DC1A993"
    },
    "271": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "272": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x535"
    },
    "275": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "276": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x70A08231"
    },
    "282": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "283": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x555"
    },
    "286": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "287": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "288": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x715018A6"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "294": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x575"
    },
    "297": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "298": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "299": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x7901EA78"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "305": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x58A"
    },
    "308": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "309": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "310": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x82AFD23B"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "316": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x59D"
    },
    "319": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "320": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "323": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "324": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "325": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x2F745C59"
    },
    "331": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "332": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1DD"
    },
    "335": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "336": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4A535A55"
    },
    "342": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "343": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A1"
    },
    "346": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "347": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4A535A55"
    },
    "353": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "354": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x475"
    },
    "357": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "358": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x4F6CCCE7"
    },
    "364": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "365": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x495"
    },
    "368": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "369": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "370": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x5312FDC2"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "376": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4B5"
    },
    "379": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "380": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "381": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x54E14151"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "387": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D5"
    },
    "390": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "391": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "392": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6352211E"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "398": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F5"
    },
    "401": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "402": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "403": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x690C8E18"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "409": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x515"
    },
    "412": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "413": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "415": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "416": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "417": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "418": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "419": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x2F745C59"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "425": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3D5"
    },
    "428": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "429": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "430": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x30DF0612"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "436": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3F5"
    },
    "439": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "440": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "441": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x3E55E63D"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "447": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x415"
    },
    "450": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "451": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "452": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x40EBCB8E"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "458": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x435"
    },
    "461": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "462": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "463": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x42842E0E"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "469": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x455"
    },
    "472": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "473": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "475": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "476": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "477": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "478": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "479": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x95EA7B3"
    },
    "484": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "GT",
      "path": "28"
    },
    "485": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x224"
    },
    "488": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "489": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "490": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x95EA7B3"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "496": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x33E"
    },
    "499": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "500": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "501": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x18160DDD"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "507": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x360"
    },
    "510": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "511": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "512": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x23B872DD"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "518": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x375"
    },
    "521": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "522": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "523": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x23CF0A22"
    },
    "528": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "529": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x395"
    },
    "532": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "533": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "534": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x2B7AC3F3"
    },
    "539": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "540": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3B5"
    },
    "543": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "544": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "546": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "547": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "548": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "549": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "550": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x1FFC9A7"
    },
    "555": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "556": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x261"
    },
    "559": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "560": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "561": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x419E314"
    },
    "566": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "567": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x296"
    },
    "570": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "571": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "572": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x5106353"
    },
    "577": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "578": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2C3"
    },
    "581": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "582": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "583": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x6FDDE03"
    },
    "588": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "589": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F1"
    },
    "592": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "593": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "594": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH4",
      "path": "28",
      "value": "0x81812FC"
    },
    "599": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "EQ",
      "path": "28"
    },
    "600": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x306"
    },
    "603": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "604": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "605": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "607": {
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "DUP1",
      "path": "28"
    },
    "608": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        19034
      ],
      "op": "REVERT",
      "path": "28"
    },
    "609": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "610": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "611": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "12"
    },
    "612": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "613": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26D"
    },
    "616": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "617": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "619": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "12"
    },
    "620": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "REVERT",
      "path": "12"
    },
    "621": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x281"
    },
    "626": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x27C"
    },
    "629": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "630": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "632": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C85"
    },
    "635": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "12"
    },
    "636": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "637": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x88D"
    },
    "640": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "12"
    },
    "641": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "642": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "644": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "645": {
      "op": "SWAP1"
    },
    "646": {
      "op": "ISZERO"
    },
    "647": {
      "op": "ISZERO"
    },
    "648": {
      "op": "DUP2"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "654": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "656": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "657": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "12"
    },
    "658": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "659": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "12"
    },
    "660": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "661": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "12"
    },
    "662": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "664": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "DUP1",
      "path": "28"
    },
    "665": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "666": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2A2"
    },
    "669": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "670": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "672": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "DUP1",
      "path": "28"
    },
    "673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "REVERT",
      "path": "28"
    },
    "674": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "675": {
      "op": "POP"
    },
    "676": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B6"
    },
    "679": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B1"
    },
    "682": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "683": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "685": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2D4E"
    },
    "688": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMP",
      "path": "28"
    },
    "689": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "690": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8B8"
    },
    "693": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMP",
      "path": "28"
    },
    "694": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "695": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "697": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "698": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x28D"
    },
    "701": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "702": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "703": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2DED"
    },
    "706": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMP",
      "path": "28"
    },
    "707": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "708": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "709": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "DUP1",
      "path": "28"
    },
    "710": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "711": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2CF"
    },
    "714": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "715": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "717": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "DUP1",
      "path": "28"
    },
    "718": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "REVERT",
      "path": "28"
    },
    "719": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "720": {
      "op": "POP"
    },
    "721": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E3"
    },
    "724": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2DE"
    },
    "727": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "728": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "730": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "733": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMP",
      "path": "28"
    },
    "734": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "735": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAB4"
    },
    "738": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMP",
      "path": "28"
    },
    "739": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "740": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "742": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "743": {
      "op": "SWAP1"
    },
    "744": {
      "op": "DUP2"
    },
    "745": {
      "op": "MSTORE"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "748": {
      "op": "ADD"
    },
    "749": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x28D"
    },
    "752": {
      "op": "JUMP"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "DUP1",
      "path": "10"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FD"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "DUP1",
      "path": "10"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "REVERT",
      "path": "10"
    },
    "765": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "POP",
      "path": "10"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B6"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB8C"
    },
    "773": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "10"
    },
    "774": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "775": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "776": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "DUP1",
      "path": "10"
    },
    "777": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x312"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "784": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "DUP1",
      "path": "10"
    },
    "785": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "REVERT",
      "path": "10"
    },
    "786": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x321"
    },
    "794": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "795": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "797": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E00"
    },
    "800": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "10"
    },
    "801": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "802": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1E"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "10"
    },
    "806": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "816": {
      "op": "SHL"
    },
    "817": {
      "op": "SUB"
    },
    "818": {
      "op": "SWAP1"
    },
    "819": {
      "op": "SWAP2"
    },
    "820": {
      "op": "AND"
    },
    "821": {
      "op": "DUP2"
    },
    "822": {
      "op": "MSTORE"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D"
    },
    "829": {
      "op": "JUMP"
    },
    "830": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "831": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "832": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "DUP1",
      "path": "10"
    },
    "833": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "834": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34A"
    },
    "837": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "838": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "840": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "DUP1",
      "path": "10"
    },
    "841": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "REVERT",
      "path": "10"
    },
    "842": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "847": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x359"
    },
    "850": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "851": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "853": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E35"
    },
    "856": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "10"
    },
    "857": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCB3"
    },
    "861": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "10"
    },
    "862": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "863": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "10"
    },
    "864": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "865": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "866": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "DUP1",
      "path": "12"
    },
    "867": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "868": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x36C"
    },
    "871": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "872": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "DUP1",
      "path": "12"
    },
    "875": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "REVERT",
      "path": "12"
    },
    "876": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x8"
    },
    "880": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "881": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "884": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "885": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "886": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "887": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "DUP1",
      "path": "10"
    },
    "888": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "889": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x381"
    },
    "892": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "893": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "895": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "DUP1",
      "path": "10"
    },
    "896": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "REVERT",
      "path": "10"
    },
    "897": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "898": {
      "op": "POP"
    },
    "899": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "902": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x390"
    },
    "905": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "906": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "908": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E5F"
    },
    "911": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "10"
    },
    "912": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "913": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC8"
    },
    "916": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "10"
    },
    "917": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "918": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "919": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "DUP1",
      "path": "28"
    },
    "920": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "921": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3A1"
    },
    "924": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "925": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "927": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "DUP1",
      "path": "28"
    },
    "928": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "REVERT",
      "path": "28"
    },
    "929": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "934": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3B0"
    },
    "937": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "938": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "940": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2EAD"
    },
    "943": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMP",
      "path": "28"
    },
    "944": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "945": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xDF9"
    },
    "948": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMP",
      "path": "28"
    },
    "949": {
      "offset": [
        467,
        490
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "950": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "951": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "DUP1",
      "path": "28"
    },
    "952": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "953": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3C1"
    },
    "956": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "957": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "959": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "DUP1",
      "path": "28"
    },
    "960": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "REVERT",
      "path": "28"
    },
    "961": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "offset": [
        467,
        490
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC"
    },
    "965": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "966": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x326"
    },
    "969": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "offset": [
        467,
        490
      ],
      "op": "AND",
      "path": "28"
    },
    "979": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "DUP2",
      "path": "28"
    },
    "980": {
      "fn": "Wizards.mint",
      "offset": [
        467,
        490
      ],
      "op": "JUMP",
      "path": "28"
    },
    "981": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "982": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "983": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "DUP1",
      "path": "12"
    },
    "984": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "985": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3E1"
    },
    "988": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "989": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "991": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "DUP1",
      "path": "12"
    },
    "992": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "REVERT",
      "path": "12"
    },
    "993": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "998": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3F0"
    },
    "1001": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1002": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1004": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E35"
    },
    "1007": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1008": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1009": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10D8"
    },
    "1012": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1013": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1014": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1015": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1016": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1017": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x401"
    },
    "1020": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1021": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1023": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1024": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1025": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1030": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x410"
    },
    "1033": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1034": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1036": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2EC8"
    },
    "1039": {
      "fn": "Wizards.updateAppointer",
      "jump": "i",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1040": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1041": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x116E"
    },
    "1044": {
      "fn": "Wizards.updateAppointer",
      "jump": "i",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1045": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1046": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1047": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1048": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1049": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x421"
    },
    "1052": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1053": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1055": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1056": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1057": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x281"
    },
    "1062": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x430"
    },
    "1065": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1066": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1068": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1071": {
      "fn": "Wizards.isMature",
      "jump": "i",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1072": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1073": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x122F"
    },
    "1076": {
      "fn": "Wizards.isMature",
      "jump": "i",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1077": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1078": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1079": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1080": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1081": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x441"
    },
    "1084": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1085": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1087": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1088": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1089": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1094": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x450"
    },
    "1097": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1098": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1100": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1103": {
      "fn": "Wizards.exile",
      "jump": "i",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1104": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1105": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1272"
    },
    "1108": {
      "fn": "Wizards.exile",
      "jump": "i",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1109": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1110": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1111": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1112": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1113": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x461"
    },
    "1116": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1117": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1119": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1120": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1121": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "1126": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x470"
    },
    "1129": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1130": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E5F"
    },
    "1135": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1136": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1137": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12D3"
    },
    "1140": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1141": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1142": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1143": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1144": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1145": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x481"
    },
    "1148": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1149": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1151": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1152": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1153": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1158": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x490"
    },
    "1161": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1162": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1164": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2EE3"
    },
    "1167": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1168": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1169": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12EE"
    },
    "1172": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1173": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1174": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1175": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1176": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1177": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A1"
    },
    "1180": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1181": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1184": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1185": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E3"
    },
    "1190": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4B0"
    },
    "1193": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1194": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1196": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2E00"
    },
    "1199": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1200": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1201": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x133D"
    },
    "1204": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1205": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1206": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1207": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1208": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1209": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4C1"
    },
    "1212": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1213": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1215": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1216": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1217": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E3"
    },
    "1222": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4D0"
    },
    "1225": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1226": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1228": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1231": {
      "fn": "Wizards.getRole",
      "jump": "i",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1232": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1233": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13D0"
    },
    "1236": {
      "fn": "Wizards.getRole",
      "jump": "i",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1237": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1238": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1239": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1240": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1241": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4E1"
    },
    "1244": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1245": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1247": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1248": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1249": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1254": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x4F0"
    },
    "1257": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1258": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1260": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2EC8"
    },
    "1263": {
      "fn": "Wizards.updateCuller",
      "jump": "i",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1264": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1265": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1420"
    },
    "1268": {
      "fn": "Wizards.updateCuller",
      "jump": "i",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1270": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1271": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1272": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1273": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x501"
    },
    "1276": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1277": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1279": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1280": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1281": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1282": {
      "op": "POP"
    },
    "1283": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x326"
    },
    "1286": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x510"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E00"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DA"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1301": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1302": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1303": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1304": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1305": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x521"
    },
    "1308": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1309": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1311": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1312": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1313": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1318": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x530"
    },
    "1321": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1322": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1324": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1327": {
      "fn": "Wizards.cull",
      "jump": "i",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1328": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1329": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1551"
    },
    "1332": {
      "fn": "Wizards.cull",
      "jump": "i",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1333": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1334": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1335": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1336": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1337": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x541"
    },
    "1340": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1341": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1343": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1344": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1345": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1350": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x550"
    },
    "1353": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1354": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1356": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F48"
    },
    "1359": {
      "fn": "Wizards.appointRole",
      "jump": "i",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1360": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1361": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x15B7"
    },
    "1364": {
      "fn": "Wizards.appointRole",
      "jump": "i",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1367": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1368": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1369": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x561"
    },
    "1372": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1373": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1376": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1377": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E3"
    },
    "1382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x570"
    },
    "1385": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1386": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1388": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2EC8"
    },
    "1391": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1661"
    },
    "1396": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1397": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1399": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1400": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x581"
    },
    "1404": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1405": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1407": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "13"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35E"
    },
    "1414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x16E8"
    },
    "1417": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1418": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1419": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1422": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x598"
    },
    "1425": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1426": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1428": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1431": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1432": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1433": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x171E"
    },
    "1436": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1437": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1438": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1439": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1440": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1441": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5A9"
    },
    "1444": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1445": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1447": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1448": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1449": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x281"
    },
    "1454": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5B8"
    },
    "1457": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1458": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1460": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1463": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1464": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1465": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1957"
    },
    "1468": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1469": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1470": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1471": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1472": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1473": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5C9"
    },
    "1476": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1477": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1479": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1480": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1481": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1486": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5D8"
    },
    "1489": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1490": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1492": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2F74"
    },
    "1495": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "jump": "i",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1496": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1497": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x19AD"
    },
    "1500": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "jump": "i",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1501": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1502": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1503": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1504": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1505": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5E9"
    },
    "1508": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1509": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1511": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1512": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1513": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E3"
    },
    "1518": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5F8"
    },
    "1521": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1522": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1524": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1527": {
      "fn": "Wizards.getUplineId",
      "jump": "i",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1528": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1529": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AF8"
    },
    "1532": {
      "fn": "Wizards.getUplineId",
      "jump": "i",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1533": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1534": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1535": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1536": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1537": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x609"
    },
    "1540": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1541": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1543": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1544": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1545": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1546": {
      "op": "POP"
    },
    "1547": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x61D"
    },
    "1550": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x618"
    },
    "1553": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1554": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1556": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1559": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1560": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1561": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B48"
    },
    "1564": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1565": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1566": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1568": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1569": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x28D"
    },
    "1572": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1573": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1574": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FE6"
    },
    "1577": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1578": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1579": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1580": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1581": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1582": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x636"
    },
    "1585": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1586": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1588": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1589": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1590": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x281"
    },
    "1595": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x645"
    },
    "1598": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1599": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1601": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1604": {
      "fn": "Wizards.hasDeserted",
      "jump": "i",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1605": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1606": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C7D"
    },
    "1609": {
      "fn": "Wizards.hasDeserted",
      "jump": "i",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1610": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1611": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "1612": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1613": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "1614": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x656"
    },
    "1617": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "1618": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "1620": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "13"
    },
    "1621": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "13"
    },
    "1622": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 1,
      "value": "0xA"
    },
    "1626": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "op": "SUB"
    },
    "1635": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "1636": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x326"
    },
    "1639": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "13"
    },
    "1640": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1641": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1642": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1643": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1644": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x674"
    },
    "1647": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1648": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1650": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1651": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1652": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1653": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "POP",
      "path": "10"
    },
    "1654": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B6"
    },
    "1657": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CFB"
    },
    "1660": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1661": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1662": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1663": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1664": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1665": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x689"
    },
    "1668": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1669": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1671": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1672": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1673": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1674": {
      "op": "POP"
    },
    "1675": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35E"
    },
    "1678": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x698"
    },
    "1681": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1682": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1684": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2EC8"
    },
    "1687": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1688": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1689": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D0A"
    },
    "1692": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1693": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1694": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1695": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1696": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1697": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A9"
    },
    "1700": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1701": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1703": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1705": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1706": {
      "op": "POP"
    },
    "1707": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "1710": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6B8"
    },
    "1713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1714": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1716": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x307F"
    },
    "1719": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1720": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1721": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DC4"
    },
    "1724": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1725": {
      "offset": [
        534,
        555
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1726": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1727": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1728": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1729": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x6C9"
    },
    "1732": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1733": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1735": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1736": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1737": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1738": {
      "op": "POP"
    },
    "1739": {
      "offset": [
        534,
        555
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xD"
    },
    "1741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1742": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x326"
    },
    "1745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "offset": [
        534,
        555
      ],
      "op": "AND",
      "path": "28"
    },
    "1755": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1756": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        534,
        555
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1757": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1758": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1759": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1760": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1761": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E9"
    },
    "1764": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1765": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1767": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1768": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "1774": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F8"
    },
    "1777": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1778": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30B0"
    },
    "1783": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1785": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E88"
    },
    "1788": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1789": {
      "offset": [
        603,
        627
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1790": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1791": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1792": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1793": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x709"
    },
    "1796": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1797": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1799": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1800": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1801": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1802": {
      "op": "POP"
    },
    "1803": {
      "offset": [
        603,
        627
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE"
    },
    "1805": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1806": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x326"
    },
    "1809": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "op": "SUB"
    },
    "1818": {
      "offset": [
        603,
        627
      ],
      "op": "AND",
      "path": "28"
    },
    "1819": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1820": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        603,
        627
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1821": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1822": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1823": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1824": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1825": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x729"
    },
    "1828": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1829": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1831": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1832": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1833": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2B6"
    },
    "1838": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x738"
    },
    "1841": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1842": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1844": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1847": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1848": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1849": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1EBA"
    },
    "1852": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1853": {
      "offset": [
        412,
        460
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1854": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "1855": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1856": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1857": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x749"
    },
    "1860": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1861": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1863": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1864": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1865": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1866": {
      "op": "POP"
    },
    "1867": {
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7C5"
    },
    "1870": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x758"
    },
    "1873": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "1874": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1876": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "1879": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        412,
        460
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1880": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1881": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "1883": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1885": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1886": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1888": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1889": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1890": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1891": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1893": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1894": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1895": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1896": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1897": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "1899": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1900": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1901": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "ADD",
      "path": "28"
    },
    "1902": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "offset": [
        412,
        460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1912": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1913": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1914": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1921": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1922": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1923": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1924": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1925": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1926": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1927": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1928": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1929": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1930": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1931": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "1934": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1935": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1936": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1937": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1938": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1939": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "offset": [
        412,
        460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1946": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1947": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1948": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1949": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "offset": [
        412,
        460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1961": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1962": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1963": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1964": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "offset": [
        412,
        460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1971": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1972": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1973": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1974": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1975": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1976": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1984": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1985": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DIV",
      "path": "28"
    },
    "1986": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "AND",
      "path": "28"
    },
    "1987": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "DUP9",
      "path": "28"
    },
    "1988": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1989": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1990": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1992": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1993": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x28D"
    },
    "1996": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "1997": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "1998": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "1999": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2000": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2001": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2002": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2003": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2004": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2005": {
      "fn": "Wizards.tokenURI",
      "offset": [
        412,
        460
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x312C"
    },
    "2008": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        412,
        460
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2009": {
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2010": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "2011": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2012": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2013": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7E5"
    },
    "2016": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2017": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2019": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2020": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2021": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2022": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "2023": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x7EE"
    },
    "2026": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x203C"
    },
    "2029": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2030": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2031": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2033": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2034": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x28D"
    },
    "2037": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "2038": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "2039": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "2040": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "2041": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "2042": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2043": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2044": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2045": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2046": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2047": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2048": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x318E"
    },
    "2051": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2052": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2053": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "2054": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2055": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2056": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x810"
    },
    "2059": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2060": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2062": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2063": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2064": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2065": {
      "op": "POP"
    },
    "2066": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x281"
    },
    "2069": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x81F"
    },
    "2072": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "2073": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2075": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2E00"
    },
    "2078": {
      "fn": "Wizards.isExiled",
      "jump": "i",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2079": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2080": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2105"
    },
    "2083": {
      "fn": "Wizards.isExiled",
      "jump": "i",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2084": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2085": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2086": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2087": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2088": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x830"
    },
    "2091": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2092": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2094": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2095": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2096": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x281"
    },
    "2101": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x83F"
    },
    "2104": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2105": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2107": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x31F3"
    },
    "2110": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2111": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "SUB"
    },
    "2120": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 2
    },
    "2121": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "10"
    },
    "2123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2125": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2127": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2132": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2137": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2138": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2141": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "10"
    },
    "2144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2145": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2146": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2148": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2150": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2151": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2152": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "10"
    },
    "2155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "2159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x879"
    },
    "2164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x35E"
    },
    "2174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x888"
    },
    "2177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "2178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "2180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2EC8"
    },
    "2183": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2182"
    },
    "2188": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2189": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2190": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "op": "NOT"
    },
    "2201": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 3
    },
    "2202": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "12"
    },
    "2203": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "12"
    },
    "2212": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "12"
    },
    "2213": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B2"
    },
    "2216": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2217": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "12"
    },
    "2218": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8B2"
    },
    "2221": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "12"
    },
    "2222": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x221A"
    },
    "2225": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2226": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2227": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "2228": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2232": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2233": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11154
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2235": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2236": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2237": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2238": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11171
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "2240": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2242": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2243": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2244": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2245": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2247": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2248": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2249": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11157,
        11182
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2250": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2251": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2252": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "2255": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2256": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2257": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2258": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2259": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2260": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2270": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2271": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2272": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2273": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2280": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2281": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2282": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2283": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2284": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2285": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2286": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2287": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2288": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2289": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2290": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2291": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2292": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2294": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2295": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2296": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2297": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2298": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2299": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2300": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2301": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2302": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2303": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2304": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2305": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2306": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2307": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "2310": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2311": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2312": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2313": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2314": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2315": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11108,
        11121
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "2317": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2318": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2319": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2320": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2321": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2322": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2323": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2328": {
      "op": "SHL"
    },
    "2329": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2330": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2331": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2332": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2333": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2334": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "2336": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2337": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2338": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2339": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2351": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2352": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2353": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2354": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "2356": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2357": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2358": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2365": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2366": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2367": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "2369": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2370": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2371": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2372": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11108,
        11121
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2373": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11108,
        11121
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2374": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11154
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2375": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "2377": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2378": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ADD",
      "path": "28"
    },
    "2379": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2380": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2388": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2389": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DIV",
      "path": "28"
    },
    "2390": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "AND",
      "path": "28"
    },
    "2391": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "2393": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2394": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "GT",
      "path": "28"
    },
    "2395": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2396": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x967"
    },
    "2399": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2400": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x967"
    },
    "2403": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "2406": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2407": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2408": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "2410": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2411": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "GT",
      "path": "28"
    },
    "2412": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2413": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x978"
    },
    "2416": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2417": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x978"
    },
    "2420": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "2423": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2424": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2425": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2426": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2427": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "POP",
      "path": "28"
    },
    "2428": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "POP",
      "path": "28"
    },
    "2429": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2430": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11134,
        11182
      ],
      "op": "POP",
      "path": "28"
    },
    "2431": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11195,
        11217
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2433": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11420,
        11428
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2434": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11603,
        11634
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x997"
    },
    "2437": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11620,
        11627
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2438": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11620,
        11633
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2440": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11620,
        11633
      ],
      "op": "ADD",
      "path": "28"
    },
    "2441": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11620,
        11633
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "op": "SUB"
    },
    "2450": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11603,
        11634
      ],
      "op": "AND",
      "path": "28"
    },
    "2451": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11603,
        11619
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2454": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11603,
        11634
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2455": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11603,
        11634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2456": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2458": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2459": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2461": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "ADD",
      "path": "28"
    },
    "2462": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9A8"
    },
    "2465": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2466": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2467": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2468": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3239"
    },
    "2471": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11227,
        11651
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2472": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2473": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2475": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2476": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2478": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2479": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2480": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SUB",
      "path": "28"
    },
    "2481": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SUB",
      "path": "28"
    },
    "2482": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2483": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2484": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2485": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2487": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11227,
        11651
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2488": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11195,
        11652
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2489": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11195,
        11652
      ],
      "op": "POP",
      "path": "28"
    },
    "2490": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11752,
        11760
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 4
    },
    "2491": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11850,
        11871
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9C5"
    },
    "2494": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11867,
        11870
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2497": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11850,
        11866
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2500": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11850,
        11871
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2501": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11850,
        11871
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2502": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11980,
        12001
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9D0"
    },
    "2505": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11997,
        12000
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11980,
        11996
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2511": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11980,
        12001
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2512": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11980,
        12001
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2513": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12116,
        12138
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9DB"
    },
    "2516": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12133,
        12137
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x270F"
    },
    "2519": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12116,
        12132
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2522": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12116,
        12138
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2523": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12116,
        12138
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2524": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2526": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2529": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "ADD",
      "path": "28"
    },
    "2530": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x9EE"
    },
    "2533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2534": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2535": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2536": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2537": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2538": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3393"
    },
    "2541": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11735,
        12157
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2542": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2543": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2545": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2546": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2548": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2549": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2550": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SUB",
      "path": "28"
    },
    "2551": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SUB",
      "path": "28"
    },
    "2552": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2553": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2554": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2555": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2557": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11735,
        12157
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2558": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11717,
        12158
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2559": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11717,
        12158
      ],
      "op": "POP",
      "path": "28"
    },
    "2560": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12258,
        12266
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 5
    },
    "2561": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12359,
        12380
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA0B"
    },
    "2564": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12376,
        12379
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12359,
        12375
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2570": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12359,
        12380
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12359,
        12380
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2572": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12480,
        12501
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA16"
    },
    "2575": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12497,
        12500
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12480,
        12496
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2581": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12480,
        12501
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12480,
        12501
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2588": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "ADD",
      "path": "28"
    },
    "2589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA28"
    },
    "2592": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2593": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2594": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2595": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x34C5"
    },
    "2599": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12241,
        12520
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2601": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2604": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SUB",
      "path": "28"
    },
    "2609": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SUB",
      "path": "28"
    },
    "2610": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2611": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2612": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2615": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12241,
        12520
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12223,
        12521
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2617": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12223,
        12521
      ],
      "op": "POP",
      "path": "28"
    },
    "2618": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12623,
        12631
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 6
    },
    "2619": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12725,
        12746
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA45"
    },
    "2622": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12742,
        12745
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2625": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12725,
        12741
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2628": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12725,
        12746
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12725,
        12746
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2630": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12849,
        12870
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA50"
    },
    "2633": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12866,
        12869
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3E7"
    },
    "2636": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12849,
        12865
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2639": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12849,
        12870
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2640": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12849,
        12870
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2641": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12983,
        13022
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA66"
    },
    "2644": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13000,
        13007
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2645": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13000,
        13021
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2647": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13000,
        13021
      ],
      "op": "ADD",
      "path": "28"
    },
    "2648": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13000,
        13021
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2655": {
      "op": "SHL"
    },
    "2656": {
      "op": "SUB"
    },
    "2657": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12983,
        13022
      ],
      "op": "AND",
      "path": "28"
    },
    "2658": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12983,
        12999
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "2661": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12983,
        13022
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2662": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12983,
        13022
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2663": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2665": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2666": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2668": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "ADD",
      "path": "28"
    },
    "2669": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA79"
    },
    "2672": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2673": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2674": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2675": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2676": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2677": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x35A2"
    },
    "2680": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12606,
        13041
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2681": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2682": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2684": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2685": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2687": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2688": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2689": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SUB",
      "path": "28"
    },
    "2690": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SUB",
      "path": "28"
    },
    "2691": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2692": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2693": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2694": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2696": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12606,
        13041
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2697": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12588,
        13042
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2698": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12588,
        13042
      ],
      "op": "POP",
      "path": "28"
    },
    "2699": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13113,
        13121
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 7
    },
    "2700": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2702": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2703": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2705": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "ADD",
      "path": "28"
    },
    "2706": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xA9B"
    },
    "2709": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2710": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2711": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36B8"
    },
    "2714": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        13096,
        13131
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2715": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2716": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2718": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2719": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2720": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2721": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2722": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SUB",
      "path": "28"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2725": {
      "op": "NOT"
    },
    "2726": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "ADD",
      "path": "28"
    },
    "2727": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2728": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2729": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2730": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2731": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2732": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        13096,
        13131
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2733": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11020,
        14120
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "op": "POP"
    },
    "2739": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        11020,
        14120
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2740": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2741": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5080,
        5087
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2743": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5120
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 8
    },
    "2744": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5120
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2745": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5120
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2746": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5120
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2747": {
      "branch": 144,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5120
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2748": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5150
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAC7"
    },
    "2751": {
      "branch": 144,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5150
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "2755": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2756": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5124,
        5133
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2757": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5124,
        5150
      ],
      "op": "GT",
      "path": "28"
    },
    "2758": {
      "branch": 145,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5124,
        5150
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2759": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5108,
        5150
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2760": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAEC"
    },
    "2763": {
      "branch": 145,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2764": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2766": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2773": {
      "op": "SHL"
    },
    "2774": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2775": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2776": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2778": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "ADD",
      "path": "28"
    },
    "2779": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "2782": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2783": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "2786": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5100,
        5169
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2787": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2788": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2790": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2791": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2792": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2793": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "SUB",
      "path": "28"
    },
    "2794": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2795": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "28"
    },
    "2796": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5100,
        5169
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2797": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5348
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x16"
    },
    "2799": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5348
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2800": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5180,
        5193
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2802": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5180,
        5193
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2803": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5352
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAFE"
    },
    "2806": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5352
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2807": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5351,
        5352
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2809": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5351,
        5352
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2810": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5352
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3725"
    },
    "2813": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5320,
        5352
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2814": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5320,
        5352
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2815": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5275,
        5305
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x15"
    },
    "2817": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5275,
        5305
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2818": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2820": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2821": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2822": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2823": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5240
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "2825": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2827": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2828": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2830": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2831": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5251
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2832": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2834": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "ADD",
      "path": "28"
    },
    "2835": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2836": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5208,
        5271
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB2B"
    },
    "2839": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5208,
        5271
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2844": {
      "op": "SHL"
    },
    "2845": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2846": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "DIV",
      "path": "28"
    },
    "2847": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "2853": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5226,
        5271
      ],
      "op": "AND",
      "path": "28"
    },
    "2854": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5208,
        5223
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "2855": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5208,
        5271
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3725"
    },
    "2858": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5208,
        5271
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2859": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5208,
        5271
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2860": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5305
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB35"
    },
    "2863": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5305
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2864": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5305
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2865": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5305
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3752"
    },
    "2868": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5207,
        5305
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2869": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5305
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2870": {
      "branch": 146,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5353
      ],
      "op": "GT",
      "path": "28"
    },
    "2871": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5491
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB76"
    },
    "2874": {
      "branch": 146,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5491
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2875": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5461,
        5491
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x15"
    },
    "2877": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5461,
        5491
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2878": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2880": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2881": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2882": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2883": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5426
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "2885": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2887": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2888": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2890": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2891": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5437
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "2892": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2894": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "ADD",
      "path": "28"
    },
    "2895": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2896": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5394,
        5457
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB67"
    },
    "2899": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5394,
        5457
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2904": {
      "op": "SHL"
    },
    "2905": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2906": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "DIV",
      "path": "28"
    },
    "2907": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "2913": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5412,
        5457
      ],
      "op": "AND",
      "path": "28"
    },
    "2914": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5394,
        5409
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "2915": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5394,
        5457
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3725"
    },
    "2918": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5394,
        5457
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2919": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5394,
        5457
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2920": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5393,
        5491
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB71"
    },
    "2923": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5393,
        5491
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2924": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5393,
        5491
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2925": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5393,
        5491
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3752"
    },
    "2928": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5393,
        5491
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2929": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5393,
        5491
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2930": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5491
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB85"
    },
    "2933": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5491
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2934": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5207,
        5491
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2935": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5385
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x16"
    },
    "2937": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5385
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "2938": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5389
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xB85"
    },
    "2941": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5389
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2942": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5388,
        5389
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2944": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5388,
        5389
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2945": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5389
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3725"
    },
    "2948": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        5357,
        5389
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2949": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5357,
        5389
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2950": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5180,
        5491
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "2951": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        5021,
        5534
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "fn": "Wizards.getPhaseOf",
      "jump": "o",
      "offset": [
        5021,
        5534
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2956": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2957": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2959": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x0"
    },
    "2961": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2962": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2963": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB9B"
    },
    "2966": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2967": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3766"
    },
    "2970": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2971": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2972": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2973": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2975": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "2976": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2978": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2979": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2980": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "10"
    },
    "2981": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "10"
    },
    "2982": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2984": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "2985": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2987": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2988": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2989": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2990": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "2991": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2993": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2994": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2995": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2996": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2997": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2998": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2999": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3000": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3001": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3003": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3004": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3005": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3006": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3007": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC7"
    },
    "3010": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3011": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3766"
    },
    "3014": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3015": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3016": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3017": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3018": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC14"
    },
    "3021": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3022": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3023": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3025": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "10"
    },
    "3026": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBE9"
    },
    "3029": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3030": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3033": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3034": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3035": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3036": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "10"
    },
    "3037": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "10"
    },
    "3038": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3039": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3040": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3041": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3043": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3044": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3045": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC14"
    },
    "3048": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3049": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3050": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3051": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3052": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3053": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3054": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3056": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3057": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3059": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3061": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3062": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3063": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3064": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3065": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3066": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3067": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3068": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3069": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3071": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3072": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3073": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3075": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3076": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3077": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3078": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "10"
    },
    "3079": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF7"
    },
    "3082": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3083": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3084": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3085": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "10"
    },
    "3086": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3088": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "10"
    },
    "3089": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3090": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "10"
    },
    "3091": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3092": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3093": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3094": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3095": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3096": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3097": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3098": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3099": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "10"
    },
    "3100": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3101": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3102": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3103": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3105": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 10
    },
    "3106": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3107": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3108": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3110": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3112": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3113": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3115": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3116": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3117": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "op": "SUB"
    },
    "3126": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "10"
    },
    "3127": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 11,
      "value": "0xC97"
    },
    "3130": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3131": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3133": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3142": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3145": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3147": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3148": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "10"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3154": {
      "op": "DUP3"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "MSTORE"
    },
    "3157": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3192": {
      "op": "DUP3"
    },
    "3193": {
      "op": "ADD"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "op": "MSTORE"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3218": {
      "op": "ADD"
    },
    "3219": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "3222": {
      "op": "JUMP"
    },
    "3223": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 12,
      "value": "0x0"
    },
    "3227": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3228": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3229": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3230": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3232": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3234": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3235": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3237": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3238": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3239": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "10"
    },
    "3249": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3250": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3251": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3252": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3254": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCBE"
    },
    "3257": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3258": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DA"
    },
    "3261": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3262": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3263": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3264": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "10"
    },
    "3265": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 13
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "10"
    },
    "3275": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "10"
    },
    "3285": {
      "branch": 184,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "SUB",
      "path": "10"
    },
    "3286": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD2B"
    },
    "3289": {
      "branch": 184,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3290": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3292": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3301": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3304": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3306": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3307": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "10"
    },
    "3308": {
      "op": "MSTORE"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3313": {
      "op": "DUP3"
    },
    "3314": {
      "op": "ADD"
    },
    "3315": {
      "op": "MSTORE"
    },
    "3316": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3351": {
      "op": "DUP3"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "op": "MSTORE"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3361": {
      "op": "DUP3"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "MSTORE"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "3370": {
      "op": "JUMP"
    },
    "3371": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3372": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 14
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 15
    },
    "3382": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "10"
    },
    "3383": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "10"
    },
    "3384": {
      "branch": 185,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3385": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD47"
    },
    "3388": {
      "branch": 185,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD47"
    },
    "3393": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3394": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x83F"
    },
    "3398": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3399": {
      "branch": 186,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3400": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDB9"
    },
    "3403": {
      "branch": 186,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3404": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3406": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3415": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3418": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3420": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3421": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "10"
    },
    "3422": {
      "op": "MSTORE"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "ADD"
    },
    "3467": {
      "op": "MSTORE"
    },
    "3468": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3503": {
      "op": "DUP3"
    },
    "3504": {
      "op": "ADD"
    },
    "3505": {
      "op": "MSTORE"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "3512": {
      "op": "JUMP"
    },
    "3513": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3514": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 16,
      "value": "0xDC3"
    },
    "3517": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3518": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3519": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x236B"
    },
    "3522": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3523": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3524": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "10"
    },
    "3525": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "10"
    },
    "3526": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "10"
    },
    "3527": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3528": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3529": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 17,
      "value": "0xDD2"
    },
    "3532": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3533": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3534": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D9"
    },
    "3537": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3538": {
      "branch": 187,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3539": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDEE"
    },
    "3542": {
      "branch": 187,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3543": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3545": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3554": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3555": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3557": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "10"
    },
    "3558": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "3561": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3562": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37A0"
    },
    "3565": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3566": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3567": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0xDC3"
    },
    "3570": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3571": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3572": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3573": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24CC"
    },
    "3576": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3577": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3578": {
      "fn": "Wizards.mint",
      "offset": [
        6932,
        6958
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 19,
      "value": "0x11"
    },
    "3580": {
      "fn": "Wizards.mint",
      "offset": [
        6932,
        6958
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3581": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "3583": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3584": {
      "branch": 147,
      "fn": "Wizards.mint",
      "offset": [
        6916,
        6958
      ],
      "op": "LT",
      "path": "28"
    },
    "3585": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xE3D"
    },
    "3588": {
      "branch": 147,
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3589": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3591": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3600": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3605": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3606": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "ADD",
      "path": "28"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3612": {
      "op": "DUP3"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3632": {
      "op": "SHL"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3635": {
      "op": "DUP3"
    },
    "3636": {
      "op": "ADD"
    },
    "3637": {
      "op": "MSTORE"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "3644": {
      "op": "JUMP"
    },
    "3645": {
      "fn": "Wizards.mint",
      "offset": [
        6908,
        6977
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3646": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "3648": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3649": {
      "fn": "Wizards.mint",
      "offset": [
        6996,
        7005
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 20
    },
    "3650": {
      "fn": "Wizards.mint",
      "offset": [
        6996,
        7022
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "3653": {
      "fn": "Wizards.mint",
      "offset": [
        6996,
        7022
      ],
      "op": "AND",
      "path": "28"
    },
    "3654": {
      "fn": "Wizards.mint",
      "offset": [
        6996,
        7022
      ],
      "op": "GT",
      "path": "28"
    },
    "3655": {
      "branch": 148,
      "fn": "Wizards.mint",
      "offset": [
        6996,
        7022
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3656": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEAA"
    },
    "3659": {
      "branch": 148,
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3660": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3662": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3669": {
      "op": "SHL"
    },
    "3670": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3671": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3674": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3676": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3677": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "ADD",
      "path": "28"
    },
    "3678": {
      "op": "MSTORE"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3683": {
      "op": "DUP3"
    },
    "3684": {
      "op": "ADD"
    },
    "3685": {
      "op": "MSTORE"
    },
    "3686": {
      "op": "PUSH32",
      "value": "0x696E76616C69642075706C696E652D2D6D757374206265206C65737320746861"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3721": {
      "op": "DUP3"
    },
    "3722": {
      "op": "ADD"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "op": "PUSH14",
      "value": "0x6E20746F74616C20737570706C79"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3744": {
      "op": "DUP3"
    },
    "3745": {
      "op": "ADD"
    },
    "3746": {
      "op": "MSTORE"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3749": {
      "op": "ADD"
    },
    "3750": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "3753": {
      "op": "JUMP"
    },
    "3754": {
      "fn": "Wizards.mint",
      "offset": [
        6988,
        7073
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3755": {
      "fn": "Wizards.mint",
      "offset": [
        7086,
        7107
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3757": {
      "fn": "Wizards.mint",
      "offset": [
        7145,
        7158
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEB5"
    },
    "3760": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "3762": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3763": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3764": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3765": {
      "fn": "Wizards.mint",
      "offset": [
        7145,
        7158
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3766": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3768": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3769": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3770": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3772": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3773": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "ADD",
      "path": "28"
    },
    "3774": {
      "op": "SWAP3"
    },
    "3775": {
      "op": "SWAP1"
    },
    "3776": {
      "op": "SWAP3"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3791": {
      "op": "NOT"
    },
    "3792": {
      "fn": "Wizards.mint",
      "offset": [
        7160,
        7170
      ],
      "op": "CALLER",
      "path": "28"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3795": {
      "op": "SHL"
    },
    "3796": {
      "op": "AND"
    },
    "3797": {
      "op": "SWAP1"
    },
    "3798": {
      "op": "DUP3"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "fn": "Wizards.mint",
      "offset": [
        7172,
        7187
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "3804": {
      "op": "DUP3"
    },
    "3805": {
      "op": "ADD"
    },
    "3806": {
      "op": "MSTORE"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3812": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3813": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3816": {
      "op": "NOT"
    },
    "3817": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3818": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3819": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "SUB",
      "path": "28"
    },
    "3820": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "ADD",
      "path": "28"
    },
    "3821": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3822": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3823": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3824": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3825": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3826": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3827": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3828": {
      "fn": "Wizards.mint",
      "offset": [
        7128,
        7188
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3830": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3831": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3832": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "ADD",
      "path": "28"
    },
    "3833": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3834": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "fn": "Wizards.mint",
      "offset": [
        7110,
        7190
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3838": {
      "fn": "Wizards.mint",
      "offset": [
        7250,
        7251
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "3840": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7244
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF0A"
    },
    "3843": {
      "fn": "Wizards.mint",
      "offset": [
        7242,
        7244
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA"
    },
    "3845": {
      "fn": "Wizards.mint",
      "offset": [
        7118,
        7189
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3846": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7244
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3752"
    },
    "3849": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7228,
        7244
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3850": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7244
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3851": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7246
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF15"
    },
    "3854": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7246
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3855": {
      "fn": "Wizards.mint",
      "offset": [
        7245,
        7246
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "3857": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7246
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x37F1"
    },
    "3860": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7228,
        7246
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3861": {
      "fn": "Wizards.mint",
      "offset": [
        7228,
        7246
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3862": {
      "fn": "Wizards.mint",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF1F"
    },
    "3865": {
      "fn": "Wizards.mint",
      "offset": [
        7227,
        7251
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3866": {
      "fn": "Wizards.mint",
      "offset": [
        7227,
        7251
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3867": {
      "fn": "Wizards.mint",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3810"
    },
    "3870": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7227,
        7251
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3871": {
      "fn": "Wizards.mint",
      "offset": [
        7227,
        7251
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3872": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "3874": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3875": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "GT",
      "path": "28"
    },
    "3876": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3877": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF30"
    },
    "3880": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3881": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF30"
    },
    "3884": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "3887": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7219,
        7252
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3888": {
      "fn": "Wizards.mint",
      "offset": [
        7219,
        7252
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3889": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3891": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3892": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3893": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "3896": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3897": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3898": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3899": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3900": {
      "fn": "Wizards.mint",
      "offset": [
        7295,
        7296
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "3902": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3903": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3904": {
      "fn": "Wizards.mint",
      "offset": [
        7265,
        7285
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3906": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3908": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3909": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3910": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3911": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3912": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3913": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3914": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3915": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3916": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3917": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3918": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3919": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "3921": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3922": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3923": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3924": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3925": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3926": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "3929": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP7",
      "path": "28"
    },
    "3930": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "AND",
      "path": "28"
    },
    "3931": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "3933": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3934": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3935": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3936": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "3938": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3939": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3940": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3941": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3942": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3943": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "3945": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3946": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3947": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3948": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3949": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3950": {
      "fn": "Wizards.mint",
      "offset": [
        7201,
        7252
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3951": {
      "fn": "Wizards.mint",
      "offset": [
        7201,
        7252
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3952": {
      "op": "POP"
    },
    "3953": {
      "fn": "Wizards.mint",
      "offset": [
        7265,
        7285
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3954": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "3956": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3957": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ADD",
      "path": "28"
    },
    "3958": {
      "fn": "Wizards.mint",
      "offset": [
        7201,
        7252
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3959": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "3961": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3962": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "GT",
      "path": "28"
    },
    "3963": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "3964": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF87"
    },
    "3967": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3968": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF87"
    },
    "3971": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "3974": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7289,
        7332
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3975": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3976": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3977": {
      "fn": "Wizards.mint",
      "offset": [
        7289,
        7332
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3978": {
      "fn": "Wizards.mint",
      "offset": [
        7265,
        7332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3979": {
      "op": "POP"
    },
    "3980": {
      "fn": "Wizards.mint",
      "offset": [
        7265,
        7332
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3981": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7357
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 21,
      "value": "0xB"
    },
    "3983": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3985": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7371
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF99"
    },
    "3988": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "3990": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3991": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3992": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3993": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7371
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3994": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7373
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFA4"
    },
    "3997": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7373
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3998": {
      "fn": "Wizards.mint",
      "offset": [
        7372,
        7373
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4000": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7373
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3824"
    },
    "4003": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7358,
        7373
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4004": {
      "fn": "Wizards.mint",
      "offset": [
        7358,
        7373
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4005": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4006": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4007": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4009": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4010": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4011": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "ADD",
      "path": "28"
    },
    "4012": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4013": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4014": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4015": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4016": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4018": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4019": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4020": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "ADD",
      "path": "28"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4023": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4024": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4025": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4026": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4027": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4028": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4029": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "op": "SUB"
    },
    "4038": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4039": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4040": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4045": {
      "op": "SHL"
    },
    "4046": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4047": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4048": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4049": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4050": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4051": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4052": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4053": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4054": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4055": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4056": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4057": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4058": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4060": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4061": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4062": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4063": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4064": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "4066": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP8",
      "path": "28"
    },
    "4067": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4068": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4069": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "4071": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP9",
      "path": "28"
    },
    "4072": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4073": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4074": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "4076": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP10",
      "path": "28"
    },
    "4077": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4078": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4079": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "4081": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP11",
      "path": "28"
    },
    "4082": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4083": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4084": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4085": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4086": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "4087": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4088": {
      "op": "PUSH18",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4107": {
      "op": "NOT"
    },
    "4108": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4109": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4110": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4111": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4112": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4113": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4114": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4115": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "4118": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4119": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4120": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4121": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4122": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "4123": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4124": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4125": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4126": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4127": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4128": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "NOT"
    },
    "4140": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4147": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4148": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4149": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4150": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4151": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4152": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4153": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4154": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "op": "NOT"
    },
    "4164": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4165": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4166": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4167": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4168": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "4180": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4181": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP7",
      "path": "28"
    },
    "4182": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4183": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4184": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4185": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4193": {
      "op": "SHL"
    },
    "4194": {
      "op": "NOT"
    },
    "4195": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4196": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4201": {
      "op": "SHL"
    },
    "4202": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "4203": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4204": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4205": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4206": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4207": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4208": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4209": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4210": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4211": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4212": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4213": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4214": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4215": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "4217": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP6",
      "path": "28"
    },
    "4218": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ADD",
      "path": "28"
    },
    "4219": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4220": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4221": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7374
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "4222": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4223": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4224": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4225": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "op": "NOT"
    },
    "4236": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "op": "NOT"
    },
    "4243": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4244": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4245": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "AND",
      "path": "28"
    },
    "4246": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4253": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "4255": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4256": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "GT",
      "path": "28"
    },
    "4257": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4258": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10AD"
    },
    "4261": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4262": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10AD"
    },
    "4265": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "4268": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7343,
        7384
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4269": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4270": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "MUL",
      "path": "28"
    },
    "4271": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "OR",
      "path": "28"
    },
    "4272": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4273": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4274": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "POP",
      "path": "28"
    },
    "4275": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4276": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "POP",
      "path": "28"
    },
    "4277": {
      "fn": "Wizards.mint",
      "offset": [
        7343,
        7384
      ],
      "op": "POP",
      "path": "28"
    },
    "4278": {
      "fn": "Wizards.mint",
      "offset": [
        7395,
        7434
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 22,
      "value": "0x10D2"
    },
    "4281": {
      "fn": "Wizards.mint",
      "offset": [
        7405,
        7415
      ],
      "op": "CALLER",
      "path": "28"
    },
    "4282": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7430
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10C2"
    },
    "4285": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4287": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4288": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4289": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4290": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7430
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4291": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7432
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x10CD"
    },
    "4294": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7432
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4295": {
      "fn": "Wizards.mint",
      "offset": [
        7431,
        7432
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4297": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7432
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3824"
    },
    "4300": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7417,
        7432
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4301": {
      "fn": "Wizards.mint",
      "offset": [
        7417,
        7432
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4302": {
      "fn": "Wizards.mint",
      "offset": [
        7395,
        7404
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2677"
    },
    "4305": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        7395,
        7434
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4306": {
      "fn": "Wizards.mint",
      "offset": [
        7395,
        7434
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4307": {
      "fn": "Wizards.mint",
      "offset": [
        6897,
        7463
      ],
      "op": "POP",
      "path": "28"
    },
    "4308": {
      "fn": "Wizards.mint",
      "offset": [
        6897,
        7463
      ],
      "op": "POP",
      "path": "28"
    },
    "4309": {
      "fn": "Wizards.mint",
      "offset": [
        6897,
        7463
      ],
      "op": "POP",
      "path": "28"
    },
    "4310": {
      "fn": "Wizards.mint",
      "offset": [
        6856,
        7463
      ],
      "op": "POP",
      "path": "28"
    },
    "4311": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        6856,
        7463
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4312": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4313": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4315": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 23,
      "value": "0x10E3"
    },
    "4318": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1661"
    },
    "4322": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4323": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4324": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4325": {
      "branch": 197,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "12"
    },
    "4326": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1145"
    },
    "4329": {
      "branch": 197,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4330": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4332": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4341": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4346": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "12"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4391": {
      "op": "DUP3"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "MSTORE"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAE3"
    },
    "4420": {
      "op": "JUMP"
    },
    "4421": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4422": {
      "op": "POP"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4429": {
      "op": "SHL"
    },
    "4430": {
      "op": "SUB"
    },
    "4431": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "12",
      "statement": 24
    },
    "4432": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4433": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "4434": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "12"
    },
    "4435": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4437": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4438": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4439": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4440": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "4442": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "4444": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4445": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4446": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4447": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4449": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "12"
    },
    "4450": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4451": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4452": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "4453": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "12"
    },
    "4454": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4455": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "4456": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4457": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4458": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "4459": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4460": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4461": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4462": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4463": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "4465": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4472": {
      "op": "SHL"
    },
    "4473": {
      "op": "SUB"
    },
    "4474": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "4475": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4476": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "4477": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1198"
    },
    "4480": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4481": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4483": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4490": {
      "op": "SHL"
    },
    "4491": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4492": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4493": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4495": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "4496": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "4499": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4500": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "4503": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4504": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4511": {
      "op": "SHL"
    },
    "4512": {
      "op": "SUB"
    },
    "4513": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 25
    },
    "4514": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "AND",
      "path": "28"
    },
    "4515": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4516": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4517": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4518": {
      "branch": 149,
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18890
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4519": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18917
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11BE"
    },
    "4522": {
      "branch": 149,
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18917
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18908,
        18917
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE"
    },
    "4526": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18908,
        18917
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4533": {
      "op": "SHL"
    },
    "4534": {
      "op": "SUB"
    },
    "4535": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18894,
        18917
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4536": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18894,
        18917
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4537": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18894,
        18917
      ],
      "op": "AND",
      "path": "28"
    },
    "4538": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18908,
        18917
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4539": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18908,
        18917
      ],
      "op": "AND",
      "path": "28"
    },
    "4540": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18894,
        18917
      ],
      "op": "EQ",
      "path": "28"
    },
    "4541": {
      "branch": 150,
      "fn": "Wizards.updateAppointer",
      "offset": [
        18894,
        18917
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4542": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18866,
        18917
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4543": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x11DA"
    },
    "4546": {
      "branch": 150,
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4547": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4549": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4556": {
      "op": "SHL"
    },
    "4557": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4558": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4559": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4561": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "ADD",
      "path": "28"
    },
    "4562": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "4565": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4566": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3871"
    },
    "4569": {
      "fn": "Wizards.updateAppointer",
      "jump": "i",
      "offset": [
        18858,
        18946
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4570": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18858,
        18946
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4571": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18966
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 26,
      "value": "0xE"
    },
    "4573": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4574": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "op": "SUB"
    },
    "4583": {
      "op": "NOT"
    },
    "4584": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "AND",
      "path": "28"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4594": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "AND",
      "path": "28"
    },
    "4595": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4596": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4597": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "OR",
      "path": "28"
    },
    "4598": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4599": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4600": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18957,
        18979
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4601": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 27,
      "value": "0x40"
    },
    "4603": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4604": {
      "op": "SWAP1"
    },
    "4605": {
      "op": "DUP2"
    },
    "4606": {
      "op": "MSTORE"
    },
    "4607": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x35829BF1DC2D1C476529ECA85A3BA530615D11B4A5255FF7B730B4E1153E92C0"
    },
    "4640": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4645": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4647": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4648": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4649": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4650": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "SUB",
      "path": "28"
    },
    "4651": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4652": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18995,
        19019
      ],
      "op": "LOG1",
      "path": "28"
    },
    "4653": {
      "fn": "Wizards.updateAppointer",
      "offset": [
        18783,
        19027
      ],
      "op": "POP",
      "path": "28"
    },
    "4654": {
      "fn": "Wizards.updateAppointer",
      "jump": "o",
      "offset": [
        18783,
        19027
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4655": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4656": {
      "fn": "Wizards.isMature",
      "offset": [
        3782,
        3786
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "4658": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3819
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 28
    },
    "4659": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3819
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4660": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3819
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4661": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3819
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4662": {
      "branch": 151,
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3819
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4663": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3849
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1242"
    },
    "4666": {
      "branch": 151,
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3849
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4670": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4671": {
      "fn": "Wizards.isMature",
      "offset": [
        3823,
        3832
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4672": {
      "fn": "Wizards.isMature",
      "offset": [
        3823,
        3849
      ],
      "op": "GT",
      "path": "28"
    },
    "4673": {
      "branch": 152,
      "fn": "Wizards.isMature",
      "offset": [
        3823,
        3849
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4674": {
      "fn": "Wizards.isMature",
      "offset": [
        3807,
        3849
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4675": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x125E"
    },
    "4678": {
      "branch": 152,
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4679": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4681": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4690": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4691": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4693": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "ADD",
      "path": "28"
    },
    "4694": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "4697": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4698": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "4701": {
      "fn": "Wizards.isMature",
      "jump": "i",
      "offset": [
        3799,
        3868
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4702": {
      "fn": "Wizards.isMature",
      "offset": [
        3799,
        3868
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4703": {
      "fn": "Wizards.isMature",
      "offset": [
        3911,
        3945
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 29,
      "value": "0x17"
    },
    "4705": {
      "fn": "Wizards.isMature",
      "offset": [
        3911,
        3945
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4706": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3907
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x126A"
    },
    "4709": {
      "fn": "Wizards.isMature",
      "offset": [
        3897,
        3906
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4710": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3896
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAB4"
    },
    "4713": {
      "fn": "Wizards.isMature",
      "jump": "i",
      "offset": [
        3886,
        3907
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4714": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3907
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4715": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3945
      ],
      "op": "LT",
      "path": "28"
    },
    "4716": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3945
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "4717": {
      "fn": "Wizards.isMature",
      "offset": [
        3886,
        3945
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4718": {
      "fn": "Wizards.isMature",
      "offset": [
        3725,
        3953
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4719": {
      "op": "POP"
    },
    "4720": {
      "op": "POP"
    },
    "4721": {
      "fn": "Wizards.isMature",
      "jump": "o",
      "offset": [
        3725,
        3953
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4722": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4723": {
      "fn": "Wizards.exile",
      "offset": [
        8867,
        8889
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 30,
      "value": "0x127B"
    },
    "4726": {
      "fn": "Wizards.exile",
      "offset": [
        8879,
        8888
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4727": {
      "fn": "Wizards.exile",
      "offset": [
        8867,
        8878
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C7D"
    },
    "4730": {
      "fn": "Wizards.exile",
      "jump": "i",
      "offset": [
        8867,
        8889
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4731": {
      "branch": 153,
      "fn": "Wizards.exile",
      "offset": [
        8867,
        8889
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4732": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12C7"
    },
    "4735": {
      "branch": 153,
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "4736": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4738": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "4739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4745": {
      "op": "SHL"
    },
    "4746": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4747": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4750": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "4752": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4753": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "ADD",
      "path": "28"
    },
    "4754": {
      "op": "MSTORE"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4759": {
      "op": "DUP3"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "MSTORE"
    },
    "4762": {
      "op": "PUSH32",
      "value": "0x77697A6172642063616E206E6F74206265206578696C65642E00000000000000"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4797": {
      "op": "DUP3"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "op": "MSTORE"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "4806": {
      "op": "JUMP"
    },
    "4807": {
      "fn": "Wizards.exile",
      "offset": [
        8859,
        8919
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4808": {
      "fn": "Wizards.exile",
      "offset": [
        8930,
        8947
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 31,
      "value": "0x12D0"
    },
    "4811": {
      "fn": "Wizards.exile",
      "offset": [
        8937,
        8946
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4812": {
      "fn": "Wizards.exile",
      "offset": [
        8930,
        8936
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2695"
    },
    "4815": {
      "fn": "Wizards.exile",
      "jump": "i",
      "offset": [
        8930,
        8947
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4816": {
      "fn": "Wizards.exile",
      "offset": [
        8930,
        8947
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4817": {
      "fn": "Wizards.exile",
      "offset": [
        8805,
        8955
      ],
      "op": "POP",
      "path": "28"
    },
    "4818": {
      "fn": "Wizards.exile",
      "jump": "o",
      "offset": [
        8805,
        8955
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4819": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4820": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 32,
      "value": "0xDC3"
    },
    "4823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4825": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4829": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4832": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "10"
    },
    "4833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4836": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4841": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "10"
    },
    "4842": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E88"
    },
    "4845": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4846": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4847": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "4849": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "op": "SUB"
    },
    "4858": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "4859": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4860": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "4861": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1318"
    },
    "4864": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "4865": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4867": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "4868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4874": {
      "op": "SHL"
    },
    "4875": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "4876": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "4877": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "4879": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "4880": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "4883": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "4884": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "4887": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "4888": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "4889": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16423,
        16452
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 33,
      "value": "0x18"
    },
    "4891": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16423,
        16468
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1324"
    },
    "4894": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16455,
        16468
      ],
      "op": "DUP8",
      "path": "28"
    },
    "4895": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16423,
        16452
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4896": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16423,
        16468
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x38F6"
    },
    "4899": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        16423,
        16468
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4900": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16423,
        16468
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4901": {
      "op": "POP"
    },
    "4902": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16509
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 34,
      "value": "0x15"
    },
    "4904": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16526
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4905": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16526
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4906": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16526
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "4907": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16526
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4908": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16537,
        16577
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 35,
      "value": "0x12"
    },
    "4910": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16537,
        16604
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4911": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16537,
        16604
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4912": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16537,
        16604
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4913": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16537,
        16604
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4914": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16479,
        16495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF"
    },
    "4916": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16615,
        16652
      ],
      "op": "SSTORE",
      "path": "28",
      "statement": 36
    },
    "4917": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16663,
        16694
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 37,
      "value": "0x10"
    },
    "4919": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16663,
        16712
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4920": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16723,
        16757
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 38,
      "value": "0x17"
    },
    "4922": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        16723,
        16778
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4923": {
      "op": "POP"
    },
    "4924": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "o",
      "offset": [
        16181,
        16786
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4925": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4926": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "4928": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 39,
      "value": "0x1348"
    },
    "4931": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "4933": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "4934": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4935": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4936": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4937": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4938": {
      "branch": 198,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "12"
    },
    "4939": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13AB"
    },
    "4942": {
      "branch": 198,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4943": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4945": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4952": {
      "op": "SHL"
    },
    "4953": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4954": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4957": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4959": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4960": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "12"
    },
    "4961": {
      "op": "MSTORE"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4966": {
      "op": "DUP3"
    },
    "4967": {
      "op": "ADD"
    },
    "4968": {
      "op": "MSTORE"
    },
    "4969": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "5002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5004": {
      "op": "DUP3"
    },
    "5005": {
      "op": "ADD"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5022": {
      "op": "SHL"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5025": {
      "op": "DUP3"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "op": "MSTORE"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5030": {
      "op": "ADD"
    },
    "5031": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xAE3"
    },
    "5034": {
      "op": "JUMP"
    },
    "5035": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5036": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 40,
      "value": "0x8"
    },
    "5038": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5039": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5040": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5041": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5042": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "12"
    },
    "5043": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13BE"
    },
    "5046": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5047": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x13BE"
    },
    "5050": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39B6"
    },
    "5053": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5054": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5055": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5056": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5058": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5059": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5061": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5063": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5064": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "12"
    },
    "5065": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5066": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5067": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "12"
    },
    "5068": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5069": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5070": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "12"
    },
    "5071": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5072": {
      "fn": "Wizards.getRole",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5073": {
      "fn": "Wizards.getRole",
      "offset": [
        4362,
        4369
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "5075": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4402
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 41
    },
    "5076": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4402
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5077": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4402
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5078": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4402
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5079": {
      "branch": 154,
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4402
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5080": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4432
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13E3"
    },
    "5083": {
      "branch": 154,
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4432
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5084": {
      "op": "POP"
    },
    "5085": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5087": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5088": {
      "fn": "Wizards.getRole",
      "offset": [
        4406,
        4415
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5089": {
      "fn": "Wizards.getRole",
      "offset": [
        4406,
        4432
      ],
      "op": "GT",
      "path": "28"
    },
    "5090": {
      "branch": 155,
      "fn": "Wizards.getRole",
      "offset": [
        4406,
        4432
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5091": {
      "fn": "Wizards.getRole",
      "offset": [
        4390,
        4432
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5092": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x13FF"
    },
    "5095": {
      "branch": 155,
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5096": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5098": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5105": {
      "op": "SHL"
    },
    "5106": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5107": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5108": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5110": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "ADD",
      "path": "28"
    },
    "5111": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5114": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5115": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "5118": {
      "fn": "Wizards.getRole",
      "jump": "i",
      "offset": [
        4382,
        4451
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5119": {
      "fn": "Wizards.getRole",
      "offset": [
        4382,
        4451
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 42,
      "value": "0x0"
    },
    "5123": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5124": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5125": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5126": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4483
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "5128": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5130": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5131": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5133": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5134": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4494
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5135": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5137": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "ADD",
      "path": "28"
    },
    "5138": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5143": {
      "op": "SHL"
    },
    "5144": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5145": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "DIV",
      "path": "28"
    },
    "5146": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "5149": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "AND",
      "path": "28"
    },
    "5150": {
      "fn": "Wizards.getRole",
      "offset": [
        4469,
        4499
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5151": {
      "fn": "Wizards.getRole",
      "jump": "o",
      "offset": [
        4306,
        4507
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5152": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17868,
        18085
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5153": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "5155": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5162": {
      "op": "SHL"
    },
    "5163": {
      "op": "SUB"
    },
    "5164": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "5165": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5166": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "5167": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x144A"
    },
    "5170": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5171": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5173": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5180": {
      "op": "SHL"
    },
    "5181": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5182": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5183": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5185": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "5186": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "5189": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5190": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "5193": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5194": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5201": {
      "op": "SHL"
    },
    "5202": {
      "op": "SUB"
    },
    "5203": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 43
    },
    "5204": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "AND",
      "path": "28"
    },
    "5205": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5206": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5207": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5208": {
      "branch": 156,
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17966
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5209": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17987
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1470"
    },
    "5212": {
      "branch": 156,
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17987
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5213": {
      "op": "POP"
    },
    "5214": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17981,
        17987
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xD"
    },
    "5216": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17981,
        17987
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5223": {
      "op": "SHL"
    },
    "5224": {
      "op": "SUB"
    },
    "5225": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17970,
        17987
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5226": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17970,
        17987
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5227": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17970,
        17987
      ],
      "op": "AND",
      "path": "28"
    },
    "5228": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17981,
        17987
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5229": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17981,
        17987
      ],
      "op": "AND",
      "path": "28"
    },
    "5230": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17970,
        17987
      ],
      "op": "EQ",
      "path": "28"
    },
    "5231": {
      "branch": 157,
      "fn": "Wizards.updateCuller",
      "offset": [
        17970,
        17987
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5232": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17945,
        17987
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5233": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x148C"
    },
    "5236": {
      "branch": 157,
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5237": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5239": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5246": {
      "op": "SHL"
    },
    "5247": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5248": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5249": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5251": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "ADD",
      "path": "28"
    },
    "5252": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5255": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5256": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3871"
    },
    "5259": {
      "fn": "Wizards.updateCuller",
      "jump": "i",
      "offset": [
        17937,
        18016
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5260": {
      "fn": "Wizards.updateCuller",
      "offset": [
        17937,
        18016
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5261": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18033
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 44,
      "value": "0xD"
    },
    "5263": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5264": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5271": {
      "op": "SHL"
    },
    "5272": {
      "op": "SUB"
    },
    "5273": {
      "op": "NOT"
    },
    "5274": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "AND",
      "path": "28"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "SUB"
    },
    "5283": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "DUP4",
      "path": "28"
    },
    "5284": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "AND",
      "path": "28"
    },
    "5285": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5286": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5287": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "OR",
      "path": "28"
    },
    "5288": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5289": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5290": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18027,
        18043
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5291": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18059,
        18077
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 45,
      "value": "0x40"
    },
    "5293": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18059,
        18077
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5294": {
      "op": "SWAP1"
    },
    "5295": {
      "op": "DUP2"
    },
    "5296": {
      "op": "MSTORE"
    },
    "5297": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18059,
        18077
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x98543B1B9BBF23B0CA565BE0F1A833222E982F36322287BF2E001B1227473AFE"
    },
    "5330": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18059,
        18077
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5333": {
      "op": "ADD"
    },
    "5334": {
      "fn": "Wizards.updateCuller",
      "offset": [
        18059,
        18077
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1224"
    },
    "5337": {
      "op": "JUMP"
    },
    "5338": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5339": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5341": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5342": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5343": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5344": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "5346": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5348": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5349": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5351": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5352": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5353": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5360": {
      "op": "SHL"
    },
    "5361": {
      "op": "SUB"
    },
    "5362": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "10"
    },
    "5363": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5364": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 46,
      "value": "0x8B2"
    },
    "5367": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5368": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5370": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5377": {
      "op": "SHL"
    },
    "5378": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5384": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "10"
    },
    "5386": {
      "op": "MSTORE"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "ADD"
    },
    "5393": {
      "op": "MSTORE"
    },
    "5394": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5429": {
      "op": "DUP3"
    },
    "5430": {
      "op": "ADD"
    },
    "5431": {
      "op": "MSTORE"
    },
    "5432": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5444": {
      "op": "SHL"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5447": {
      "op": "DUP3"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "MSTORE"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "5456": {
      "op": "JUMP"
    },
    "5457": {
      "fn": "Wizards.cull",
      "offset": [
        8545,
        8634
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5458": {
      "offset": [
        17417,
        17423
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xD"
    },
    "5460": {
      "fn": "Wizards.cull",
      "offset": [
        17417,
        17423
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5467": {
      "op": "SHL"
    },
    "5468": {
      "op": "SUB"
    },
    "5469": {
      "offset": [
        17417,
        17423
      ],
      "op": "AND",
      "path": "28"
    },
    "5470": {
      "offset": [
        17403,
        17413
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5471": {
      "offset": [
        17403,
        17423
      ],
      "op": "EQ",
      "path": "28"
    },
    "5472": {
      "offset": [
        17381,
        17520
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x12C7"
    },
    "5475": {
      "offset": [
        17381,
        17520
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5476": {
      "fn": "Wizards.cull",
      "offset": [
        17381,
        17520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5478": {
      "fn": "Wizards.cull",
      "offset": [
        17381,
        17520
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5485": {
      "op": "SHL"
    },
    "5486": {
      "offset": [
        17381,
        17520
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5487": {
      "fn": "Wizards.cull",
      "offset": [
        17381,
        17520
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5490": {
      "offset": [
        17381,
        17520
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5492": {
      "fn": "Wizards.cull",
      "offset": [
        17381,
        17520
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5493": {
      "fn": "Wizards.cull",
      "offset": [
        17381,
        17520
      ],
      "op": "ADD",
      "path": "28"
    },
    "5494": {
      "op": "MSTORE"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5499": {
      "op": "DUP3"
    },
    "5500": {
      "op": "ADD"
    },
    "5501": {
      "op": "MSTORE"
    },
    "5502": {
      "op": "PUSH32",
      "value": "0x4F6E6C792063756C6C65722063616E2063616C6C20746869732066756E637469"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5537": {
      "op": "DUP3"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH3",
      "value": "0x37B717"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "5546": {
      "op": "SHL"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5549": {
      "op": "DUP3"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "MSTORE"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5554": {
      "op": "ADD"
    },
    "5555": {
      "offset": [
        17381,
        17520
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5558": {
      "op": "JUMP"
    },
    "5559": {
      "fn": "Wizards.appointRole",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5560": {
      "offset": [
        17121,
        17130
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE"
    },
    "5562": {
      "fn": "Wizards.appointRole",
      "offset": [
        17121,
        17130
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "op": "SUB"
    },
    "5571": {
      "offset": [
        17121,
        17130
      ],
      "op": "AND",
      "path": "28"
    },
    "5572": {
      "offset": [
        17107,
        17117
      ],
      "op": "CALLER",
      "path": "28"
    },
    "5573": {
      "offset": [
        17107,
        17130
      ],
      "op": "EQ",
      "path": "28"
    },
    "5574": {
      "offset": [
        17099,
        17149
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1602"
    },
    "5577": {
      "offset": [
        17099,
        17149
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5578": {
      "fn": "Wizards.appointRole",
      "offset": [
        17099,
        17149
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5580": {
      "fn": "Wizards.appointRole",
      "offset": [
        17099,
        17149
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5587": {
      "op": "SHL"
    },
    "5588": {
      "offset": [
        17099,
        17149
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5589": {
      "fn": "Wizards.appointRole",
      "offset": [
        17099,
        17149
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5592": {
      "offset": [
        17099,
        17149
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5594": {
      "fn": "Wizards.appointRole",
      "offset": [
        17099,
        17149
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5595": {
      "fn": "Wizards.appointRole",
      "offset": [
        17099,
        17149
      ],
      "op": "ADD",
      "path": "28"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5601": {
      "op": "DUP3"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "op": "MSTORE"
    },
    "5604": {
      "op": "PUSH14",
      "value": "0x37B7363C9030B83837B4B73A32B9"
    },
    "5619": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5621": {
      "op": "SHL"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5624": {
      "op": "DUP3"
    },
    "5625": {
      "op": "ADD"
    },
    "5626": {
      "op": "MSTORE"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "offset": [
        17099,
        17149
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5633": {
      "op": "JUMP"
    },
    "5634": {
      "offset": [
        17099,
        17149
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5635": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15626
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 47
    },
    "5636": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15626
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5637": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15626
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5638": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15626
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5639": {
      "branch": 158,
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15626
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5640": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15656
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1613"
    },
    "5643": {
      "branch": 158,
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15656
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5644": {
      "op": "POP"
    },
    "5645": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "5647": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5648": {
      "fn": "Wizards.appointRole",
      "offset": [
        15630,
        15639
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5649": {
      "fn": "Wizards.appointRole",
      "offset": [
        15630,
        15656
      ],
      "op": "GT",
      "path": "28"
    },
    "5650": {
      "branch": 159,
      "fn": "Wizards.appointRole",
      "offset": [
        15630,
        15656
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "5651": {
      "fn": "Wizards.appointRole",
      "offset": [
        15614,
        15656
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5652": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x162F"
    },
    "5655": {
      "branch": 159,
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5656": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5658": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5665": {
      "op": "SHL"
    },
    "5666": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5667": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5668": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5670": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "ADD",
      "path": "28"
    },
    "5671": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5674": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5675": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "5678": {
      "fn": "Wizards.appointRole",
      "jump": "i",
      "offset": [
        15606,
        15675
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5679": {
      "fn": "Wizards.appointRole",
      "offset": [
        15606,
        15675
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5680": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 48,
      "value": "0x0"
    },
    "5682": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5683": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5684": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5685": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15700
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "5687": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "5689": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5690": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5692": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5693": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5694": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15711
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "5695": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15716
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "5697": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15716
      ],
      "op": "ADD",
      "path": "28"
    },
    "5698": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "DUP1",
      "path": "28"
    },
    "5699": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "5700": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "5703": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5704": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5705": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "AND",
      "path": "28"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5710": {
      "op": "SHL"
    },
    "5711": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "MUL",
      "path": "28"
    },
    "5712": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5717": {
      "op": "SHL"
    },
    "5718": {
      "op": "NOT"
    },
    "5719": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5720": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "5721": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "AND",
      "path": "28"
    },
    "5722": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5723": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5724": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "5725": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "OR",
      "path": "28"
    },
    "5726": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "5727": {
      "fn": "Wizards.appointRole",
      "offset": [
        15686,
        15724
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "5728": {
      "fn": "Wizards.appointRole",
      "jump": "o",
      "offset": [
        15518,
        15732
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5729": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5730": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5738": {
      "op": "SHL"
    },
    "5739": {
      "op": "SUB"
    },
    "5740": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 49
    },
    "5741": {
      "branch": 188,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "10"
    },
    "5742": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16CC"
    },
    "5745": {
      "branch": 188,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5746": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5748": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5755": {
      "op": "SHL"
    },
    "5756": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5757": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5760": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5762": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5763": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "10"
    },
    "5764": {
      "op": "MSTORE"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5769": {
      "op": "DUP3"
    },
    "5770": {
      "op": "ADD"
    },
    "5771": {
      "op": "MSTORE"
    },
    "5772": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5807": {
      "op": "DUP3"
    },
    "5808": {
      "op": "ADD"
    },
    "5809": {
      "op": "MSTORE"
    },
    "5810": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5823": {
      "op": "SHL"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5826": {
      "op": "DUP3"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "MSTORE"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5831": {
      "op": "ADD"
    },
    "5832": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "5835": {
      "op": "JUMP"
    },
    "5836": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5844": {
      "op": "SHL"
    },
    "5845": {
      "op": "SUB"
    },
    "5846": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "10",
      "statement": 50
    },
    "5847": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5849": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5850": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5851": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5852": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5854": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5856": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5857": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5859": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5860": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5861": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5862": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5863": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5864": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5865": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "5867": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5874": {
      "op": "SHL"
    },
    "5875": {
      "op": "SUB"
    },
    "5876": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "5877": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5878": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "5879": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1712"
    },
    "5882": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "5883": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "5885": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5886": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5892": {
      "op": "SHL"
    },
    "5893": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "5894": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5895": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "5897": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "5898": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "5901": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "5902": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "5905": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5906": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5907": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 51,
      "value": "0x171C"
    },
    "5910": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "5912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2720"
    },
    "5915": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "5917": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "13"
    },
    "5918": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5919": {
      "fn": "Wizards.initiate",
      "offset": [
        7683,
        7693
      ],
      "op": "CALLER",
      "path": "28",
      "statement": 52
    },
    "5920": {
      "fn": "Wizards.initiate",
      "offset": [
        7661,
        7679
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1728"
    },
    "5923": {
      "fn": "Wizards.initiate",
      "offset": [
        7669,
        7678
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5924": {
      "fn": "Wizards.initiate",
      "offset": [
        7661,
        7668
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x14DA"
    },
    "5927": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        7661,
        7679
      ],
      "op": "JUMP",
      "path": "28"
    },
    "5928": {
      "fn": "Wizards.initiate",
      "offset": [
        7661,
        7679
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5935": {
      "op": "SHL"
    },
    "5936": {
      "op": "SUB"
    },
    "5937": {
      "fn": "Wizards.initiate",
      "offset": [
        7661,
        7693
      ],
      "op": "AND",
      "path": "28"
    },
    "5938": {
      "branch": 160,
      "fn": "Wizards.initiate",
      "offset": [
        7661,
        7693
      ],
      "op": "EQ",
      "path": "28"
    },
    "5939": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x176E"
    },
    "5942": {
      "branch": 160,
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "5943": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "5945": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "5946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5952": {
      "op": "SHL"
    },
    "5953": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "DUP2",
      "path": "28"
    },
    "5954": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5957": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "5959": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "DUP3",
      "path": "28"
    },
    "5960": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "ADD",
      "path": "28"
    },
    "5961": {
      "op": "MSTORE"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5966": {
      "op": "DUP3"
    },
    "5967": {
      "op": "ADD"
    },
    "5968": {
      "op": "MSTORE"
    },
    "5969": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "5985": {
      "op": "SHL"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5988": {
      "op": "DUP3"
    },
    "5989": {
      "op": "ADD"
    },
    "5990": {
      "op": "MSTORE"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5993": {
      "op": "ADD"
    },
    "5994": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "5997": {
      "op": "JUMP"
    },
    "5998": {
      "fn": "Wizards.initiate",
      "offset": [
        7653,
        7711
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "5999": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 53,
      "value": "0x0"
    },
    "6001": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6002": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6003": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6004": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7744
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6006": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6008": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6009": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6011": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6012": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7755
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6013": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6015": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "ADD",
      "path": "28"
    },
    "6016": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6023": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "DIV",
      "path": "28"
    },
    "6024": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6030": {
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7775
      ],
      "op": "AND",
      "path": "28"
    },
    "6031": {
      "branch": 161,
      "fn": "Wizards.initiate",
      "offset": [
        7730,
        7780
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6032": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17CF"
    },
    "6035": {
      "branch": 161,
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6036": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6038": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6045": {
      "op": "SHL"
    },
    "6046": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6047": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6050": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6052": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6053": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "ADD",
      "path": "28"
    },
    "6054": {
      "op": "MSTORE"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6059": {
      "op": "DUP3"
    },
    "6060": {
      "op": "ADD"
    },
    "6061": {
      "op": "MSTORE"
    },
    "6062": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "6082": {
      "op": "SHL"
    },
    "6083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6085": {
      "op": "DUP3"
    },
    "6086": {
      "op": "ADD"
    },
    "6087": {
      "op": "MSTORE"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6094": {
      "op": "JUMP"
    },
    "6095": {
      "fn": "Wizards.initiate",
      "offset": [
        7722,
        7802
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6096": {
      "fn": "Wizards.initiate",
      "offset": [
        7873,
        7906
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 54,
      "value": "0x13"
    },
    "6098": {
      "fn": "Wizards.initiate",
      "offset": [
        7873,
        7906
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6099": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6101": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6102": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6103": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6104": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7835
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6106": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6108": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6109": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6111": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6112": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7846
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6113": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6115": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "ADD",
      "path": "28"
    },
    "6116": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6117": {
      "fn": "Wizards.initiate",
      "offset": [
        7910,
        7925
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "6118": {
      "fn": "Wizards.initiate",
      "offset": [
        7910,
        7925
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6119": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7906
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x17FD"
    },
    "6122": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7906
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6127": {
      "op": "SHL"
    },
    "6128": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6129": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "DIV",
      "path": "28"
    },
    "6130": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6136": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7870
      ],
      "op": "AND",
      "path": "28"
    },
    "6137": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7906
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3824"
    },
    "6140": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        7821,
        7906
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6141": {
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7906
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6142": {
      "branch": 162,
      "fn": "Wizards.initiate",
      "offset": [
        7821,
        7925
      ],
      "op": "LT",
      "path": "28"
    },
    "6143": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x185B"
    },
    "6146": {
      "branch": 162,
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6147": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6149": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6150": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6156": {
      "op": "SHL"
    },
    "6157": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6158": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6161": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6163": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6164": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "ADD",
      "path": "28"
    },
    "6165": {
      "op": "MSTORE"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6170": {
      "op": "DUP3"
    },
    "6171": {
      "op": "ADD"
    },
    "6172": {
      "op": "MSTORE"
    },
    "6173": {
      "op": "PUSH32",
      "value": "0x4578696C65642077697A617264206E6F742079657420616C6C6F77656420746F"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6208": {
      "op": "DUP3"
    },
    "6209": {
      "op": "ADD"
    },
    "6210": {
      "op": "MSTORE"
    },
    "6211": {
      "op": "PUSH8",
      "value": "0x103932BA3AB93717"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "6222": {
      "op": "SHL"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6225": {
      "op": "DUP3"
    },
    "6226": {
      "op": "ADD"
    },
    "6227": {
      "op": "MSTORE"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6230": {
      "op": "ADD"
    },
    "6231": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6234": {
      "op": "JUMP"
    },
    "6235": {
      "fn": "Wizards.initiate",
      "offset": [
        7813,
        7970
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6236": {
      "fn": "Wizards.initiate",
      "offset": [
        8036,
        8067
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 55,
      "value": "0x10"
    },
    "6238": {
      "fn": "Wizards.initiate",
      "offset": [
        8036,
        8067
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6239": {
      "fn": "Wizards.initiate",
      "offset": [
        8023,
        8032
      ],
      "op": "CALLVALUE",
      "path": "28"
    },
    "6240": {
      "branch": 163,
      "fn": "Wizards.initiate",
      "offset": [
        8023,
        8067
      ],
      "op": "EQ",
      "path": "28"
    },
    "6241": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x18AC"
    },
    "6244": {
      "branch": 163,
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6245": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6247": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6254": {
      "op": "SHL"
    },
    "6255": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6256": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6259": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6261": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6262": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "ADD",
      "path": "28"
    },
    "6263": {
      "op": "MSTORE"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6268": {
      "op": "DUP3"
    },
    "6269": {
      "op": "ADD"
    },
    "6270": {
      "op": "MSTORE"
    },
    "6271": {
      "op": "PUSH32",
      "value": "0x696E636F727265637420696E69746961746F6E20666565000000000000000000"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6306": {
      "op": "DUP3"
    },
    "6307": {
      "op": "ADD"
    },
    "6308": {
      "op": "MSTORE"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6311": {
      "op": "ADD"
    },
    "6312": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6315": {
      "op": "JUMP"
    },
    "6316": {
      "fn": "Wizards.initiate",
      "offset": [
        8015,
        8095
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6317": {
      "fn": "Wizards.initiate",
      "offset": [
        8108,
        8129
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6319": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6320": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6321": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6322": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8146
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6324": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6326": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6327": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6329": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6330": {
      "fn": "Wizards.initiate",
      "offset": [
        8132,
        8157
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6331": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8195
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 56,
      "value": "0x1"
    },
    "6333": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8195
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6334": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8195
      ],
      "op": "ADD",
      "path": "28"
    },
    "6335": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6336": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6337": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6343": {
      "fn": "Wizards.initiate",
      "offset": [
        8205,
        8220
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "6344": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6345": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6346": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "AND",
      "path": "28"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "MUL",
      "path": "28"
    },
    "6353": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "NOT"
    },
    "6363": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6364": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6365": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "AND",
      "path": "28"
    },
    "6366": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6367": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6368": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6369": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "OR",
      "path": "28"
    },
    "6370": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6371": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6372": {
      "fn": "Wizards.initiate",
      "offset": [
        8168,
        8221
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6373": {
      "fn": "Wizards.initiate",
      "offset": [
        8291,
        8331
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 57,
      "value": "0x12"
    },
    "6375": {
      "fn": "Wizards.initiate",
      "offset": [
        8291,
        8331
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6376": {
      "fn": "Wizards.initiate",
      "offset": [
        8273,
        8331
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x18F0"
    },
    "6379": {
      "fn": "Wizards.initiate",
      "offset": [
        8273,
        8331
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6380": {
      "fn": "Wizards.initiate",
      "offset": [
        8273,
        8331
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3824"
    },
    "6383": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        8273,
        8331
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6384": {
      "fn": "Wizards.initiate",
      "offset": [
        8273,
        8331
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6385": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8263
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6387": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8263
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6388": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8263
      ],
      "op": "ADD",
      "path": "28"
    },
    "6389": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6390": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6391": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6397": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6398": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6399": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6400": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "AND",
      "path": "28"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6405": {
      "op": "SHL"
    },
    "6406": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "MUL",
      "path": "28"
    },
    "6407": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6415": {
      "op": "SHL"
    },
    "6416": {
      "op": "NOT"
    },
    "6417": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6418": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6419": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "AND",
      "path": "28"
    },
    "6420": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6421": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6422": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6423": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "OR",
      "path": "28"
    },
    "6424": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6425": {
      "fn": "Wizards.initiate",
      "offset": [
        8232,
        8332
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6426": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 58,
      "value": "0x40"
    },
    "6428": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6429": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6430": {
      "fn": "Wizards.initiate",
      "offset": [
        8360,
        8370
      ],
      "op": "CALLER",
      "path": "28"
    },
    "6431": {
      "op": "DUP2"
    },
    "6432": {
      "op": "MSTORE"
    },
    "6433": {
      "fn": "Wizards.initiate",
      "offset": [
        8383,
        8398
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6436": {
      "op": "DUP3"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "MSTORE"
    },
    "6439": {
      "fn": "Wizards.initiate",
      "offset": [
        8372,
        8381
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6440": {
      "fn": "Wizards.initiate",
      "offset": [
        8372,
        8381
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6441": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "6474": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6475": {
      "op": "ADD"
    },
    "6476": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6478": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6479": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6480": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6481": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "SUB",
      "path": "28"
    },
    "6482": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6483": {
      "fn": "Wizards.initiate",
      "offset": [
        8350,
        8399
      ],
      "op": "LOG2",
      "path": "28"
    },
    "6484": {
      "fn": "Wizards.initiate",
      "offset": [
        7642,
        8407
      ],
      "op": "POP",
      "path": "28"
    },
    "6485": {
      "fn": "Wizards.initiate",
      "offset": [
        7588,
        8407
      ],
      "op": "POP",
      "path": "28"
    },
    "6486": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        7588,
        8407
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6487": {
      "fn": "Wizards.isActive",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6488": {
      "fn": "Wizards.isActive",
      "offset": [
        2460,
        2464
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6490": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2497
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 59
    },
    "6491": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2497
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6492": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2497
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6493": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2497
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6494": {
      "branch": 164,
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2497
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6495": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2527
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x196A"
    },
    "6498": {
      "branch": 164,
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2527
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6499": {
      "op": "POP"
    },
    "6500": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "6502": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6503": {
      "fn": "Wizards.isActive",
      "offset": [
        2501,
        2510
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6504": {
      "fn": "Wizards.isActive",
      "offset": [
        2501,
        2527
      ],
      "op": "GT",
      "path": "28"
    },
    "6505": {
      "branch": 165,
      "fn": "Wizards.isActive",
      "offset": [
        2501,
        2527
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6506": {
      "fn": "Wizards.isActive",
      "offset": [
        2485,
        2527
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6507": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1986"
    },
    "6510": {
      "branch": 165,
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6511": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6513": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6514": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6520": {
      "op": "SHL"
    },
    "6521": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6522": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6523": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6525": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "ADD",
      "path": "28"
    },
    "6526": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6529": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6530": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "6533": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        2477,
        2546
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6534": {
      "fn": "Wizards.isActive",
      "offset": [
        2477,
        2546
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6535": {
      "op": "POP"
    },
    "6536": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 60,
      "value": "0x0"
    },
    "6538": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6539": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6540": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6541": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2578
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6543": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6545": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6546": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6548": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6549": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2589
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6550": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6552": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "ADD",
      "path": "28"
    },
    "6553": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6554": {
      "fn": "Wizards.isActive",
      "offset": [
        2616,
        2631
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6559": {
      "op": "SHL"
    },
    "6560": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6561": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6562": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "DIV",
      "path": "28"
    },
    "6563": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6569": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2613
      ],
      "op": "AND",
      "path": "28"
    },
    "6570": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2631
      ],
      "op": "GT",
      "path": "28"
    },
    "6571": {
      "fn": "Wizards.isActive",
      "offset": [
        2564,
        2631
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6572": {
      "fn": "Wizards.isActive",
      "jump": "o",
      "offset": [
        2403,
        2639
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6573": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6574": {
      "offset": [
        16952,
        16960
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC"
    },
    "6576": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16952,
        16960
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6583": {
      "op": "SHL"
    },
    "6584": {
      "op": "SUB"
    },
    "6585": {
      "offset": [
        16952,
        16960
      ],
      "op": "AND",
      "path": "28"
    },
    "6586": {
      "offset": [
        16938,
        16948
      ],
      "op": "CALLER",
      "path": "28"
    },
    "6587": {
      "offset": [
        16938,
        16960
      ],
      "op": "EQ",
      "path": "28"
    },
    "6588": {
      "offset": [
        16930,
        16978
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x19F7"
    },
    "6591": {
      "offset": [
        16930,
        16978
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6592": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16930,
        16978
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6594": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16930,
        16978
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6601": {
      "op": "SHL"
    },
    "6602": {
      "offset": [
        16930,
        16978
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6603": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16930,
        16978
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6606": {
      "offset": [
        16930,
        16978
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6608": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16930,
        16978
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6609": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        16930,
        16978
      ],
      "op": "ADD",
      "path": "28"
    },
    "6610": {
      "op": "MSTORE"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6613": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6615": {
      "op": "DUP3"
    },
    "6616": {
      "op": "ADD"
    },
    "6617": {
      "op": "MSTORE"
    },
    "6618": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "6634": {
      "op": "SHL"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6637": {
      "op": "DUP3"
    },
    "6638": {
      "op": "ADD"
    },
    "6639": {
      "op": "MSTORE"
    },
    "6640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6642": {
      "op": "ADD"
    },
    "6643": {
      "offset": [
        16930,
        16978
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6646": {
      "op": "JUMP"
    },
    "6647": {
      "offset": [
        16930,
        16978
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6648": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15164
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 61
    },
    "6649": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15164
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6650": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15164
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6651": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15164
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6652": {
      "branch": 166,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15164
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6653": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15194
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A08"
    },
    "6656": {
      "branch": 166,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15194
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6657": {
      "op": "POP"
    },
    "6658": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "6660": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6661": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15168,
        15177
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6662": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15168,
        15194
      ],
      "op": "GT",
      "path": "28"
    },
    "6663": {
      "branch": 167,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15168,
        15194
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6664": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15152,
        15194
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6665": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1A41"
    },
    "6668": {
      "branch": 167,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6669": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6671": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6678": {
      "op": "SHL"
    },
    "6679": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6680": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6683": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6685": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6686": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "ADD",
      "path": "28"
    },
    "6687": {
      "op": "MSTORE"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6692": {
      "op": "DUP3"
    },
    "6693": {
      "op": "ADD"
    },
    "6694": {
      "op": "MSTORE"
    },
    "6695": {
      "op": "PUSH10",
      "value": "0x1A5B9D985B1A59081A59"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "6708": {
      "op": "SHL"
    },
    "6709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6711": {
      "op": "DUP3"
    },
    "6712": {
      "op": "ADD"
    },
    "6713": {
      "op": "MSTORE"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6716": {
      "op": "ADD"
    },
    "6717": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6720": {
      "op": "JUMP"
    },
    "6721": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15144,
        15209
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6722": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 62,
      "value": "0x0"
    },
    "6724": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6725": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6726": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6727": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15242
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6729": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6731": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6732": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6734": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6735": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15253
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6736": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6738": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "ADD",
      "path": "28"
    },
    "6739": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6744": {
      "op": "SHL"
    },
    "6745": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6746": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "DIV",
      "path": "28"
    },
    "6747": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6753": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15273
      ],
      "op": "AND",
      "path": "28"
    },
    "6754": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15276
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6755": {
      "branch": 168,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15228,
        15276
      ],
      "op": "SUB",
      "path": "28"
    },
    "6756": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AA2"
    },
    "6759": {
      "branch": 168,
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6760": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6762": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6763": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6771": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6774": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6776": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6777": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "ADD",
      "path": "28"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH16",
      "value": "0x1A5CC81B9BDD081A5B9A5D1A585D1959"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "6805": {
      "op": "SHL"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6808": {
      "op": "DUP3"
    },
    "6809": {
      "op": "ADD"
    },
    "6810": {
      "op": "MSTORE"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6813": {
      "op": "ADD"
    },
    "6814": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6817": {
      "op": "JUMP"
    },
    "6818": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15220,
        15297
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6819": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 63,
      "value": "0x0"
    },
    "6821": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6822": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6823": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6824": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15322
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6826": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6828": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6829": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6831": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6832": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15333
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6833": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15357
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6835": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15357
      ],
      "op": "ADD",
      "path": "28"
    },
    "6836": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6837": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6838": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15361,
        15372
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6839": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15361,
        15372
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "6840": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15357
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6841": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15357
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x19"
    },
    "6843": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15357
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6844": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1AD4"
    },
    "6847": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6848": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15361,
        15372
      ],
      "op": "DUP5",
      "path": "28"
    },
    "6849": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15361,
        15372
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6852": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6854": {
      "op": "SHL"
    },
    "6855": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6856": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "DIV",
      "path": "28"
    },
    "6857": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6863": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "AND",
      "path": "28"
    },
    "6864": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39CC"
    },
    "6867": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "jump": "i",
      "offset": [
        15308,
        15372
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6868": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6869": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "6870": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "POP",
      "path": "28"
    },
    "6871": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "6874": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "EXP",
      "path": "28"
    },
    "6875": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6876": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6877": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6878": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6884": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "MUL",
      "path": "28"
    },
    "6885": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "NOT",
      "path": "28"
    },
    "6886": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "AND",
      "path": "28"
    },
    "6887": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6888": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "DUP4",
      "path": "28"
    },
    "6889": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "6895": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "AND",
      "path": "28"
    },
    "6896": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "MUL",
      "path": "28"
    },
    "6897": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "OR",
      "path": "28"
    },
    "6898": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6899": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "6900": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15308,
        15372
      ],
      "op": "POP",
      "path": "28"
    },
    "6901": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "POP",
      "path": "28"
    },
    "6902": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "offset": [
        15031,
        15380
      ],
      "op": "POP",
      "path": "28"
    },
    "6903": {
      "fn": "Wizards.increaseProtectedUntilTimestamp",
      "jump": "o",
      "offset": [
        15031,
        15380
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6904": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6905": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4149,
        4156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "6907": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4189
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 64
    },
    "6908": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4189
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6909": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4189
      ],
      "op": "DUP1",
      "path": "28"
    },
    "6910": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4189
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6911": {
      "branch": 169,
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4189
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6912": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4219
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B0B"
    },
    "6915": {
      "branch": 169,
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4219
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6916": {
      "op": "POP"
    },
    "6917": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "6919": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "6920": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4193,
        4202
      ],
      "op": "DUP3",
      "path": "28"
    },
    "6921": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4193,
        4219
      ],
      "op": "GT",
      "path": "28"
    },
    "6922": {
      "branch": 170,
      "fn": "Wizards.getUplineId",
      "offset": [
        4193,
        4219
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "6923": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4177,
        4219
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6924": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B27"
    },
    "6927": {
      "branch": 170,
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "6928": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6930": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "6931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6937": {
      "op": "SHL"
    },
    "6938": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6939": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6940": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "6942": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "ADD",
      "path": "28"
    },
    "6943": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "6946": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6947": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "6950": {
      "fn": "Wizards.getUplineId",
      "jump": "i",
      "offset": [
        4169,
        4238
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6951": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4169,
        4238
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6952": {
      "op": "POP"
    },
    "6953": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 65,
      "value": "0x0"
    },
    "6955": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6956": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "DUP2",
      "path": "28"
    },
    "6957": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6958": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4270
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "6960": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "6962": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "6963": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "6965": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6966": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4281
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "6967": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "6969": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "ADD",
      "path": "28"
    },
    "6970": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6975": {
      "op": "SHL"
    },
    "6976": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6977": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "DIV",
      "path": "28"
    },
    "6978": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "6981": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "AND",
      "path": "28"
    },
    "6982": {
      "fn": "Wizards.getUplineId",
      "offset": [
        4256,
        4290
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "6983": {
      "fn": "Wizards.getUplineId",
      "jump": "o",
      "offset": [
        4089,
        4298
      ],
      "op": "JUMP",
      "path": "28"
    },
    "6984": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "6985": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B8D"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6990": {
      "op": "DUP1"
    },
    "6991": {
      "op": "MLOAD"
    },
    "6992": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6995": {
      "op": "DUP2"
    },
    "6996": {
      "op": "ADD"
    },
    "6997": {
      "op": "DUP3"
    },
    "6998": {
      "op": "MSTORE"
    },
    "6999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7001": {
      "op": "DUP1"
    },
    "7002": {
      "op": "DUP3"
    },
    "7003": {
      "op": "MSTORE"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7006": {
      "op": "DUP3"
    },
    "7007": {
      "op": "ADD"
    },
    "7008": {
      "op": "DUP2"
    },
    "7009": {
      "op": "SWAP1"
    },
    "7010": {
      "op": "MSTORE"
    },
    "7011": {
      "op": "SWAP2"
    },
    "7012": {
      "op": "DUP2"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "DUP3"
    },
    "7015": {
      "op": "SWAP1"
    },
    "7016": {
      "op": "MSTORE"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7019": {
      "op": "DUP2"
    },
    "7020": {
      "op": "ADD"
    },
    "7021": {
      "op": "DUP3"
    },
    "7022": {
      "op": "SWAP1"
    },
    "7023": {
      "op": "MSTORE"
    },
    "7024": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7026": {
      "op": "DUP2"
    },
    "7027": {
      "op": "ADD"
    },
    "7028": {
      "op": "DUP3"
    },
    "7029": {
      "op": "SWAP1"
    },
    "7030": {
      "op": "MSTORE"
    },
    "7031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7033": {
      "op": "DUP2"
    },
    "7034": {
      "op": "ADD"
    },
    "7035": {
      "op": "DUP3"
    },
    "7036": {
      "op": "SWAP1"
    },
    "7037": {
      "op": "MSTORE"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7040": {
      "op": "DUP2"
    },
    "7041": {
      "op": "ADD"
    },
    "7042": {
      "op": "DUP3"
    },
    "7043": {
      "op": "SWAP1"
    },
    "7044": {
      "op": "MSTORE"
    },
    "7045": {
      "op": "SWAP1"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7048": {
      "op": "DUP3"
    },
    "7049": {
      "op": "ADD"
    },
    "7050": {
      "op": "MSTORE"
    },
    "7051": {
      "op": "SWAP1"
    },
    "7052": {
      "op": "JUMP"
    },
    "7053": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4735,
        4747
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7054": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4780
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 66
    },
    "7055": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4780
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7056": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4780
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7057": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4780
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7058": {
      "branch": 171,
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4780
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7059": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4810
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1B9E"
    },
    "7062": {
      "branch": 171,
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4810
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7063": {
      "op": "POP"
    },
    "7064": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7066": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7067": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4784,
        4793
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7068": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4784,
        4810
      ],
      "op": "GT",
      "path": "28"
    },
    "7069": {
      "branch": 172,
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4784,
        4810
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7070": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4768,
        4810
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7071": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1BBA"
    },
    "7074": {
      "branch": 172,
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7075": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7077": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7084": {
      "op": "SHL"
    },
    "7085": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7086": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7087": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7089": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "ADD",
      "path": "28"
    },
    "7090": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "7093": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7094": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "7097": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4760,
        4829
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7098": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4760,
        4829
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7099": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 67,
      "value": "0x0"
    },
    "7101": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7102": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7103": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7104": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4861
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "7106": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "7108": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7109": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7110": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7111": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7113": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7114": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7115": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7116": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "7117": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7118": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7119": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "7122": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7123": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7124": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP5",
      "path": "28"
    },
    "7125": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7126": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7127": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7134": {
      "op": "SHL"
    },
    "7135": {
      "op": "SUB"
    },
    "7136": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7137": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7138": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7139": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7140": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7145": {
      "op": "SHL"
    },
    "7146": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7147": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7148": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7149": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7150": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7151": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7152": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7153": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7154": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7155": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7156": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7157": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7158": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7159": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "7161": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7162": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7163": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7164": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "7165": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP5",
      "path": "28"
    },
    "7166": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7167": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7168": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7169": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7170": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7171": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7172": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "7173": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7174": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "7175": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7176": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7177": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFFFF"
    },
    "7180": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7181": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7182": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7183": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "7185": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP6",
      "path": "28"
    },
    "7186": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7187": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7192": {
      "op": "SHL"
    },
    "7193": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7194": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7195": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7196": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x80"
    },
    "7198": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP5",
      "path": "28"
    },
    "7199": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7200": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7205": {
      "op": "SHL"
    },
    "7206": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7207": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7208": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "7214": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7215": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7216": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7217": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xA0"
    },
    "7219": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP6",
      "path": "28"
    },
    "7220": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7221": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7224": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7226": {
      "op": "SHL"
    },
    "7227": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7228": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7229": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7230": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC0"
    },
    "7232": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP5",
      "path": "28"
    },
    "7233": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7234": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7235": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4847,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7236": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xE0"
    },
    "7238": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7239": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ADD",
      "path": "28"
    },
    "7240": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7243": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7245": {
      "op": "SHL"
    },
    "7246": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7247": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DIV",
      "path": "28"
    },
    "7248": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xFF"
    },
    "7250": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "AND",
      "path": "28"
    },
    "7251": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "7253": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7254": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "GT",
      "path": "28"
    },
    "7255": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7256": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C63"
    },
    "7259": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7260": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C63"
    },
    "7263": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "7266": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7267": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7268": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x3"
    },
    "7270": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7271": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "GT",
      "path": "28"
    },
    "7272": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7273": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C74"
    },
    "7276": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7277": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C74"
    },
    "7280": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2FAE"
    },
    "7283": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7284": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7285": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7286": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7287": {
      "op": "POP"
    },
    "7288": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4840,
        4872
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "7289": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        4669,
        4880
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7290": {
      "op": "POP"
    },
    "7291": {
      "op": "POP"
    },
    "7292": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "o",
      "offset": [
        4669,
        4880
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7293": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7294": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3342,
        3346
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7296": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3379
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 68
    },
    "7297": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3379
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7298": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3379
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7299": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3379
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7300": {
      "branch": 173,
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3379
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7301": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3409
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1C90"
    },
    "7304": {
      "branch": 173,
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3409
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7305": {
      "op": "POP"
    },
    "7306": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "7308": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "7309": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3383,
        3392
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7310": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3383,
        3409
      ],
      "op": "GT",
      "path": "28"
    },
    "7311": {
      "branch": 174,
      "fn": "Wizards.hasDeserted",
      "offset": [
        3383,
        3409
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7312": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3367,
        3409
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7313": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1CAC"
    },
    "7316": {
      "branch": 174,
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7317": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7319": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7326": {
      "op": "SHL"
    },
    "7327": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7328": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7329": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7331": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "ADD",
      "path": "28"
    },
    "7332": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "7335": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7336": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "7339": {
      "fn": "Wizards.hasDeserted",
      "jump": "i",
      "offset": [
        3359,
        3428
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7340": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3359,
        3428
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7341": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 69,
      "value": "0x0"
    },
    "7343": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7344": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7345": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7346": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "7348": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "7350": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7351": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7353": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7354": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3471
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "7355": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "7357": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "ADD",
      "path": "28"
    },
    "7358": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7359": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3498,
        3513
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "7360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7362": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7364": {
      "op": "SHL"
    },
    "7365": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7366": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7367": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "DIV",
      "path": "28"
    },
    "7368": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "7374": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3495
      ],
      "op": "AND",
      "path": "28"
    },
    "7375": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3513
      ],
      "op": "LT",
      "path": "28"
    },
    "7376": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3566
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7377": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3566
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7378": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3566
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8B2"
    },
    "7381": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3446,
        3566
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7382": {
      "op": "POP"
    },
    "7383": {
      "op": "POP"
    },
    "7384": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7386": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7387": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7388": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7389": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3531
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "7391": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "7393": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7394": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7396": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7397": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3542
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "7398": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "7400": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "ADD",
      "path": "28"
    },
    "7401": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7406": {
      "op": "SHL"
    },
    "7407": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7408": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "DIV",
      "path": "28"
    },
    "7409": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "7415": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3562
      ],
      "op": "AND",
      "path": "28"
    },
    "7416": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3566
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7417": {
      "fn": "Wizards.hasDeserted",
      "offset": [
        3517,
        3566
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7418": {
      "fn": "Wizards.hasDeserted",
      "jump": "o",
      "offset": [
        3282,
        3574
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7419": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7420": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "7422": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 70,
      "value": "0x1"
    },
    "7424": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7425": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7426": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB9B"
    },
    "7429": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7430": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3766"
    },
    "7433": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7434": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18321,
        18556
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7435": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "7437": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7444": {
      "op": "SHL"
    },
    "7445": {
      "op": "SUB"
    },
    "7446": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "7447": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "7448": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "7449": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1D34"
    },
    "7452": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "7453": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7455": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "7456": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "7464": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7465": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7467": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "7468": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "7471": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "7472": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "7475": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "7476": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7483": {
      "op": "SHL"
    },
    "7484": {
      "op": "SUB"
    },
    "7485": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 71
    },
    "7486": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "AND",
      "path": "28"
    },
    "7487": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7488": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7489": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7490": {
      "branch": 175,
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18425
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7491": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18450
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D5A"
    },
    "7494": {
      "branch": 175,
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18450
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7495": {
      "op": "POP"
    },
    "7496": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18442,
        18450
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xC"
    },
    "7498": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18442,
        18450
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7505": {
      "op": "SHL"
    },
    "7506": {
      "op": "SUB"
    },
    "7507": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18429,
        18450
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7508": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18429,
        18450
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7509": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18429,
        18450
      ],
      "op": "AND",
      "path": "28"
    },
    "7510": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18442,
        18450
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7511": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18442,
        18450
      ],
      "op": "AND",
      "path": "28"
    },
    "7512": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18429,
        18450
      ],
      "op": "EQ",
      "path": "28"
    },
    "7513": {
      "branch": 176,
      "fn": "Wizards.updateVerifier",
      "offset": [
        18429,
        18450
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "7514": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18402,
        18450
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7515": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D76"
    },
    "7518": {
      "branch": 176,
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7519": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7521": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7528": {
      "op": "SHL"
    },
    "7529": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7530": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7531": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7533": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "ADD",
      "path": "28"
    },
    "7534": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "7537": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7538": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3871"
    },
    "7541": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        18394,
        18479
      ],
      "op": "JUMP",
      "path": "28"
    },
    "7542": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18394,
        18479
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7543": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18498
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 72,
      "value": "0xC"
    },
    "7545": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "DUP1",
      "path": "28"
    },
    "7546": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7553": {
      "op": "SHL"
    },
    "7554": {
      "op": "SUB"
    },
    "7555": {
      "op": "NOT"
    },
    "7556": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "AND",
      "path": "28"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7563": {
      "op": "SHL"
    },
    "7564": {
      "op": "SUB"
    },
    "7565": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "DUP4",
      "path": "28"
    },
    "7566": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "AND",
      "path": "28"
    },
    "7567": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7568": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7569": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "OR",
      "path": "28"
    },
    "7570": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7571": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "7572": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18490,
        18510
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "7573": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18526,
        18548
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 73,
      "value": "0x40"
    },
    "7575": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18526,
        18548
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7576": {
      "op": "SWAP1"
    },
    "7577": {
      "op": "DUP2"
    },
    "7578": {
      "op": "MSTORE"
    },
    "7579": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18526,
        18548
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "7612": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18526,
        18548
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7615": {
      "op": "ADD"
    },
    "7616": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        18526,
        18548
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1224"
    },
    "7619": {
      "op": "JUMP"
    },
    "7620": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7621": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7628": {
      "op": "SHL"
    },
    "7629": {
      "op": "SUB"
    },
    "7630": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 74
    },
    "7631": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "10"
    },
    "7632": {
      "branch": 189,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "SUB",
      "path": "10"
    },
    "7633": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E1C"
    },
    "7636": {
      "branch": 189,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7637": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7639": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7640": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7648": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7651": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7653": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7654": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "10"
    },
    "7655": {
      "op": "MSTORE"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7660": {
      "op": "DUP3"
    },
    "7661": {
      "op": "ADD"
    },
    "7662": {
      "op": "MSTORE"
    },
    "7663": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7698": {
      "op": "DUP3"
    },
    "7699": {
      "op": "ADD"
    },
    "7700": {
      "op": "MSTORE"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7703": {
      "op": "ADD"
    },
    "7704": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "7707": {
      "op": "JUMP"
    },
    "7708": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7709": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "7710": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 75,
      "value": "0x0"
    },
    "7712": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7713": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7714": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7715": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7717": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7719": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7720": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7721": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7722": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7724": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7725": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7726": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7733": {
      "op": "SHL"
    },
    "7734": {
      "op": "SUB"
    },
    "7735": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7736": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "10"
    },
    "7737": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7738": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7739": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7740": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7741": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7742": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7743": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7744": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7745": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7746": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7747": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7748": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7751": {
      "op": "NOT"
    },
    "7752": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "10"
    },
    "7753": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7754": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7755": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7756": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7757": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7758": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "10"
    },
    "7759": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7760": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7761": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7762": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 76
    },
    "7763": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7764": {
      "op": "SWAP1"
    },
    "7765": {
      "op": "DUP2"
    },
    "7766": {
      "op": "MSTORE"
    },
    "7767": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7768": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7769": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7770": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "7803": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7804": {
      "op": "ADD"
    },
    "7805": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7807": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7808": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7809": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7810": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "10"
    },
    "7811": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7812": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "10"
    },
    "7813": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "10"
    },
    "7814": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "10"
    },
    "7815": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7816": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 77,
      "value": "0x1E92"
    },
    "7820": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "7821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D9"
    },
    "7825": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7826": {
      "branch": 190,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EAE"
    },
    "7830": {
      "branch": 190,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7840": {
      "op": "SHL"
    },
    "7841": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7842": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7843": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7845": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "10"
    },
    "7846": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "7849": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7850": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37A0"
    },
    "7853": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7854": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7855": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 78,
      "value": "0x10D2"
    },
    "7858": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7859": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7860": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7861": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7862": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2772"
    },
    "7865": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7866": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7867": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7869": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7870": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7871": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7872": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7874": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7876": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7877": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7879": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7880": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7881": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7882": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9871,
        9884
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "7884": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9871,
        9884
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7891": {
      "op": "SHL"
    },
    "7892": {
      "op": "SUB"
    },
    "7893": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "10"
    },
    "7894": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 79,
      "value": "0x1F39"
    },
    "7897": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "7898": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "7900": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "7901": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7907": {
      "op": "SHL"
    },
    "7908": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7909": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7912": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "7914": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7915": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "ADD",
      "path": "28"
    },
    "7916": {
      "op": "MSTORE"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7919": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7921": {
      "op": "DUP3"
    },
    "7922": {
      "op": "ADD"
    },
    "7923": {
      "op": "MSTORE"
    },
    "7924": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7959": {
      "op": "DUP3"
    },
    "7960": {
      "op": "ADD"
    },
    "7961": {
      "op": "MSTORE"
    },
    "7962": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "7980": {
      "op": "SHL"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7983": {
      "op": "DUP3"
    },
    "7984": {
      "op": "ADD"
    },
    "7985": {
      "op": "MSTORE"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7988": {
      "op": "ADD"
    },
    "7989": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "7992": {
      "op": "JUMP"
    },
    "7993": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9897,
        9975
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "7994": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "7996": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "DUP3",
      "path": "28"
    },
    "7997": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "DUP2",
      "path": "28"
    },
    "7998": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "7999": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10074
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "8001": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8003": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8004": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8006": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8007": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10085
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "8008": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "8010": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "ADD",
      "path": "28"
    },
    "8011": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8012": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10019,
        10046
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "8014": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10019,
        10046
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8019": {
      "op": "SHL"
    },
    "8020": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8021": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8022": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "DIV",
      "path": "28"
    },
    "8023": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "8029": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10105
      ],
      "op": "AND",
      "path": "28"
    },
    "8030": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10108
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8031": {
      "branch": 177,
      "fn": "Wizards.tokenURI",
      "offset": [
        10060,
        10108
      ],
      "op": "SUB",
      "path": "28"
    },
    "8032": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10057,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F8B"
    },
    "8035": {
      "branch": 177,
      "fn": "Wizards.tokenURI",
      "offset": [
        10057,
        10644
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8036": {
      "op": "POP"
    },
    "8037": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 80,
      "value": "0x40"
    },
    "8039": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8040": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8041": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8042": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8043": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "ADD",
      "path": "28"
    },
    "8044": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8045": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8046": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8047": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "8049": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8050": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8051": {
      "op": "PUSH11",
      "value": "0x1D5B9A5B9A5D1A585D1959"
    },
    "8063": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "8065": {
      "op": "SHL"
    },
    "8066": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8068": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8069": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "ADD",
      "path": "28"
    },
    "8070": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10139,
        10168
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8071": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10057,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2002"
    },
    "8074": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10057,
        10644
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8075": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10057,
        10644
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8076": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10238,
        10257
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1F94"
    },
    "8079": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10247,
        10256
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8080": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10238,
        10246
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2105"
    },
    "8083": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10238,
        10257
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8084": {
      "branch": 178,
      "fn": "Wizards.tokenURI",
      "offset": [
        10238,
        10257
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8085": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8086": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FBC"
    },
    "8089": {
      "branch": 178,
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8090": {
      "op": "POP"
    },
    "8091": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 81,
      "value": "0x40"
    },
    "8093": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8094": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8095": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8096": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8097": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "ADD",
      "path": "28"
    },
    "8098": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8099": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8100": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8101": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x6"
    },
    "8103": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8104": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8105": {
      "op": "PUSH6",
      "value": "0x195E1A5B1959"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "8114": {
      "op": "SHL"
    },
    "8115": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8118": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "ADD",
      "path": "28"
    },
    "8119": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10283,
        10307
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2002"
    },
    "8123": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8124": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10235,
        10644
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8125": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10382,
        10401
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FC5"
    },
    "8128": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10391,
        10400
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8129": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10382,
        10390
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1957"
    },
    "8132": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10382,
        10401
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8133": {
      "branch": 179,
      "fn": "Wizards.tokenURI",
      "offset": [
        10382,
        10401
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8134": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FEE"
    },
    "8137": {
      "branch": 179,
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8138": {
      "op": "POP"
    },
    "8139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 82,
      "value": "0x40"
    },
    "8141": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8142": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8145": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "ADD",
      "path": "28"
    },
    "8146": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8147": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8148": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x8"
    },
    "8151": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8152": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8153": {
      "op": "PUSH8",
      "value": "0x696E616374697665"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8164": {
      "op": "SHL"
    },
    "8165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "ADD",
      "path": "28"
    },
    "8169": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10434,
        10460
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2002"
    },
    "8173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10593,
        10632
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 83,
      "value": "0x1FFF"
    },
    "8178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10610,
        10631
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1FFA"
    },
    "8181": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10621,
        10630
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10610,
        10620
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAB4"
    },
    "8185": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10610,
        10631
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10610,
        10631
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10593,
        10609
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x226A"
    },
    "8190": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10593,
        10632
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10593,
        10632
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10577,
        10632
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10577,
        10632
      ],
      "op": "POP",
      "path": "28"
    },
    "8194": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10378,
        10644
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8195": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8197": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8198": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10654,
        10676
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8200": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10654,
        10676
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2019"
    },
    "8204": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10703,
        10732
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x18"
    },
    "8207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10703,
        10732
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10734,
        10747
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8209": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10734,
        10747
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8212": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "ADD",
      "path": "28"
    },
    "8213": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x39F5"
    },
    "8216": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10686,
        10756
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8218": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8223": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8224": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8225": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "SUB",
      "path": "28"
    },
    "8226": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "SUB",
      "path": "28"
    },
    "8227": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8228": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8229": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8230": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10686,
        10756
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8233": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10654,
        10757
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10654,
        10757
      ],
      "op": "POP",
      "path": "28"
    },
    "8235": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10775,
        10810
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 84,
      "value": "0x2034"
    },
    "8238": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10790,
        10799
      ],
      "op": "DUP5",
      "path": "28"
    },
    "8239": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10801,
        10809
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8240": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10775,
        10789
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8B8"
    },
    "8243": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10775,
        10810
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8244": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10775,
        10810
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8245": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10768,
        10810
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "8246": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9796,
        10818
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "8247": {
      "op": "POP"
    },
    "8248": {
      "op": "POP"
    },
    "8249": {
      "op": "POP"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        9796,
        10818
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8252": {
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8253": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xF"
    },
    "8255": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8256": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8257": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x10"
    },
    "8259": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8260": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x11"
    },
    "8262": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8263": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x12"
    },
    "8265": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8266": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x13"
    },
    "8268": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8269": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x14"
    },
    "8271": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8272": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x15"
    },
    "8274": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8275": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x16"
    },
    "8277": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8278": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x17"
    },
    "8280": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8281": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x18"
    },
    "8283": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8284": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8285": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "8286": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP11",
      "path": "28"
    },
    "8287": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "8288": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP10",
      "path": "28"
    },
    "8289": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "8290": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP9",
      "path": "28"
    },
    "8291": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "8292": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP8",
      "path": "28"
    },
    "8293": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "8294": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP7",
      "path": "28"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8301": {
      "op": "SHL"
    },
    "8302": {
      "op": "SUB"
    },
    "8303": {
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8304": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "8305": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "AND",
      "path": "28"
    },
    "8306": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "8307": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "8308": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "8309": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "8310": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "8311": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8312": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "8313": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8314": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2082"
    },
    "8317": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8318": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3766"
    },
    "8321": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8322": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8323": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8324": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "8326": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8327": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8329": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8330": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8331": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DIV",
      "path": "28"
    },
    "8332": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MUL",
      "path": "28"
    },
    "8333": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8335": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8336": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8338": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8339": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8340": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8341": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8342": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8344": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8345": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8346": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "8347": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8348": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8349": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8350": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8351": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8352": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8354": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8355": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8356": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8357": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8358": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20AE"
    },
    "8361": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8362": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x3766"
    },
    "8365": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8366": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8367": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8368": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8369": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20FB"
    },
    "8372": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8373": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8374": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "8376": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "LT",
      "path": "28"
    },
    "8377": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20D0"
    },
    "8380": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8381": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "8384": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8385": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8386": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8387": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DIV",
      "path": "28"
    },
    "8388": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MUL",
      "path": "28"
    },
    "8389": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8390": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8391": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8392": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8394": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8395": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8396": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20FB"
    },
    "8399": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8400": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8401": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8402": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8403": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8404": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8405": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8407": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8408": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8410": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8412": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "8413": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8414": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8415": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8416": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8417": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8418": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8419": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8420": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "8422": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8423": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8424": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8426": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8427": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8428": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP4",
      "path": "28"
    },
    "8429": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "GT",
      "path": "28"
    },
    "8430": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x20DE"
    },
    "8433": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8434": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8435": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8436": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SUB",
      "path": "28"
    },
    "8437": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "8439": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "AND",
      "path": "28"
    },
    "8440": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8441": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "28"
    },
    "8442": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "8443": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8444": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8445": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8446": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8447": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8448": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8449": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8450": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "28"
    },
    "8451": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP11",
      "path": "28"
    },
    "8452": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8453": {
      "fn": "Wizards.isExiled",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8454": {
      "fn": "Wizards.isExiled",
      "offset": [
        2878,
        2882
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8456": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2915
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 85
    },
    "8457": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2915
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8458": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2915
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8459": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2915
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8460": {
      "branch": 180,
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2915
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8461": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2945
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2118"
    },
    "8464": {
      "branch": 180,
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2945
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8465": {
      "op": "POP"
    },
    "8466": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "8468": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8469": {
      "fn": "Wizards.isExiled",
      "offset": [
        2919,
        2928
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8470": {
      "fn": "Wizards.isExiled",
      "offset": [
        2919,
        2945
      ],
      "op": "GT",
      "path": "28"
    },
    "8471": {
      "branch": 181,
      "fn": "Wizards.isExiled",
      "offset": [
        2919,
        2945
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8472": {
      "fn": "Wizards.isExiled",
      "offset": [
        2903,
        2945
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8473": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x2134"
    },
    "8476": {
      "branch": 181,
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8477": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8479": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "8480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8486": {
      "op": "SHL"
    },
    "8487": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8488": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8489": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "8491": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "ADD",
      "path": "28"
    },
    "8492": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "8495": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8496": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x36E7"
    },
    "8499": {
      "fn": "Wizards.isExiled",
      "jump": "i",
      "offset": [
        2895,
        2964
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8500": {
      "fn": "Wizards.isExiled",
      "offset": [
        2895,
        2964
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "8501": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 86,
      "value": "0x0"
    },
    "8503": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP3",
      "path": "28"
    },
    "8504": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8505": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8506": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        2996
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "8508": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8510": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8511": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8513": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8514": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3007
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "8515": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "8517": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "ADD",
      "path": "28"
    },
    "8518": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "8523": {
      "op": "SHL"
    },
    "8524": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8525": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "DIV",
      "path": "28"
    },
    "8526": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "8532": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3031
      ],
      "op": "AND",
      "path": "28"
    },
    "8533": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3036
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8534": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3036
      ],
      "op": "DUP1",
      "path": "28"
    },
    "8535": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3036
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8536": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3036
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8537": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3089
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8B2"
    },
    "8540": {
      "fn": "Wizards.isExiled",
      "offset": [
        2982,
        3089
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "8541": {
      "op": "POP"
    },
    "8542": {
      "op": "POP"
    },
    "8543": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "8545": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8546": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "DUP2",
      "path": "28"
    },
    "8547": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8548": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3054
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "8550": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "8552": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "8553": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "8555": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8556": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3065
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "8557": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "8559": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "ADD",
      "path": "28"
    },
    "8560": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8565": {
      "op": "SHL"
    },
    "8566": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8567": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "DIV",
      "path": "28"
    },
    "8568": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "8574": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3085
      ],
      "op": "AND",
      "path": "28"
    },
    "8575": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3089
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "8576": {
      "fn": "Wizards.isExiled",
      "offset": [
        3040,
        3089
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "8577": {
      "fn": "Wizards.isExiled",
      "jump": "o",
      "offset": [
        2821,
        3097
      ],
      "op": "JUMP",
      "path": "28"
    },
    "8578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8579": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "8581": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8588": {
      "op": "SHL"
    },
    "8589": {
      "op": "SUB"
    },
    "8590": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "13"
    },
    "8591": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "8592": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "13"
    },
    "8593": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x21AC"
    },
    "8596": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8597": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8599": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8606": {
      "op": "SHL"
    },
    "8607": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8608": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8609": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8611": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "13"
    },
    "8612": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "8615": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8616": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x383C"
    },
    "8619": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8620": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8627": {
      "op": "SHL"
    },
    "8628": {
      "op": "SUB"
    },
    "8629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 87
    },
    "8630": {
      "branch": 204,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "13"
    },
    "8631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2211"
    },
    "8634": {
      "branch": 204,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8635": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8649": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8651": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8652": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "13"
    },
    "8653": {
      "op": "MSTORE"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8658": {
      "op": "DUP3"
    },
    "8659": {
      "op": "ADD"
    },
    "8660": {
      "op": "MSTORE"
    },
    "8661": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8696": {
      "op": "DUP3"
    },
    "8697": {
      "op": "ADD"
    },
    "8698": {
      "op": "MSTORE"
    },
    "8699": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8708": {
      "op": "SHL"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8711": {
      "op": "DUP3"
    },
    "8712": {
      "op": "ADD"
    },
    "8713": {
      "op": "MSTORE"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xAE3"
    },
    "8720": {
      "op": "JUMP"
    },
    "8721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8722": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 88,
      "value": "0x12D0"
    },
    "8725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2720"
    },
    "8729": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8730": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8731": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8739": {
      "op": "SHL"
    },
    "8740": {
      "op": "SUB"
    },
    "8741": {
      "op": "NOT"
    },
    "8742": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 89
    },
    "8743": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "10"
    },
    "8744": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8751": {
      "op": "SHL"
    },
    "8752": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "10"
    },
    "8753": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8754": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x224B"
    },
    "8757": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8758": {
      "op": "POP"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8765": {
      "op": "SHL"
    },
    "8766": {
      "op": "SUB"
    },
    "8767": {
      "op": "NOT"
    },
    "8768": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8769": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "10"
    },
    "8770": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8777": {
      "op": "SHL"
    },
    "8778": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "10"
    },
    "8779": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8780": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8781": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B2"
    },
    "8784": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8785": {
      "op": "POP"
    },
    "8786": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8793": {
      "op": "SHL"
    },
    "8794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8800": {
      "op": "SHL"
    },
    "8801": {
      "op": "SUB"
    },
    "8802": {
      "op": "NOT"
    },
    "8803": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 90
    },
    "8804": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "8"
    },
    "8805": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "8"
    },
    "8806": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B2"
    },
    "8809": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8810": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8811": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "8813": {
      "fn": "Strings.toString",
      "offset": [
        563,
        568
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8814": {
      "fn": "Strings.toString",
      "offset": [
        572,
        573
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8816": {
      "branch": 205,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "SUB",
      "path": "26"
    },
    "8817": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2291"
    },
    "8820": {
      "branch": 205,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8821": {
      "op": "POP"
    },
    "8822": {
      "op": "POP"
    },
    "8823": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 91,
      "value": "0x40"
    },
    "8825": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8826": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8827": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8828": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8829": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "26"
    },
    "8830": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8831": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8832": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8833": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "8835": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8836": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "8841": {
      "op": "SHL"
    },
    "8842": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8844": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8845": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "26"
    },
    "8846": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8847": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8848": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8849": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8850": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8851": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8853": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8854": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8855": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8856": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22BB"
    },
    "8859": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8860": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 92
    },
    "8861": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22A5"
    },
    "8864": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8865": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3A8B"
    },
    "8868": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8869": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8870": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8871": {
      "op": "POP"
    },
    "8872": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 93,
      "value": "0x22B4"
    },
    "8875": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8876": {
      "op": "POP"
    },
    "8877": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "8879": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8880": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3752"
    },
    "8883": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8884": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8885": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8886": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "26"
    },
    "8887": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2295"
    },
    "8890": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8891": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8892": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8894": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8895": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8904": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8905": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "26"
    },
    "8906": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8907": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22D6"
    },
    "8910": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8911": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22D6"
    },
    "8914": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2CA2"
    },
    "8917": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8918": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8919": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8921": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8922": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8923": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8924": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8925": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8926": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8927": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "8929": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "26"
    },
    "8930": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "8932": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "26"
    },
    "8933": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "26"
    },
    "8934": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8936": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "26"
    },
    "8937": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8938": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "26"
    },
    "8939": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8941": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8942": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8943": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8944": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2300"
    },
    "8947": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8948": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8950": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8951": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "26"
    },
    "8952": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8953": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8954": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "8955": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8956": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "8957": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "26"
    },
    "8958": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8959": {
      "op": "POP"
    },
    "8960": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8961": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "26"
    },
    "8962": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8963": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "26"
    },
    "8964": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8965": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8966": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8967": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2034"
    },
    "8970": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8971": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 94,
      "value": "0x2315"
    },
    "8974": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "8976": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8977": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3725"
    },
    "8980": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8981": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8982": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8983": {
      "op": "POP"
    },
    "8984": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 95,
      "value": "0x2322"
    },
    "8987": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "8989": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "26"
    },
    "8990": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3810"
    },
    "8993": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8994": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8995": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x232D"
    },
    "8998": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8999": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x30"
    },
    "9001": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3824"
    },
    "9004": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9005": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9006": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xF8"
    },
    "9008": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "26"
    },
    "9009": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9010": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9011": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9012": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9013": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9014": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "26"
    },
    "9015": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2342"
    },
    "9018": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9019": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2342"
    },
    "9022": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x39B6"
    },
    "9025": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9026": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9027": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9029": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "26"
    },
    "9030": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "26"
    },
    "9031": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9036": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9038": {
      "op": "SHL"
    },
    "9039": {
      "op": "SUB"
    },
    "9040": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "26"
    },
    "9041": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "26"
    },
    "9042": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9043": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9044": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9046": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "26"
    },
    "9047": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9048": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "26"
    },
    "9049": {
      "op": "POP"
    },
    "9050": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 96,
      "value": "0x2364"
    },
    "9053": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "9055": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "26"
    },
    "9056": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3752"
    },
    "9059": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9060": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9061": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "9062": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "26"
    },
    "9063": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2304"
    },
    "9066": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9067": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9068": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 97,
      "value": "0x0"
    },
    "9070": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9071": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9072": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9073": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9075": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9077": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9078": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9080": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9081": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9082": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9083": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9090": {
      "op": "SHL"
    },
    "9091": {
      "op": "SUB"
    },
    "9092": {
      "op": "NOT"
    },
    "9093": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "10"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9100": {
      "op": "SHL"
    },
    "9101": {
      "op": "SUB"
    },
    "9102": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9103": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "10"
    },
    "9104": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9105": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9106": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "10"
    },
    "9107": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9108": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9109": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9110": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9111": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9112": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 98,
      "value": "0x23A0"
    },
    "9115": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9116": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DA"
    },
    "9119": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9120": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9127": {
      "op": "SHL"
    },
    "9128": {
      "op": "SUB"
    },
    "9129": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "10"
    },
    "9130": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9163": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9165": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9166": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9168": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9169": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9170": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9171": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "10"
    },
    "9172": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9173": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "10"
    },
    "9174": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "10"
    },
    "9175": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "10"
    },
    "9176": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9177": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9178": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9180": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9181": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9182": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9183": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "9185": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9187": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9188": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9190": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9191": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9192": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "SUB"
    },
    "9201": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "10"
    },
    "9202": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 99,
      "value": "0x2452"
    },
    "9205": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9206": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9215": {
      "op": "SHL"
    },
    "9216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9217": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9220": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9222": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9223": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "10"
    },
    "9224": {
      "op": "MSTORE"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "9227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9229": {
      "op": "DUP3"
    },
    "9230": {
      "op": "ADD"
    },
    "9231": {
      "op": "MSTORE"
    },
    "9232": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9267": {
      "op": "DUP3"
    },
    "9268": {
      "op": "ADD"
    },
    "9269": {
      "op": "MSTORE"
    },
    "9270": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "9285": {
      "op": "SHL"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9288": {
      "op": "DUP3"
    },
    "9289": {
      "op": "ADD"
    },
    "9290": {
      "op": "MSTORE"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9293": {
      "op": "ADD"
    },
    "9294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "9297": {
      "op": "JUMP"
    },
    "9298": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9301": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x245D"
    },
    "9304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DA"
    },
    "9308": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "10"
    },
    "9312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 100
    },
    "9313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9319": {
      "op": "SHL"
    },
    "9320": {
      "op": "SUB"
    },
    "9321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "10"
    },
    "9322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9329": {
      "op": "SHL"
    },
    "9330": {
      "op": "SUB"
    },
    "9331": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "10"
    },
    "9332": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "10"
    },
    "9333": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9334": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2498"
    },
    "9337": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9338": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "10"
    },
    "9339": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9346": {
      "op": "SHL"
    },
    "9347": {
      "op": "SUB"
    },
    "9348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "10"
    },
    "9349": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x248D"
    },
    "9352": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9353": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1E"
    },
    "9356": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9357": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9364": {
      "op": "SHL"
    },
    "9365": {
      "op": "SUB"
    },
    "9366": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "10"
    },
    "9367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "10"
    },
    "9368": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9369": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9370": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2034"
    },
    "9373": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9381": {
      "op": "SHL"
    },
    "9382": {
      "op": "SUB"
    },
    "9383": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9384": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9385": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "10"
    },
    "9386": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9388": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9389": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9390": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9391": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "9393": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9396": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9397": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9398": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9400": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9401": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9402": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9403": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9404": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9405": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "10"
    },
    "9406": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9407": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9408": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9409": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9410": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9411": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "9415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "10"
    },
    "9416": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2034"
    },
    "9419": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9420": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9421": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 101
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9428": {
      "op": "SHL"
    },
    "9429": {
      "op": "SUB"
    },
    "9430": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "10"
    },
    "9431": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24DF"
    },
    "9434": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9435": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14DA"
    },
    "9438": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9439": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9446": {
      "op": "SHL"
    },
    "9447": {
      "op": "SUB"
    },
    "9448": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "10"
    },
    "9449": {
      "branch": 191,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "10"
    },
    "9450": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2547"
    },
    "9453": {
      "branch": 191,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9454": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9456": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9463": {
      "op": "SHL"
    },
    "9464": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9465": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9468": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9470": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9471": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "10"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9477": {
      "op": "DUP3"
    },
    "9478": {
      "op": "ADD"
    },
    "9479": {
      "op": "MSTORE"
    },
    "9480": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9515": {
      "op": "DUP3"
    },
    "9516": {
      "op": "ADD"
    },
    "9517": {
      "op": "MSTORE"
    },
    "9518": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "9528": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "9530": {
      "op": "SHL"
    },
    "9531": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9533": {
      "op": "DUP3"
    },
    "9534": {
      "op": "ADD"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9538": {
      "op": "ADD"
    },
    "9539": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "9542": {
      "op": "JUMP"
    },
    "9543": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9550": {
      "op": "SHL"
    },
    "9551": {
      "op": "SUB"
    },
    "9552": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 102
    },
    "9553": {
      "branch": 192,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "10"
    },
    "9554": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25A9"
    },
    "9557": {
      "branch": 192,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9558": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9560": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9561": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9567": {
      "op": "SHL"
    },
    "9568": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9569": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9572": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9574": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9575": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "10"
    },
    "9576": {
      "op": "MSTORE"
    },
    "9577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9579": {
      "op": "DUP1"
    },
    "9580": {
      "op": "DUP3"
    },
    "9581": {
      "op": "ADD"
    },
    "9582": {
      "op": "MSTORE"
    },
    "9583": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9618": {
      "op": "DUP3"
    },
    "9619": {
      "op": "ADD"
    },
    "9620": {
      "op": "MSTORE"
    },
    "9621": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9628": {
      "op": "SHL"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9631": {
      "op": "DUP3"
    },
    "9632": {
      "op": "ADD"
    },
    "9633": {
      "op": "MSTORE"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9636": {
      "op": "ADD"
    },
    "9637": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "9640": {
      "op": "JUMP"
    },
    "9641": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9642": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 103,
      "value": "0x25B4"
    },
    "9645": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9646": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9647": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9648": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27A5"
    },
    "9651": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9652": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9653": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 104,
      "value": "0x25BF"
    },
    "9656": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9658": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9659": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x236B"
    },
    "9662": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9663": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9670": {
      "op": "SHL"
    },
    "9671": {
      "op": "SUB"
    },
    "9672": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 105
    },
    "9673": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "10"
    },
    "9674": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9676": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9677": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9678": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9679": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9681": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9683": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9684": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9686": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9687": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9688": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9689": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9690": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9692": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9693": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9694": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25E8"
    },
    "9697": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9698": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9699": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9700": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3725"
    },
    "9703": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9704": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9705": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9706": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9707": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9708": {
      "op": "POP"
    },
    "9709": {
      "op": "POP"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9716": {
      "op": "SHL"
    },
    "9717": {
      "op": "SUB"
    },
    "9718": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 106
    },
    "9719": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "10"
    },
    "9720": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9722": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9723": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9724": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9725": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9727": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9729": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9730": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9732": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9733": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9734": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9735": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9736": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9738": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9739": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9740": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2616"
    },
    "9743": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9744": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9745": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9746": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3824"
    },
    "9749": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9750": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9751": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9752": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9753": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9754": {
      "op": "POP"
    },
    "9755": {
      "op": "POP"
    },
    "9756": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 107,
      "value": "0x0"
    },
    "9758": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9759": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9760": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9761": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "9763": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9765": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9766": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9768": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9769": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9770": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9771": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9772": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9779": {
      "op": "SHL"
    },
    "9780": {
      "op": "SUB"
    },
    "9781": {
      "op": "NOT"
    },
    "9782": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "10"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9789": {
      "op": "SHL"
    },
    "9790": {
      "op": "SUB"
    },
    "9791": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9792": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9793": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "10"
    },
    "9794": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9795": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9796": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "10"
    },
    "9797": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9798": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9799": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9800": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 108
    },
    "9801": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9802": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9803": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9804": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9805": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9806": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "10"
    },
    "9807": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9808": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9841": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9842": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "10"
    },
    "9843": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "10"
    },
    "9844": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "10"
    },
    "9845": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "10"
    },
    "9846": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9847": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9848": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 109,
      "value": "0x2691"
    },
    "9851": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9852": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9853": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9855": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9856": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9857": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9859": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "10"
    },
    "9860": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9862": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9863": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9864": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9866": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9867": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9868": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "10"
    },
    "9869": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x285D"
    },
    "9872": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9873": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9874": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "10"
    },
    "9875": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "10"
    },
    "9876": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9877": {
      "fn": "Wizards._exile",
      "offset": [
        9125,
        9484
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "9878": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP1",
      "path": "28",
      "statement": 110
    },
    "9879": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9200
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "9880": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP1",
      "path": "28"
    },
    "9881": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9200
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "9882": {
      "branch": 182,
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "9883": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9230
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x26A6"
    },
    "9886": {
      "branch": 182,
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9230
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "9887": {
      "op": "POP"
    },
    "9888": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "9890": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9891": {
      "fn": "Wizards._exile",
      "offset": [
        9204,
        9213
      ],
      "op": "DUP2",
      "path": "28"
    },
    "9892": {
      "fn": "Wizards._exile",
      "offset": [
        9204,
        9230
      ],
      "op": "GT",
      "path": "28"
    },
    "9893": {
      "branch": 183,
      "fn": "Wizards._exile",
      "offset": [
        9204,
        9230
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "9894": {
      "fn": "Wizards._exile",
      "offset": [
        9188,
        9230
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "9895": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x26DF"
    },
    "9898": {
      "branch": 183,
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "9899": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "9901": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "9902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9908": {
      "op": "SHL"
    },
    "9909": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "DUP2",
      "path": "28"
    },
    "9910": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "9911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9913": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "9915": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "DUP3",
      "path": "28"
    },
    "9916": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "ADD",
      "path": "28"
    },
    "9917": {
      "op": "MSTORE"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "9920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9922": {
      "op": "DUP3"
    },
    "9923": {
      "op": "ADD"
    },
    "9924": {
      "op": "MSTORE"
    },
    "9925": {
      "op": "PUSH10",
      "value": "0x1A5B9D985B1A59081A59"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "9938": {
      "op": "SHL"
    },
    "9939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9941": {
      "op": "DUP3"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "MSTORE"
    },
    "9944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9946": {
      "op": "ADD"
    },
    "9947": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xAE3"
    },
    "9950": {
      "op": "JUMP"
    },
    "9951": {
      "fn": "Wizards._exile",
      "offset": [
        9180,
        9245
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "9952": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 111,
      "value": "0x0"
    },
    "9954": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "9955": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "DUP2",
      "path": "28"
    },
    "9956": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "9957": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9315
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0xB"
    },
    "9959": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "9961": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "9962": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "9964": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "9965": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9326
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "9966": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9350
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "9968": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9350
      ],
      "op": "ADD",
      "path": "28"
    },
    "9969": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9376
      ],
      "op": "DUP1",
      "path": "28"
    },
    "9970": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9376
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "9971": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9984": {
      "op": "SHL"
    },
    "9985": {
      "op": "NOT"
    },
    "9986": {
      "fn": "Wizards._exile",
      "offset": [
        9427,
        9476
      ],
      "op": "AND",
      "path": "28",
      "statement": 112
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9991": {
      "op": "SHL"
    },
    "9992": {
      "fn": "Wizards._exile",
      "offset": [
        9360,
        9375
      ],
      "op": "TIMESTAMP",
      "path": "28"
    },
    "9993": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9376
      ],
      "op": "PUSH5",
      "path": "28",
      "value": "0xFFFFFFFFFF"
    },
    "9999": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9376
      ],
      "op": "AND",
      "path": "28"
    },
    "10000": {
      "fn": "Wizards._exile",
      "offset": [
        9301,
        9376
      ],
      "op": "MUL",
      "path": "28"
    },
    "10001": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10009": {
      "op": "SHL"
    },
    "10010": {
      "op": "NOT"
    },
    "10011": {
      "fn": "Wizards._exile",
      "offset": [
        9427,
        9476
      ],
      "op": "AND",
      "path": "28"
    },
    "10012": {
      "fn": "Wizards._exile",
      "offset": [
        9427,
        9476
      ],
      "op": "OR",
      "path": "28"
    },
    "10013": {
      "fn": "Wizards._exile",
      "offset": [
        9427,
        9476
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "10014": {
      "fn": "Wizards._exile",
      "offset": [
        9427,
        9476
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "10015": {
      "fn": "Wizards._exile",
      "jump": "o",
      "offset": [
        9125,
        9484
      ],
      "op": "JUMP",
      "path": "28"
    },
    "10016": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "10017": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "10019": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "13"
    },
    "10020": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "10021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10027": {
      "op": "SHL"
    },
    "10028": {
      "op": "SUB"
    },
    "10029": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 113
    },
    "10030": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10031": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "13"
    },
    "10032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10038": {
      "op": "SHL"
    },
    "10039": {
      "op": "SUB"
    },
    "10040": {
      "op": "NOT"
    },
    "10041": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "13"
    },
    "10042": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "13"
    },
    "10043": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "13"
    },
    "10044": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "13"
    },
    "10045": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10046": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "13"
    },
    "10047": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "10048": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 114,
      "value": "0x40"
    },
    "10050": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "10051": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10052": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "13"
    },
    "10053": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "10054": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10055": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "13"
    },
    "10056": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10057": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "13",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10090": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10091": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "10093": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "10094": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "13"
    },
    "10095": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "13"
    },
    "10096": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "13"
    },
    "10097": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "13"
    },
    "10098": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10099": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 115,
      "value": "0x277D"
    },
    "10102": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10103": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10104": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10105": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24CC"
    },
    "10108": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10109": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10110": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 116,
      "value": "0x2789"
    },
    "10113": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10114": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10115": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10116": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10117": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2890"
    },
    "10120": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10121": {
      "branch": 193,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10122": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10D2"
    },
    "10125": {
      "branch": 193,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10126": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10128": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10135": {
      "op": "SHL"
    },
    "10136": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10137": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10138": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "10140": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "10"
    },
    "10141": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "10144": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10145": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AA4"
    },
    "10148": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10149": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10156": {
      "op": "SHL"
    },
    "10157": {
      "op": "SUB"
    },
    "10158": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10159": {
      "branch": 199,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "12"
    },
    "10160": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2800"
    },
    "10163": {
      "branch": 199,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10164": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 117,
      "value": "0x27FB"
    },
    "10167": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10168": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 118,
      "value": "0x8"
    },
    "10170": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10171": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10172": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10174": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10175": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10176": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10177": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "10179": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10181": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10182": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10184": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10185": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10186": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10187": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10188": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10189": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 119,
      "value": "0x1"
    },
    "10191": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10192": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "12"
    },
    "10193": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10194": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10195": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10196": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10197": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10198": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10199": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "10232": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "12"
    },
    "10233": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10234": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10235": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10236": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2823"
    },
    "10239": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10240": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10241": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10248": {
      "op": "SHL"
    },
    "10249": {
      "op": "SUB"
    },
    "10250": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "12"
    },
    "10251": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10258": {
      "op": "SHL"
    },
    "10259": {
      "op": "SUB"
    },
    "10260": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "12"
    },
    "10261": {
      "branch": 200,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "12"
    },
    "10262": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2823"
    },
    "10265": {
      "branch": 200,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10266": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 120,
      "value": "0x2823"
    },
    "10269": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10270": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10271": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2991"
    },
    "10274": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10275": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10282": {
      "op": "SHL"
    },
    "10283": {
      "op": "SUB"
    },
    "10284": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10285": {
      "branch": 201,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "12"
    },
    "10286": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x283A"
    },
    "10289": {
      "branch": 201,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10290": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 121,
      "value": "0xDC3"
    },
    "10293": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10294": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A2E"
    },
    "10297": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10298": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10299": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10306": {
      "op": "SHL"
    },
    "10307": {
      "op": "SUB"
    },
    "10308": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "12"
    },
    "10309": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10316": {
      "op": "SHL"
    },
    "10317": {
      "op": "SUB"
    },
    "10318": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "12"
    },
    "10319": {
      "branch": 202,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "12"
    },
    "10320": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC3"
    },
    "10323": {
      "branch": 202,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10324": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 122,
      "value": "0xDC3"
    },
    "10327": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10328": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10329": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2ADD"
    },
    "10332": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10333": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10334": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 123,
      "value": "0x2867"
    },
    "10337": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10338": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10339": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B21"
    },
    "10342": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10343": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10344": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 124,
      "value": "0x2874"
    },
    "10347": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10349": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10350": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10351": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10352": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2890"
    },
    "10355": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10356": {
      "branch": 194,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10357": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC3"
    },
    "10360": {
      "branch": 194,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10361": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10363": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10370": {
      "op": "SHL"
    },
    "10371": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10372": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10373": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "10375": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "10"
    },
    "10376": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "10379": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10380": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AA4"
    },
    "10383": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10393": {
      "op": "SHL"
    },
    "10394": {
      "op": "SUB"
    },
    "10395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "10"
    },
    "10397": {
      "op": "EXTCODESIZE"
    },
    "10398": {
      "op": "ISZERO"
    },
    "10399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2986"
    },
    "10402": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10403": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10406": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10413": {
      "op": "SHL"
    },
    "10414": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10422": {
      "op": "SHL"
    },
    "10423": {
      "op": "SUB"
    },
    "10424": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "10"
    },
    "10425": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "10"
    },
    "10426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x150B7A02"
    },
    "10432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D4"
    },
    "10436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10437": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "7"
    },
    "10438": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "10"
    },
    "10440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "10"
    },
    "10442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "10"
    },
    "10444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "10447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "10"
    },
    "10448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AF6"
    },
    "10451": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10453": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10457": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "10"
    },
    "10460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "10"
    },
    "10461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "10"
    },
    "10465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "10"
    },
    "10466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "10"
    },
    "10467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "10468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "10"
    },
    "10469": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "10"
    },
    "10470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "10"
    },
    "10471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "10473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x290F"
    },
    "10476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10477": {
      "op": "POP"
    },
    "10478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10480": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10481": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10482": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "10484": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "10485": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "10"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10490": {
      "op": "NOT"
    },
    "10491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "10"
    },
    "10492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "10"
    },
    "10494": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10495": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "10496": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x290C"
    },
    "10500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "10"
    },
    "10503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10504": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B33"
    },
    "10507": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x296C"
    },
    "10515": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10516": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "10517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10519": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "10520": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x293D"
    },
    "10523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10527": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10528": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "10"
    },
    "10529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "10531": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "10"
    },
    "10532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "10534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "10535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "10"
    },
    "10536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "10"
    },
    "10537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "10"
    },
    "10539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10541": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "10543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "10546": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "10"
    },
    "10552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "10553": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2942"
    },
    "10556": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "10560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "10561": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "10"
    },
    "10562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "10"
    },
    "10564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12663
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10565": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12674,
        12675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "10568": {
      "branch": 195,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12675
      ],
      "op": "SUB",
      "path": "10"
    },
    "10569": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2964"
    },
    "10572": {
      "branch": 195,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10573": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 125,
      "value": "0x40"
    },
    "10575": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10582": {
      "op": "SHL"
    },
    "10583": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10584": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10585": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "10587": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "10"
    },
    "10588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "10591": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10592": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AA4"
    },
    "10595": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10596": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10599": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10600": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "10602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "10"
    },
    "10603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "10"
    },
    "10604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10611": {
      "op": "SHL"
    },
    "10612": {
      "op": "SUB"
    },
    "10613": {
      "op": "NOT"
    },
    "10614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "10",
      "statement": 126
    },
    "10615": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10620": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10622": {
      "op": "SHL"
    },
    "10623": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "10"
    },
    "10624": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10625": {
      "op": "POP"
    },
    "10626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2034"
    },
    "10629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10630": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10631": {
      "op": "POP"
    },
    "10632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 127,
      "value": "0x1"
    },
    "10634": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "10635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "10636": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "10"
    },
    "10637": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "10"
    },
    "10638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "10"
    },
    "10639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "10"
    },
    "10640": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10641": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10642": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10644": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10646": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x299E"
    },
    "10649": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1661"
    },
    "10653": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10654": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29A8"
    },
    "10658": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10659": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10660": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3725"
    },
    "10663": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10664": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10665": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10667": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10668": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10669": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10670": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10672": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10674": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10675": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10677": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10678": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10679": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10680": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10682": {
      "op": "POP"
    },
    "10683": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10684": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10685": {
      "branch": 203,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "12"
    },
    "10686": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x29FB"
    },
    "10689": {
      "branch": 203,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10696": {
      "op": "SHL"
    },
    "10697": {
      "op": "SUB"
    },
    "10698": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10699": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "12"
    },
    "10700": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10702": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10703": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10704": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "10707": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10712": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10714": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "12"
    },
    "10718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10719": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 128
    },
    "10727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10734": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10735": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 129
    },
    "10736": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10739": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10740": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10741": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10743": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10744": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10748": {
      "op": "POP"
    },
    "10749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 130,
      "value": "0x0"
    },
    "10751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10752": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10753": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10754": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "10756": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10760": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10761": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10763": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10768": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10775": {
      "op": "SHL"
    },
    "10776": {
      "op": "SUB"
    },
    "10777": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 131
    },
    "10778": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10779": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "12"
    },
    "10780": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10781": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10782": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "10784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10789": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10796": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10797": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10798": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10799": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10801": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10802": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10804": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10805": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A40"
    },
    "10808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10809": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10812": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3725"
    },
    "10815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10816": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10819": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10820": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10821": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "10824": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10829": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10831": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10832": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10834": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10835": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10836": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "10838": {
      "op": "POP"
    },
    "10839": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10840": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10843": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10844": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "12"
    },
    "10845": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A68"
    },
    "10848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A68"
    },
    "10852": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39B6"
    },
    "10855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10856": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10857": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10860": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10865": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "12"
    },
    "10867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10868": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10869": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "12"
    },
    "10870": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 132
    },
    "10871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x8"
    },
    "10873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10877": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "12"
    },
    "10878": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A89"
    },
    "10881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A89"
    },
    "10885": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39B6"
    },
    "10888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10889": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10890": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10892": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10893": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10897": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10902": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "12"
    },
    "10903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "10906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 133
    },
    "10908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10909": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x9"
    },
    "10912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "10914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10917": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "12"
    },
    "10921": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10922": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "12",
      "statement": 134
    },
    "10924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 135,
      "value": "0x8"
    },
    "10931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10933": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "12"
    },
    "10934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AC1"
    },
    "10937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10938": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AC1"
    },
    "10941": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3B50"
    },
    "10944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10945": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10946": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10948": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10949": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "12"
    },
    "10950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10953": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10955": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "10958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10960": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "10961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "12"
    },
    "10962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10965": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "10968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "12"
    },
    "10969": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "12"
    },
    "10970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "12"
    },
    "10971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "12"
    },
    "10972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10973": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10974": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10976": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AE8"
    },
    "10979": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "12"
    },
    "10980": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1661"
    },
    "10983": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10984": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10991": {
      "op": "SHL"
    },
    "10992": {
      "op": "SUB"
    },
    "10993": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "12",
      "statement": 136
    },
    "10994": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "10995": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "12"
    },
    "10996": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "10998": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10999": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11000": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11001": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x6"
    },
    "11003": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "11005": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11006": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11007": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11008": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "11010": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11011": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11012": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11013": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "12"
    },
    "11014": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "12"
    },
    "11015": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11016": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11017": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11018": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "12"
    },
    "11019": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "12"
    },
    "11020": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11021": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "12"
    },
    "11022": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11023": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11024": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 137
    },
    "11025": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "12"
    },
    "11026": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11027": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x7"
    },
    "11029": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11030": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "11031": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11032": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11033": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11034": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "11035": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11036": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "11037": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "11038": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "11039": {
      "op": "POP"
    },
    "11040": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11041": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11048": {
      "op": "SHL"
    },
    "11049": {
      "op": "SUB"
    },
    "11050": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 138
    },
    "11051": {
      "branch": 196,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "10"
    },
    "11052": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B77"
    },
    "11055": {
      "branch": 196,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11056": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11058": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11065": {
      "op": "SHL"
    },
    "11066": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11067": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11070": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11072": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11073": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "10"
    },
    "11074": {
      "op": "DUP2"
    },
    "11075": {
      "op": "SWAP1"
    },
    "11076": {
      "op": "MSTORE"
    },
    "11077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11079": {
      "op": "DUP3"
    },
    "11080": {
      "op": "ADD"
    },
    "11081": {
      "op": "MSTORE"
    },
    "11082": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11117": {
      "op": "DUP3"
    },
    "11118": {
      "op": "ADD"
    },
    "11119": {
      "op": "MSTORE"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11122": {
      "op": "ADD"
    },
    "11123": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "11126": {
      "op": "JUMP"
    },
    "11127": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11128": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11130": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11131": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11132": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11133": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "11135": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11137": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11138": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11140": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11141": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11142": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11149": {
      "op": "SHL"
    },
    "11150": {
      "op": "SUB"
    },
    "11151": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "10"
    },
    "11152": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11153": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 139,
      "value": "0x2BDC"
    },
    "11156": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11157": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11159": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11166": {
      "op": "SHL"
    },
    "11167": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11168": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11171": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11173": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11174": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "10"
    },
    "11175": {
      "op": "MSTORE"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "11178": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11180": {
      "op": "DUP3"
    },
    "11181": {
      "op": "ADD"
    },
    "11182": {
      "op": "MSTORE"
    },
    "11183": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "11216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11218": {
      "op": "DUP3"
    },
    "11219": {
      "op": "ADD"
    },
    "11220": {
      "op": "MSTORE"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11223": {
      "op": "ADD"
    },
    "11224": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE3"
    },
    "11227": {
      "op": "JUMP"
    },
    "11228": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11229": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 140,
      "value": "0x2BE8"
    },
    "11232": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11234": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11235": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11236": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27A5"
    },
    "11239": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11240": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11247": {
      "op": "SHL"
    },
    "11248": {
      "op": "SUB"
    },
    "11249": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 141
    },
    "11250": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "10"
    },
    "11251": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11253": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11254": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11255": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11256": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "11258": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11260": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11261": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11263": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11264": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11265": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11266": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11267": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11269": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11270": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11271": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C11"
    },
    "11274": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11275": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11276": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11277": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3824"
    },
    "11280": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11281": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11282": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11283": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11284": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11285": {
      "op": "POP"
    },
    "11286": {
      "op": "POP"
    },
    "11287": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 142,
      "value": "0x0"
    },
    "11289": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11290": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11291": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11292": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "11294": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11296": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11297": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11299": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11300": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11301": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11302": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11303": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11310": {
      "op": "SHL"
    },
    "11311": {
      "op": "SUB"
    },
    "11312": {
      "op": "NOT"
    },
    "11313": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "10"
    },
    "11314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11320": {
      "op": "SHL"
    },
    "11321": {
      "op": "SUB"
    },
    "11322": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11323": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "10"
    },
    "11324": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11325": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11326": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "10"
    },
    "11327": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11328": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11329": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11330": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 143
    },
    "11331": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11332": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11333": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11334": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11335": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "11368": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11369": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11370": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11371": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "10"
    },
    "11372": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "10"
    },
    "11373": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "10"
    },
    "11374": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11375": {
      "op": "JUMPDEST"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11382": {
      "op": "SHL"
    },
    "11383": {
      "op": "SUB"
    },
    "11384": {
      "op": "NOT"
    },
    "11385": {
      "op": "DUP2"
    },
    "11386": {
      "op": "AND"
    },
    "11387": {
      "op": "DUP2"
    },
    "11388": {
      "op": "EQ"
    },
    "11389": {
      "op": "PUSH2",
      "value": "0x12D0"
    },
    "11392": {
      "op": "JUMPI"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11395": {
      "op": "DUP1"
    },
    "11396": {
      "op": "REVERT"
    },
    "11397": {
      "op": "JUMPDEST"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11402": {
      "op": "DUP3"
    },
    "11403": {
      "op": "DUP5"
    },
    "11404": {
      "op": "SUB"
    },
    "11405": {
      "op": "SLT"
    },
    "11406": {
      "op": "ISZERO"
    },
    "11407": {
      "op": "PUSH2",
      "value": "0x2C97"
    },
    "11410": {
      "op": "JUMPI"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11413": {
      "op": "DUP1"
    },
    "11414": {
      "op": "REVERT"
    },
    "11415": {
      "op": "JUMPDEST"
    },
    "11416": {
      "op": "DUP2"
    },
    "11417": {
      "op": "CALLDATALOAD"
    },
    "11418": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "11421": {
      "op": "DUP2"
    },
    "11422": {
      "op": "PUSH2",
      "value": "0x2C6F"
    },
    "11425": {
      "jump": "i",
      "op": "JUMP"
    },
    "11426": {
      "op": "JUMPDEST"
    },
    "11427": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11434": {
      "op": "SHL"
    },
    "11435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11437": {
      "op": "MSTORE"
    },
    "11438": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11440": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11442": {
      "op": "MSTORE"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11447": {
      "op": "REVERT"
    },
    "11448": {
      "op": "JUMPDEST"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11451": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11460": {
      "op": "DUP1"
    },
    "11461": {
      "op": "DUP5"
    },
    "11462": {
      "op": "GT"
    },
    "11463": {
      "op": "ISZERO"
    },
    "11464": {
      "op": "PUSH2",
      "value": "0x2CD3"
    },
    "11467": {
      "op": "JUMPI"
    },
    "11468": {
      "op": "PUSH2",
      "value": "0x2CD3"
    },
    "11471": {
      "op": "PUSH2",
      "value": "0x2CA2"
    },
    "11474": {
      "jump": "i",
      "op": "JUMP"
    },
    "11475": {
      "op": "JUMPDEST"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11478": {
      "op": "MLOAD"
    },
    "11479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11481": {
      "op": "DUP6"
    },
    "11482": {
      "op": "ADD"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11485": {
      "op": "NOT"
    },
    "11486": {
      "op": "SWAP1"
    },
    "11487": {
      "op": "DUP2"
    },
    "11488": {
      "op": "AND"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11491": {
      "op": "ADD"
    },
    "11492": {
      "op": "AND"
    },
    "11493": {
      "op": "DUP2"
    },
    "11494": {
      "op": "ADD"
    },
    "11495": {
      "op": "SWAP1"
    },
    "11496": {
      "op": "DUP3"
    },
    "11497": {
      "op": "DUP3"
    },
    "11498": {
      "op": "GT"
    },
    "11499": {
      "op": "DUP2"
    },
    "11500": {
      "op": "DUP4"
    },
    "11501": {
      "op": "LT"
    },
    "11502": {
      "op": "OR"
    },
    "11503": {
      "op": "ISZERO"
    },
    "11504": {
      "op": "PUSH2",
      "value": "0x2CFB"
    },
    "11507": {
      "op": "JUMPI"
    },
    "11508": {
      "op": "PUSH2",
      "value": "0x2CFB"
    },
    "11511": {
      "op": "PUSH2",
      "value": "0x2CA2"
    },
    "11514": {
      "jump": "i",
      "op": "JUMP"
    },
    "11515": {
      "op": "JUMPDEST"
    },
    "11516": {
      "op": "DUP2"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11519": {
      "op": "MSTORE"
    },
    "11520": {
      "op": "DUP1"
    },
    "11521": {
      "op": "SWAP4"
    },
    "11522": {
      "op": "POP"
    },
    "11523": {
      "op": "DUP6"
    },
    "11524": {
      "op": "DUP2"
    },
    "11525": {
      "op": "MSTORE"
    },
    "11526": {
      "op": "DUP7"
    },
    "11527": {
      "op": "DUP7"
    },
    "11528": {
      "op": "DUP7"
    },
    "11529": {
      "op": "ADD"
    },
    "11530": {
      "op": "GT"
    },
    "11531": {
      "op": "ISZERO"
    },
    "11532": {
      "op": "PUSH2",
      "value": "0x2D14"
    },
    "11535": {
      "op": "JUMPI"
    },
    "11536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11538": {
      "op": "DUP1"
    },
    "11539": {
      "op": "REVERT"
    },
    "11540": {
      "op": "JUMPDEST"
    },
    "11541": {
      "op": "DUP6"
    },
    "11542": {
      "op": "DUP6"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11545": {
      "op": "DUP4"
    },
    "11546": {
      "op": "ADD"
    },
    "11547": {
      "op": "CALLDATACOPY"
    },
    "11548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11552": {
      "op": "DUP8"
    },
    "11553": {
      "op": "DUP4"
    },
    "11554": {
      "op": "ADD"
    },
    "11555": {
      "op": "ADD"
    },
    "11556": {
      "op": "MSTORE"
    },
    "11557": {
      "op": "POP"
    },
    "11558": {
      "op": "POP"
    },
    "11559": {
      "op": "POP"
    },
    "11560": {
      "op": "SWAP4"
    },
    "11561": {
      "op": "SWAP3"
    },
    "11562": {
      "op": "POP"
    },
    "11563": {
      "op": "POP"
    },
    "11564": {
      "op": "POP"
    },
    "11565": {
      "jump": "o",
      "op": "JUMP"
    },
    "11566": {
      "op": "JUMPDEST"
    },
    "11567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11569": {
      "op": "DUP3"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11572": {
      "op": "DUP4"
    },
    "11573": {
      "op": "ADD"
    },
    "11574": {
      "op": "SLT"
    },
    "11575": {
      "op": "PUSH2",
      "value": "0x2D3F"
    },
    "11578": {
      "op": "JUMPI"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11581": {
      "op": "DUP1"
    },
    "11582": {
      "op": "REVERT"
    },
    "11583": {
      "op": "JUMPDEST"
    },
    "11584": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "11587": {
      "op": "DUP4"
    },
    "11588": {
      "op": "DUP4"
    },
    "11589": {
      "op": "CALLDATALOAD"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11592": {
      "op": "DUP6"
    },
    "11593": {
      "op": "ADD"
    },
    "11594": {
      "op": "PUSH2",
      "value": "0x2CB8"
    },
    "11597": {
      "jump": "i",
      "op": "JUMP"
    },
    "11598": {
      "op": "JUMPDEST"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11601": {
      "op": "DUP1"
    },
    "11602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11604": {
      "op": "DUP4"
    },
    "11605": {
      "op": "DUP6"
    },
    "11606": {
      "op": "SUB"
    },
    "11607": {
      "op": "SLT"
    },
    "11608": {
      "op": "ISZERO"
    },
    "11609": {
      "op": "PUSH2",
      "value": "0x2D61"
    },
    "11612": {
      "op": "JUMPI"
    },
    "11613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11615": {
      "op": "DUP1"
    },
    "11616": {
      "op": "REVERT"
    },
    "11617": {
      "op": "JUMPDEST"
    },
    "11618": {
      "op": "DUP3"
    },
    "11619": {
      "op": "CALLDATALOAD"
    },
    "11620": {
      "op": "SWAP2"
    },
    "11621": {
      "op": "POP"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11624": {
      "op": "DUP4"
    },
    "11625": {
      "op": "ADD"
    },
    "11626": {
      "op": "CALLDATALOAD"
    },
    "11627": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11636": {
      "op": "DUP2"
    },
    "11637": {
      "op": "GT"
    },
    "11638": {
      "op": "ISZERO"
    },
    "11639": {
      "op": "PUSH2",
      "value": "0x2D7F"
    },
    "11642": {
      "op": "JUMPI"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11645": {
      "op": "DUP1"
    },
    "11646": {
      "op": "REVERT"
    },
    "11647": {
      "op": "JUMPDEST"
    },
    "11648": {
      "op": "PUSH2",
      "value": "0x2D8B"
    },
    "11651": {
      "op": "DUP6"
    },
    "11652": {
      "op": "DUP3"
    },
    "11653": {
      "op": "DUP7"
    },
    "11654": {
      "op": "ADD"
    },
    "11655": {
      "op": "PUSH2",
      "value": "0x2D2E"
    },
    "11658": {
      "jump": "i",
      "op": "JUMP"
    },
    "11659": {
      "op": "JUMPDEST"
    },
    "11660": {
      "op": "SWAP2"
    },
    "11661": {
      "op": "POP"
    },
    "11662": {
      "op": "POP"
    },
    "11663": {
      "op": "SWAP3"
    },
    "11664": {
      "op": "POP"
    },
    "11665": {
      "op": "SWAP3"
    },
    "11666": {
      "op": "SWAP1"
    },
    "11667": {
      "op": "POP"
    },
    "11668": {
      "jump": "o",
      "op": "JUMP"
    },
    "11669": {
      "op": "JUMPDEST"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11672": {
      "op": "JUMPDEST"
    },
    "11673": {
      "op": "DUP4"
    },
    "11674": {
      "op": "DUP2"
    },
    "11675": {
      "op": "LT"
    },
    "11676": {
      "op": "ISZERO"
    },
    "11677": {
      "op": "PUSH2",
      "value": "0x2DB0"
    },
    "11680": {
      "op": "JUMPI"
    },
    "11681": {
      "op": "DUP2"
    },
    "11682": {
      "op": "DUP2"
    },
    "11683": {
      "op": "ADD"
    },
    "11684": {
      "op": "MLOAD"
    },
    "11685": {
      "op": "DUP4"
    },
    "11686": {
      "op": "DUP3"
    },
    "11687": {
      "op": "ADD"
    },
    "11688": {
      "op": "MSTORE"
    },
    "11689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11691": {
      "op": "ADD"
    },
    "11692": {
      "op": "PUSH2",
      "value": "0x2D98"
    },
    "11695": {
      "op": "JUMP"
    },
    "11696": {
      "op": "JUMPDEST"
    },
    "11697": {
      "op": "DUP4"
    },
    "11698": {
      "op": "DUP2"
    },
    "11699": {
      "op": "GT"
    },
    "11700": {
      "op": "ISZERO"
    },
    "11701": {
      "op": "PUSH2",
      "value": "0x10D2"
    },
    "11704": {
      "op": "JUMPI"
    },
    "11705": {
      "op": "POP"
    },
    "11706": {
      "op": "POP"
    },
    "11707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11709": {
      "op": "SWAP2"
    },
    "11710": {
      "op": "ADD"
    },
    "11711": {
      "op": "MSTORE"
    },
    "11712": {
      "jump": "o",
      "op": "JUMP"
    },
    "11713": {
      "op": "JUMPDEST"
    },
    "11714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11716": {
      "op": "DUP2"
    },
    "11717": {
      "op": "MLOAD"
    },
    "11718": {
      "op": "DUP1"
    },
    "11719": {
      "op": "DUP5"
    },
    "11720": {
      "op": "MSTORE"
    },
    "11721": {
      "op": "PUSH2",
      "value": "0x2DD9"
    },
    "11724": {
      "op": "DUP2"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11727": {
      "op": "DUP7"
    },
    "11728": {
      "op": "ADD"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11731": {
      "op": "DUP7"
    },
    "11732": {
      "op": "ADD"
    },
    "11733": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "11736": {
      "jump": "i",
      "op": "JUMP"
    },
    "11737": {
      "op": "JUMPDEST"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11740": {
      "op": "ADD"
    },
    "11741": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11743": {
      "op": "NOT"
    },
    "11744": {
      "op": "AND"
    },
    "11745": {
      "op": "SWAP3"
    },
    "11746": {
      "op": "SWAP1"
    },
    "11747": {
      "op": "SWAP3"
    },
    "11748": {
      "op": "ADD"
    },
    "11749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11751": {
      "op": "ADD"
    },
    "11752": {
      "op": "SWAP3"
    },
    "11753": {
      "op": "SWAP2"
    },
    "11754": {
      "op": "POP"
    },
    "11755": {
      "op": "POP"
    },
    "11756": {
      "jump": "o",
      "op": "JUMP"
    },
    "11757": {
      "op": "JUMPDEST"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11760": {
      "op": "DUP2"
    },
    "11761": {
      "op": "MSTORE"
    },
    "11762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11769": {
      "op": "DUP4"
    },
    "11770": {
      "op": "ADD"
    },
    "11771": {
      "op": "DUP5"
    },
    "11772": {
      "op": "PUSH2",
      "value": "0x2DC1"
    },
    "11775": {
      "jump": "i",
      "op": "JUMP"
    },
    "11776": {
      "op": "JUMPDEST"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11781": {
      "op": "DUP3"
    },
    "11782": {
      "op": "DUP5"
    },
    "11783": {
      "op": "SUB"
    },
    "11784": {
      "op": "SLT"
    },
    "11785": {
      "op": "ISZERO"
    },
    "11786": {
      "op": "PUSH2",
      "value": "0x2E12"
    },
    "11789": {
      "op": "JUMPI"
    },
    "11790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11792": {
      "op": "DUP1"
    },
    "11793": {
      "op": "REVERT"
    },
    "11794": {
      "op": "JUMPDEST"
    },
    "11795": {
      "op": "POP"
    },
    "11796": {
      "op": "CALLDATALOAD"
    },
    "11797": {
      "op": "SWAP2"
    },
    "11798": {
      "op": "SWAP1"
    },
    "11799": {
      "op": "POP"
    },
    "11800": {
      "jump": "o",
      "op": "JUMP"
    },
    "11801": {
      "op": "JUMPDEST"
    },
    "11802": {
      "op": "DUP1"
    },
    "11803": {
      "op": "CALLDATALOAD"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11810": {
      "op": "SHL"
    },
    "11811": {
      "op": "SUB"
    },
    "11812": {
      "op": "DUP2"
    },
    "11813": {
      "op": "AND"
    },
    "11814": {
      "op": "DUP2"
    },
    "11815": {
      "op": "EQ"
    },
    "11816": {
      "op": "PUSH2",
      "value": "0x2E30"
    },
    "11819": {
      "op": "JUMPI"
    },
    "11820": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11822": {
      "op": "DUP1"
    },
    "11823": {
      "op": "REVERT"
    },
    "11824": {
      "op": "JUMPDEST"
    },
    "11825": {
      "op": "SWAP2"
    },
    "11826": {
      "op": "SWAP1"
    },
    "11827": {
      "op": "POP"
    },
    "11828": {
      "jump": "o",
      "op": "JUMP"
    },
    "11829": {
      "op": "JUMPDEST"
    },
    "11830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11832": {
      "op": "DUP1"
    },
    "11833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11835": {
      "op": "DUP4"
    },
    "11836": {
      "op": "DUP6"
    },
    "11837": {
      "op": "SUB"
    },
    "11838": {
      "op": "SLT"
    },
    "11839": {
      "op": "ISZERO"
    },
    "11840": {
      "op": "PUSH2",
      "value": "0x2E48"
    },
    "11843": {
      "op": "JUMPI"
    },
    "11844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11846": {
      "op": "DUP1"
    },
    "11847": {
      "op": "REVERT"
    },
    "11848": {
      "op": "JUMPDEST"
    },
    "11849": {
      "op": "PUSH2",
      "value": "0x2E51"
    },
    "11852": {
      "op": "DUP4"
    },
    "11853": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "11856": {
      "jump": "i",
      "op": "JUMP"
    },
    "11857": {
      "op": "JUMPDEST"
    },
    "11858": {
      "op": "SWAP5"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11861": {
      "op": "SWAP4"
    },
    "11862": {
      "op": "SWAP1"
    },
    "11863": {
      "op": "SWAP4"
    },
    "11864": {
      "op": "ADD"
    },
    "11865": {
      "op": "CALLDATALOAD"
    },
    "11866": {
      "op": "SWAP4"
    },
    "11867": {
      "op": "POP"
    },
    "11868": {
      "op": "POP"
    },
    "11869": {
      "op": "POP"
    },
    "11870": {
      "jump": "o",
      "op": "JUMP"
    },
    "11871": {
      "op": "JUMPDEST"
    },
    "11872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11874": {
      "op": "DUP1"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11877": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11879": {
      "op": "DUP5"
    },
    "11880": {
      "op": "DUP7"
    },
    "11881": {
      "op": "SUB"
    },
    "11882": {
      "op": "SLT"
    },
    "11883": {
      "op": "ISZERO"
    },
    "11884": {
      "op": "PUSH2",
      "value": "0x2E74"
    },
    "11887": {
      "op": "JUMPI"
    },
    "11888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11890": {
      "op": "DUP1"
    },
    "11891": {
      "op": "REVERT"
    },
    "11892": {
      "op": "JUMPDEST"
    },
    "11893": {
      "op": "PUSH2",
      "value": "0x2E7D"
    },
    "11896": {
      "op": "DUP5"
    },
    "11897": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "11900": {
      "jump": "i",
      "op": "JUMP"
    },
    "11901": {
      "op": "JUMPDEST"
    },
    "11902": {
      "op": "SWAP3"
    },
    "11903": {
      "op": "POP"
    },
    "11904": {
      "op": "PUSH2",
      "value": "0x2E8B"
    },
    "11907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11909": {
      "op": "DUP6"
    },
    "11910": {
      "op": "ADD"
    },
    "11911": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "11914": {
      "jump": "i",
      "op": "JUMP"
    },
    "11915": {
      "op": "JUMPDEST"
    },
    "11916": {
      "op": "SWAP2"
    },
    "11917": {
      "op": "POP"
    },
    "11918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11920": {
      "op": "DUP5"
    },
    "11921": {
      "op": "ADD"
    },
    "11922": {
      "op": "CALLDATALOAD"
    },
    "11923": {
      "op": "SWAP1"
    },
    "11924": {
      "op": "POP"
    },
    "11925": {
      "op": "SWAP3"
    },
    "11926": {
      "op": "POP"
    },
    "11927": {
      "op": "SWAP3"
    },
    "11928": {
      "op": "POP"
    },
    "11929": {
      "op": "SWAP3"
    },
    "11930": {
      "jump": "o",
      "op": "JUMP"
    },
    "11931": {
      "op": "JUMPDEST"
    },
    "11932": {
      "op": "DUP1"
    },
    "11933": {
      "op": "CALLDATALOAD"
    },
    "11934": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11937": {
      "op": "DUP2"
    },
    "11938": {
      "op": "AND"
    },
    "11939": {
      "op": "DUP2"
    },
    "11940": {
      "op": "EQ"
    },
    "11941": {
      "op": "PUSH2",
      "value": "0x2E30"
    },
    "11944": {
      "op": "JUMPI"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11947": {
      "op": "DUP1"
    },
    "11948": {
      "op": "REVERT"
    },
    "11949": {
      "op": "JUMPDEST"
    },
    "11950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11954": {
      "op": "DUP3"
    },
    "11955": {
      "op": "DUP5"
    },
    "11956": {
      "op": "SUB"
    },
    "11957": {
      "op": "SLT"
    },
    "11958": {
      "op": "ISZERO"
    },
    "11959": {
      "op": "PUSH2",
      "value": "0x2EBF"
    },
    "11962": {
      "op": "JUMPI"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11965": {
      "op": "DUP1"
    },
    "11966": {
      "op": "REVERT"
    },
    "11967": {
      "op": "JUMPDEST"
    },
    "11968": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "11971": {
      "op": "DUP3"
    },
    "11972": {
      "op": "PUSH2",
      "value": "0x2E9B"
    },
    "11975": {
      "jump": "i",
      "op": "JUMP"
    },
    "11976": {
      "op": "JUMPDEST"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11979": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11981": {
      "op": "DUP3"
    },
    "11982": {
      "op": "DUP5"
    },
    "11983": {
      "op": "SUB"
    },
    "11984": {
      "op": "SLT"
    },
    "11985": {
      "op": "ISZERO"
    },
    "11986": {
      "op": "PUSH2",
      "value": "0x2EDA"
    },
    "11989": {
      "op": "JUMPI"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11992": {
      "op": "DUP1"
    },
    "11993": {
      "op": "REVERT"
    },
    "11994": {
      "op": "JUMPDEST"
    },
    "11995": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "11998": {
      "op": "DUP3"
    },
    "11999": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12002": {
      "jump": "i",
      "op": "JUMP"
    },
    "12003": {
      "op": "JUMPDEST"
    },
    "12004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12006": {
      "op": "DUP1"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12009": {
      "op": "DUP1"
    },
    "12010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12012": {
      "op": "DUP1"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12015": {
      "op": "DUP8"
    },
    "12016": {
      "op": "DUP10"
    },
    "12017": {
      "op": "SUB"
    },
    "12018": {
      "op": "SLT"
    },
    "12019": {
      "op": "ISZERO"
    },
    "12020": {
      "op": "PUSH2",
      "value": "0x2EFC"
    },
    "12023": {
      "op": "JUMPI"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12026": {
      "op": "DUP1"
    },
    "12027": {
      "op": "REVERT"
    },
    "12028": {
      "op": "JUMPDEST"
    },
    "12029": {
      "op": "DUP7"
    },
    "12030": {
      "op": "CALLDATALOAD"
    },
    "12031": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12040": {
      "op": "DUP2"
    },
    "12041": {
      "op": "GT"
    },
    "12042": {
      "op": "ISZERO"
    },
    "12043": {
      "op": "PUSH2",
      "value": "0x2F13"
    },
    "12046": {
      "op": "JUMPI"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12049": {
      "op": "DUP1"
    },
    "12050": {
      "op": "REVERT"
    },
    "12051": {
      "op": "JUMPDEST"
    },
    "12052": {
      "op": "PUSH2",
      "value": "0x2F1F"
    },
    "12055": {
      "op": "DUP10"
    },
    "12056": {
      "op": "DUP3"
    },
    "12057": {
      "op": "DUP11"
    },
    "12058": {
      "op": "ADD"
    },
    "12059": {
      "op": "PUSH2",
      "value": "0x2D2E"
    },
    "12062": {
      "jump": "i",
      "op": "JUMP"
    },
    "12063": {
      "op": "JUMPDEST"
    },
    "12064": {
      "op": "SWAP10"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12067": {
      "op": "DUP10"
    },
    "12068": {
      "op": "ADD"
    },
    "12069": {
      "op": "CALLDATALOAD"
    },
    "12070": {
      "op": "SWAP10"
    },
    "12071": {
      "op": "POP"
    },
    "12072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12074": {
      "op": "DUP10"
    },
    "12075": {
      "op": "ADD"
    },
    "12076": {
      "op": "CALLDATALOAD"
    },
    "12077": {
      "op": "SWAP9"
    },
    "12078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12080": {
      "op": "DUP2"
    },
    "12081": {
      "op": "ADD"
    },
    "12082": {
      "op": "CALLDATALOAD"
    },
    "12083": {
      "op": "SWAP9"
    },
    "12084": {
      "op": "POP"
    },
    "12085": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12087": {
      "op": "DUP2"
    },
    "12088": {
      "op": "ADD"
    },
    "12089": {
      "op": "CALLDATALOAD"
    },
    "12090": {
      "op": "SWAP8"
    },
    "12091": {
      "op": "POP"
    },
    "12092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12094": {
      "op": "ADD"
    },
    "12095": {
      "op": "CALLDATALOAD"
    },
    "12096": {
      "op": "SWAP6"
    },
    "12097": {
      "op": "POP"
    },
    "12098": {
      "op": "SWAP4"
    },
    "12099": {
      "op": "POP"
    },
    "12100": {
      "op": "POP"
    },
    "12101": {
      "op": "POP"
    },
    "12102": {
      "op": "POP"
    },
    "12103": {
      "jump": "o",
      "op": "JUMP"
    },
    "12104": {
      "op": "JUMPDEST"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12107": {
      "op": "DUP1"
    },
    "12108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12110": {
      "op": "DUP4"
    },
    "12111": {
      "op": "DUP6"
    },
    "12112": {
      "op": "SUB"
    },
    "12113": {
      "op": "SLT"
    },
    "12114": {
      "op": "ISZERO"
    },
    "12115": {
      "op": "PUSH2",
      "value": "0x2F5B"
    },
    "12118": {
      "op": "JUMPI"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12121": {
      "op": "DUP1"
    },
    "12122": {
      "op": "REVERT"
    },
    "12123": {
      "op": "JUMPDEST"
    },
    "12124": {
      "op": "DUP3"
    },
    "12125": {
      "op": "CALLDATALOAD"
    },
    "12126": {
      "op": "SWAP2"
    },
    "12127": {
      "op": "POP"
    },
    "12128": {
      "op": "PUSH2",
      "value": "0x2F6B"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12133": {
      "op": "DUP5"
    },
    "12134": {
      "op": "ADD"
    },
    "12135": {
      "op": "PUSH2",
      "value": "0x2E9B"
    },
    "12138": {
      "jump": "i",
      "op": "JUMP"
    },
    "12139": {
      "op": "JUMPDEST"
    },
    "12140": {
      "op": "SWAP1"
    },
    "12141": {
      "op": "POP"
    },
    "12142": {
      "op": "SWAP3"
    },
    "12143": {
      "op": "POP"
    },
    "12144": {
      "op": "SWAP3"
    },
    "12145": {
      "op": "SWAP1"
    },
    "12146": {
      "op": "POP"
    },
    "12147": {
      "jump": "o",
      "op": "JUMP"
    },
    "12148": {
      "op": "JUMPDEST"
    },
    "12149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12151": {
      "op": "DUP1"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12154": {
      "op": "DUP4"
    },
    "12155": {
      "op": "DUP6"
    },
    "12156": {
      "op": "SUB"
    },
    "12157": {
      "op": "SLT"
    },
    "12158": {
      "op": "ISZERO"
    },
    "12159": {
      "op": "PUSH2",
      "value": "0x2F87"
    },
    "12162": {
      "op": "JUMPI"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12165": {
      "op": "DUP1"
    },
    "12166": {
      "op": "REVERT"
    },
    "12167": {
      "op": "JUMPDEST"
    },
    "12168": {
      "op": "DUP3"
    },
    "12169": {
      "op": "CALLDATALOAD"
    },
    "12170": {
      "op": "SWAP2"
    },
    "12171": {
      "op": "POP"
    },
    "12172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12174": {
      "op": "DUP4"
    },
    "12175": {
      "op": "ADD"
    },
    "12176": {
      "op": "CALLDATALOAD"
    },
    "12177": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12183": {
      "op": "DUP2"
    },
    "12184": {
      "op": "AND"
    },
    "12185": {
      "op": "DUP2"
    },
    "12186": {
      "op": "EQ"
    },
    "12187": {
      "op": "PUSH2",
      "value": "0x2FA3"
    },
    "12190": {
      "op": "JUMPI"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12193": {
      "op": "DUP1"
    },
    "12194": {
      "op": "REVERT"
    },
    "12195": {
      "op": "JUMPDEST"
    },
    "12196": {
      "op": "DUP1"
    },
    "12197": {
      "op": "SWAP2"
    },
    "12198": {
      "op": "POP"
    },
    "12199": {
      "op": "POP"
    },
    "12200": {
      "op": "SWAP3"
    },
    "12201": {
      "op": "POP"
    },
    "12202": {
      "op": "SWAP3"
    },
    "12203": {
      "op": "SWAP1"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "jump": "o",
      "op": "JUMP"
    },
    "12206": {
      "op": "JUMPDEST"
    },
    "12207": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12212": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12214": {
      "op": "SHL"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12217": {
      "op": "MSTORE"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12222": {
      "op": "MSTORE"
    },
    "12223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12227": {
      "op": "REVERT"
    },
    "12228": {
      "op": "JUMPDEST"
    },
    "12229": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12231": {
      "op": "DUP2"
    },
    "12232": {
      "op": "LT"
    },
    "12233": {
      "op": "PUSH2",
      "value": "0x2FE2"
    },
    "12236": {
      "op": "JUMPI"
    },
    "12237": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12244": {
      "op": "SHL"
    },
    "12245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12247": {
      "op": "MSTORE"
    },
    "12248": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12250": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12252": {
      "op": "MSTORE"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12257": {
      "op": "REVERT"
    },
    "12258": {
      "op": "JUMPDEST"
    },
    "12259": {
      "op": "SWAP1"
    },
    "12260": {
      "op": "MSTORE"
    },
    "12261": {
      "jump": "o",
      "op": "JUMP"
    },
    "12262": {
      "op": "JUMPDEST"
    },
    "12263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12265": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12268": {
      "op": "DUP3"
    },
    "12269": {
      "op": "ADD"
    },
    "12270": {
      "op": "SWAP1"
    },
    "12271": {
      "op": "POP"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12278": {
      "op": "SHL"
    },
    "12279": {
      "op": "SUB"
    },
    "12280": {
      "op": "DUP1"
    },
    "12281": {
      "op": "DUP5"
    },
    "12282": {
      "op": "MLOAD"
    },
    "12283": {
      "op": "AND"
    },
    "12284": {
      "op": "DUP4"
    },
    "12285": {
      "op": "MSTORE"
    },
    "12286": {
      "op": "DUP1"
    },
    "12287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12289": {
      "op": "DUP6"
    },
    "12290": {
      "op": "ADD"
    },
    "12291": {
      "op": "MLOAD"
    },
    "12292": {
      "op": "AND"
    },
    "12293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12295": {
      "op": "DUP5"
    },
    "12296": {
      "op": "ADD"
    },
    "12297": {
      "op": "MSTORE"
    },
    "12298": {
      "op": "DUP1"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12301": {
      "op": "DUP6"
    },
    "12302": {
      "op": "ADD"
    },
    "12303": {
      "op": "MLOAD"
    },
    "12304": {
      "op": "AND"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12307": {
      "op": "DUP5"
    },
    "12308": {
      "op": "ADD"
    },
    "12309": {
      "op": "MSTORE"
    },
    "12310": {
      "op": "POP"
    },
    "12311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12313": {
      "op": "DUP4"
    },
    "12314": {
      "op": "ADD"
    },
    "12315": {
      "op": "MLOAD"
    },
    "12316": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12319": {
      "op": "DUP1"
    },
    "12320": {
      "op": "DUP3"
    },
    "12321": {
      "op": "AND"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12324": {
      "op": "DUP6"
    },
    "12325": {
      "op": "ADD"
    },
    "12326": {
      "op": "MSTORE"
    },
    "12327": {
      "op": "DUP1"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12330": {
      "op": "DUP7"
    },
    "12331": {
      "op": "ADD"
    },
    "12332": {
      "op": "MLOAD"
    },
    "12333": {
      "op": "AND"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12336": {
      "op": "DUP6"
    },
    "12337": {
      "op": "ADD"
    },
    "12338": {
      "op": "MSTORE"
    },
    "12339": {
      "op": "POP"
    },
    "12340": {
      "op": "POP"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12343": {
      "op": "DUP4"
    },
    "12344": {
      "op": "ADD"
    },
    "12345": {
      "op": "MLOAD"
    },
    "12346": {
      "op": "PUSH2",
      "value": "0x304C"
    },
    "12349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12351": {
      "op": "DUP5"
    },
    "12352": {
      "op": "ADD"
    },
    "12353": {
      "op": "DUP3"
    },
    "12354": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12360": {
      "op": "AND"
    },
    "12361": {
      "op": "SWAP1"
    },
    "12362": {
      "op": "MSTORE"
    },
    "12363": {
      "op": "JUMP"
    },
    "12364": {
      "op": "JUMPDEST"
    },
    "12365": {
      "op": "POP"
    },
    "12366": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12368": {
      "op": "DUP4"
    },
    "12369": {
      "op": "ADD"
    },
    "12370": {
      "op": "MLOAD"
    },
    "12371": {
      "op": "PUSH2",
      "value": "0x3065"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12376": {
      "op": "DUP5"
    },
    "12377": {
      "op": "ADD"
    },
    "12378": {
      "op": "DUP3"
    },
    "12379": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12385": {
      "op": "AND"
    },
    "12386": {
      "op": "SWAP1"
    },
    "12387": {
      "op": "MSTORE"
    },
    "12388": {
      "op": "JUMP"
    },
    "12389": {
      "op": "JUMPDEST"
    },
    "12390": {
      "op": "POP"
    },
    "12391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12393": {
      "op": "DUP4"
    },
    "12394": {
      "op": "ADD"
    },
    "12395": {
      "op": "MLOAD"
    },
    "12396": {
      "op": "PUSH2",
      "value": "0x3078"
    },
    "12399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12401": {
      "op": "DUP5"
    },
    "12402": {
      "op": "ADD"
    },
    "12403": {
      "op": "DUP3"
    },
    "12404": {
      "op": "PUSH2",
      "value": "0x2FC4"
    },
    "12407": {
      "jump": "i",
      "op": "JUMP"
    },
    "12408": {
      "op": "JUMPDEST"
    },
    "12409": {
      "op": "POP"
    },
    "12410": {
      "op": "SWAP3"
    },
    "12411": {
      "op": "SWAP2"
    },
    "12412": {
      "op": "POP"
    },
    "12413": {
      "op": "POP"
    },
    "12414": {
      "jump": "o",
      "op": "JUMP"
    },
    "12415": {
      "op": "JUMPDEST"
    },
    "12416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12418": {
      "op": "DUP1"
    },
    "12419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12421": {
      "op": "DUP4"
    },
    "12422": {
      "op": "DUP6"
    },
    "12423": {
      "op": "SUB"
    },
    "12424": {
      "op": "SLT"
    },
    "12425": {
      "op": "ISZERO"
    },
    "12426": {
      "op": "PUSH2",
      "value": "0x3092"
    },
    "12429": {
      "op": "JUMPI"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12432": {
      "op": "DUP1"
    },
    "12433": {
      "op": "REVERT"
    },
    "12434": {
      "op": "JUMPDEST"
    },
    "12435": {
      "op": "PUSH2",
      "value": "0x309B"
    },
    "12438": {
      "op": "DUP4"
    },
    "12439": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12442": {
      "jump": "i",
      "op": "JUMP"
    },
    "12443": {
      "op": "JUMPDEST"
    },
    "12444": {
      "op": "SWAP2"
    },
    "12445": {
      "op": "POP"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12448": {
      "op": "DUP4"
    },
    "12449": {
      "op": "ADD"
    },
    "12450": {
      "op": "CALLDATALOAD"
    },
    "12451": {
      "op": "DUP1"
    },
    "12452": {
      "op": "ISZERO"
    },
    "12453": {
      "op": "ISZERO"
    },
    "12454": {
      "op": "DUP2"
    },
    "12455": {
      "op": "EQ"
    },
    "12456": {
      "op": "PUSH2",
      "value": "0x2FA3"
    },
    "12459": {
      "op": "JUMPI"
    },
    "12460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12462": {
      "op": "DUP1"
    },
    "12463": {
      "op": "REVERT"
    },
    "12464": {
      "op": "JUMPDEST"
    },
    "12465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12467": {
      "op": "DUP1"
    },
    "12468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12470": {
      "op": "DUP1"
    },
    "12471": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12473": {
      "op": "DUP6"
    },
    "12474": {
      "op": "DUP8"
    },
    "12475": {
      "op": "SUB"
    },
    "12476": {
      "op": "SLT"
    },
    "12477": {
      "op": "ISZERO"
    },
    "12478": {
      "op": "PUSH2",
      "value": "0x30C6"
    },
    "12481": {
      "op": "JUMPI"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12484": {
      "op": "DUP1"
    },
    "12485": {
      "op": "REVERT"
    },
    "12486": {
      "op": "JUMPDEST"
    },
    "12487": {
      "op": "PUSH2",
      "value": "0x30CF"
    },
    "12490": {
      "op": "DUP6"
    },
    "12491": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12494": {
      "jump": "i",
      "op": "JUMP"
    },
    "12495": {
      "op": "JUMPDEST"
    },
    "12496": {
      "op": "SWAP4"
    },
    "12497": {
      "op": "POP"
    },
    "12498": {
      "op": "PUSH2",
      "value": "0x30DD"
    },
    "12501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12503": {
      "op": "DUP7"
    },
    "12504": {
      "op": "ADD"
    },
    "12505": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12508": {
      "jump": "i",
      "op": "JUMP"
    },
    "12509": {
      "op": "JUMPDEST"
    },
    "12510": {
      "op": "SWAP3"
    },
    "12511": {
      "op": "POP"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12514": {
      "op": "DUP6"
    },
    "12515": {
      "op": "ADD"
    },
    "12516": {
      "op": "CALLDATALOAD"
    },
    "12517": {
      "op": "SWAP2"
    },
    "12518": {
      "op": "POP"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12521": {
      "op": "DUP6"
    },
    "12522": {
      "op": "ADD"
    },
    "12523": {
      "op": "CALLDATALOAD"
    },
    "12524": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12533": {
      "op": "DUP2"
    },
    "12534": {
      "op": "GT"
    },
    "12535": {
      "op": "ISZERO"
    },
    "12536": {
      "op": "PUSH2",
      "value": "0x3100"
    },
    "12539": {
      "op": "JUMPI"
    },
    "12540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12542": {
      "op": "DUP1"
    },
    "12543": {
      "op": "REVERT"
    },
    "12544": {
      "op": "JUMPDEST"
    },
    "12545": {
      "op": "DUP6"
    },
    "12546": {
      "op": "ADD"
    },
    "12547": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12549": {
      "op": "DUP2"
    },
    "12550": {
      "op": "ADD"
    },
    "12551": {
      "op": "DUP8"
    },
    "12552": {
      "op": "SGT"
    },
    "12553": {
      "op": "PUSH2",
      "value": "0x3111"
    },
    "12556": {
      "op": "JUMPI"
    },
    "12557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12559": {
      "op": "DUP1"
    },
    "12560": {
      "op": "REVERT"
    },
    "12561": {
      "op": "JUMPDEST"
    },
    "12562": {
      "op": "PUSH2",
      "value": "0x3120"
    },
    "12565": {
      "op": "DUP8"
    },
    "12566": {
      "op": "DUP3"
    },
    "12567": {
      "op": "CALLDATALOAD"
    },
    "12568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12570": {
      "op": "DUP5"
    },
    "12571": {
      "op": "ADD"
    },
    "12572": {
      "op": "PUSH2",
      "value": "0x2CB8"
    },
    "12575": {
      "jump": "i",
      "op": "JUMP"
    },
    "12576": {
      "op": "JUMPDEST"
    },
    "12577": {
      "op": "SWAP2"
    },
    "12578": {
      "op": "POP"
    },
    "12579": {
      "op": "POP"
    },
    "12580": {
      "op": "SWAP3"
    },
    "12581": {
      "op": "SWAP6"
    },
    "12582": {
      "op": "SWAP2"
    },
    "12583": {
      "op": "SWAP5"
    },
    "12584": {
      "op": "POP"
    },
    "12585": {
      "op": "SWAP3"
    },
    "12586": {
      "op": "POP"
    },
    "12587": {
      "jump": "o",
      "op": "JUMP"
    },
    "12588": {
      "op": "JUMPDEST"
    },
    "12589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12595": {
      "op": "SHL"
    },
    "12596": {
      "op": "SUB"
    },
    "12597": {
      "op": "DUP10"
    },
    "12598": {
      "op": "DUP2"
    },
    "12599": {
      "op": "AND"
    },
    "12600": {
      "op": "DUP3"
    },
    "12601": {
      "op": "MSTORE"
    },
    "12602": {
      "op": "DUP9"
    },
    "12603": {
      "op": "DUP2"
    },
    "12604": {
      "op": "AND"
    },
    "12605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12607": {
      "op": "DUP4"
    },
    "12608": {
      "op": "ADD"
    },
    "12609": {
      "op": "MSTORE"
    },
    "12610": {
      "op": "DUP8"
    },
    "12611": {
      "op": "AND"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12614": {
      "op": "DUP3"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "op": "MSTORE"
    },
    "12617": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12620": {
      "op": "DUP7"
    },
    "12621": {
      "op": "DUP2"
    },
    "12622": {
      "op": "AND"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12625": {
      "op": "DUP4"
    },
    "12626": {
      "op": "ADD"
    },
    "12627": {
      "op": "MSTORE"
    },
    "12628": {
      "op": "DUP6"
    },
    "12629": {
      "op": "AND"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12632": {
      "op": "DUP3"
    },
    "12633": {
      "op": "ADD"
    },
    "12634": {
      "op": "MSTORE"
    },
    "12635": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "12641": {
      "op": "DUP5"
    },
    "12642": {
      "op": "DUP2"
    },
    "12643": {
      "op": "AND"
    },
    "12644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12646": {
      "op": "DUP4"
    },
    "12647": {
      "op": "ADD"
    },
    "12648": {
      "op": "MSTORE"
    },
    "12649": {
      "op": "DUP4"
    },
    "12650": {
      "op": "AND"
    },
    "12651": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12653": {
      "op": "DUP3"
    },
    "12654": {
      "op": "ADD"
    },
    "12655": {
      "op": "MSTORE"
    },
    "12656": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12659": {
      "op": "DUP2"
    },
    "12660": {
      "op": "ADD"
    },
    "12661": {
      "op": "PUSH2",
      "value": "0x3181"
    },
    "12664": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12666": {
      "op": "DUP4"
    },
    "12667": {
      "op": "ADD"
    },
    "12668": {
      "op": "DUP5"
    },
    "12669": {
      "op": "PUSH2",
      "value": "0x2FC4"
    },
    "12672": {
      "jump": "i",
      "op": "JUMP"
    },
    "12673": {
      "op": "JUMPDEST"
    },
    "12674": {
      "op": "SWAP10"
    },
    "12675": {
      "op": "SWAP9"
    },
    "12676": {
      "op": "POP"
    },
    "12677": {
      "op": "POP"
    },
    "12678": {
      "op": "POP"
    },
    "12679": {
      "op": "POP"
    },
    "12680": {
      "op": "POP"
    },
    "12681": {
      "op": "POP"
    },
    "12682": {
      "op": "POP"
    },
    "12683": {
      "op": "POP"
    },
    "12684": {
      "op": "POP"
    },
    "12685": {
      "jump": "o",
      "op": "JUMP"
    },
    "12686": {
      "op": "JUMPDEST"
    },
    "12687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12689": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "12692": {
      "op": "DUP13"
    },
    "12693": {
      "op": "DUP4"
    },
    "12694": {
      "op": "MSTORE"
    },
    "12695": {
      "op": "DUP12"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12698": {
      "op": "DUP5"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "MSTORE"
    },
    "12701": {
      "op": "DUP11"
    },
    "12702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12704": {
      "op": "DUP5"
    },
    "12705": {
      "op": "ADD"
    },
    "12706": {
      "op": "MSTORE"
    },
    "12707": {
      "op": "DUP10"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12710": {
      "op": "DUP5"
    },
    "12711": {
      "op": "ADD"
    },
    "12712": {
      "op": "MSTORE"
    },
    "12713": {
      "op": "DUP9"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12716": {
      "op": "DUP5"
    },
    "12717": {
      "op": "ADD"
    },
    "12718": {
      "op": "MSTORE"
    },
    "12719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12721": {
      "op": "DUP1"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12724": {
      "op": "SHL"
    },
    "12725": {
      "op": "SUB"
    },
    "12726": {
      "op": "DUP9"
    },
    "12727": {
      "op": "AND"
    },
    "12728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12730": {
      "op": "DUP5"
    },
    "12731": {
      "op": "ADD"
    },
    "12732": {
      "op": "MSTORE"
    },
    "12733": {
      "op": "DUP7"
    },
    "12734": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12736": {
      "op": "DUP5"
    },
    "12737": {
      "op": "ADD"
    },
    "12738": {
      "op": "MSTORE"
    },
    "12739": {
      "op": "DUP6"
    },
    "12740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12742": {
      "op": "DUP5"
    },
    "12743": {
      "op": "ADD"
    },
    "12744": {
      "op": "MSTORE"
    },
    "12745": {
      "op": "DUP5"
    },
    "12746": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12749": {
      "op": "DUP5"
    },
    "12750": {
      "op": "ADD"
    },
    "12751": {
      "op": "MSTORE"
    },
    "12752": {
      "op": "DUP1"
    },
    "12753": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "12756": {
      "op": "DUP5"
    },
    "12757": {
      "op": "ADD"
    },
    "12758": {
      "op": "MSTORE"
    },
    "12759": {
      "op": "PUSH2",
      "value": "0x31E2"
    },
    "12762": {
      "op": "DUP2"
    },
    "12763": {
      "op": "DUP5"
    },
    "12764": {
      "op": "ADD"
    },
    "12765": {
      "op": "DUP6"
    },
    "12766": {
      "op": "PUSH2",
      "value": "0x2DC1"
    },
    "12769": {
      "jump": "i",
      "op": "JUMP"
    },
    "12770": {
      "op": "JUMPDEST"
    },
    "12771": {
      "op": "SWAP14"
    },
    "12772": {
      "op": "SWAP13"
    },
    "12773": {
      "op": "POP"
    },
    "12774": {
      "op": "POP"
    },
    "12775": {
      "op": "POP"
    },
    "12776": {
      "op": "POP"
    },
    "12777": {
      "op": "POP"
    },
    "12778": {
      "op": "POP"
    },
    "12779": {
      "op": "POP"
    },
    "12780": {
      "op": "POP"
    },
    "12781": {
      "op": "POP"
    },
    "12782": {
      "op": "POP"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "op": "POP"
    },
    "12785": {
      "op": "POP"
    },
    "12786": {
      "jump": "o",
      "op": "JUMP"
    },
    "12787": {
      "op": "JUMPDEST"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12790": {
      "op": "DUP1"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12793": {
      "op": "DUP4"
    },
    "12794": {
      "op": "DUP6"
    },
    "12795": {
      "op": "SUB"
    },
    "12796": {
      "op": "SLT"
    },
    "12797": {
      "op": "ISZERO"
    },
    "12798": {
      "op": "PUSH2",
      "value": "0x3206"
    },
    "12801": {
      "op": "JUMPI"
    },
    "12802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12804": {
      "op": "DUP1"
    },
    "12805": {
      "op": "REVERT"
    },
    "12806": {
      "op": "JUMPDEST"
    },
    "12807": {
      "op": "PUSH2",
      "value": "0x320F"
    },
    "12810": {
      "op": "DUP4"
    },
    "12811": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12814": {
      "jump": "i",
      "op": "JUMP"
    },
    "12815": {
      "op": "JUMPDEST"
    },
    "12816": {
      "op": "SWAP2"
    },
    "12817": {
      "op": "POP"
    },
    "12818": {
      "op": "PUSH2",
      "value": "0x2F6B"
    },
    "12821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12823": {
      "op": "DUP5"
    },
    "12824": {
      "op": "ADD"
    },
    "12825": {
      "op": "PUSH2",
      "value": "0x2E19"
    },
    "12828": {
      "jump": "i",
      "op": "JUMP"
    },
    "12829": {
      "op": "JUMPDEST"
    },
    "12830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12832": {
      "op": "DUP2"
    },
    "12833": {
      "op": "MLOAD"
    },
    "12834": {
      "op": "PUSH2",
      "value": "0x322F"
    },
    "12837": {
      "op": "DUP2"
    },
    "12838": {
      "op": "DUP6"
    },
    "12839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12841": {
      "op": "DUP7"
    },
    "12842": {
      "op": "ADD"
    },
    "12843": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "12846": {
      "jump": "i",
      "op": "JUMP"
    },
    "12847": {
      "op": "JUMPDEST"
    },
    "12848": {
      "op": "SWAP3"
    },
    "12849": {
      "op": "SWAP1"
    },
    "12850": {
      "op": "SWAP3"
    },
    "12851": {
      "op": "ADD"
    },
    "12852": {
      "op": "SWAP3"
    },
    "12853": {
      "op": "SWAP2"
    },
    "12854": {
      "op": "POP"
    },
    "12855": {
      "op": "POP"
    },
    "12856": {
      "jump": "o",
      "op": "JUMP"
    },
    "12857": {
      "op": "JUMPDEST"
    },
    "12858": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "12891": {
      "op": "DUP2"
    },
    "12892": {
      "op": "MSTORE"
    },
    "12893": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "12926": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "12928": {
      "op": "DUP3"
    },
    "12929": {
      "op": "ADD"
    },
    "12930": {
      "op": "MSTORE"
    },
    "12931": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "12964": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "12966": {
      "op": "DUP3"
    },
    "12967": {
      "op": "ADD"
    },
    "12968": {
      "op": "MSTORE"
    },
    "12969": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "12976": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "12978": {
      "op": "SHL"
    },
    "12979": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "12981": {
      "op": "DUP3"
    },
    "12982": {
      "op": "ADD"
    },
    "12983": {
      "op": "MSTORE"
    },
    "12984": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "12999": {
      "op": "SHL"
    },
    "13000": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "13002": {
      "op": "DUP3"
    },
    "13003": {
      "op": "ADD"
    },
    "13004": {
      "op": "MSTORE"
    },
    "13005": {
      "op": "DUP3"
    },
    "13006": {
      "op": "MLOAD"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13009": {
      "op": "SWAP1"
    },
    "13010": {
      "op": "PUSH2",
      "value": "0x32E2"
    },
    "13013": {
      "op": "DUP2"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "13016": {
      "op": "DUP6"
    },
    "13017": {
      "op": "ADD"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13020": {
      "op": "DUP9"
    },
    "13021": {
      "op": "ADD"
    },
    "13022": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13025": {
      "jump": "i",
      "op": "JUMP"
    },
    "13026": {
      "op": "JUMPDEST"
    },
    "13027": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "13031": {
      "op": "SHL"
    },
    "13032": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "13034": {
      "op": "SWAP2"
    },
    "13035": {
      "op": "DUP5"
    },
    "13036": {
      "op": "ADD"
    },
    "13037": {
      "op": "SWAP2"
    },
    "13038": {
      "op": "DUP3"
    },
    "13039": {
      "op": "ADD"
    },
    "13040": {
      "op": "MSTORE"
    },
    "13041": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "13060": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "13062": {
      "op": "SHL"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "13065": {
      "op": "DUP3"
    },
    "13066": {
      "op": "ADD"
    },
    "13067": {
      "op": "MSTORE"
    },
    "13068": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13103": {
      "op": "DUP3"
    },
    "13104": {
      "op": "ADD"
    },
    "13105": {
      "op": "MSTORE"
    },
    "13106": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "13141": {
      "op": "DUP3"
    },
    "13142": {
      "op": "ADD"
    },
    "13143": {
      "op": "MSTORE"
    },
    "13144": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "13157": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "13159": {
      "op": "SHL"
    },
    "13160": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13162": {
      "op": "DUP3"
    },
    "13163": {
      "op": "ADD"
    },
    "13164": {
      "op": "MSTORE"
    },
    "13165": {
      "op": "PUSH2",
      "value": "0x338A"
    },
    "13168": {
      "op": "PUSH2",
      "value": "0x337C"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "13173": {
      "op": "DUP4"
    },
    "13174": {
      "op": "ADD"
    },
    "13175": {
      "op": "DUP7"
    },
    "13176": {
      "op": "PUSH2",
      "value": "0x321D"
    },
    "13179": {
      "jump": "i",
      "op": "JUMP"
    },
    "13180": {
      "op": "JUMPDEST"
    },
    "13181": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13186": {
      "op": "SHL"
    },
    "13187": {
      "op": "DUP2"
    },
    "13188": {
      "op": "MSTORE"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13191": {
      "op": "ADD"
    },
    "13192": {
      "op": "SWAP1"
    },
    "13193": {
      "op": "JUMP"
    },
    "13194": {
      "op": "JUMPDEST"
    },
    "13195": {
      "op": "SWAP6"
    },
    "13196": {
      "op": "SWAP5"
    },
    "13197": {
      "op": "POP"
    },
    "13198": {
      "op": "POP"
    },
    "13199": {
      "op": "POP"
    },
    "13200": {
      "op": "POP"
    },
    "13201": {
      "op": "POP"
    },
    "13202": {
      "jump": "o",
      "op": "JUMP"
    },
    "13203": {
      "op": "JUMPDEST"
    },
    "13204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13206": {
      "op": "DUP6"
    },
    "13207": {
      "op": "MLOAD"
    },
    "13208": {
      "op": "PUSH2",
      "value": "0x33A5"
    },
    "13211": {
      "op": "DUP2"
    },
    "13212": {
      "op": "DUP5"
    },
    "13213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13215": {
      "op": "DUP11"
    },
    "13216": {
      "op": "ADD"
    },
    "13217": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13220": {
      "jump": "i",
      "op": "JUMP"
    },
    "13221": {
      "op": "JUMPDEST"
    },
    "13222": {
      "op": "DUP1"
    },
    "13223": {
      "op": "DUP4"
    },
    "13224": {
      "op": "ADD"
    },
    "13225": {
      "op": "SWAP1"
    },
    "13226": {
      "op": "POP"
    },
    "13227": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "13260": {
      "op": "DUP1"
    },
    "13261": {
      "op": "DUP3"
    },
    "13262": {
      "op": "MSTORE"
    },
    "13263": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13298": {
      "op": "DUP4"
    },
    "13299": {
      "op": "ADD"
    },
    "13300": {
      "op": "MSTORE"
    },
    "13301": {
      "op": "DUP7"
    },
    "13302": {
      "op": "MLOAD"
    },
    "13303": {
      "op": "PUSH2",
      "value": "0x3407"
    },
    "13306": {
      "op": "DUP2"
    },
    "13307": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "13309": {
      "op": "DUP6"
    },
    "13310": {
      "op": "ADD"
    },
    "13311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13313": {
      "op": "DUP12"
    },
    "13314": {
      "op": "ADD"
    },
    "13315": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13318": {
      "jump": "i",
      "op": "JUMP"
    },
    "13319": {
      "op": "JUMPDEST"
    },
    "13320": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "13323": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13325": {
      "op": "SHL"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "13328": {
      "op": "SWAP4"
    },
    "13329": {
      "op": "SWAP1"
    },
    "13330": {
      "op": "SWAP2"
    },
    "13331": {
      "op": "ADD"
    },
    "13332": {
      "op": "SWAP3"
    },
    "13333": {
      "op": "DUP4"
    },
    "13334": {
      "op": "ADD"
    },
    "13335": {
      "op": "DUP2"
    },
    "13336": {
      "op": "SWAP1"
    },
    "13337": {
      "op": "MSTORE"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "13340": {
      "op": "DUP4"
    },
    "13341": {
      "op": "ADD"
    },
    "13342": {
      "op": "DUP3"
    },
    "13343": {
      "op": "SWAP1"
    },
    "13344": {
      "op": "MSTORE"
    },
    "13345": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C"
    },
    "13378": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "13380": {
      "op": "DUP5"
    },
    "13381": {
      "op": "ADD"
    },
    "13382": {
      "op": "MSTORE"
    },
    "13383": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "13391": {
      "op": "SHL"
    },
    "13392": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "13394": {
      "op": "DUP5"
    },
    "13395": {
      "op": "ADD"
    },
    "13396": {
      "op": "MSTORE"
    },
    "13397": {
      "op": "DUP7"
    },
    "13398": {
      "op": "MLOAD"
    },
    "13399": {
      "op": "PUSH2",
      "value": "0x3467"
    },
    "13402": {
      "op": "DUP2"
    },
    "13403": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13405": {
      "op": "DUP7"
    },
    "13406": {
      "op": "ADD"
    },
    "13407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13409": {
      "op": "DUP12"
    },
    "13410": {
      "op": "ADD"
    },
    "13411": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13414": {
      "jump": "i",
      "op": "JUMP"
    },
    "13415": {
      "op": "JUMPDEST"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13418": {
      "op": "SWAP4"
    },
    "13419": {
      "op": "ADD"
    },
    "13420": {
      "op": "SWAP3"
    },
    "13421": {
      "op": "DUP4"
    },
    "13422": {
      "op": "ADD"
    },
    "13423": {
      "op": "MSTORE"
    },
    "13424": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "13426": {
      "op": "DUP3"
    },
    "13427": {
      "op": "ADD"
    },
    "13428": {
      "op": "MSTORE"
    },
    "13429": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276"
    },
    "13462": {
      "op": "PUSH1",
      "value": "0xA3"
    },
    "13464": {
      "op": "DUP3"
    },
    "13465": {
      "op": "ADD"
    },
    "13466": {
      "op": "MSTORE"
    },
    "13467": {
      "op": "PUSH7",
      "value": "0x30B63AB2911D1"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "13477": {
      "op": "SHL"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "13480": {
      "op": "DUP3"
    },
    "13481": {
      "op": "ADD"
    },
    "13482": {
      "op": "MSTORE"
    },
    "13483": {
      "op": "PUSH2",
      "value": "0x34BA"
    },
    "13486": {
      "op": "PUSH2",
      "value": "0x337C"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "13491": {
      "op": "DUP4"
    },
    "13492": {
      "op": "ADD"
    },
    "13493": {
      "op": "DUP7"
    },
    "13494": {
      "op": "PUSH2",
      "value": "0x321D"
    },
    "13497": {
      "jump": "i",
      "op": "JUMP"
    },
    "13498": {
      "op": "JUMPDEST"
    },
    "13499": {
      "op": "SWAP8"
    },
    "13500": {
      "op": "SWAP7"
    },
    "13501": {
      "op": "POP"
    },
    "13502": {
      "op": "POP"
    },
    "13503": {
      "op": "POP"
    },
    "13504": {
      "op": "POP"
    },
    "13505": {
      "op": "POP"
    },
    "13506": {
      "op": "POP"
    },
    "13507": {
      "op": "POP"
    },
    "13508": {
      "jump": "o",
      "op": "JUMP"
    },
    "13509": {
      "op": "JUMPDEST"
    },
    "13510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13512": {
      "op": "DUP5"
    },
    "13513": {
      "op": "MLOAD"
    },
    "13514": {
      "op": "PUSH2",
      "value": "0x34D7"
    },
    "13517": {
      "op": "DUP2"
    },
    "13518": {
      "op": "DUP5"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13521": {
      "op": "DUP10"
    },
    "13522": {
      "op": "ADD"
    },
    "13523": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13526": {
      "jump": "i",
      "op": "JUMP"
    },
    "13527": {
      "op": "JUMPDEST"
    },
    "13528": {
      "op": "DUP1"
    },
    "13529": {
      "op": "DUP4"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "SWAP1"
    },
    "13532": {
      "op": "POP"
    },
    "13533": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "13566": {
      "op": "DUP1"
    },
    "13567": {
      "op": "DUP3"
    },
    "13568": {
      "op": "MSTORE"
    },
    "13569": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20227370656564222C202276616C7565223A20000000"
    },
    "13602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13604": {
      "op": "DUP4"
    },
    "13605": {
      "op": "ADD"
    },
    "13606": {
      "op": "MSTORE"
    },
    "13607": {
      "op": "DUP6"
    },
    "13608": {
      "op": "MLOAD"
    },
    "13609": {
      "op": "PUSH2",
      "value": "0x3539"
    },
    "13612": {
      "op": "DUP2"
    },
    "13613": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "13615": {
      "op": "DUP6"
    },
    "13616": {
      "op": "ADD"
    },
    "13617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13619": {
      "op": "DUP11"
    },
    "13620": {
      "op": "ADD"
    },
    "13621": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13624": {
      "jump": "i",
      "op": "JUMP"
    },
    "13625": {
      "op": "JUMPDEST"
    },
    "13626": {
      "op": "DUP1"
    },
    "13627": {
      "op": "DUP4"
    },
    "13628": {
      "op": "ADD"
    },
    "13629": {
      "op": "SWAP3"
    },
    "13630": {
      "op": "POP"
    },
    "13631": {
      "op": "POP"
    },
    "13632": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "13635": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13637": {
      "op": "SHL"
    },
    "13638": {
      "op": "DUP1"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "13641": {
      "op": "DUP5"
    },
    "13642": {
      "op": "ADD"
    },
    "13643": {
      "op": "MSTORE"
    },
    "13644": {
      "op": "DUP2"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13647": {
      "op": "DUP5"
    },
    "13648": {
      "op": "ADD"
    },
    "13649": {
      "op": "MSTORE"
    },
    "13650": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000"
    },
    "13683": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "13685": {
      "op": "DUP5"
    },
    "13686": {
      "op": "ADD"
    },
    "13687": {
      "op": "MSTORE"
    },
    "13688": {
      "op": "DUP6"
    },
    "13689": {
      "op": "MLOAD"
    },
    "13690": {
      "op": "SWAP2"
    },
    "13691": {
      "op": "POP"
    },
    "13692": {
      "op": "PUSH2",
      "value": "0x358C"
    },
    "13695": {
      "op": "DUP3"
    },
    "13696": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "13698": {
      "op": "DUP6"
    },
    "13699": {
      "op": "ADD"
    },
    "13700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13702": {
      "op": "DUP10"
    },
    "13703": {
      "op": "ADD"
    },
    "13704": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13707": {
      "jump": "i",
      "op": "JUMP"
    },
    "13708": {
      "op": "JUMPDEST"
    },
    "13709": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "13711": {
      "op": "SWAP3"
    },
    "13712": {
      "op": "SWAP1"
    },
    "13713": {
      "op": "SWAP2"
    },
    "13714": {
      "op": "ADD"
    },
    "13715": {
      "op": "SWAP2"
    },
    "13716": {
      "op": "DUP3"
    },
    "13717": {
      "op": "ADD"
    },
    "13718": {
      "op": "MSTORE"
    },
    "13719": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "13721": {
      "op": "ADD"
    },
    "13722": {
      "op": "SWAP6"
    },
    "13723": {
      "op": "SWAP5"
    },
    "13724": {
      "op": "POP"
    },
    "13725": {
      "op": "POP"
    },
    "13726": {
      "op": "POP"
    },
    "13727": {
      "op": "POP"
    },
    "13728": {
      "op": "POP"
    },
    "13729": {
      "jump": "o",
      "op": "JUMP"
    },
    "13730": {
      "op": "JUMPDEST"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13733": {
      "op": "DUP6"
    },
    "13734": {
      "op": "MLOAD"
    },
    "13735": {
      "op": "PUSH2",
      "value": "0x35B4"
    },
    "13738": {
      "op": "DUP2"
    },
    "13739": {
      "op": "DUP5"
    },
    "13740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13742": {
      "op": "DUP11"
    },
    "13743": {
      "op": "ADD"
    },
    "13744": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13747": {
      "jump": "i",
      "op": "JUMP"
    },
    "13748": {
      "op": "JUMPDEST"
    },
    "13749": {
      "op": "DUP1"
    },
    "13750": {
      "op": "DUP4"
    },
    "13751": {
      "op": "ADD"
    },
    "13752": {
      "op": "SWAP1"
    },
    "13753": {
      "op": "POP"
    },
    "13754": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "13787": {
      "op": "DUP1"
    },
    "13788": {
      "op": "DUP3"
    },
    "13789": {
      "op": "MSTORE"
    },
    "13790": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "13823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13825": {
      "op": "DUP4"
    },
    "13826": {
      "op": "ADD"
    },
    "13827": {
      "op": "MSTORE"
    },
    "13828": {
      "op": "DUP7"
    },
    "13829": {
      "op": "MLOAD"
    },
    "13830": {
      "op": "PUSH2",
      "value": "0x3616"
    },
    "13833": {
      "op": "DUP2"
    },
    "13834": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "13836": {
      "op": "DUP6"
    },
    "13837": {
      "op": "ADD"
    },
    "13838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13840": {
      "op": "DUP12"
    },
    "13841": {
      "op": "ADD"
    },
    "13842": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13845": {
      "jump": "i",
      "op": "JUMP"
    },
    "13846": {
      "op": "JUMPDEST"
    },
    "13847": {
      "op": "DUP1"
    },
    "13848": {
      "op": "DUP4"
    },
    "13849": {
      "op": "ADD"
    },
    "13850": {
      "op": "SWAP3"
    },
    "13851": {
      "op": "POP"
    },
    "13852": {
      "op": "POP"
    },
    "13853": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13858": {
      "op": "SHL"
    },
    "13859": {
      "op": "DUP1"
    },
    "13860": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "13862": {
      "op": "DUP5"
    },
    "13863": {
      "op": "ADD"
    },
    "13864": {
      "op": "MSTORE"
    },
    "13865": {
      "op": "DUP2"
    },
    "13866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13868": {
      "op": "DUP5"
    },
    "13869": {
      "op": "ADD"
    },
    "13870": {
      "op": "MSTORE"
    },
    "13871": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "13904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13906": {
      "op": "DUP5"
    },
    "13907": {
      "op": "ADD"
    },
    "13908": {
      "op": "MSTORE"
    },
    "13909": {
      "op": "DUP7"
    },
    "13910": {
      "op": "MLOAD"
    },
    "13911": {
      "op": "PUSH2",
      "value": "0x3667"
    },
    "13914": {
      "op": "DUP2"
    },
    "13915": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13917": {
      "op": "DUP7"
    },
    "13918": {
      "op": "ADD"
    },
    "13919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13921": {
      "op": "DUP12"
    },
    "13922": {
      "op": "ADD"
    },
    "13923": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "13926": {
      "jump": "i",
      "op": "JUMP"
    },
    "13927": {
      "op": "JUMPDEST"
    },
    "13928": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13930": {
      "op": "SWAP4"
    },
    "13931": {
      "op": "ADD"
    },
    "13932": {
      "op": "SWAP3"
    },
    "13933": {
      "op": "DUP4"
    },
    "13934": {
      "op": "ADD"
    },
    "13935": {
      "op": "MSTORE"
    },
    "13936": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13938": {
      "op": "DUP3"
    },
    "13939": {
      "op": "ADD"
    },
    "13940": {
      "op": "MSTORE"
    },
    "13941": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "13974": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "13976": {
      "op": "DUP3"
    },
    "13977": {
      "op": "ADD"
    },
    "13978": {
      "op": "MSTORE"
    },
    "13979": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "13985": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "13987": {
      "op": "SHL"
    },
    "13988": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13990": {
      "op": "DUP3"
    },
    "13991": {
      "op": "ADD"
    },
    "13992": {
      "op": "MSTORE"
    },
    "13993": {
      "op": "PUSH2",
      "value": "0x34BA"
    },
    "13996": {
      "op": "PUSH2",
      "value": "0x337C"
    },
    "13999": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "14001": {
      "op": "DUP4"
    },
    "14002": {
      "op": "ADD"
    },
    "14003": {
      "op": "DUP7"
    },
    "14004": {
      "op": "PUSH2",
      "value": "0x321D"
    },
    "14007": {
      "jump": "i",
      "op": "JUMP"
    },
    "14008": {
      "op": "JUMPDEST"
    },
    "14009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14011": {
      "op": "DUP3"
    },
    "14012": {
      "op": "MLOAD"
    },
    "14013": {
      "op": "PUSH2",
      "value": "0x36CA"
    },
    "14016": {
      "op": "DUP2"
    },
    "14017": {
      "op": "DUP5"
    },
    "14018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14020": {
      "op": "DUP8"
    },
    "14021": {
      "op": "ADD"
    },
    "14022": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "14025": {
      "jump": "i",
      "op": "JUMP"
    },
    "14026": {
      "op": "JUMPDEST"
    },
    "14027": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "14029": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14031": {
      "op": "SHL"
    },
    "14032": {
      "op": "SWAP3"
    },
    "14033": {
      "op": "ADD"
    },
    "14034": {
      "op": "SWAP2"
    },
    "14035": {
      "op": "DUP3"
    },
    "14036": {
      "op": "MSTORE"
    },
    "14037": {
      "op": "POP"
    },
    "14038": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "14040": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14042": {
      "op": "SHL"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14045": {
      "op": "DUP3"
    },
    "14046": {
      "op": "ADD"
    },
    "14047": {
      "op": "MSTORE"
    },
    "14048": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "14050": {
      "op": "ADD"
    },
    "14051": {
      "op": "SWAP2"
    },
    "14052": {
      "op": "SWAP1"
    },
    "14053": {
      "op": "POP"
    },
    "14054": {
      "jump": "o",
      "op": "JUMP"
    },
    "14055": {
      "op": "JUMPDEST"
    },
    "14056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14058": {
      "op": "DUP1"
    },
    "14059": {
      "op": "DUP3"
    },
    "14060": {
      "op": "MSTORE"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "14063": {
      "op": "SWAP1"
    },
    "14064": {
      "op": "DUP3"
    },
    "14065": {
      "op": "ADD"
    },
    "14066": {
      "op": "MSTORE"
    },
    "14067": {
      "op": "PUSH14",
      "value": "0x1A5B9D985B1A59081DDA5E985C99"
    },
    "14082": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "14084": {
      "op": "SHL"
    },
    "14085": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14087": {
      "op": "DUP3"
    },
    "14088": {
      "op": "ADD"
    },
    "14089": {
      "op": "MSTORE"
    },
    "14090": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14092": {
      "op": "ADD"
    },
    "14093": {
      "op": "SWAP1"
    },
    "14094": {
      "jump": "o",
      "op": "JUMP"
    },
    "14095": {
      "op": "JUMPDEST"
    },
    "14096": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14103": {
      "op": "SHL"
    },
    "14104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14106": {
      "op": "MSTORE"
    },
    "14107": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14111": {
      "op": "MSTORE"
    },
    "14112": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14116": {
      "op": "REVERT"
    },
    "14117": {
      "op": "JUMPDEST"
    },
    "14118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14120": {
      "op": "DUP3"
    },
    "14121": {
      "op": "DUP3"
    },
    "14122": {
      "op": "LT"
    },
    "14123": {
      "op": "ISZERO"
    },
    "14124": {
      "op": "PUSH2",
      "value": "0x3737"
    },
    "14127": {
      "op": "JUMPI"
    },
    "14128": {
      "op": "PUSH2",
      "value": "0x3737"
    },
    "14131": {
      "op": "PUSH2",
      "value": "0x370F"
    },
    "14134": {
      "jump": "i",
      "op": "JUMP"
    },
    "14135": {
      "op": "JUMPDEST"
    },
    "14136": {
      "op": "POP"
    },
    "14137": {
      "op": "SUB"
    },
    "14138": {
      "op": "SWAP1"
    },
    "14139": {
      "jump": "o",
      "op": "JUMP"
    },
    "14140": {
      "op": "JUMPDEST"
    },
    "14141": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14148": {
      "op": "SHL"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14151": {
      "op": "MSTORE"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14154": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14156": {
      "op": "MSTORE"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14161": {
      "op": "REVERT"
    },
    "14162": {
      "op": "JUMPDEST"
    },
    "14163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14165": {
      "op": "DUP3"
    },
    "14166": {
      "op": "PUSH2",
      "value": "0x3761"
    },
    "14169": {
      "op": "JUMPI"
    },
    "14170": {
      "op": "PUSH2",
      "value": "0x3761"
    },
    "14173": {
      "op": "PUSH2",
      "value": "0x373C"
    },
    "14176": {
      "jump": "i",
      "op": "JUMP"
    },
    "14177": {
      "op": "JUMPDEST"
    },
    "14178": {
      "op": "POP"
    },
    "14179": {
      "op": "DIV"
    },
    "14180": {
      "op": "SWAP1"
    },
    "14181": {
      "jump": "o",
      "op": "JUMP"
    },
    "14182": {
      "op": "JUMPDEST"
    },
    "14183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14185": {
      "op": "DUP2"
    },
    "14186": {
      "op": "DUP2"
    },
    "14187": {
      "op": "SHR"
    },
    "14188": {
      "op": "SWAP1"
    },
    "14189": {
      "op": "DUP3"
    },
    "14190": {
      "op": "AND"
    },
    "14191": {
      "op": "DUP1"
    },
    "14192": {
      "op": "PUSH2",
      "value": "0x377A"
    },
    "14195": {
      "op": "JUMPI"
    },
    "14196": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14198": {
      "op": "DUP3"
    },
    "14199": {
      "op": "AND"
    },
    "14200": {
      "op": "SWAP2"
    },
    "14201": {
      "op": "POP"
    },
    "14202": {
      "op": "JUMPDEST"
    },
    "14203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14205": {
      "op": "DUP3"
    },
    "14206": {
      "op": "LT"
    },
    "14207": {
      "op": "DUP2"
    },
    "14208": {
      "op": "SUB"
    },
    "14209": {
      "op": "PUSH2",
      "value": "0x379A"
    },
    "14212": {
      "op": "JUMPI"
    },
    "14213": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14220": {
      "op": "SHL"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14223": {
      "op": "MSTORE"
    },
    "14224": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14226": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14228": {
      "op": "MSTORE"
    },
    "14229": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14233": {
      "op": "REVERT"
    },
    "14234": {
      "op": "JUMPDEST"
    },
    "14235": {
      "op": "POP"
    },
    "14236": {
      "op": "SWAP2"
    },
    "14237": {
      "op": "SWAP1"
    },
    "14238": {
      "op": "POP"
    },
    "14239": {
      "jump": "o",
      "op": "JUMP"
    },
    "14240": {
      "op": "JUMPDEST"
    },
    "14241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14243": {
      "op": "DUP1"
    },
    "14244": {
      "op": "DUP3"
    },
    "14245": {
      "op": "MSTORE"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14248": {
      "op": "SWAP1"
    },
    "14249": {
      "op": "DUP3"
    },
    "14250": {
      "op": "ADD"
    },
    "14251": {
      "op": "MSTORE"
    },
    "14252": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "14285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14287": {
      "op": "DUP3"
    },
    "14288": {
      "op": "ADD"
    },
    "14289": {
      "op": "MSTORE"
    },
    "14290": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14310": {
      "op": "SHL"
    },
    "14311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14313": {
      "op": "DUP3"
    },
    "14314": {
      "op": "ADD"
    },
    "14315": {
      "op": "MSTORE"
    },
    "14316": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "op": "SWAP1"
    },
    "14320": {
      "jump": "o",
      "op": "JUMP"
    },
    "14321": {
      "op": "JUMPDEST"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14324": {
      "op": "DUP2"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14327": {
      "op": "NOT"
    },
    "14328": {
      "op": "DIV"
    },
    "14329": {
      "op": "DUP4"
    },
    "14330": {
      "op": "GT"
    },
    "14331": {
      "op": "DUP3"
    },
    "14332": {
      "op": "ISZERO"
    },
    "14333": {
      "op": "ISZERO"
    },
    "14334": {
      "op": "AND"
    },
    "14335": {
      "op": "ISZERO"
    },
    "14336": {
      "op": "PUSH2",
      "value": "0x380B"
    },
    "14339": {
      "op": "JUMPI"
    },
    "14340": {
      "op": "PUSH2",
      "value": "0x380B"
    },
    "14343": {
      "op": "PUSH2",
      "value": "0x370F"
    },
    "14346": {
      "jump": "i",
      "op": "JUMP"
    },
    "14347": {
      "op": "JUMPDEST"
    },
    "14348": {
      "op": "POP"
    },
    "14349": {
      "op": "MUL"
    },
    "14350": {
      "op": "SWAP1"
    },
    "14351": {
      "jump": "o",
      "op": "JUMP"
    },
    "14352": {
      "op": "JUMPDEST"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14355": {
      "op": "DUP3"
    },
    "14356": {
      "op": "PUSH2",
      "value": "0x381F"
    },
    "14359": {
      "op": "JUMPI"
    },
    "14360": {
      "op": "PUSH2",
      "value": "0x381F"
    },
    "14363": {
      "op": "PUSH2",
      "value": "0x373C"
    },
    "14366": {
      "jump": "i",
      "op": "JUMP"
    },
    "14367": {
      "op": "JUMPDEST"
    },
    "14368": {
      "op": "POP"
    },
    "14369": {
      "op": "MOD"
    },
    "14370": {
      "op": "SWAP1"
    },
    "14371": {
      "jump": "o",
      "op": "JUMP"
    },
    "14372": {
      "op": "JUMPDEST"
    },
    "14373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14375": {
      "op": "DUP3"
    },
    "14376": {
      "op": "NOT"
    },
    "14377": {
      "op": "DUP3"
    },
    "14378": {
      "op": "GT"
    },
    "14379": {
      "op": "ISZERO"
    },
    "14380": {
      "op": "PUSH2",
      "value": "0x3837"
    },
    "14383": {
      "op": "JUMPI"
    },
    "14384": {
      "op": "PUSH2",
      "value": "0x3837"
    },
    "14387": {
      "op": "PUSH2",
      "value": "0x370F"
    },
    "14390": {
      "jump": "i",
      "op": "JUMP"
    },
    "14391": {
      "op": "JUMPDEST"
    },
    "14392": {
      "op": "POP"
    },
    "14393": {
      "op": "ADD"
    },
    "14394": {
      "op": "SWAP1"
    },
    "14395": {
      "jump": "o",
      "op": "JUMP"
    },
    "14396": {
      "op": "JUMPDEST"
    },
    "14397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14399": {
      "op": "DUP1"
    },
    "14400": {
      "op": "DUP3"
    },
    "14401": {
      "op": "MSTORE"
    },
    "14402": {
      "op": "DUP2"
    },
    "14403": {
      "op": "DUP2"
    },
    "14404": {
      "op": "ADD"
    },
    "14405": {
      "op": "MSTORE"
    },
    "14406": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "14439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14441": {
      "op": "DUP3"
    },
    "14442": {
      "op": "ADD"
    },
    "14443": {
      "op": "MSTORE"
    },
    "14444": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14446": {
      "op": "ADD"
    },
    "14447": {
      "op": "SWAP1"
    },
    "14448": {
      "jump": "o",
      "op": "JUMP"
    },
    "14449": {
      "op": "JUMPDEST"
    },
    "14450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14452": {
      "op": "DUP1"
    },
    "14453": {
      "op": "DUP3"
    },
    "14454": {
      "op": "MSTORE"
    },
    "14455": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "14457": {
      "op": "SWAP1"
    },
    "14458": {
      "op": "DUP3"
    },
    "14459": {
      "op": "ADD"
    },
    "14460": {
      "op": "MSTORE"
    },
    "14461": {
      "op": "PUSH32",
      "value": "0x496E76616C6964206F70657261746F7220616464726573730000000000000000"
    },
    "14494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14496": {
      "op": "DUP3"
    },
    "14497": {
      "op": "ADD"
    },
    "14498": {
      "op": "MSTORE"
    },
    "14499": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14501": {
      "op": "ADD"
    },
    "14502": {
      "op": "SWAP1"
    },
    "14503": {
      "jump": "o",
      "op": "JUMP"
    },
    "14504": {
      "op": "JUMPDEST"
    },
    "14505": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14507": {
      "op": "DUP3"
    },
    "14508": {
      "op": "GT"
    },
    "14509": {
      "op": "ISZERO"
    },
    "14510": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "14513": {
      "op": "JUMPI"
    },
    "14514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14516": {
      "op": "DUP2"
    },
    "14517": {
      "op": "DUP2"
    },
    "14518": {
      "op": "MSTORE"
    },
    "14519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14521": {
      "op": "DUP2"
    },
    "14522": {
      "op": "KECCAK256"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14525": {
      "op": "DUP6"
    },
    "14526": {
      "op": "ADD"
    },
    "14527": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14529": {
      "op": "SHR"
    },
    "14530": {
      "op": "DUP2"
    },
    "14531": {
      "op": "ADD"
    },
    "14532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14534": {
      "op": "DUP7"
    },
    "14535": {
      "op": "LT"
    },
    "14536": {
      "op": "ISZERO"
    },
    "14537": {
      "op": "PUSH2",
      "value": "0x38CF"
    },
    "14540": {
      "op": "JUMPI"
    },
    "14541": {
      "op": "POP"
    },
    "14542": {
      "op": "DUP1"
    },
    "14543": {
      "op": "JUMPDEST"
    },
    "14544": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14546": {
      "op": "DUP6"
    },
    "14547": {
      "op": "ADD"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14550": {
      "op": "SHR"
    },
    "14551": {
      "op": "DUP3"
    },
    "14552": {
      "op": "ADD"
    },
    "14553": {
      "op": "SWAP2"
    },
    "14554": {
      "op": "POP"
    },
    "14555": {
      "op": "JUMPDEST"
    },
    "14556": {
      "op": "DUP2"
    },
    "14557": {
      "op": "DUP2"
    },
    "14558": {
      "op": "LT"
    },
    "14559": {
      "op": "ISZERO"
    },
    "14560": {
      "op": "PUSH2",
      "value": "0x38EE"
    },
    "14563": {
      "op": "JUMPI"
    },
    "14564": {
      "op": "DUP3"
    },
    "14565": {
      "op": "DUP2"
    },
    "14566": {
      "op": "SSTORE"
    },
    "14567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14569": {
      "op": "ADD"
    },
    "14570": {
      "op": "PUSH2",
      "value": "0x38DB"
    },
    "14573": {
      "op": "JUMP"
    },
    "14574": {
      "op": "JUMPDEST"
    },
    "14575": {
      "op": "POP"
    },
    "14576": {
      "op": "POP"
    },
    "14577": {
      "op": "POP"
    },
    "14578": {
      "op": "POP"
    },
    "14579": {
      "op": "POP"
    },
    "14580": {
      "op": "POP"
    },
    "14581": {
      "jump": "o",
      "op": "JUMP"
    },
    "14582": {
      "op": "JUMPDEST"
    },
    "14583": {
      "op": "DUP2"
    },
    "14584": {
      "op": "MLOAD"
    },
    "14585": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "14594": {
      "op": "DUP2"
    },
    "14595": {
      "op": "GT"
    },
    "14596": {
      "op": "ISZERO"
    },
    "14597": {
      "op": "PUSH2",
      "value": "0x3910"
    },
    "14600": {
      "op": "JUMPI"
    },
    "14601": {
      "op": "PUSH2",
      "value": "0x3910"
    },
    "14604": {
      "op": "PUSH2",
      "value": "0x2CA2"
    },
    "14607": {
      "jump": "i",
      "op": "JUMP"
    },
    "14608": {
      "op": "JUMPDEST"
    },
    "14609": {
      "op": "PUSH2",
      "value": "0x3924"
    },
    "14612": {
      "op": "DUP2"
    },
    "14613": {
      "op": "PUSH2",
      "value": "0x391E"
    },
    "14616": {
      "op": "DUP5"
    },
    "14617": {
      "op": "SLOAD"
    },
    "14618": {
      "op": "PUSH2",
      "value": "0x3766"
    },
    "14621": {
      "jump": "i",
      "op": "JUMP"
    },
    "14622": {
      "op": "JUMPDEST"
    },
    "14623": {
      "op": "DUP5"
    },
    "14624": {
      "op": "PUSH2",
      "value": "0x38A8"
    },
    "14627": {
      "jump": "i",
      "op": "JUMP"
    },
    "14628": {
      "op": "JUMPDEST"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14631": {
      "op": "DUP1"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14634": {
      "op": "DUP4"
    },
    "14635": {
      "op": "GT"
    },
    "14636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14638": {
      "op": "DUP2"
    },
    "14639": {
      "op": "EQ"
    },
    "14640": {
      "op": "PUSH2",
      "value": "0x3959"
    },
    "14643": {
      "op": "JUMPI"
    },
    "14644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14646": {
      "op": "DUP5"
    },
    "14647": {
      "op": "ISZERO"
    },
    "14648": {
      "op": "PUSH2",
      "value": "0x3941"
    },
    "14651": {
      "op": "JUMPI"
    },
    "14652": {
      "op": "POP"
    },
    "14653": {
      "op": "DUP6"
    },
    "14654": {
      "op": "DUP4"
    },
    "14655": {
      "op": "ADD"
    },
    "14656": {
      "op": "MLOAD"
    },
    "14657": {
      "op": "JUMPDEST"
    },
    "14658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14660": {
      "op": "NOT"
    },
    "14661": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14663": {
      "op": "DUP7"
    },
    "14664": {
      "op": "SWAP1"
    },
    "14665": {
      "op": "SHL"
    },
    "14666": {
      "op": "SHR"
    },
    "14667": {
      "op": "NOT"
    },
    "14668": {
      "op": "AND"
    },
    "14669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14671": {
      "op": "DUP6"
    },
    "14672": {
      "op": "SWAP1"
    },
    "14673": {
      "op": "SHL"
    },
    "14674": {
      "op": "OR"
    },
    "14675": {
      "op": "DUP6"
    },
    "14676": {
      "op": "SSTORE"
    },
    "14677": {
      "op": "PUSH2",
      "value": "0x38EE"
    },
    "14680": {
      "op": "JUMP"
    },
    "14681": {
      "op": "JUMPDEST"
    },
    "14682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14684": {
      "op": "DUP6"
    },
    "14685": {
      "op": "DUP2"
    },
    "14686": {
      "op": "MSTORE"
    },
    "14687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14689": {
      "op": "DUP2"
    },
    "14690": {
      "op": "KECCAK256"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14693": {
      "op": "NOT"
    },
    "14694": {
      "op": "DUP7"
    },
    "14695": {
      "op": "AND"
    },
    "14696": {
      "op": "SWAP2"
    },
    "14697": {
      "op": "JUMPDEST"
    },
    "14698": {
      "op": "DUP3"
    },
    "14699": {
      "op": "DUP2"
    },
    "14700": {
      "op": "LT"
    },
    "14701": {
      "op": "ISZERO"
    },
    "14702": {
      "op": "PUSH2",
      "value": "0x3988"
    },
    "14705": {
      "op": "JUMPI"
    },
    "14706": {
      "op": "DUP9"
    },
    "14707": {
      "op": "DUP7"
    },
    "14708": {
      "op": "ADD"
    },
    "14709": {
      "op": "MLOAD"
    },
    "14710": {
      "op": "DUP3"
    },
    "14711": {
      "op": "SSTORE"
    },
    "14712": {
      "op": "SWAP5"
    },
    "14713": {
      "op": "DUP5"
    },
    "14714": {
      "op": "ADD"
    },
    "14715": {
      "op": "SWAP5"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14718": {
      "op": "SWAP1"
    },
    "14719": {
      "op": "SWAP2"
    },
    "14720": {
      "op": "ADD"
    },
    "14721": {
      "op": "SWAP1"
    },
    "14722": {
      "op": "DUP5"
    },
    "14723": {
      "op": "ADD"
    },
    "14724": {
      "op": "PUSH2",
      "value": "0x3969"
    },
    "14727": {
      "op": "JUMP"
    },
    "14728": {
      "op": "JUMPDEST"
    },
    "14729": {
      "op": "POP"
    },
    "14730": {
      "op": "DUP6"
    },
    "14731": {
      "op": "DUP3"
    },
    "14732": {
      "op": "LT"
    },
    "14733": {
      "op": "ISZERO"
    },
    "14734": {
      "op": "PUSH2",
      "value": "0x39A6"
    },
    "14737": {
      "op": "JUMPI"
    },
    "14738": {
      "op": "DUP8"
    },
    "14739": {
      "op": "DUP6"
    },
    "14740": {
      "op": "ADD"
    },
    "14741": {
      "op": "MLOAD"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14744": {
      "op": "NOT"
    },
    "14745": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "14747": {
      "op": "DUP9"
    },
    "14748": {
      "op": "SWAP1"
    },
    "14749": {
      "op": "SHL"
    },
    "14750": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "14752": {
      "op": "AND"
    },
    "14753": {
      "op": "SHR"
    },
    "14754": {
      "op": "NOT"
    },
    "14755": {
      "op": "AND"
    },
    "14756": {
      "op": "DUP2"
    },
    "14757": {
      "op": "SSTORE"
    },
    "14758": {
      "op": "JUMPDEST"
    },
    "14759": {
      "op": "POP"
    },
    "14760": {
      "op": "POP"
    },
    "14761": {
      "op": "POP"
    },
    "14762": {
      "op": "POP"
    },
    "14763": {
      "op": "POP"
    },
    "14764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14766": {
      "op": "SWAP1"
    },
    "14767": {
      "op": "DUP2"
    },
    "14768": {
      "op": "SHL"
    },
    "14769": {
      "op": "ADD"
    },
    "14770": {
      "op": "SWAP1"
    },
    "14771": {
      "op": "SSTORE"
    },
    "14772": {
      "op": "POP"
    },
    "14773": {
      "jump": "o",
      "op": "JUMP"
    },
    "14774": {
      "op": "JUMPDEST"
    },
    "14775": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14782": {
      "op": "SHL"
    },
    "14783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14785": {
      "op": "MSTORE"
    },
    "14786": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14790": {
      "op": "MSTORE"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14795": {
      "op": "REVERT"
    },
    "14796": {
      "op": "JUMPDEST"
    },
    "14797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14799": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14805": {
      "op": "DUP1"
    },
    "14806": {
      "op": "DUP4"
    },
    "14807": {
      "op": "AND"
    },
    "14808": {
      "op": "DUP2"
    },
    "14809": {
      "op": "DUP6"
    },
    "14810": {
      "op": "AND"
    },
    "14811": {
      "op": "DUP1"
    },
    "14812": {
      "op": "DUP4"
    },
    "14813": {
      "op": "SUB"
    },
    "14814": {
      "op": "DUP3"
    },
    "14815": {
      "op": "GT"
    },
    "14816": {
      "op": "ISZERO"
    },
    "14817": {
      "op": "PUSH2",
      "value": "0x39EC"
    },
    "14820": {
      "op": "JUMPI"
    },
    "14821": {
      "op": "PUSH2",
      "value": "0x39EC"
    },
    "14824": {
      "op": "PUSH2",
      "value": "0x370F"
    },
    "14827": {
      "jump": "i",
      "op": "JUMP"
    },
    "14828": {
      "op": "JUMPDEST"
    },
    "14829": {
      "op": "ADD"
    },
    "14830": {
      "op": "SWAP5"
    },
    "14831": {
      "op": "SWAP4"
    },
    "14832": {
      "op": "POP"
    },
    "14833": {
      "op": "POP"
    },
    "14834": {
      "op": "POP"
    },
    "14835": {
      "op": "POP"
    },
    "14836": {
      "jump": "o",
      "op": "JUMP"
    },
    "14837": {
      "op": "JUMPDEST"
    },
    "14838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14840": {
      "op": "DUP1"
    },
    "14841": {
      "op": "DUP5"
    },
    "14842": {
      "op": "SLOAD"
    },
    "14843": {
      "op": "PUSH2",
      "value": "0x3A03"
    },
    "14846": {
      "op": "DUP2"
    },
    "14847": {
      "op": "PUSH2",
      "value": "0x3766"
    },
    "14850": {
      "jump": "i",
      "op": "JUMP"
    },
    "14851": {
      "op": "JUMPDEST"
    },
    "14852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14854": {
      "op": "DUP3"
    },
    "14855": {
      "op": "DUP2"
    },
    "14856": {
      "op": "AND"
    },
    "14857": {
      "op": "DUP1"
    },
    "14858": {
      "op": "ISZERO"
    },
    "14859": {
      "op": "PUSH2",
      "value": "0x3A1B"
    },
    "14862": {
      "op": "JUMPI"
    },
    "14863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14865": {
      "op": "DUP2"
    },
    "14866": {
      "op": "EQ"
    },
    "14867": {
      "op": "PUSH2",
      "value": "0x3A30"
    },
    "14870": {
      "op": "JUMPI"
    },
    "14871": {
      "op": "PUSH2",
      "value": "0x3A5F"
    },
    "14874": {
      "op": "JUMP"
    },
    "14875": {
      "op": "JUMPDEST"
    },
    "14876": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14878": {
      "op": "NOT"
    },
    "14879": {
      "op": "DUP5"
    },
    "14880": {
      "op": "AND"
    },
    "14881": {
      "op": "DUP8"
    },
    "14882": {
      "op": "MSTORE"
    },
    "14883": {
      "op": "DUP3"
    },
    "14884": {
      "op": "ISZERO"
    },
    "14885": {
      "op": "ISZERO"
    },
    "14886": {
      "op": "DUP4"
    },
    "14887": {
      "op": "MUL"
    },
    "14888": {
      "op": "DUP8"
    },
    "14889": {
      "op": "ADD"
    },
    "14890": {
      "op": "SWAP5"
    },
    "14891": {
      "op": "POP"
    },
    "14892": {
      "op": "PUSH2",
      "value": "0x3A5F"
    },
    "14895": {
      "op": "JUMP"
    },
    "14896": {
      "op": "JUMPDEST"
    },
    "14897": {
      "op": "DUP9"
    },
    "14898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14900": {
      "op": "MSTORE"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14903": {
      "op": "DUP1"
    },
    "14904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14906": {
      "op": "KECCAK256"
    },
    "14907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14909": {
      "op": "JUMPDEST"
    },
    "14910": {
      "op": "DUP6"
    },
    "14911": {
      "op": "DUP2"
    },
    "14912": {
      "op": "LT"
    },
    "14913": {
      "op": "ISZERO"
    },
    "14914": {
      "op": "PUSH2",
      "value": "0x3A56"
    },
    "14917": {
      "op": "JUMPI"
    },
    "14918": {
      "op": "DUP2"
    },
    "14919": {
      "op": "SLOAD"
    },
    "14920": {
      "op": "DUP11"
    },
    "14921": {
      "op": "DUP3"
    },
    "14922": {
      "op": "ADD"
    },
    "14923": {
      "op": "MSTORE"
    },
    "14924": {
      "op": "SWAP1"
    },
    "14925": {
      "op": "DUP5"
    },
    "14926": {
      "op": "ADD"
    },
    "14927": {
      "op": "SWAP1"
    },
    "14928": {
      "op": "DUP3"
    },
    "14929": {
      "op": "ADD"
    },
    "14930": {
      "op": "PUSH2",
      "value": "0x3A3D"
    },
    "14933": {
      "op": "JUMP"
    },
    "14934": {
      "op": "JUMPDEST"
    },
    "14935": {
      "op": "POP"
    },
    "14936": {
      "op": "POP"
    },
    "14937": {
      "op": "POP"
    },
    "14938": {
      "op": "DUP3"
    },
    "14939": {
      "op": "DUP8"
    },
    "14940": {
      "op": "ADD"
    },
    "14941": {
      "op": "SWAP5"
    },
    "14942": {
      "op": "POP"
    },
    "14943": {
      "op": "JUMPDEST"
    },
    "14944": {
      "op": "POP"
    },
    "14945": {
      "op": "POP"
    },
    "14946": {
      "op": "POP"
    },
    "14947": {
      "op": "POP"
    },
    "14948": {
      "op": "DUP4"
    },
    "14949": {
      "op": "MLOAD"
    },
    "14950": {
      "op": "PUSH2",
      "value": "0x3A73"
    },
    "14953": {
      "op": "DUP2"
    },
    "14954": {
      "op": "DUP4"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14957": {
      "op": "DUP9"
    },
    "14958": {
      "op": "ADD"
    },
    "14959": {
      "op": "PUSH2",
      "value": "0x2D95"
    },
    "14962": {
      "jump": "i",
      "op": "JUMP"
    },
    "14963": {
      "op": "JUMPDEST"
    },
    "14964": {
      "op": "PUSH4",
      "value": "0x2E6A7067"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14971": {
      "op": "SHL"
    },
    "14972": {
      "op": "SWAP2"
    },
    "14973": {
      "op": "ADD"
    },
    "14974": {
      "op": "SWAP1"
    },
    "14975": {
      "op": "DUP2"
    },
    "14976": {
      "op": "MSTORE"
    },
    "14977": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14979": {
      "op": "ADD"
    },
    "14980": {
      "op": "SWAP5"
    },
    "14981": {
      "op": "SWAP4"
    },
    "14982": {
      "op": "POP"
    },
    "14983": {
      "op": "POP"
    },
    "14984": {
      "op": "POP"
    },
    "14985": {
      "op": "POP"
    },
    "14986": {
      "jump": "o",
      "op": "JUMP"
    },
    "14987": {
      "op": "JUMPDEST"
    },
    "14988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14992": {
      "op": "DUP3"
    },
    "14993": {
      "op": "ADD"
    },
    "14994": {
      "op": "PUSH2",
      "value": "0x3A9D"
    },
    "14997": {
      "op": "JUMPI"
    },
    "14998": {
      "op": "PUSH2",
      "value": "0x3A9D"
    },
    "15001": {
      "op": "PUSH2",
      "value": "0x370F"
    },
    "15004": {
      "jump": "i",
      "op": "JUMP"
    },
    "15005": {
      "op": "JUMPDEST"
    },
    "15006": {
      "op": "POP"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15009": {
      "op": "ADD"
    },
    "15010": {
      "op": "SWAP1"
    },
    "15011": {
      "jump": "o",
      "op": "JUMP"
    },
    "15012": {
      "op": "JUMPDEST"
    },
    "15013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15015": {
      "op": "DUP1"
    },
    "15016": {
      "op": "DUP3"
    },
    "15017": {
      "op": "MSTORE"
    },
    "15018": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15020": {
      "op": "SWAP1"
    },
    "15021": {
      "op": "DUP3"
    },
    "15022": {
      "op": "ADD"
    },
    "15023": {
      "op": "MSTORE"
    },
    "15024": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "15057": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15059": {
      "op": "DUP3"
    },
    "15060": {
      "op": "ADD"
    },
    "15061": {
      "op": "MSTORE"
    },
    "15062": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "15081": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "15083": {
      "op": "SHL"
    },
    "15084": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15086": {
      "op": "DUP3"
    },
    "15087": {
      "op": "ADD"
    },
    "15088": {
      "op": "MSTORE"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15091": {
      "op": "ADD"
    },
    "15092": {
      "op": "SWAP1"
    },
    "15093": {
      "jump": "o",
      "op": "JUMP"
    },
    "15094": {
      "op": "JUMPDEST"
    },
    "15095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15101": {
      "op": "SHL"
    },
    "15102": {
      "op": "SUB"
    },
    "15103": {
      "op": "DUP6"
    },
    "15104": {
      "op": "DUP2"
    },
    "15105": {
      "op": "AND"
    },
    "15106": {
      "op": "DUP3"
    },
    "15107": {
      "op": "MSTORE"
    },
    "15108": {
      "op": "DUP5"
    },
    "15109": {
      "op": "AND"
    },
    "15110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15112": {
      "op": "DUP3"
    },
    "15113": {
      "op": "ADD"
    },
    "15114": {
      "op": "MSTORE"
    },
    "15115": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15117": {
      "op": "DUP2"
    },
    "15118": {
      "op": "ADD"
    },
    "15119": {
      "op": "DUP4"
    },
    "15120": {
      "op": "SWAP1"
    },
    "15121": {
      "op": "MSTORE"
    },
    "15122": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15124": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15126": {
      "op": "DUP3"
    },
    "15127": {
      "op": "ADD"
    },
    "15128": {
      "op": "DUP2"
    },
    "15129": {
      "op": "SWAP1"
    },
    "15130": {
      "op": "MSTORE"
    },
    "15131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15133": {
      "op": "SWAP1"
    },
    "15134": {
      "op": "PUSH2",
      "value": "0x3B29"
    },
    "15137": {
      "op": "SWAP1"
    },
    "15138": {
      "op": "DUP4"
    },
    "15139": {
      "op": "ADD"
    },
    "15140": {
      "op": "DUP5"
    },
    "15141": {
      "op": "PUSH2",
      "value": "0x2DC1"
    },
    "15144": {
      "jump": "i",
      "op": "JUMP"
    },
    "15145": {
      "op": "JUMPDEST"
    },
    "15146": {
      "op": "SWAP7"
    },
    "15147": {
      "op": "SWAP6"
    },
    "15148": {
      "op": "POP"
    },
    "15149": {
      "op": "POP"
    },
    "15150": {
      "op": "POP"
    },
    "15151": {
      "op": "POP"
    },
    "15152": {
      "op": "POP"
    },
    "15153": {
      "op": "POP"
    },
    "15154": {
      "jump": "o",
      "op": "JUMP"
    },
    "15155": {
      "op": "JUMPDEST"
    },
    "15156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15160": {
      "op": "DUP3"
    },
    "15161": {
      "op": "DUP5"
    },
    "15162": {
      "op": "SUB"
    },
    "15163": {
      "op": "SLT"
    },
    "15164": {
      "op": "ISZERO"
    },
    "15165": {
      "op": "PUSH2",
      "value": "0x3B45"
    },
    "15168": {
      "op": "JUMPI"
    },
    "15169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15171": {
      "op": "DUP1"
    },
    "15172": {
      "op": "REVERT"
    },
    "15173": {
      "op": "JUMPDEST"
    },
    "15174": {
      "op": "DUP2"
    },
    "15175": {
      "op": "MLOAD"
    },
    "15176": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "15179": {
      "op": "DUP2"
    },
    "15180": {
      "op": "PUSH2",
      "value": "0x2C6F"
    },
    "15183": {
      "jump": "i",
      "op": "JUMP"
    },
    "15184": {
      "op": "JUMPDEST"
    },
    "15185": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15190": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15192": {
      "op": "SHL"
    },
    "15193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15195": {
      "op": "MSTORE"
    },
    "15196": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "15198": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15200": {
      "op": "MSTORE"
    },
    "15201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15205": {
      "op": "REVERT"
    }
  },
  "sha1": "b6f6373405c3a9afd9d5cb323907ce2f847b3a93",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public verifier; /// contract address to update stats\n    address public culler; /// contract address to exile any wizard\n    address public appointer; /// contract address to assign roles\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n\n    // note -- stack gets too deep if add more\n    struct Stats { // todo -- reduce uint amount\n        uint128 level;\n        uint128 tokensClaimed; // maybe\n        uint128 contributionKarma; // maybe\n        uint16 role; // limit wizards to 1 role, which is a number\n        uint16 uplineId;  // 0 is default, 65k max?\n        uint40 initiationTimestamp; // 0 if uninitiated\n        uint40 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine, update setter\n        uint256 mintCost;\n        uint256 initiationCost;\n        // cull the herd and reduce to 1000... 400, and so forth? total or per role?\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        uint256 exileTimePenalty;\n        address ecosystemTokenAddress;\n        uint256 phaseDuration;\n        uint256 totalPhases;\n        uint256 maturityThreshold; // phase in which wizard can enter Wizard Tower\n        string imageBaseURI;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images????\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address verifier);\n    event NewCuller(address culler);\n    event NewAppointer(address appointer);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n    event Exiled(address exilee, uint256 indexed wizardId, uint256 timestamp);\n\n\n    ///////\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n\n    /** @dev Check if wizard is active\n      * @param _wizardId id of wizard.\n      * @return true if active, false if inactive\n      */\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n\n    /** @dev check if wizard has been exiled (temporarily banished)\n      * @param _wizardId id of wizard.\n      * @return true -> exiled; false -> not exiled\n      */\n    function isExiled(uint256 _wizardId) public view returns(bool) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp != 0 && tokenIdToStats[_wizardId].initiationTimestamp ==0;\n    }\n\n    /** @dev check if wizard has deserted and thus can be exiled\n      * @param _wizardId id of wizard.\n      * @return true -> deserted; false -> has not deserted\n      */\n    function hasDeserted(uint256 _wizardId) public view returns(bool) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp < block.timestamp && tokenIdToStats[_wizardId].initiationTimestamp ==0;\n    }\n\n\n    /** @dev Check if wizard is active\n      * @param _wizardId id of wizard.\n      * @return true if active, false if inactive\n      */\n    function isMature(uint256 _wizardId) public view returns(bool) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return getPhaseOf(_wizardId) >= contractSettings.maturityThreshold;\n    }\n\n\n    /** @dev Check if wizard is active\n      * @param _wizardId id of wizard.\n      * @return wizardId of upline\n      */\n    function getUplineId(uint256 _wizardId) public view returns(uint256) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId].uplineId;\n    }\n\n    function getRole(uint256 _wizardId) public view returns(uint256) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId].role;\n    }\n\n\n    /** @dev returns stats of wizard, potentially amplified by level or phase\n      * @param _wizardId id of wizard.\n      * @return stats\n      */\n    function getStatsGivenId(uint256 _wizardId) external view returns(Stats memory) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        return tokenIdToStats[_wizardId];\n    }\n\n\n    /** @dev Returns phase of wizard\n      * @param _wizardId id of wizard.\n      * @return number representing phase\n      */\n    function getPhaseOf(uint256 _wizardId) public view returns(uint256) {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        uint256 phase =\n          (block.timestamp - tokenIdToStats[_wizardId].initiationTimestamp) / contractSettings.phaseDuration\n          > (contractSettings.totalPhases - 1) ? (contractSettings.totalPhases - 1) : (block.timestamp - tokenIdToStats[_wizardId].initiationTimestamp) / contractSettings.phaseDuration\n          ;\n        return phase;\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    /** @dev initiate Wizards NFT\n      * @param _name name of NFT\n      * @param _symbol symbol for NFT\n      * @param _ERC20Address address for ecosystem token (currency)\n      * @param _imageBaseURI base URI used for images\n      */\n    constructor(string memory _name, string memory _symbol, address _ERC20Address, string memory _imageBaseURI) ERC721(_name, _symbol) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _ERC20Address; // todo -- do in less steps\n        contractSettings.phaseDuration = 60*60;// todo --\n        contractSettings.imageBaseURI = _imageBaseURI;// todo --\n        contractSettings.totalPhases = 8;\n        contractSettings.maturityThreshold = 0; // todo make it 5?\n\n        verifier = msg.sender;\n        culler = msg.sender;\n        appointer = msg.sender;\n\n    }\n\n\n    /** @dev check if wizard has deserted and thus can be exiled\n      * @param _uplineId id of referring wizard. use 0 if no referral\n      */\n    function mint(uint16 _uplineId) external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        require(_uplineId <= totalSupply(), \"invalid upline--must be less than total supply\");\n\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp)));\n        ELEMENT element = ELEMENT((pseudoRandNum/10*6) % 4);\n\n        Stats memory myStats =  Stats(1, 0, 0, 0, _uplineId, 0, 0, element);\n        tokenIdToStats[totalSupply()+1] = myStats;\n        _safeMint(msg.sender, totalSupply()+1 ); // with with 1 as id\n    }\n\n\n    /** @dev Changes NFT from uninitated or exiled to initiated\n      * @param _wizardId id of wizard.\n      */\n    function initiate(uint256 _wizardId) external payable {\n        require(ownerOf(_wizardId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_wizardId].initiationTimestamp == 0, \"already initiated\");\n        require(tokenIdToStats[_wizardId].protectedUntilTimestamp + contractSettings.exileTimePenalty <  block.timestamp, \"Exiled wizard not yet allowed to return.\");\n        // todo -- receive fee\n\n        require(msg.value == contractSettings.initiationCost, \"incorrect initiaton fee\");\n\n        Stats storage myStats = tokenIdToStats[_wizardId];\n        myStats.initiationTimestamp = uint40(block.timestamp);\n        myStats.protectedUntilTimestamp = uint40(block.timestamp + contractSettings.protectionTimeExtension);\n\n        emit Initiated(msg.sender, _wizardId, block.timestamp);\n    }\n\n\n    /** @dev exile an NFT that is negligent in duties. Use only for culling.\n      * @param _wizardId id of wizard.\n      */\n    function cull(uint256 _wizardId) external onlyCuller {\n        _exile(_wizardId);\n    }\n\n    /** @dev exile an NFT that is negligent in duties. Any address can call this, but wizard must have deserted\n      * @param _wizardId id of wizard.\n      */\n    function exile(uint256 _wizardId) external {\n        require(hasDeserted(_wizardId), \"wizard can not be exiled.\");\n        _exile(_wizardId);\n    }\n\n    /** @dev exile an NFT that is negligent in duties. Never called by address directly, only by cull or exile\n      * @param _wizardId id of wizard.\n      */\n    function _exile(uint256 _wizardId) internal {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid id\"); // todo -- potentially restrict this further\n        tokenIdToStats[_wizardId].protectedUntilTimestamp = uint40(block.timestamp); // this saves the time of exile started\n        tokenIdToStats[_wizardId].initiationTimestamp = 0;\n    }\n\n\n\n//    \u2022 Uninitiated\n//    \u2022 Exiled\n//      Inactive\n//    \u2022 \"Egg\"\n//    \u2022 Wizard -> Can join wizard tower\n\n    // todo -- consider adding elements to all images\n    /** @dev get token URI\n      * @param _wizardId id of wizard.\n      * @return returns inline URI as string\n      */\n    function tokenURI(uint256 _wizardId) public view virtual override returns (string memory) {\n        require(_exists(_wizardId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        string memory linkExtension;\n        if(tokenIdToStats[_wizardId].initiationTimestamp==0){ // uninitiated\n            linkExtension = \"uninitiated\"; // todo -- shameful uninitiated picture\n        }\n        else if(isExiled(_wizardId)){ // exiled\n            linkExtension = \"exiled\"; // todo -- shameful banished/exiled picture\n        }\n        else if(!isActive(_wizardId)){ // not protected\n            linkExtension = \"inactive\"; // todo -- shameful, sleeping picture\n        }\n        else{ // todo -- this didn't use getPhaseOf\n            linkExtension = Strings.toString(getPhaseOf(_wizardId));\n        }\n        string memory imageURI = string(abi.encodePacked(contractSettings.imageBaseURI, linkExtension, '.jpg'));\n        return formatTokenURI(_wizardId, imageURI);\n    }\n\n    /** @dev format URI based on image and _wizardId\n      * @param _wizardId id of wizard.\n      * @param imageURI inline SVG string.\n      * @return returns inline URI as string\n      */\n    function formatTokenURI(uint256 _wizardId, string memory imageURI) public view returns (string memory) {\n        Stats memory myStats = tokenIdToStats[_wizardId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(999),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": ',\n            Strings.toString(999),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": ',\n            Strings.toString(9999),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": ',\n            Strings.toString(999),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n            Strings.toString(999),   ' }'\n        ));\n\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(999),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(999),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    ///////////////////////////////////\n    ////// Verifier Functions     /////\n    ///////////////////////////////////\n\n    /** @dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n      * @param _wizardId id of wizard.\n      * @param _timeReward amout of time in seconds to add to current protectedUntilTimestamp\n      */\n    function increaseProtectedUntilTimestamp(uint256 _wizardId, uint40 _timeReward) external onlyVerifier {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid id\");\n        require(tokenIdToStats[_wizardId].initiationTimestamp!=0, \"is not initiated\");\n        tokenIdToStats[_wizardId].protectedUntilTimestamp += _timeReward;\n    }\n\n\n    ////////////////////////////////////\n    ////// Appointer Functions     /////\n    ////////////////////////////////////\n\n    function appointRole(uint256 _wizardId, uint16 _role) external onlyAppointer {\n        require(_wizardId!=0 && _wizardId <= totalSupply(), \"invalid wizard\");\n        tokenIdToStats[_wizardId].role = _role;\n    }\n\n\n    /////////////////////////////////\n    ////// Admin Functions      /////\n    /////////////////////////////////\n\n\n    /** @dev modify contract settings. Only available to owner\n      * @param _imageBaseURI baseURI for images\n      * @param _phaseDuration period in seconds for phases\n      * @param _protectionTimeExtension problby remove this // todo -- delete\n      * @param _initiationCost cost in ETH to initiate\n      */\n    function modifyContractSettings(string memory _imageBaseURI, uint256 _phaseDuration, uint256 _protectionTimeExtension, uint256 _mintCost,\n                    uint256 _initiationCost, uint256 _maturityThreshold) external onlyOwner {\n        contractSettings.imageBaseURI = _imageBaseURI;\n        contractSettings.phaseDuration = _phaseDuration;\n        contractSettings.protectionTimeExtension = _protectionTimeExtension;\n        contractSettings.mintCost = _mintCost;\n        contractSettings.initiationCost = _initiationCost;\n        contractSettings.maturityThreshold = _maturityThreshold;\n    }\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender == verifier, 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyAppointer() {\n        require(msg.sender == appointer, 'only appointer');\n        _;\n    }\n\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only holder'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyCuller() {\n        require(\n            msg.sender == culler, // todo -- one or many addresses?\n            \"Only culler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    /** @dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n      * @param _culler new address for culler, the wallet/contract which can exile wizards without contraint\n      */\n    function updateCuller(address _culler) external onlyOwner {\n        require(_culler != address(0) && _culler != culler, \"Invalid operator address\");\n        culler = _culler;\n        emit NewCuller(_culler);\n    }\n\n    /** @dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n      * @param _verifier the new address for verifier, the contract which can add protectedUntil time for wizards\n      */\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n    /** @dev increase protectionTimestamp, called by verifier. Used to keep wizard from being exiled.\n      * @param _appointer the new address for appointer, the contract which can appoint and create roles\n      */\n    function updateAppointer(address _appointer) external onlyOwner {\n        require(_appointer != address(0) && _appointer != appointer, \"Invalid operator address\");\n        appointer = _appointer;\n        emit NewAppointer(_appointer);\n    }\n\n\n}\n",
  "sourceMap": "359:18675:28:-:0;;;5885:814;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6000:5;6007:7;1459:5:10;:13;6000:5:28;1459::10;:13;:::i;:::-;-1:-1:-1;1483:7:10;:17;1493:7;1483;:17;:::i;:::-;;1392:116;;889:23:13;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;6056:5:28::1;6027:26:::0;:34;6106:1:::1;6072:31:::0;:35;6146:1:::1;6027:16;6118:29:::0;6229:6:::1;6186:40:::0;:49;6274:38;:54;;-1:-1:-1;;;;;;6274:54:28::1;-1:-1:-1::0;;;;;6274:54:28;::::1;;::::0;;6400:5:::1;6367:30:::0;:38;6426:29;:45:::1;6458:13:::0;6426:29;:45:::1;:::i;:::-;-1:-1:-1::0;;6523:1:28::1;6492:28:::0;:32;-1:-1:-1;;6572:1:28::1;6535:34:::0;:38;-1:-1:-1;6605:8:28::1;:21:::0;;6616:10:::1;-1:-1:-1::0;;;;;;6605:21:28;;::::1;::::0;::::1;::::0;;;6637:6:::1;:19:::0;;;::::1;::::0;::::1;::::0;;6667:9:::1;:22:::0;;;;::::1;::::0;;::::1;::::0;;359:18675;;599:98:7;679:10;;599:98::o;2101:173:13:-;2176:6;;;-1:-1:-1;;;;;2193:17:13;;;-1:-1:-1;;;;;;2193:17:13;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:127:29:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:29:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:29;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1680:2;1665:18;;1659:25;1564:73;;-1:-1:-1;1659:25:29;-1:-1:-1;;;;;;1713:31:29;;1703:42;;1693:70;;1759:1;1756;1749:12;1693:70;1833:2;1818:18;;1812:25;1782:5;;-1:-1:-1;1849:16:29;;;1846:36;;;1878:1;1875;1868:12;1846:36;;1901:63;1956:7;1945:8;1934:9;1930:24;1901:63;:::i;:::-;1891:73;;;1036:934;;;;;;;:::o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;2486:545::-;2588:2;2583:3;2580:11;2577:448;;;2624:1;2649:5;2645:2;2638:17;2694:4;2690:2;2680:19;2764:2;2752:10;2748:19;2745:1;2741:27;2735:4;2731:38;2800:4;2788:10;2785:20;2782:47;;;-1:-1:-1;2823:4:29;2782:47;2878:2;2873:3;2869:12;2866:1;2862:20;2856:4;2852:31;2842:41;;2933:82;2951:2;2944:5;2941:13;2933:82;;;2996:17;;;2977:1;2966:13;2933:82;;;2937:3;;;2577:448;2486:545;;;:::o;3207:1352::-;3327:10;;-1:-1:-1;;;;;3349:30:29;;3346:56;;;3382:18;;:::i;:::-;3411:97;3501:6;3461:38;3493:4;3487:11;3461:38;:::i;:::-;3455:4;3411:97;:::i;:::-;3563:4;;3627:2;3616:14;;3644:1;3639:663;;;;4346:1;4363:6;4360:89;;;-1:-1:-1;4415:19:29;;;4409:26;4360:89;-1:-1:-1;;3164:1:29;3160:11;;;3156:24;3152:29;3142:40;3188:1;3184:11;;;3139:57;4462:81;;3609:944;;3639:663;2433:1;2426:14;;;2470:4;2457:18;;-1:-1:-1;;3675:20:29;;;3793:236;3807:7;3804:1;3801:14;3793:236;;;3896:19;;;3890:26;3875:42;;3988:27;;;;3956:1;3944:14;;;;3823:19;;3793:236;;;3797:3;4057:6;4048:7;4045:19;4042:201;;;4118:19;;;4112:26;-1:-1:-1;;4201:1:29;4197:14;;;4213:3;4193:24;4189:37;4185:42;4170:58;4155:74;;4042:201;-1:-1:-1;;;;;4289:1:29;4273:14;;;4269:22;4256:36;;-1:-1:-1;3207:1352:29:o;:::-;359:18675:28;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}