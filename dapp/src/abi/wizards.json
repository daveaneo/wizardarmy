{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_won",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/interfaces/IERC165.sol",
    "12": "contracts/interfaces/IERC721.sol",
    "13": "contracts/interfaces/IERC721Enumerable.sol",
    "14": "contracts/interfaces/IERC721Metadata.sol",
    "18": "contracts/wizards.sol",
    "4": "contracts/helpers/Context.sol",
    "5": "contracts/helpers/ERC165.sol",
    "6": "contracts/helpers/ERC721.sol",
    "7": "contracts/helpers/ERC721Enumerable.sol",
    "8": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        4145
      ],
      "Context": [
        3780
      ],
      "ERC165": [
        3804
      ],
      "ERC721": [
        3728
      ],
      "ERC721Enumerable": [
        2753
      ],
      "IERC165": [
        2909
      ],
      "IERC721": [
        2414
      ],
      "IERC721Enumerable": [
        3759
      ],
      "IERC721Metadata": [
        3831
      ],
      "IERC721Receiver": [
        3849
      ],
      "Ownable": [
        2857
      ],
      "Strings": [
        4348
      ],
      "Wizards": [
        931
      ]
    },
    "id": 932,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 337,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:18"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 338,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 932,
        "sourceUnit": 2858,
        "src": "90:31:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 339,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 932,
        "sourceUnit": 2754,
        "src": "122:40:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 340,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2753,
              "src": "334:16:18"
            },
            "id": 341,
            "nodeType": "InheritanceSpecifier",
            "src": "334:16:18"
          },
          {
            "baseName": {
              "id": 342,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2857,
              "src": "352:7:18"
            },
            "id": 343,
            "nodeType": "InheritanceSpecifier",
            "src": "352:7:18"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 931,
        "linearizedBaseContracts": [
          931,
          2857,
          2753,
          3759,
          3728,
          3831,
          2414,
          3804,
          2909,
          3780
        ],
        "name": "Wizards",
        "nameLocation": "323:7:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 348,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "479:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 931,
            "src": "445:48:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 347,
              "keyType": {
                "id": 344,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "454:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "445:26:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 346,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 345,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 382,
                  "src": "465:5:18"
                },
                "referencedDeclaration": 382,
                "src": "465:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 350,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "514:7:18",
            "nodeType": "VariableDeclaration",
            "scope": 931,
            "src": "499:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 349,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 351,
              "nodeType": "StructuredDocumentation",
              "src": "523:36:18",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 353,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "579:8:18",
            "nodeType": "VariableDeclaration",
            "scope": 931,
            "src": "564:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 352,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "564:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 358,
            "members": [
              {
                "id": 354,
                "name": "FIRE",
                "nameLocation": "645:4:18",
                "nodeType": "EnumValue",
                "src": "645:4:18"
              },
              {
                "id": 355,
                "name": "WIND",
                "nameLocation": "651:4:18",
                "nodeType": "EnumValue",
                "src": "651:4:18"
              },
              {
                "id": 356,
                "name": "WATER",
                "nameLocation": "657:5:18",
                "nodeType": "EnumValue",
                "src": "657:5:18"
              },
              {
                "id": 357,
                "name": "EARTH",
                "nameLocation": "664:5:18",
                "nodeType": "EnumValue",
                "src": "664:5:18"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "636:7:18",
            "nodeType": "EnumDefinition",
            "src": "631:39:18"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 382,
            "members": [
              {
                "constant": false,
                "id": 360,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "746:2:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "738:10:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 359,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 362,
                "mutability": "mutable",
                "name": "mp",
                "nameLocation": "766:2:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "758:10:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 361,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "758:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 364,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "786:4:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "778:12:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 363,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "778:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 366,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "808:6:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "800:14:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 365,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "800:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 368,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "832:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "824:15:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 367,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "824:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 370,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "857:13:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "849:21:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 369,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "849:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 372,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "888:8:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "880:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 371,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "880:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 374,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "914:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "906:15:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 373,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "906:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 376,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "939:19:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "931:27:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 375,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "931:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 378,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "996:23:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "988:31:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 377,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "988:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 381,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1081:7:18",
                "nodeType": "VariableDeclaration",
                "scope": 382,
                "src": "1073:15:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$358",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 380,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 379,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 358,
                    "src": "1073:7:18"
                  },
                  "referencedDeclaration": 358,
                  "src": "1073:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$358",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "683:5:18",
            "nodeType": "StructDefinition",
            "scope": 931,
            "src": "676:419:18",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 393,
            "members": [
              {
                "constant": false,
                "id": 384,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1158:8:18",
                "nodeType": "VariableDeclaration",
                "scope": 393,
                "src": "1150:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 383,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1150:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 386,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1184:14:18",
                "nodeType": "VariableDeclaration",
                "scope": 393,
                "src": "1176:22:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 385,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1176:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 388,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1216:9:18",
                "nodeType": "VariableDeclaration",
                "scope": 393,
                "src": "1208:17:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 387,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1208:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 390,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1243:23:18",
                "nodeType": "VariableDeclaration",
                "scope": 393,
                "src": "1235:31:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 389,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1235:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 392,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1284:21:18",
                "nodeType": "VariableDeclaration",
                "scope": 393,
                "src": "1276:29:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 391,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1276:7:18",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1108:16:18",
            "nodeType": "StructDefinition",
            "scope": 931,
            "src": "1101:211:18",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 396,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1342:16:18",
            "nodeType": "VariableDeclaration",
            "scope": 931,
            "src": "1318:40:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 395,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 394,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 393,
                "src": "1318:16:18"
              },
              "referencedDeclaration": 393,
              "src": "1318:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$393_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 400,
            "name": "NewVerifier",
            "nameLocation": "1425:11:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1445:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "1437:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:17:18"
            },
            "src": "1419:35:18"
          },
          {
            "anonymous": false,
            "id": 404,
            "name": "NewBattler",
            "nameLocation": "1465:10:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1484:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "1476:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1475:18:18"
            },
            "src": "1459:35:18"
          },
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "1634:45:18",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1651:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 410,
                  "id": 412,
                  "nodeType": "Return",
                  "src": "1644:11:18"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "1585:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "1602:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "1594:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:19:18"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "1628:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1627:6:18"
            },
            "scope": 931,
            "src": "1576:103:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "1879:337:18",
              "statements": [
                {
                  "expression": {
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 427,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "1889:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "1889:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1918:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "1889:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:34:18"
                },
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 433,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "1933:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 386,
                      "src": "1933:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1967:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1933:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:35:18"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 439,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "1978:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 384,
                      "src": "1978:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2006:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "1978:29:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:29:18"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 445,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "2045:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 390,
                      "src": "2045:40:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2088:6:18",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "2045:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "2045:49:18"
                },
                {
                  "expression": {
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 451,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "2132:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 392,
                      "src": "2132:38:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 454,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "2173:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2132:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:49:18"
                }
              ]
            },
            "id": 458,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 423,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 416,
                    "src": "1863:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 424,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 418,
                    "src": "1870:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 425,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 422,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3728,
                  "src": "1856:6:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1856:22:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1808:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1794:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1829:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1815:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1846:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "1838:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1793:62:18"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:18"
            },
            "scope": 931,
            "src": "1782:434:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "2247:334:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 462,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2504,
                            "src": "2265:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2265:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 464,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "2281:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 388,
                          "src": "2281:26:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2265:42:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2257:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2257:69:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "2257:69:18"
                },
                {
                  "assignments": [
                    472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "2349:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 502,
                      "src": "2336:20:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$382_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 471,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 470,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 382,
                          "src": "2336:5:18"
                        },
                        "referencedDeclaration": 382,
                        "src": "2336:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2366:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "30",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2387:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 484,
                          "name": "ELEMENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2396:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ELEMENT_$358_$",
                            "typeString": "type(enum Wizards.ELEMENT)"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "FIRE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 354,
                        "src": "2396:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$358",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$358",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 473,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "2360:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$382_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:49:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$382_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2336:73:18"
                },
                {
                  "expression": {
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 488,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "2445:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 491,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 489,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2504,
                          "src": "2460:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2460:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2445:29:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$382_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 492,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "2477:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$382_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "2445:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$382_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:39:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2504:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2504:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 498,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2504,
                          "src": "2516:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2516:13:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 495,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3422,
                        3451
                      ],
                      "referencedDeclaration": 3422,
                      "src": "2494:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2494:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "2494:36:18"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2231:4:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:2:18"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2247:0:18"
            },
            "scope": 931,
            "src": "2222:359:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 543,
              "nodeType": "Block",
              "src": "2694:321:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 511,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "2720:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 510,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3056,
                            "src": "2712:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2712:17:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 513,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2733:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2733:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2712:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2745:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2704:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:57:18"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "2817:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 543,
                      "src": "2803:21:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 520,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 519,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 382,
                          "src": "2803:5:18"
                        },
                        "referencedDeclaration": 382,
                        "src": "2803:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "baseExpression": {
                      "id": 522,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "2827:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 524,
                    "indexExpression": {
                      "id": 523,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "2842:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2827:24:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$382_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2803:48:18"
                },
                {
                  "expression": {
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 526,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2861:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 376,
                      "src": "2861:27:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 529,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2891:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2891:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2861:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:45:18"
                },
                {
                  "expression": {
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 533,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2916:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "2916:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 536,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2950:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2950:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 538,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "2968:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$393_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 390,
                        "src": "2968:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2950:58:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2916:92:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:92:18"
                }
              ]
            },
            "documentation": {
              "id": 504,
              "nodeType": "StructuredDocumentation",
              "src": "2587:57:18",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "2658:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2675:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "2667:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:18:18"
            },
            "returnParameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2694:0:18"
            },
            "scope": 931,
            "src": "2649:366:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 623,
              "nodeType": "Block",
              "src": "3170:535:18",
              "statements": [
                {
                  "expression": {
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 559,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3180:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 561,
                        "indexExpression": {
                          "id": 560,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "3195:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3180:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 562,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 364,
                      "src": "3180:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 563,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "3216:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3180:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:40:18"
                },
                {
                  "expression": {
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 566,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3230:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 568,
                        "indexExpression": {
                          "id": 567,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "3245:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3230:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "losses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "3230:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 570,
                          "name": "_won",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "3268:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3274:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3268:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3282:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "3268:15:18",
                      "trueExpression": {
                        "hexValue": "31",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3278:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3230:53:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:53:18"
                },
                {
                  "expression": {
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 578,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3293:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 580,
                        "indexExpression": {
                          "id": 579,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "3308:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3293:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 370,
                      "src": "3293:41:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 582,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "3338:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3293:55:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:55:18"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 585,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3391:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 587,
                        "indexExpression": {
                          "id": 586,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "3406:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3391:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wins",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 364,
                      "src": "3391:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 589,
                          "name": "_won",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "3427:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3433:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3427:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "3427:15:18",
                      "trueExpression": {
                        "hexValue": "31",
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3437:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3391:51:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:51:18"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 597,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3452:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 599,
                        "indexExpression": {
                          "id": 598,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "3467:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3452:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "losses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "3452:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 601,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "3490:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3452:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:42:18"
                },
                {
                  "expression": {
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 604,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "3504:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 606,
                        "indexExpression": {
                          "id": 605,
                          "name": "_defenderId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "3519:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3504:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$382_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 370,
                      "src": "3504:41:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 608,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "3549:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3504:55:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:55:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 611,
                      "name": "_won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "3573:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3579:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3573:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 622,
                  "nodeType": "IfStatement",
                  "src": "3570:129:18",
                  "trueBody": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "3582:117:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 614,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "3596:14:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$382_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 616,
                              "indexExpression": {
                                "id": 615,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 548,
                                "src": "3611:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3596:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$382_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tokensClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 370,
                            "src": "3596:41:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 618,
                            "name": "_tokensWaged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 554,
                            "src": "3641:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3596:57:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 620,
                        "nodeType": "ExpressionStatement",
                        "src": "3596:57:18"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7539cc7f",
            "id": 624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 557,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 556,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 870,
                  "src": "3158:11:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3158:11:18"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "3030:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "3051:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3043:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3043:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "3072:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3064:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_won",
                  "nameLocation": "3093:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3085:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3085:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 552,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "3107:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3099:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "3135:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "3127:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3042:106:18"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3170:0:18"
            },
            "scope": 931,
            "src": "3021:684:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 632,
              "nodeType": "Block",
              "src": "3819:8:18",
              "statements": []
            },
            "documentation": {
              "id": 625,
              "nodeType": "StructuredDocumentation",
              "src": "3711:41:18",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 633,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "3766:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3785:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "3777:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3776:18:18"
            },
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 633,
                  "src": "3810:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3810:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3809:9:18"
            },
            "scope": 931,
            "src": "3757:70:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "3970:8:18",
              "statements": []
            },
            "documentation": {
              "id": 634,
              "nodeType": "StructuredDocumentation",
              "src": "3833:70:18",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "3917:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3939:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3931:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3931:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:18:18"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3964:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:6:18"
            },
            "scope": 931,
            "src": "3908:70:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "4112:7:18",
              "statements": []
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "3984:63:18",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "0c457ce4",
            "id": 651,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 647,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 843,
                  "src": "4099:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4099:12:18"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "4061:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4080:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "4072:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4072:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4071:18:18"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4112:0:18"
            },
            "scope": 931,
            "src": "4052:67:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "4268:7:18",
              "statements": []
            },
            "documentation": {
              "id": 652,
              "nodeType": "StructuredDocumentation",
              "src": "4125:85:18",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 656,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 858,
                  "src": "4248:10:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4248:10:18"
              }
            ],
            "name": "crush",
            "nameLocation": "4224:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4238:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "4230:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:18:18"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4268:0:18"
            },
            "scope": 931,
            "src": "4215:60:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3118
            ],
            "body": {
              "id": 680,
              "nodeType": "Block",
              "src": "4371:226:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 670,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "4397:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 669,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3366,
                          "src": "4389:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4389:17:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4408:49:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 668,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:77:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:77:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 676,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "4490:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "68747470733a2f2f73746174696330312e6e79742e636f6d2f696d616765732f323031392f30322f30352f776f726c642f30356567672f313578702d6567672d70726f6d6f2d73757065724a756d626f2d76322e6a7067",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4500:89:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e82cb2c901537654c52486ce538a33d79b9c78b43dbe917ea1f012d43cbbe3d8",
                          "typeString": "literal_string \"https://static01.nyt.com/images/2019/02/05/world/05egg/15xp-egg-promo-superJumbo-v2.jpg\""
                        },
                        "value": "https://static01.nyt.com/images/2019/02/05/world/05egg/15xp-egg-promo-superJumbo-v2.jpg"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e82cb2c901537654c52486ce538a33d79b9c78b43dbe917ea1f012d43cbbe3d8",
                          "typeString": "literal_string \"https://static01.nyt.com/images/2019/02/05/world/05egg/15xp-egg-promo-superJumbo-v2.jpg\""
                        }
                      ],
                      "id": 675,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "4475:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4475:115:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 667,
                  "id": 679,
                  "nodeType": "Return",
                  "src": "4468:122:18"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4291:8:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 664,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4338:8:18"
            },
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4308:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "4300:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:18:18"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 681,
                  "src": "4356:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4356:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4355:15:18"
            },
            "scope": 931,
            "src": "4282:315:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "4705:1015:18",
              "statements": [
                {
                  "assignments": [
                    691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 691,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "4783:8:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 749,
                      "src": "4769:22:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 690,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4769:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 712,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f726465722074686174206561726e73206d6f6e65792122",
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4831:57:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974cd0175d89c693234173b235a4406caca760a5356b4ee76144bc0ad07c77b2",
                              "typeString": "literal_string \"{\"description\": \"The NFT limit order that earns money!\"\""
                            },
                            "value": "{\"description\": \"The NFT limit order that earns money!\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77656275797468656469702e636f6d22",
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4902:45:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b71c6b2e607a5a6af79373102c5e038085e36c2c956fefc73237db2e06397f5d",
                              "typeString": "literal_string \", \"external_url\": \"https://webuythedip.com\"\""
                            },
                            "value": ", \"external_url\": \"https://webuythedip.com\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4961:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 699,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 685,
                            "src": "4990:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5000:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202242757954686544697022",
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5017:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2a1745bf61a1f7154f131f8199ce6227f7947c7892c57cf25623e9d3effc86c4",
                              "typeString": "literal_string \", \"name\": \"BuyTheDip\"\""
                            },
                            "value": ", \"name\": \"BuyTheDip\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022446970204c6576656c222c202276616c7565223a20",
                            "id": 702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5080:82:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f7f3ec77ad25ee73874021ada38919ac8bc7c634830ea0d546f9ac321f7bafcb",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "39",
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5193:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    }
                                  ],
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5185:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 704,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5185:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5185:10:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 703,
                              "name": "uint2str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 828,
                              "src": "5176:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5176:20:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5200:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_974cd0175d89c693234173b235a4406caca760a5356b4ee76144bc0ad07c77b2",
                              "typeString": "literal_string \"{\"description\": \"The NFT limit order that earns money!\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_b71c6b2e607a5a6af79373102c5e038085e36c2c956fefc73237db2e06397f5d",
                              "typeString": "literal_string \", \"external_url\": \"https://webuythedip.com\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_2a1745bf61a1f7154f131f8199ce6227f7947c7892c57cf25623e9d3effc86c4",
                              "typeString": "literal_string \", \"name\": \"BuyTheDip\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f7f3ec77ad25ee73874021ada38919ac8bc7c634830ea0d546f9ac321f7bafcb",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 694,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4801:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4801:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4801:413:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4794:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4794:6:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4794:421:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4769:446:18"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 713,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "5225:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 718,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "5260:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022537472696b65205072696365222c202276616c7565223a20",
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5282:70:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_818aace28f585c88eb18f0a9c82266d06529581a15b532cafedbbd6fe8407a65",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Strike Price\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"Strike Price\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "333333",
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5383:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_333_by_1",
                                        "typeString": "int_const 333"
                                      },
                                      "value": "333"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_333_by_1",
                                        "typeString": "int_const 333"
                                      }
                                    ],
                                    "id": 722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5375:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 721,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5375:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5375:12:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 720,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 828,
                                "src": "5366:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5366:22:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5392:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022555344432042616c616e6365222c202276616c7565223a20",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5410:70:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f63f61c2cd3722309493b538b8d1378d314e0695200f8a2e9a276f053ef6a54",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"USDC Balance\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"USDC Balance\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313131",
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5511:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_111_by_1",
                                        "typeString": "int_const 111"
                                      },
                                      "value": "111"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_111_by_1",
                                        "typeString": "int_const 111"
                                      }
                                    ],
                                    "id": 730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5503:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 729,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5503:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5503:12:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 728,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 828,
                                "src": "5494:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5494:22:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5520:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022456e65726779222c202276616c7565223a20",
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5542:64:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_afde64c750765ad03d897027a756a01920dbef5cb41aa94e51950ed9c24fb299",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Energy\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"Energy\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "323232",
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5637:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_222_by_1",
                                        "typeString": "int_const 222"
                                      },
                                      "value": "222"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_222_by_1",
                                        "typeString": "int_const 222"
                                      }
                                    ],
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5629:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 737,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5629:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5629:12:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 736,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 828,
                                "src": "5620:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5620:22:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5646:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "5d",
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5664:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5699:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_818aace28f585c88eb18f0a9c82266d06529581a15b532cafedbbd6fe8407a65",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Strike Price\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f63f61c2cd3722309493b538b8d1378d314e0695200f8a2e9a276f053ef6a54",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"USDC Balance\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_afde64c750765ad03d897027a756a01920dbef5cb41aa94e51950ed9c24fb299",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Energy\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 716,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5243:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "5243:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5243:469:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5236:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5236:6:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5236:477:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5225:488:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "5225:488:18"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "4612:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4635:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4627:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "4659:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4645:22:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:42:18"
            },
            "returnParameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4690:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4689:15:18"
            },
            "scope": 931,
            "src": "4603:1117:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "5805:388:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 757,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "5819:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5825:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5819:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "nodeType": "IfStatement",
                  "src": "5815:48:18",
                  "trueBody": {
                    "id": 762,
                    "nodeType": "Block",
                    "src": "5828:35:18",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5849:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 756,
                        "id": 761,
                        "nodeType": "Return",
                        "src": "5842:10:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 765,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "5877:1:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 827,
                      "src": "5872:6:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5872:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 767,
                  "initialValue": {
                    "id": 766,
                    "name": "_i",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 752,
                    "src": "5881:2:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5872:11:18"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "5898:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 827,
                      "src": "5893:8:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5893:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 770,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5893:8:18"
                },
                {
                  "body": {
                    "id": 781,
                    "nodeType": "Block",
                    "src": "5926:51:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5940:5:18",
                          "subExpression": {
                            "id": 774,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "5940:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 776,
                        "nodeType": "ExpressionStatement",
                        "src": "5940:5:18"
                      },
                      {
                        "expression": {
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 777,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "5959:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5964:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "5959:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 780,
                        "nodeType": "ExpressionStatement",
                        "src": "5959:7:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 771,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "5918:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5923:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5918:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "WhileStatement",
                  "src": "5911:66:18"
                },
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "bstr",
                      "nameLocation": "5999:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 827,
                      "src": "5986:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5986:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 789,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 787,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "6016:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6006:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 785,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6010:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6006:14:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5986:34:18"
                },
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "k",
                      "nameLocation": "6035:1:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 827,
                      "src": "6030:6:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 790,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6030:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 795,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 792,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "6039:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6045:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6039:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6030:16:18"
                },
                {
                  "body": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "6072:86:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 799,
                              "name": "bstr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "6086:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 802,
                            "indexExpression": {
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": false,
                              "src": "6091:3:18",
                              "subExpression": {
                                "id": 800,
                                "name": "k",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "6091:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6086:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 811,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 807,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6111:2:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 810,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 808,
                                        "name": "_i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 752,
                                        "src": "6116:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "%",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 809,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6121:2:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "6116:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6111:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6105:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 805,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6105:5:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6105:19:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6098:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 803,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "6098:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6098:27:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "6086:39:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 815,
                        "nodeType": "ExpressionStatement",
                        "src": "6086:39:18"
                      },
                      {
                        "expression": {
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 816,
                            "name": "_i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 752,
                            "src": "6139:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6145:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "6139:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "6139:8:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 796,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 752,
                      "src": "6063:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6069:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6063:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 821,
                  "nodeType": "WhileStatement",
                  "src": "6056:102:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 824,
                        "name": "bstr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "6181:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6174:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 822,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6174:6:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6174:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 756,
                  "id": 826,
                  "nodeType": "Return",
                  "src": "6167:19:18"
                }
              ]
            },
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uint2str",
            "nameLocation": "5735:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "5749:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5744:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5743:9:18"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "_uintAsString",
                  "nameLocation": "5790:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5776:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5776:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:29:18"
            },
            "scope": 931,
            "src": "5726:467:18",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "6321:138:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 831,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6339:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6339:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 835,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6361:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$931",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$931",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6353:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 833,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6353:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6353:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6339:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6368:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6331:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6331:53:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:53:18"
                },
                {
                  "id": 841,
                  "nodeType": "PlaceholderStatement",
                  "src": "6451:1:18"
                }
              ]
            },
            "id": 843,
            "name": "onlyVerifier",
            "nameLocation": "6306:12:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6318:2:18"
            },
            "src": "6297:162:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "6487:138:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 846,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6505:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6505:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 850,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6527:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$931",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$931",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6519:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 848,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6519:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6519:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6505:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6534:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6497:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6497:53:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "6497:53:18"
                },
                {
                  "id": 856,
                  "nodeType": "PlaceholderStatement",
                  "src": "6617:1:18"
                }
              ]
            },
            "id": 858,
            "name": "onlyHolder",
            "nameLocation": "6474:10:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6484:2:18"
            },
            "src": "6465:160:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "6654:132:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 861,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6685:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6685:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 863,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6699:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6685:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6720:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6664:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6664:104:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "6664:104:18"
                },
                {
                  "id": 868,
                  "nodeType": "PlaceholderStatement",
                  "src": "6778:1:18"
                }
              ]
            },
            "id": 870,
            "name": "onlyBattler",
            "nameLocation": "6640:11:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6651:2:18"
            },
            "src": "6631:155:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "6945:162:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "6963:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6983:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6975:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6975:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6975:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6963:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 884,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "6989:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 885,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "7001:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6989:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6963:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7010:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6955:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6955:82:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "6955:82:18"
                },
                {
                  "expression": {
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 891,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "7047:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 892,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "7057:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7047:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 894,
                  "nodeType": "ExpressionStatement",
                  "src": "7047:18:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 896,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "7091:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 895,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "7080:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7080:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 898,
                  "nodeType": "EmitStatement",
                  "src": "7075:25:18"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 875,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 874,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2800,
                  "src": "6935:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6935:9:18"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "6894:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "6916:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "6908:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6908:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6907:18:18"
            },
            "returnParameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6945:0:18"
            },
            "scope": 931,
            "src": "6885:222:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 929,
              "nodeType": "Block",
              "src": "7175:169:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 908,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "7193:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7214:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7206:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 909,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7206:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7206:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7193:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 914,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "7220:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 915,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "7233:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7220:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7193:48:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7243:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7185:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7185:85:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:85:18"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 921,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "7280:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 922,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 902,
                      "src": "7291:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7280:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "7280:20:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 926,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "7327:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 925,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "7315:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7315:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 928,
                  "nodeType": "EmitStatement",
                  "src": "7310:27:18"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 930,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 904,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2800,
                  "src": "7165:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7165:9:18"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "7122:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "7145:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "7137:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7137:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7136:19:18"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7175:0:18"
            },
            "scope": 931,
            "src": "7113:231:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 932,
        "src": "314:7033:18",
        "usedErrors": []
      }
    ],
    "src": "32:7315:18"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620029f5380380620029f5833981016040819052620000349162000289565b8251839083906200004d90600090602085019062000116565b5080516200006390600190602084019062000116565b505050620000806200007a620000c060201b60201c565b620000c4565b6127106010556001600f556005600e5562015180601155601280546001600160a01b0319166001600160a01b039290921691909117905550620003539050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001249062000316565b90600052602060002090601f01602090048101928262000148576000855562000193565b82601f106200016357805160ff191683800117855562000193565b8280016001018555821562000193579182015b828111156200019357825182559160200191906001019062000176565b50620001a1929150620001a5565b5090565b5b80821115620001a15760008155600101620001a6565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e457600080fd5b81516001600160401b0380821115620002015762000201620001bc565b604051601f8301601f19908116603f011681019082821181831017156200022c576200022c620001bc565b816040528381526020925086838588010111156200024957600080fd5b600091505b838210156200026d57858201830151818301840152908201906200024e565b838211156200027f5760008385830101525b9695505050505050565b6000806000606084860312156200029f57600080fd5b83516001600160401b0380821115620002b757600080fd5b620002c587838801620001d2565b94506020860151915080821115620002dc57600080fd5b50620002eb86828701620001d2565b604086015190935090506001600160a01b03811681146200030b57600080fd5b809150509250925092565b600181811c908216806200032b57607f821691505b602082108114156200034d57634e487b7160e01b600052602260045260246000fd5b50919050565b61269280620003636000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461042d578063db2a0a55146104ae578063e52e324914610502578063e985e9c514610515578063f2fde38b1461055157600080fd5b8063a22cb465146103e1578063b88d4fde146103f4578063bc0b0d8814610407578063c87b56dd1461041a57600080fd5b806382afd23b116100e957806382afd23b146103a15780638da5cb5b146103b557806395d89b41146103c657806397fc007c146103ce57600080fd5b806370a0823114610360578063715018a6146103735780637539cc7f1461037b5780637901ea781461038e57600080fd5b80631249c58b1161019d5780632f745c591161016c5780632f745c591461031457806342842e0e14610327578063437454b9146102cb5780634f6ccce71461033a5780636352211e1461034d57600080fd5b80631249c58b146102de57806318160ddd146102e657806323b872dd146102ee5780632b7ac3f31461030157600080fd5b8063081812fc116101d9578063081812fc1461027d578063095ea7b3146102a85780630a363d08146102bd5780630c457ce4146102cb57600080fd5b806301ffc9a71461020b5780630419e31414610233578063051063531461025357806306fdde0314610275575b600080fd5b61021e610219366004611cdc565b610564565b60405190151581526020015b60405180910390f35b610246610241366004611d8c565b61058f565b60405161022a9190611e3f565b610267610261366004611e52565b50600090565b60405190815260200161022a565b610246610608565b61029061028b366004611e52565b61069a565b6040516001600160a01b03909116815260200161022a565b6102bb6102b6366004611e87565b610734565b005b61021e610261366004611e52565b6102bb6102d9366004611e52565b61084a565b6102bb61088d565b600854610267565b6102bb6102fc366004611eb1565b610a03565b600d54610290906001600160a01b031681565b610267610322366004611e87565b610a34565b6102bb610335366004611eb1565b610aca565b610267610348366004611e52565b610ae5565b61029061035b366004611e52565b610b78565b61026761036e366004611eed565b610bef565b6102bb610c76565b6102bb610389366004611f08565b610cac565b6102bb61039c366004611e52565b610e57565b61021e6103af366004611e52565b50600190565b600a546001600160a01b0316610290565b610246610ed2565b6102bb6103dc366004611eed565b610ee1565b6102bb6103ef366004611f43565b610fcd565b6102bb610402366004611f7f565b611092565b600c54610290906001600160a01b031681565b610246610428366004611e52565b6110ca565b61049761043b366004611e52565b600b60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a909a01549899979896979596949593949293919290919060ff168b565b60405161022a9b9a99989796959493929190612011565b600e54600f546010546011546012546104d194939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00161022a565b6102bb610510366004611eed565b61116b565b61021e61052336600461208a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102bb61055f366004611eed565b611250565b60006001600160e01b0319821663780e9d6360e01b14806105895750610589826112e8565b92915050565b606060008261059e6009611338565b6040516020016105af9291906120d9565b6040516020818303038152906040529050806105cc61014d611338565b6105d6606f611338565b6105e060de611338565b6040516020016105f3949392919061223e565b60408051601f19818403019052525092915050565b606060008054610617906123b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610643906123b7565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107185760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061073f82610b78565b9050806001600160a01b0316836001600160a01b031614156107ad5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161070f565b336001600160a01b03821614806107c957506107c98133610523565b61083b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161070f565b610845838361144c565b505050565b3330141561088a5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b604482015260640161070f565b50565b601054600854106108d15760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b604482015260640161070f565b6000604051806101600160405280600181526020016002815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000600381111561093857610938611ffb565b9052905080600b600061094a60085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a81548160ff021916908360038111156109e9576109e9611ffb565b021790555090505061088a336109fe60085490565b6114ba565b610a0d33826114d8565b610a295760405162461bcd60e51b815260040161070f906123f2565b6108458383836115cf565b6000610a3f83610bef565b8210610aa15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161070f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61084583838360405180602001604052806000815250611092565b6000610af060085490565b8210610b535760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161070f565b60088281548110610b6657610b66612443565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105895760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161070f565b60006001600160a01b038216610c5a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161070f565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610ca05760405162461bcd60e51b815260040161070f90612459565b610caa600061177a565b565b600c546001600160a01b03163314610d125760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b606482015260840161070f565b6000858152600b602052604081206002018054859290610d339084906124a4565b90915550508215610d45576000610d48565b60015b60ff16600b60008781526020019081526020016000206003016000828254610d7091906124a4565b90915550506000858152600b602052604081206005018054849290610d969084906124a4565b90915550508215610da8576000610dab565b60015b60ff16600b60008681526020019081526020016000206002016000828254610dd391906124a4565b90915550506000848152600b602052604081206003018054859290610df99084906124a4565b90915550506000848152600b602052604081206005018054849290610e1f9084906124a4565b909155505082610e50576000848152600b602052604081206005018054839290610e4a9084906124a4565b90915550505b5050505050565b33610e6182610b78565b6001600160a01b031614610ea75760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b604482015260640161070f565b6000818152600b602052604090204260088201819055601154610ec9916124a4565b60099091015550565b606060018054610617906123b7565b600a546001600160a01b03163314610f0b5760405162461bcd60e51b815260040161070f90612459565b6001600160a01b03811615801590610f315750600d546001600160a01b03828116911614155b610f785760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161070f565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b6001600160a01b0382163314156110265760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161070f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61109c33836114d8565b6110b85760405162461bcd60e51b815260040161070f906123f2565b6110c4848484846117cc565b50505050565b6000818152600260205260409020546060906001600160a01b03166111495760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161070f565b610589826040518060800160405280605781526020016126066057913961058f565b600a546001600160a01b031633146111955760405162461bcd60e51b815260040161070f90612459565b6001600160a01b038116158015906111bb5750600c546001600160a01b03828116911614155b6112025760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161070f565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a490602001610fc2565b600a546001600160a01b0316331461127a5760405162461bcd60e51b815260040161070f90612459565b6001600160a01b0381166112df5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161070f565b61088a8161177a565b60006001600160e01b031982166380ac58cd60e01b148061131957506001600160e01b03198216635b5e139f60e01b145b8061058957506301ffc9a760e01b6001600160e01b0319831614610589565b60608161135c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113865780611370816124bc565b915061137f9050600a836124ed565b9150611360565b60008167ffffffffffffffff8111156113a1576113a1611d00565b6040519080825280601f01601f1916602001820160405280156113cb576020820181803683370190505b50905060006113db600184612501565b90505b8515611443576113ef600a87612518565b6113fa9060306124a4565b60f81b82826114088161252c565b93508151811061141a5761141a612443565b60200101906001600160f81b031916908160001a90535061143c600a876124ed565b95506113de565b50949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061148182610b78565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6114d48282604051806020016040528060008152506117ff565b5050565b6000818152600260205260408120546001600160a01b03166115515760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161070f565b600061155c83610b78565b9050806001600160a01b0316846001600160a01b031614806115975750836001600160a01b031661158c8461069a565b6001600160a01b0316145b806115c757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166115e282610b78565b6001600160a01b03161461164a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161070f565b6001600160a01b0382166116ac5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161070f565b6116b7838383611832565b6116c260008261144c565b6001600160a01b03831660009081526003602052604081208054600192906116eb908490612501565b90915550506001600160a01b03821660009081526003602052604081208054600192906117199084906124a4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117d78484846115cf565b6117e3848484846118ea565b6110c45760405162461bcd60e51b815260040161070f90612543565b61180983836119e8565b61181660008484846118ea565b6108455760405162461bcd60e51b815260040161070f90612543565b6001600160a01b03831661188d5761188881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118b0565b816001600160a01b0316836001600160a01b0316146118b0576118b08382611b36565b6001600160a01b0382166118c75761084581611bd3565b826001600160a01b0316826001600160a01b031614610845576108458282611c82565b60006001600160a01b0384163b156119dd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061192e903390899088908890600401612595565b6020604051808303816000875af1925050508015611969575060408051601f3d908101601f19168201909252611966918101906125d2565b60015b6119c3573d808015611997576040519150601f19603f3d011682016040523d82523d6000602084013e61199c565b606091505b5080516119bb5760405162461bcd60e51b815260040161070f90612543565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115c7565b506001949350505050565b6001600160a01b038216611a3e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161070f565b6000818152600260205260409020546001600160a01b031615611aa35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161070f565b611aaf60008383611832565b6001600160a01b0382166000908152600360205260408120805460019290611ad89084906124a4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611b4384610bef565b611b4d9190612501565b600083815260076020526040902054909150808214611ba0576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611be590600190612501565b60008381526009602052604081205460088054939450909284908110611c0d57611c0d612443565b906000526020600020015490508060088381548110611c2e57611c2e612443565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c6657611c666125ef565b6001900381819060005260206000200160009055905550505050565b6000611c8d83610bef565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461088a57600080fd5b600060208284031215611cee57600080fd5b8135611cf981611cc6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d3157611d31611d00565b604051601f8501601f19908116603f01168101908282118183101715611d5957611d59611d00565b81604052809350858152868686011115611d7257600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d9f57600080fd5b82359150602083013567ffffffffffffffff811115611dbd57600080fd5b8301601f81018513611dce57600080fd5b611ddd85823560208401611d16565b9150509250929050565b60005b83811015611e02578181015183820152602001611dea565b838111156110c45750506000910152565b60008151808452611e2b816020860160208601611de7565b601f01601f19169290920160200192915050565b602081526000611cf96020830184611e13565b600060208284031215611e6457600080fd5b5035919050565b80356001600160a01b0381168114611e8257600080fd5b919050565b60008060408385031215611e9a57600080fd5b611ea383611e6b565b946020939093013593505050565b600080600060608486031215611ec657600080fd5b611ecf84611e6b565b9250611edd60208501611e6b565b9150604084013590509250925092565b600060208284031215611eff57600080fd5b611cf982611e6b565b600080600080600060a08688031215611f2057600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215611f5657600080fd5b611f5f83611e6b565b915060208301358015158114611f7457600080fd5b809150509250929050565b60008060008060808587031215611f9557600080fd5b611f9e85611e6b565b9350611fac60208601611e6b565b925060408501359150606085013567ffffffffffffffff811115611fcf57600080fd5b8501601f81018713611fe057600080fd5b611fef87823560208401611d16565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b6000610160820190508c82528b60208301528a60408301528960608301528860808301528760a08301528660c08301528560e083015284610100830152836101208301526004831061207357634e487b7160e01b600052602160045260246000fd5b826101408301529c9b505050505050505050505050565b6000806040838503121561209d57600080fd5b6120a683611e6b565b91506120b460208401611e6b565b90509250929050565b600081516120cf818560208601611de7565b9290920192915050565b7f7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f81527f726465722074686174206561726e73206d6f6e6579212200000000000000000060208201527f2c202265787465726e616c5f75726c223a202268747470733a2f2f776562757960378201526a3a3432b234b81731b7b69160a91b60578201526b16101134b6b0b3b2911d101160a11b60628201526000835161218681606e850160208801611de7565b601160f91b606e91840191820152741610113730b6b2911d1011213abcaa3432a234b81160591b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260848201527f3a20226e756d626572222c202274726169745f74797065223a2022446970204c60a48201526f032bb32b6111610113b30b63ab2911d160851b60c482015261223561222760d48301866120bd565b61207d60f01b815260020190565b95945050505050565b60008551612250818460208a01611de7565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a2022537472696b65205072696365222c202276616c75602083015263032911d160e51b80604084015287516122c0816044860160208c01611de7565b61207d60f01b6044949091019384015260468301919091527f6169745f74797065223a2022555344432042616c616e6365222c202276616c7560668301526086820152845161231681608a840160208901611de7565b6123ab61239e61239161222761238b61233c608a8789010161207d60f01b815260020190565b7f2c207b22646973706c61795f74797065223a20226e756d626572222c2022747281527f6169745f74797065223a2022456e65726779222c202276616c7565223a2000006020820152603e0190565b896120bd565b605d60f81b815260010190565b607d60f81b815260010190565b98975050505050505050565b600181811c908216806123cb57607f821691505b602082108114156123ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156124b7576124b761248e565b500190565b60006000198214156124d0576124d061248e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826124fc576124fc6124d7565b500490565b6000828210156125135761251361248e565b500390565b600082612527576125276124d7565b500690565b60008161253b5761253b61248e565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906125c890830184611e13565b9695505050505050565b6000602082840312156125e457600080fd5b8151611cf981611cc6565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f73746174696330312e6e79742e636f6d2f696d616765732f323031392f30322f30352f776f726c642f30356567672f313578702d6567672d70726f6d6f2d73757065724a756d626f2d76322e6a7067a26469706673582212204c5518570c87fff0a4cd72b15dd31fa32303dbec79e2e1ebcf416318ede95f9164736f6c634300080c0033",
  "bytecodeSha1": "ce9287e44c69f98e052d591edfbfedbbd69d12bb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "10": {},
      "12": {},
      "13": {},
      "14": {},
      "18": {
        "Wizards.initiate": {
          "111": [
            2712,
            2743,
            true
          ]
        },
        "Wizards.mint": {
          "107": [
            2265,
            2307,
            true
          ]
        },
        "Wizards.reportBattle": {
          "108": [
            3268,
            3275,
            true
          ],
          "109": [
            3427,
            3434,
            true
          ],
          "110": [
            3573,
            3580,
            false
          ]
        },
        "Wizards.uint2str": {
          "116": [
            5819,
            5826,
            false
          ]
        },
        "Wizards.updateBattler": {
          "114": [
            6963,
            6985,
            false
          ],
          "115": [
            6989,
            7008,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "112": [
            7193,
            7216,
            false
          ],
          "113": [
            7220,
            7241,
            true
          ]
        },
        "Wizards.verifyDuty": {
          "106": [
            6339,
            6366,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {
        "ERC721._mint": {
          "129": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "128": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "127": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "125": [
            10896,
            10927,
            true
          ],
          "126": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "117": [
            3746,
            3757,
            true
          ],
          "118": [
            3830,
            3851,
            true
          ],
          "119": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "122": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.ownerOf": {
          "121": [
            2362,
            2381,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "124": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "123": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "120": [
            5169,
            5210,
            true
          ]
        }
      },
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "132": [
            2870,
            2888,
            false
          ],
          "133": [
            2967,
            2977,
            false
          ],
          "134": [
            3067,
            3083,
            false
          ],
          "135": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "136": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "131": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "130": [
            1421,
            1452,
            true
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "137": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {},
      "12": {},
      "13": {},
      "14": {},
      "18": {
        "Wizards.formatTokenURI": {
          "5": [
            5225,
            5713
          ]
        },
        "Wizards.initiate": {
          "35": [
            2704,
            2761
          ],
          "36": [
            2861,
            2906
          ],
          "37": [
            2916,
            3008
          ]
        },
        "Wizards.isActive": {
          "1": [
            1644,
            1655
          ]
        },
        "Wizards.mint": {
          "14": [
            2257,
            2326
          ],
          "15": [
            2445,
            2484
          ],
          "16": [
            2494,
            2530
          ]
        },
        "Wizards.reportBattle": {
          "28": [
            3180,
            3220
          ],
          "29": [
            3230,
            3283
          ],
          "30": [
            3293,
            3348
          ],
          "31": [
            3391,
            3442
          ],
          "32": [
            3452,
            3494
          ],
          "33": [
            3504,
            3559
          ],
          "34": [
            3596,
            3653
          ]
        },
        "Wizards.tokenURI": {
          "47": [
            4381,
            4458
          ],
          "48": [
            4468,
            4590
          ]
        },
        "Wizards.uint2str": {
          "56": [
            5842,
            5852
          ],
          "57": [
            5940,
            5945
          ],
          "58": [
            5959,
            5966
          ],
          "59": [
            6086,
            6125
          ],
          "60": [
            6139,
            6147
          ],
          "61": [
            6167,
            6186
          ]
        },
        "Wizards.updateBattler": {
          "49": [
            6955,
            7037
          ],
          "50": [
            7047,
            7065
          ],
          "51": [
            7075,
            7100
          ]
        },
        "Wizards.updateVerifier": {
          "39": [
            7185,
            7270
          ],
          "40": [
            7280,
            7300
          ],
          "41": [
            7310,
            7337
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "11": [
            672,
            689
          ]
        }
      },
      "5": {
        "ERC165.supportsInterface": {
          "55": [
            901,
            948
          ]
        }
      },
      "6": {
        "ERC721._approve": {
          "62": [
            11535,
            11564
          ],
          "63": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "87": [
            12700,
            12760
          ],
          "88": [
            12527,
            12589
          ],
          "89": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "7": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "65": [
            7882,
            7955
          ],
          "66": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "90": [
            9528,
            9589
          ],
          "91": [
            9600,
            9658
          ],
          "92": [
            9671,
            9716
          ],
          "93": [
            9729,
            9747
          ],
          "94": [
            9758,
            9779
          ],
          "95": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "64": [
            8538,
            8564
          ],
          "79": [
            8929,
            8947
          ],
          "80": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "77": [
            7007,
            7035
          ],
          "78": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "67": [
            10888,
            10973
          ],
          "68": [
            10984,
            11049
          ],
          "69": [
            11062,
            11101
          ],
          "70": [
            11166,
            11195
          ],
          "71": [
            11208,
            11228
          ],
          "72": [
            11239,
            11257
          ],
          "73": [
            11268,
            11289
          ],
          "74": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "10": [
            3738,
            3795
          ],
          "12": [
            3808,
            3976
          ],
          "13": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "25": [
            2041,
            2115
          ],
          "26": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "8": [
            4180,
            4253
          ],
          "9": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "6": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "24": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "21": [
            5522,
            5561
          ],
          "45": [
            5807,
            5910
          ],
          "46": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "42": [
            4472,
            4534
          ],
          "43": [
            4547,
            4600
          ],
          "44": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "54": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "38": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            5161,
            5264
          ],
          "18": [
            5277,
            5305
          ]
        }
      },
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "82": [
            4053,
            4097
          ],
          "83": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "104": [
            3687,
            3721
          ],
          "105": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "81": [
            2905,
            2945
          ],
          "84": [
            2994,
            3041
          ],
          "85": [
            3100,
            3145
          ],
          "86": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "100": [
            6793,
            6829
          ],
          "101": [
            6898,
            6939
          ],
          "102": [
            7063,
            7094
          ],
          "103": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "96": [
            5367,
            5411
          ],
          "97": [
            5484,
            5527
          ],
          "98": [
            5662,
            5695
          ],
          "99": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "22": [
            1913,
            2008
          ],
          "23": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "19": [
            1413,
            1500
          ],
          "20": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "8": {
        "Ownable._setOwner": {
          "75": [
            2193,
            2210
          ],
          "76": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "27": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "52": [
            1982,
            2055
          ],
          "53": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a22cb465116100ad578063c87bfc7f1161007c578063c87bfc7f1461042d578063db2a0a55146104ae578063e52e324914610502578063e985e9c514610515578063f2fde38b1461055157600080fd5b8063a22cb465146103e1578063b88d4fde146103f4578063bc0b0d8814610407578063c87b56dd1461041a57600080fd5b806382afd23b116100e957806382afd23b146103a15780638da5cb5b146103b557806395d89b41146103c657806397fc007c146103ce57600080fd5b806370a0823114610360578063715018a6146103735780637539cc7f1461037b5780637901ea781461038e57600080fd5b80631249c58b1161019d5780632f745c591161016c5780632f745c591461031457806342842e0e14610327578063437454b9146102cb5780634f6ccce71461033a5780636352211e1461034d57600080fd5b80631249c58b146102de57806318160ddd146102e657806323b872dd146102ee5780632b7ac3f31461030157600080fd5b8063081812fc116101d9578063081812fc1461027d578063095ea7b3146102a85780630a363d08146102bd5780630c457ce4146102cb57600080fd5b806301ffc9a71461020b5780630419e31414610233578063051063531461025357806306fdde0314610275575b600080fd5b61021e610219366004611cdc565b610564565b60405190151581526020015b60405180910390f35b610246610241366004611d8c565b61058f565b60405161022a9190611e3f565b610267610261366004611e52565b50600090565b60405190815260200161022a565b610246610608565b61029061028b366004611e52565b61069a565b6040516001600160a01b03909116815260200161022a565b6102bb6102b6366004611e87565b610734565b005b61021e610261366004611e52565b6102bb6102d9366004611e52565b61084a565b6102bb61088d565b600854610267565b6102bb6102fc366004611eb1565b610a03565b600d54610290906001600160a01b031681565b610267610322366004611e87565b610a34565b6102bb610335366004611eb1565b610aca565b610267610348366004611e52565b610ae5565b61029061035b366004611e52565b610b78565b61026761036e366004611eed565b610bef565b6102bb610c76565b6102bb610389366004611f08565b610cac565b6102bb61039c366004611e52565b610e57565b61021e6103af366004611e52565b50600190565b600a546001600160a01b0316610290565b610246610ed2565b6102bb6103dc366004611eed565b610ee1565b6102bb6103ef366004611f43565b610fcd565b6102bb610402366004611f7f565b611092565b600c54610290906001600160a01b031681565b610246610428366004611e52565b6110ca565b61049761043b366004611e52565b600b60205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a909a01549899979896979596949593949293919290919060ff168b565b60405161022a9b9a99989796959493929190612011565b600e54600f546010546011546012546104d194939291906001600160a01b031685565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00161022a565b6102bb610510366004611eed565b61116b565b61021e61052336600461208a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102bb61055f366004611eed565b611250565b60006001600160e01b0319821663780e9d6360e01b14806105895750610589826112e8565b92915050565b606060008261059e6009611338565b6040516020016105af9291906120d9565b6040516020818303038152906040529050806105cc61014d611338565b6105d6606f611338565b6105e060de611338565b6040516020016105f3949392919061223e565b60408051601f19818403019052525092915050565b606060008054610617906123b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610643906123b7565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107185760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061073f82610b78565b9050806001600160a01b0316836001600160a01b031614156107ad5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161070f565b336001600160a01b03821614806107c957506107c98133610523565b61083b5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161070f565b610845838361144c565b505050565b3330141561088a5760405162461bcd60e51b815260206004820152600d60248201526c37b7363c903b32b934b334b2b960991b604482015260640161070f565b50565b601054600854106108d15760405162461bcd60e51b815260206004820152600e60248201526d30ba1036b0bc1039bab838363c9760911b604482015260640161070f565b6000604051806101600160405280600181526020016002815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000600381111561093857610938611ffb565b9052905080600b600061094a60085490565b8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a81548160ff021916908360038111156109e9576109e9611ffb565b021790555090505061088a336109fe60085490565b6114ba565b610a0d33826114d8565b610a295760405162461bcd60e51b815260040161070f906123f2565b6108458383836115cf565b6000610a3f83610bef565b8210610aa15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161070f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61084583838360405180602001604052806000815250611092565b6000610af060085490565b8210610b535760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161070f565b60088281548110610b6657610b66612443565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806105895760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161070f565b60006001600160a01b038216610c5a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161070f565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610ca05760405162461bcd60e51b815260040161070f90612459565b610caa600061177a565b565b600c546001600160a01b03163314610d125760405162461bcd60e51b8152602060048201526024808201527f4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e637460448201526334b7b71760e11b606482015260840161070f565b6000858152600b602052604081206002018054859290610d339084906124a4565b90915550508215610d45576000610d48565b60015b60ff16600b60008781526020019081526020016000206003016000828254610d7091906124a4565b90915550506000858152600b602052604081206005018054849290610d969084906124a4565b90915550508215610da8576000610dab565b60015b60ff16600b60008681526020019081526020016000206002016000828254610dd391906124a4565b90915550506000848152600b602052604081206003018054859290610df99084906124a4565b90915550506000848152600b602052604081206005018054849290610e1f9084906124a4565b909155505082610e50576000848152600b602052604081206005018054839290610e4a9084906124a4565b90915550505b5050505050565b33610e6182610b78565b6001600160a01b031614610ea75760405162461bcd60e51b815260206004820152600d60248201526c36bab9ba1031329037bbb732b960991b604482015260640161070f565b6000818152600b602052604090204260088201819055601154610ec9916124a4565b60099091015550565b606060018054610617906123b7565b600a546001600160a01b03163314610f0b5760405162461bcd60e51b815260040161070f90612459565b6001600160a01b03811615801590610f315750600d546001600160a01b03828116911614155b610f785760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161070f565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5906020015b60405180910390a150565b6001600160a01b0382163314156110265760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161070f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61109c33836114d8565b6110b85760405162461bcd60e51b815260040161070f906123f2565b6110c4848484846117cc565b50505050565b6000818152600260205260409020546060906001600160a01b03166111495760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161070f565b610589826040518060800160405280605781526020016126066057913961058f565b600a546001600160a01b031633146111955760405162461bcd60e51b815260040161070f90612459565b6001600160a01b038116158015906111bb5750600c546001600160a01b03828116911614155b6112025760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f70657261746f72206164647265737360401b604482015260640161070f565b600c80546001600160a01b0319166001600160a01b0383169081179091556040519081527fa6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a490602001610fc2565b600a546001600160a01b0316331461127a5760405162461bcd60e51b815260040161070f90612459565b6001600160a01b0381166112df5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161070f565b61088a8161177a565b60006001600160e01b031982166380ac58cd60e01b148061131957506001600160e01b03198216635b5e139f60e01b145b8061058957506301ffc9a760e01b6001600160e01b0319831614610589565b60608161135c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156113865780611370816124bc565b915061137f9050600a836124ed565b9150611360565b60008167ffffffffffffffff8111156113a1576113a1611d00565b6040519080825280601f01601f1916602001820160405280156113cb576020820181803683370190505b50905060006113db600184612501565b90505b8515611443576113ef600a87612518565b6113fa9060306124a4565b60f81b82826114088161252c565b93508151811061141a5761141a612443565b60200101906001600160f81b031916908160001a90535061143c600a876124ed565b95506113de565b50949350505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061148182610b78565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6114d48282604051806020016040528060008152506117ff565b5050565b6000818152600260205260408120546001600160a01b03166115515760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161070f565b600061155c83610b78565b9050806001600160a01b0316846001600160a01b031614806115975750836001600160a01b031661158c8461069a565b6001600160a01b0316145b806115c757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166115e282610b78565b6001600160a01b03161461164a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161070f565b6001600160a01b0382166116ac5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161070f565b6116b7838383611832565b6116c260008261144c565b6001600160a01b03831660009081526003602052604081208054600192906116eb908490612501565b90915550506001600160a01b03821660009081526003602052604081208054600192906117199084906124a4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117d78484846115cf565b6117e3848484846118ea565b6110c45760405162461bcd60e51b815260040161070f90612543565b61180983836119e8565b61181660008484846118ea565b6108455760405162461bcd60e51b815260040161070f90612543565b6001600160a01b03831661188d5761188881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6118b0565b816001600160a01b0316836001600160a01b0316146118b0576118b08382611b36565b6001600160a01b0382166118c75761084581611bd3565b826001600160a01b0316826001600160a01b031614610845576108458282611c82565b60006001600160a01b0384163b156119dd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061192e903390899088908890600401612595565b6020604051808303816000875af1925050508015611969575060408051601f3d908101601f19168201909252611966918101906125d2565b60015b6119c3573d808015611997576040519150601f19603f3d011682016040523d82523d6000602084013e61199c565b606091505b5080516119bb5760405162461bcd60e51b815260040161070f90612543565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115c7565b506001949350505050565b6001600160a01b038216611a3e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161070f565b6000818152600260205260409020546001600160a01b031615611aa35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161070f565b611aaf60008383611832565b6001600160a01b0382166000908152600360205260408120805460019290611ad89084906124a4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611b4384610bef565b611b4d9190612501565b600083815260076020526040902054909150808214611ba0576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611be590600190612501565b60008381526009602052604081205460088054939450909284908110611c0d57611c0d612443565b906000526020600020015490508060088381548110611c2e57611c2e612443565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c6657611c666125ef565b6001900381819060005260206000200160009055905550505050565b6000611c8d83610bef565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461088a57600080fd5b600060208284031215611cee57600080fd5b8135611cf981611cc6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d3157611d31611d00565b604051601f8501601f19908116603f01168101908282118183101715611d5957611d59611d00565b81604052809350858152868686011115611d7257600080fd5b858560208301376000602087830101525050509392505050565b60008060408385031215611d9f57600080fd5b82359150602083013567ffffffffffffffff811115611dbd57600080fd5b8301601f81018513611dce57600080fd5b611ddd85823560208401611d16565b9150509250929050565b60005b83811015611e02578181015183820152602001611dea565b838111156110c45750506000910152565b60008151808452611e2b816020860160208601611de7565b601f01601f19169290920160200192915050565b602081526000611cf96020830184611e13565b600060208284031215611e6457600080fd5b5035919050565b80356001600160a01b0381168114611e8257600080fd5b919050565b60008060408385031215611e9a57600080fd5b611ea383611e6b565b946020939093013593505050565b600080600060608486031215611ec657600080fd5b611ecf84611e6b565b9250611edd60208501611e6b565b9150604084013590509250925092565b600060208284031215611eff57600080fd5b611cf982611e6b565b600080600080600060a08688031215611f2057600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215611f5657600080fd5b611f5f83611e6b565b915060208301358015158114611f7457600080fd5b809150509250929050565b60008060008060808587031215611f9557600080fd5b611f9e85611e6b565b9350611fac60208601611e6b565b925060408501359150606085013567ffffffffffffffff811115611fcf57600080fd5b8501601f81018713611fe057600080fd5b611fef87823560208401611d16565b91505092959194509250565b634e487b7160e01b600052602160045260246000fd5b6000610160820190508c82528b60208301528a60408301528960608301528860808301528760a08301528660c08301528560e083015284610100830152836101208301526004831061207357634e487b7160e01b600052602160045260246000fd5b826101408301529c9b505050505050505050505050565b6000806040838503121561209d57600080fd5b6120a683611e6b565b91506120b460208401611e6b565b90509250929050565b600081516120cf818560208601611de7565b9290920192915050565b7f7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f81527f726465722074686174206561726e73206d6f6e6579212200000000000000000060208201527f2c202265787465726e616c5f75726c223a202268747470733a2f2f776562757960378201526a3a3432b234b81731b7b69160a91b60578201526b16101134b6b0b3b2911d101160a11b60628201526000835161218681606e850160208801611de7565b601160f91b606e91840191820152741610113730b6b2911d1011213abcaa3432a234b81160591b606f8201527f2c202261747472696275746573223a205b7b22646973706c61795f747970652260848201527f3a20226e756d626572222c202274726169745f74797065223a2022446970204c60a48201526f032bb32b6111610113b30b63ab2911d160851b60c482015261223561222760d48301866120bd565b61207d60f01b815260020190565b95945050505050565b60008551612250818460208a01611de7565b80830190507f2c207b22646973706c61795f74797065223a20226e756d626572222c202274728082527f6169745f74797065223a2022537472696b65205072696365222c202276616c75602083015263032911d160e51b80604084015287516122c0816044860160208c01611de7565b61207d60f01b6044949091019384015260468301919091527f6169745f74797065223a2022555344432042616c616e6365222c202276616c7560668301526086820152845161231681608a840160208901611de7565b6123ab61239e61239161222761238b61233c608a8789010161207d60f01b815260020190565b7f2c207b22646973706c61795f74797065223a20226e756d626572222c2022747281527f6169745f74797065223a2022456e65726779222c202276616c7565223a2000006020820152603e0190565b896120bd565b605d60f81b815260010190565b607d60f81b815260010190565b98975050505050505050565b600181811c908216806123cb57607f821691505b602082108114156123ec57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156124b7576124b761248e565b500190565b60006000198214156124d0576124d061248e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826124fc576124fc6124d7565b500490565b6000828210156125135761251361248e565b500390565b600082612527576125276124d7565b500690565b60008161253b5761253b61248e565b506000190190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906125c890830184611e13565b9695505050505050565b6000602082840312156125e457600080fd5b8151611cf981611cc6565b634e487b7160e01b600052603160045260246000fdfe68747470733a2f2f73746174696330312e6e79742e636f6d2f696d616765732f323031392f30322f30352f776f726c642f30356567672f313578702d6567672d70726f6d6f2d73757065724a756d626f2d76322e6a7067a26469706673582212204c5518570c87fff0a4cd72b15dd31fa32303dbec79e2e1ebcf416318ede95f9164736f6c634300080c0033",
  "deployedSourceMap": "314:7033:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:19;;558:22;540:41;;528:2;513:18;988:224:7;;;;;;;;4603:1117:18;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3757:70::-;;;;;;:::i;:::-;-1:-1:-1;3810:7:18;;3757:70;;;;2989:25:19;;;2977:2;2962:18;3757:70:18;2843:177:19;2525:100:6;;;:::i;4084:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3189:32:19;;;3171:51;;3159:2;3144:18;4084:221:6;3025:203:19;3607:411:6;;;;;;:::i;:::-;;:::i;:::-;;3908:70:18;;;;;;:::i;4052:67::-;;;;;;:::i;:::-;;:::i;2222:359::-;;;:::i;1628:113:7:-;1716:10;:17;1628:113;;4974:339:6;;;;;;:::i;:::-;;:::i;564:23:18:-;;;;;-1:-1:-1;;;;;564:23:18;;;1296:256:7;;;;;;:::i;:::-;;:::i;5384:185:6:-;;;;;;:::i;:::-;;:::i;1818:233:7:-;;;;;;:::i;:::-;;:::i;2219:239:6:-;;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;:::i;:::-;;:::i;1652:94:8:-;;;:::i;3021:684:18:-;;;;;;:::i;:::-;;:::i;2649:366::-;;;;;;:::i;:::-;;:::i;1576:103::-;;;;;;:::i;:::-;-1:-1:-1;1651:4:18;;1576:103;1001:87:8;1074:6;;-1:-1:-1;;;;;1074:6:8;1001:87;;2694:104:6;;;:::i;7113:231:18:-;;;;;;:::i;:::-;;:::i;4377:295:6:-;;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;:::i;:::-;;:::i;499:22:18:-;;;;;-1:-1:-1;;;;;499:22:18;;;4282:315;;;;;;:::i;:::-;;:::i;445:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1318:40::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1318:40:18;;;;;;;7133:25:19;;;7189:2;7174:18;;7167:34;;;;7217:18;;;7210:34;;;;7275:2;7260:18;;7253:34;-1:-1:-1;;;;;7324:32:19;7318:3;7303:19;;7296:61;7120:3;7105:19;1318:40:18;6874:489:19;6885:222:18;;;;;;:::i;:::-;;:::i;4743:164:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:8;;;;;;:::i;:::-;;:::i;988:224:7:-;1090:4;-1:-1:-1;;;;;;1114:50:7;;-1:-1:-1;;;1114:50:7;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:7:o;4603:1117:18:-;4690:13;4769:22;4990:8;5176:20;5193:1;5176:8;:20::i;:::-;4801:413;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4769:446;;5260:8;5366:22;5383:3;5366:8;:22::i;:::-;5494;5511:3;5494:8;:22::i;:::-;5620;5637:3;5620:8;:22::i;:::-;5243:469;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5243:469:18;;;;;;;-1:-1:-1;4603:1117:18;;-1:-1:-1;;4603:1117:18:o;2525:100:6:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;4180:73;;;;-1:-1:-1;;;4180:73:6;;13200:2:19;4180:73:6;;;13182:21:19;13239:2;13219:18;;;13212:30;13278:34;13258:18;;;13251:62;-1:-1:-1;;;13329:18:19;;;13322:42;13381:19;;4180:73:6;;;;;;;;;-1:-1:-1;4273:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:6;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:6;:2;-1:-1:-1;;;;;3746:11:6;;;3738:57;;;;-1:-1:-1;;;3738:57:6;;13613:2:19;3738:57:6;;;13595:21:19;13652:2;13632:18;;;13625:30;13691:34;13671:18;;;13664:62;-1:-1:-1;;;13742:18:19;;;13735:31;13783:19;;3738:57:6;13411:397:19;3738:57:6;679:10:4;-1:-1:-1;;;;;3830:21:6;;;;:62;;-1:-1:-1;3855:37:6;3872:5;679:10:4;4743:164:6;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:6;;14015:2:19;3808:168:6;;;13997:21:19;14054:2;14034:18;;;14027:30;14093:34;14073:18;;;14066:62;14164:26;14144:18;;;14137:54;14208:19;;3808:168:6;13813:420:19;3808:168:6;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;4052:67:18:-;6339:10;6361:4;6339:27;;6331:53;;;;-1:-1:-1;;;6331:53:18;;14440:2:19;6331:53:18;;;14422:21:19;14479:2;14459:18;;;14452:30;-1:-1:-1;;;14498:18:19;;;14491:43;14551:18;;6331:53:18;14238:337:19;6331:53:18;4052:67;:::o;2222:359::-;2281:26;;1716:10:7;:17;2265:42:18;2257:69;;;;-1:-1:-1;;;2257:69:18;;14782:2:19;2257:69:18;;;14764:21:19;14821:2;14801:18;;;14794:30;-1:-1:-1;;;14840:18:19;;;14833:44;14894:18;;2257:69:18;14580:338:19;2257:69:18;2336:20;2360:49;;;;;;;;2366:1;2360:49;;;;2369:1;2360:49;;;;2372:1;2360:49;;;;2375:1;2360:49;;;;2378:1;2360:49;;;;2381:1;2360:49;;;;2384:1;2360:49;;;;2387:1;2360:49;;;;2390:1;2360:49;;;;2393:1;2360:49;;;;2396:12;2360:49;;;;;;;;:::i;:::-;;;2336:73;-1:-1:-1;2336:73:18;2445:14;:29;2460:13;1716:10:7;:17;;1628:113;2460:13:18;2445:29;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;2494:36;2504:10;2516:13;1716:10:7;:17;;1628:113;2516:13:18;2494:9;:36::i;4974:339:6:-;5169:41;679:10:4;5202:7:6;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:6;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:7:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:7;;15543:2:19;1413:87:7;;;15525:21:19;15582:2;15562:18;;;15555:30;15621:34;15601:18;;;15594:62;-1:-1:-1;;;15672:18:19;;;15665:41;15723:19;;1413:87:7;15341:407:19;1413:87:7;-1:-1:-1;;;;;;1518:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;5384:185:6:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;1818:233:7:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:7;;15955:2:19;1913:95:7;;;15937:21:19;15994:2;15974:18;;;15967:30;16033:34;16013:18;;;16006:62;-1:-1:-1;;;16084:18:19;;;16077:42;16136:19;;1913:95:7;15753:408:19;1913:95:7;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:6:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:6;2362:19;2354:73;;;;-1:-1:-1;;;2354:73:6;;16500:2:19;2354:73:6;;;16482:21:19;16539:2;16519:18;;;16512:30;16578:34;16558:18;;;16551:62;-1:-1:-1;;;16629:18:19;;;16622:39;16678:19;;2354:73:6;16298:405:19;1949:208:6;2021:7;-1:-1:-1;;;;;2049:19:6;;2041:74;;;;-1:-1:-1;;;2041:74:6;;16910:2:19;2041:74:6;;;16892:21:19;16949:2;16929:18;;;16922:30;16988:34;16968:18;;;16961:62;-1:-1:-1;;;17039:18:19;;;17032:40;17089:19;;2041:74:6;16708:406:19;2041:74:6;-1:-1:-1;;;;;;2133:16:6;;;;;:9;:16;;;;;;;1949:208::o;1652:94:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:4;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;3021:684:18:-;6699:7;;-1:-1:-1;;;;;6699:7:18;6685:10;:21;6664:104;;;;-1:-1:-1;;;6664:104:18;;17682:2:19;6664:104:18;;;17664:21:19;17721:2;17701:18;;;17694:30;17760:34;17740:18;;;17733:62;-1:-1:-1;;;17811:18:19;;;17804:34;17855:19;;6664:104:18;17480:400:19;6664:104:18;3180:27:::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:40:::0;;3216:4;;3180:27;:40:::1;::::0;3216:4;;3180:40:::1;:::i;:::-;::::0;;;-1:-1:-1;;3268:7:18;;:15:::1;;3282:1;3268:15;;;3278:1;3268:15;3230:53;;:14;:27;3245:11;3230:27;;;;;;;;;;;:34;;;:53;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3293:27:18::1;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;3338:10;;3293:27;:55:::1;::::0;3338:10;;3293:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;3427:7:18;;:15:::1;;3441:1;3427:15;;;3437:1;3427:15;3391:51;;:14;:27;3406:11;3391:27;;;;;;;;;;;:32;;;:51;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3452:27:18::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:42:::0;;3490:4;;3452:27;:42:::1;::::0;3490:4;;3452:42:::1;:::i;:::-;::::0;;;-1:-1:-1;;3504:27:18::1;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;3549:10;;3504:27;:55:::1;::::0;3549:10;;3504:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;3573:7:18;3570:129:::1;;3596:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:57:::0;;3641:12;;3596:27;:57:::1;::::0;3641:12;;3596:57:::1;:::i;:::-;::::0;;;-1:-1:-1;;3570:129:18::1;3021:684:::0;;;;;:::o;2649:366::-;2733:10;2712:17;2720:8;2712:7;:17::i;:::-;-1:-1:-1;;;;;2712:31:18;;2704:57;;;;-1:-1:-1;;;2704:57:18;;18352:2:19;2704:57:18;;;18334:21:19;18391:2;18371:18;;;18364:30;-1:-1:-1;;;18410:18:19;;;18403:43;18463:18;;2704:57:18;18150:337:19;2704:57:18;2803:21;2827:24;;;:14;:24;;;;;2891:15;2861:27;;;:45;;;2968:40;;2950:58;;;:::i;:::-;2916:31;;;;:92;-1:-1:-1;2649:366:18:o;2694:104:6:-;2750:13;2783:7;2776:14;;;;;:::i;7113:231:18:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:4;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;7193:23:18;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;7233:8:18::1;::::0;-1:-1:-1;;;;;7220:21:18;;::::1;7233:8:::0;::::1;7220:21;;7193:48;7185:85;;;::::0;-1:-1:-1;;;7185:85:18;;18694:2:19;7185:85:18::1;::::0;::::1;18676:21:19::0;18733:2;18713:18;;;18706:30;-1:-1:-1;;;18752:18:19;;;18745:54;18816:18;;7185:85:18::1;18492:348:19::0;7185:85:18::1;7280:8;:20:::0;;-1:-1:-1;;;;;;7280:20:18::1;-1:-1:-1::0;;;;;7280:20:18;::::1;::::0;;::::1;::::0;;;7315:22:::1;::::0;3171:51:19;;;7315:22:18::1;::::0;3159:2:19;3144:18;7315:22:18::1;;;;;;;;7113:231:::0;:::o;4377:295:6:-;-1:-1:-1;;;;;4480:24:6;;679:10:4;4480:24:6;;4472:62;;;;-1:-1:-1;;;4472:62:6;;19047:2:19;4472:62:6;;;19029:21:19;19086:2;19066:18;;;19059:30;19125:27;19105:18;;;19098:55;19170:18;;4472:62:6;18845:349:19;4472:62:6;679:10:4;4547:32:6;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:6;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:6;;;;;;;;;;4616:48;;540:41:19;;;4547:42:6;;679:10:4;4616:48:6;;513:18:19;4616:48:6;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:4;5848:7:6;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:6;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;4282:315:18:-;7543:4:6;7567:16;;;:7;:16;;;;;;4356:13:18;;-1:-1:-1;;;;;7567:16:6;4381:77:18;;;;-1:-1:-1;;;4381:77:18;;19401:2:19;4381:77:18;;;19383:21:19;19440:2;19420:18;;;19413:30;19479:34;19459:18;;;19452:62;-1:-1:-1;;;19530:18:19;;;19523:45;19585:19;;4381:77:18;19199:411:19;4381:77:18;4475:115;4490:8;4475:115;;;;;;;;;;;;;;;;;:14;:115::i;6885:222::-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:4;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;6963:22:18;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;7001:7:18::1;::::0;-1:-1:-1;;;;;6989:19:18;;::::1;7001:7:::0;::::1;6989:19;;6963:45;6955:82;;;::::0;-1:-1:-1;;;6955:82:18;;18694:2:19;6955:82:18::1;::::0;::::1;18676:21:19::0;18733:2;18713:18;;;18706:30;-1:-1:-1;;;18752:18:19;;;18745:54;18816:18;;6955:82:18::1;18492:348:19::0;6955:82:18::1;7047:7;:18:::0;;-1:-1:-1;;;;;;7047:18:18::1;-1:-1:-1::0;;;;;7047:18:18;::::1;::::0;;::::1;::::0;;;7080:20:::1;::::0;3171:51:19;;;7080:20:18::1;::::0;3159:2:19;3144:18;7080:20:18::1;3025:203:19::0;1901:192:8;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:4;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:8;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:8;;19817:2:19;1982:73:8::1;::::0;::::1;19799:21:19::0;19856:2;19836:18;;;19829:30;19895:34;19875:18;;;19868:62;-1:-1:-1;;;19946:18:19;;;19939:36;19992:19;;1982:73:8::1;19615:402:19::0;1982:73:8::1;2066:19;2076:8;2066:9;:19::i;1580:305:6:-:0;1682:4;-1:-1:-1;;;;;;1719:40:6;;-1:-1:-1;;;1719:40:6;;:105;;-1:-1:-1;;;;;;;1776:48:6;;-1:-1:-1;;;1776:48:6;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:5;;;1841:36:6;799:157:5;5726:467:18;5776:27;5819:7;5815:48;;-1:-1:-1;;5842:10:18;;;;;;;;;;;;-1:-1:-1;;;5842:10:18;;;;;5726:467::o;5815:48::-;5881:2;5872:6;5911:66;5918:6;;5911:66;;5940:5;;;;:::i;:::-;;-1:-1:-1;5959:7:18;;-1:-1:-1;5964:2:18;5959:7;;:::i;:::-;;;5911:66;;;5986:17;6016:3;6006:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6006:14:18;-1:-1:-1;5986:34:18;-1:-1:-1;6030:6:18;6039:7;6045:1;6039:3;:7;:::i;:::-;6030:16;;6056:102;6063:7;;6056:102;;6116:7;6121:2;6116;:7;:::i;:::-;6111:12;;:2;:12;:::i;:::-;6098:27;;6086:4;6091:3;;;;:::i;:::-;;;6086:9;;;;;;;;:::i;:::-;;;;:39;-1:-1:-1;;;;;6086:39:18;;;;;;;;-1:-1:-1;6139:8:18;6145:2;6139:8;;:::i;:::-;;;6056:102;;;-1:-1:-1;6181:4:18;5726:467;-1:-1:-1;;;;5726:467:18:o;11460:174:6:-;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:6;-1:-1:-1;;;;;11535:29:6;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:6;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;7882:73;;;;-1:-1:-1;;;7882:73:6;;21009:2:19;7882:73:6;;;20991:21:19;21048:2;21028:18;;;21021:30;21087:34;21067:18;;;21060:62;-1:-1:-1;;;21138:18:19;;;21131:42;21190:19;;7882:73:6;20807:408:19;7882:73:6;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:6;:7;-1:-1:-1;;;;;8024:16:6;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:6;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:6;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;8016:96;7772:348;-1:-1:-1;;;;7772:348:6:o;10764:578::-;10923:4;-1:-1:-1;;;;;10896:31:6;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:6;;10888:85;;;;-1:-1:-1;;;10888:85:6;;21422:2:19;10888:85:6;;;21404:21:19;21461:2;21441:18;;;21434:30;21500:34;21480:18;;;21473:62;-1:-1:-1;;;21551:18:19;;;21544:39;21600:19;;10888:85:6;21220:405:19;10888:85:6;-1:-1:-1;;;;;10992:16:6;;10984:65;;;;-1:-1:-1;;;10984:65:6;;21832:2:19;10984:65:6;;;21814:21:19;21871:2;21851:18;;;21844:30;21910:34;21890:18;;;21883:62;-1:-1:-1;;;21961:18:19;;;21954:34;22005:19;;10984:65:6;21630:400:19;10984:65:6;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:6;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:6;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:6;-1:-1:-1;;;;;11268:21:6;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:6:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:6;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:6;;;;;;;:::i;2664:589:7:-;-1:-1:-1;;;;;2870:18:7;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:7;:4;-1:-1:-1;;;;;2967:10:7;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:7;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:7;:2;-1:-1:-1;;;;;3167:10:7;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:6:-;12354:4;-1:-1:-1;;;;;12375:13:6;;1064:20:16;1112:8;12371:624:6;;12411:72;;-1:-1:-1;;;12411:72:6;;-1:-1:-1;;;;;12411:36:6;;;;;:72;;679:10:4;;12462:4:6;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:6;;;;;;;;-1:-1:-1;;12411:72:6;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12657:13:6;;12653:272;;12700:60;;-1:-1:-1;;;12700:60:6;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:6;-1:-1:-1;;;12534:55:6;;-1:-1:-1;12527:62:6;;12371:624;-1:-1:-1;12979:4:6;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:6;;9528:61;;;;-1:-1:-1;;;9528:61:6;;23415:2:19;9528:61:6;;;23397:21:19;;;23434:18;;;23427:30;23493:34;23473:18;;;23466:62;23545:18;;9528:61:6;23213:356:19;9528:61:6;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;:30;9600:58;;;;-1:-1:-1;;;9600:58:6;;23776:2:19;9600:58:6;;;23758:21:19;23815:2;23795:18;;;23788:30;23854;23834:18;;;23827:58;23902:18;;9600:58:6;23574:352:19;9600:58:6;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:6;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:6;-1:-1:-1;;;;;9758:21:6;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:7:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:7;;;5245:328;;-1:-1:-1;;;;;5316:18:7;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:7;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:7;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:7;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:7:o;14:131:19:-;-1:-1:-1;;;;;;88:32:19;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:19:o;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:19;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:519::-;1439:6;1447;1500:2;1488:9;1479:7;1475:23;1471:32;1468:52;;;1516:1;1513;1506:12;1468:52;1552:9;1539:23;1529:33;;1613:2;1602:9;1598:18;1585:32;1640:18;1632:6;1629:30;1626:50;;;1672:1;1669;1662:12;1626:50;1695:22;;1748:4;1740:13;;1736:27;-1:-1:-1;1726:55:19;;1777:1;1774;1767:12;1726:55;1800:74;1866:7;1861:2;1848:16;1843:2;1839;1835:11;1800:74;:::i;:::-;1790:84;;;1361:519;;;;;:::o;1885:258::-;1957:1;1967:113;1981:6;1978:1;1975:13;1967:113;;;2057:11;;;2051:18;2038:11;;;2031:39;2003:2;1996:10;1967:113;;;2098:6;2095:1;2092:13;2089:48;;;-1:-1:-1;;2133:1:19;2115:16;;2108:27;1885:258::o;2148:269::-;2201:3;2239:5;2233:12;2266:6;2261:3;2254:19;2282:63;2338:6;2331:4;2326:3;2322:14;2315:4;2308:5;2304:16;2282:63;:::i;:::-;2399:2;2378:15;-1:-1:-1;;2374:29:19;2365:39;;;;2406:4;2361:50;;2148:269;-1:-1:-1;;2148:269:19:o;2422:231::-;2571:2;2560:9;2553:21;2534:4;2591:56;2643:2;2632:9;2628:18;2620:6;2591:56;:::i;2658:180::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;-1:-1:-1;2809:23:19;;2658:180;-1:-1:-1;2658:180:19:o;3233:173::-;3301:20;;-1:-1:-1;;;;;3350:31:19;;3340:42;;3330:70;;3396:1;3393;3386:12;3330:70;3233:173;;;:::o;3411:254::-;3479:6;3487;3540:2;3528:9;3519:7;3515:23;3511:32;3508:52;;;3556:1;3553;3546:12;3508:52;3579:29;3598:9;3579:29;:::i;:::-;3569:39;3655:2;3640:18;;;;3627:32;;-1:-1:-1;;;3411:254:19:o;3670:328::-;3747:6;3755;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;;3903:38;3937:2;3926:9;3922:18;3903:38;:::i;:::-;3893:48;;3988:2;3977:9;3973:18;3960:32;3950:42;;3670:328;;;;;:::o;4003:186::-;4062:6;4115:2;4103:9;4094:7;4090:23;4086:32;4083:52;;;4131:1;4128;4121:12;4083:52;4154:29;4173:9;4154:29;:::i;4194:454::-;4289:6;4297;4305;4313;4321;4374:3;4362:9;4353:7;4349:23;4345:33;4342:53;;;4391:1;4388;4381:12;4342:53;-1:-1:-1;;4414:23:19;;;4484:2;4469:18;;4456:32;;-1:-1:-1;4535:2:19;4520:18;;4507:32;;4586:2;4571:18;;4558:32;;-1:-1:-1;4637:3:19;4622:19;4609:33;;-1:-1:-1;4194:454:19;-1:-1:-1;4194:454:19:o;4653:347::-;4718:6;4726;4779:2;4767:9;4758:7;4754:23;4750:32;4747:52;;;4795:1;4792;4785:12;4747:52;4818:29;4837:9;4818:29;:::i;:::-;4808:39;;4897:2;4886:9;4882:18;4869:32;4944:5;4937:13;4930:21;4923:5;4920:32;4910:60;;4966:1;4963;4956:12;4910:60;4989:5;4979:15;;;4653:347;;;;;:::o;5005:667::-;5100:6;5108;5116;5124;5177:3;5165:9;5156:7;5152:23;5148:33;5145:53;;;5194:1;5191;5184:12;5145:53;5217:29;5236:9;5217:29;:::i;:::-;5207:39;;5265:38;5299:2;5288:9;5284:18;5265:38;:::i;:::-;5255:48;;5350:2;5339:9;5335:18;5322:32;5312:42;;5405:2;5394:9;5390:18;5377:32;5432:18;5424:6;5421:30;5418:50;;;5464:1;5461;5454:12;5418:50;5487:22;;5540:4;5532:13;;5528:27;-1:-1:-1;5518:55:19;;5569:1;5566;5559:12;5518:55;5592:74;5658:7;5653:2;5640:16;5635:2;5631;5627:11;5592:74;:::i;:::-;5582:84;;;5005:667;;;;;;;:::o;5677:127::-;5738:10;5733:3;5729:20;5726:1;5719:31;5769:4;5766:1;5759:15;5793:4;5790:1;5783:15;5809:1060;6191:4;6233:3;6222:9;6218:19;6210:27;;6264:6;6253:9;6246:25;6307:6;6302:2;6291:9;6287:18;6280:34;6350:6;6345:2;6334:9;6330:18;6323:34;6393:6;6388:2;6377:9;6373:18;6366:34;6437:6;6431:3;6420:9;6416:19;6409:35;6481:6;6475:3;6464:9;6460:19;6453:35;6525:6;6519:3;6508:9;6504:19;6497:35;6569:6;6563:3;6552:9;6548:19;6541:35;6613:6;6607:3;6596:9;6592:19;6585:35;6657:6;6651:3;6640:9;6636:19;6629:35;6695:1;6686:7;6683:14;6673:145;;6740:10;6735:3;6731:20;6728:1;6721:31;6775:4;6772:1;6765:15;6803:4;6800:1;6793:15;6673:145;6855:7;6849:3;6838:9;6834:19;6827:36;5809:1060;;;;;;;;;;;;;;:::o;7368:260::-;7436:6;7444;7497:2;7485:9;7476:7;7472:23;7468:32;7465:52;;;7513:1;7510;7503:12;7465:52;7536:29;7555:9;7536:29;:::i;:::-;7526:39;;7584:38;7618:2;7607:9;7603:18;7584:38;:::i;:::-;7574:48;;7368:260;;;;;:::o;7633:185::-;7675:3;7713:5;7707:12;7728:52;7773:6;7768:3;7761:4;7754:5;7750:16;7728:52;:::i;:::-;7796:16;;;;;7633:185;-1:-1:-1;;7633:185:19:o;7943:1938::-;8859:66;8854:3;8847:79;8956:66;8951:2;8946:3;8942:12;8935:88;9053:66;9048:2;9043:3;9039:12;9032:88;9159:24;9154:3;9150:34;9145:2;9140:3;9136:12;9129:56;9224:26;9219:3;9215:36;9210:2;9205:3;9201:12;9194:58;8829:3;9281:6;9275:13;9297:61;9351:6;9345:3;9340;9336:13;9331:2;9323:6;9319:15;9297:61;:::i;:::-;-1:-1:-1;;;9417:3:19;9377:16;;;9409:12;;;9402:34;-1:-1:-1;;;9460:3:19;9452:12;;9445:75;9550:66;9544:3;9536:12;;9529:88;9647:66;9641:3;9633:12;;9626:88;-1:-1:-1;;;9738:3:19;9730:12;;9723:66;9805:70;9835:39;9869:3;9861:12;;9853:6;9835:39;:::i;:::-;-1:-1:-1;;;7888:17:19;;7930:1;7921:11;;7823:115;9805:70;9798:77;7943:1938;-1:-1:-1;;;;;7943:1938:19:o;10404:2204::-;11487:3;11525:6;11519:13;11541:53;11587:6;11582:3;11575:4;11567:6;11563:17;11541:53;:::i;:::-;11625:6;11620:3;11616:16;11603:29;;11651:66;11740:2;11733:5;11726:17;11777:66;11770:4;11763:5;11759:16;11752:92;11872:10;11867:3;11863:20;11915:2;11910;11903:5;11899:14;11892:26;11949:6;11943:13;11965:66;12022:8;12017:2;12010:5;12006:14;11999:4;11991:6;11987:17;11965:66;:::i;:::-;-1:-1:-1;;;12094:2:19;12050:20;;;;12086:11;;;12079:25;12128:2;12120:11;;12113:23;;;;12166:66;12160:3;12152:12;;12145:88;12257:3;12249:12;;12242:24;12291:13;;12313:64;12291:13;12362:3;12354:12;;12347:4;12335:17;;12313:64;:::i;:::-;12393:209;12423:178;12453:147;12483:116;12509:89;12539:58;12592:3;12581:8;12577:2;12573:17;12569:27;-1:-1:-1;;;7888:17:19;;7930:1;7921:11;;7823:115;12539:58;9963:66;9951:79;;10060:66;10055:2;10046:12;;10039:88;10152:2;10143:12;;9886:275;12509:89;12501:6;12483:116;:::i;12453:147::-;-1:-1:-1;;;10231:16:19;;10272:1;10263:11;;10166:114;12423:178;-1:-1:-1;;;10350:16:19;;10391:1;10382:11;;10285:114;12393:209;12386:216;10404:2204;-1:-1:-1;;;;;;;;10404:2204:19:o;12613:380::-;12692:1;12688:12;;;;12735;;;12756:61;;12810:4;12802:6;12798:17;12788:27;;12756:61;12863:2;12855:6;12852:14;12832:18;12829:38;12826:161;;;12909:10;12904:3;12900:20;12897:1;12890:31;12944:4;12941:1;12934:15;12972:4;12969:1;12962:15;12826:161;;12613:380;;;:::o;14923:413::-;15125:2;15107:21;;;15164:2;15144:18;;;15137:30;15203:34;15198:2;15183:18;;15176:62;-1:-1:-1;;;15269:2:19;15254:18;;15247:47;15326:3;15311:19;;14923:413::o;16166:127::-;16227:10;16222:3;16218:20;16215:1;16208:31;16258:4;16255:1;16248:15;16282:4;16279:1;16272:15;17119:356;17321:2;17303:21;;;17340:18;;;17333:30;17399:34;17394:2;17379:18;;17372:62;17466:2;17451:18;;17119:356::o;17885:127::-;17946:10;17941:3;17937:20;17934:1;17927:31;17977:4;17974:1;17967:15;18001:4;17998:1;17991:15;18017:128;18057:3;18088:1;18084:6;18081:1;18078:13;18075:39;;;18094:18;;:::i;:::-;-1:-1:-1;18130:9:19;;18017:128::o;20022:135::-;20061:3;-1:-1:-1;;20082:17:19;;20079:43;;;20102:18;;:::i;:::-;-1:-1:-1;20149:1:19;20138:13;;20022:135::o;20162:127::-;20223:10;20218:3;20214:20;20211:1;20204:31;20254:4;20251:1;20244:15;20278:4;20275:1;20268:15;20294:120;20334:1;20360;20350:35;;20365:18;;:::i;:::-;-1:-1:-1;20399:9:19;;20294:120::o;20419:125::-;20459:4;20487:1;20484;20481:8;20478:34;;;20492:18;;:::i;:::-;-1:-1:-1;20529:9:19;;20419:125::o;20549:112::-;20581:1;20607;20597:35;;20612:18;;:::i;:::-;-1:-1:-1;20646:9:19;;20549:112::o;20666:136::-;20705:3;20733:5;20723:39;;20742:18;;:::i;:::-;-1:-1:-1;;;20778:18:19;;20666:136::o;22035:414::-;22237:2;22219:21;;;22276:2;22256:18;;;22249:30;22315:34;22310:2;22295:18;;22288:62;-1:-1:-1;;;22381:2:19;22366:18;;22359:48;22439:3;22424:19;;22035:414::o;22454:500::-;-1:-1:-1;;;;;22723:15:19;;;22705:34;;22775:15;;22770:2;22755:18;;22748:43;22822:2;22807:18;;22800:34;;;22870:3;22865:2;22850:18;;22843:31;;;22648:4;;22891:57;;22928:19;;22920:6;22891:57;:::i;:::-;22883:65;22454:500;-1:-1:-1;;;;;;22454:500:19:o;22959:249::-;23028:6;23081:2;23069:9;23060:7;23056:23;23052:32;23049:52;;;23097:1;23094;23087:12;23049:52;23129:9;23123:16;23148:30;23172:5;23148:30;:::i;23931:127::-;23992:10;23987:3;23983:20;23980:1;23973:31;24023:4;24020:1;24013:15;24047:4;24044:1;24037:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    314,
    7347
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87BFC7F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82AFD23B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x7539CC7F EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1249C58B EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC457CE4 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x275 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CDC JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x246 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1E3F JUMP JUMPDEST PUSH2 0x267 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x246 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x734 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x88D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x267 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xA03 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH2 0x267 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0xB78 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x2BB PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0xCAC JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x290 JUMP JUMPDEST PUSH2 0x246 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F7F JUMP JUMPDEST PUSH2 0x1092 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x290 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x497 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA SWAP1 SWAP11 ADD SLOAD SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0x4D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x116B JUMP JUMPDEST PUSH2 0x21E PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x55F CALLDATASIZE PUSH1 0x4 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x589 JUMPI POP PUSH2 0x589 DUP3 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH2 0x59E PUSH1 0x9 PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5AF SWAP3 SWAP2 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x5CC PUSH2 0x14D PUSH2 0x1338 JUMP JUMPDEST PUSH2 0x5D6 PUSH1 0x6F PUSH2 0x1338 JUMP JUMPDEST PUSH2 0x5E0 PUSH1 0xDE PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD SWAP1 MSTORE MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x617 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x643 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x690 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x665 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x690 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x673 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP3 PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x7C9 JUMPI POP PUSH2 0x7C9 DUP2 CALLER PUSH2 0x523 JUMP JUMPDEST PUSH2 0x83B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x845 DUP4 DUP4 PUSH2 0x144C JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ ISZERO PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x938 JUMPI PUSH2 0x938 PUSH2 0x1FFB JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x94A PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E9 PUSH2 0x1FFB JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x88A CALLER PUSH2 0x9FE PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST PUSH2 0xA0D CALLER DUP3 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x845 DUP4 DUP4 DUP4 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F DUP4 PUSH2 0xBEF JUMP JUMPDEST DUP3 LT PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x845 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF0 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB66 JUMPI PUSH2 0xB66 PUSH2 0x2443 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH2 0xCAA PUSH1 0x0 PUSH2 0x177A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xD33 SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 ISZERO PUSH2 0xD45 JUMPI PUSH1 0x0 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD96 SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 ISZERO PUSH2 0xDA8 JUMPI PUSH1 0x0 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0xB PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xDF9 SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE1F SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 PUSH2 0xE50 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xE4A SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0xE61 DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x8 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x11 SLOAD PUSH2 0xEC9 SWAP2 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0x9 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x617 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF31 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0xF78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x109C CALLER DUP4 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x10B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x10C4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x17CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x589 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2606 PUSH1 0x57 SWAP2 CODECOPY PUSH2 0x58F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11BB JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1202 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x127A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1319 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x589 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x589 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x135C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1386 JUMPI DUP1 PUSH2 0x1370 DUP2 PUSH2 0x24BC JUMP JUMPDEST SWAP2 POP PUSH2 0x137F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x24ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A1 JUMPI PUSH2 0x13A1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x13DB PUSH1 0x1 DUP5 PUSH2 0x2501 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP6 ISZERO PUSH2 0x1443 JUMPI PUSH2 0x13EF PUSH1 0xA DUP8 PUSH2 0x2518 JUMP JUMPDEST PUSH2 0x13FA SWAP1 PUSH1 0x30 PUSH2 0x24A4 JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 DUP3 PUSH2 0x1408 DUP2 PUSH2 0x252C JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x141A JUMPI PUSH2 0x141A PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x143C PUSH1 0xA DUP8 PUSH2 0x24ED JUMP JUMPDEST SWAP6 POP PUSH2 0x13DE JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x1481 DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x14D4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C DUP4 PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1597 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x158C DUP5 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x15C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E2 DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x164A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x16B7 DUP4 DUP4 DUP4 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x16C2 PUSH1 0x0 DUP3 PUSH2 0x144C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x16EB SWAP1 DUP5 SWAP1 PUSH2 0x2501 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1719 SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x17D7 DUP5 DUP5 DUP5 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x17E3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1809 DUP4 DUP4 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x1816 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x188D JUMPI PUSH2 0x1888 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x18B0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18B0 JUMPI PUSH2 0x18B0 DUP4 DUP3 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18C7 JUMPI PUSH2 0x845 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x845 JUMPI PUSH2 0x845 DUP3 DUP3 PUSH2 0x1C82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x19DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x192E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1969 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1966 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25D2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19C3 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x199C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x19BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP1 PUSH2 0x2543 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x15C7 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1A3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1AA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x70F JUMP JUMPDEST PUSH2 0x1AAF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1AD8 SWAP1 DUP5 SWAP1 PUSH2 0x24A4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B43 DUP5 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x1B4D SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1BA0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1BE5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1C0D JUMPI PUSH2 0x1C0D PUSH2 0x2443 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C2E JUMPI PUSH2 0x1C2E PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C66 JUMPI PUSH2 0x1C66 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8D DUP4 PUSH2 0xBEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x88A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CF9 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1D31 JUMPI PUSH2 0x1D31 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D59 PUSH2 0x1D00 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDD DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E02 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DEA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10C4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E2B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1CF9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA3 DUP4 PUSH2 0x1E6B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ECF DUP5 PUSH2 0x1E6B JUMP JUMPDEST SWAP3 POP PUSH2 0x1EDD PUSH1 0x20 DUP6 ADD PUSH2 0x1E6B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF9 DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP4 CALLDATALOAD SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5F DUP4 PUSH2 0x1E6B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F9E DUP6 PUSH2 0x1E6B JUMP JUMPDEST SWAP4 POP PUSH2 0x1FAC PUSH1 0x20 DUP7 ADD PUSH2 0x1E6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FEF DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP DUP13 DUP3 MSTORE DUP12 PUSH1 0x20 DUP4 ADD MSTORE DUP11 PUSH1 0x40 DUP4 ADD MSTORE DUP10 PUSH1 0x60 DUP4 ADD MSTORE DUP9 PUSH1 0x80 DUP4 ADD MSTORE DUP8 PUSH1 0xA0 DUP4 ADD MSTORE DUP7 PUSH1 0xC0 DUP4 ADD MSTORE DUP6 PUSH1 0xE0 DUP4 ADD MSTORE DUP5 PUSH2 0x100 DUP4 ADD MSTORE DUP4 PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x4 DUP4 LT PUSH2 0x2073 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH2 0x140 DUP4 ADD MSTORE SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A6 DUP4 PUSH2 0x1E6B JUMP JUMPDEST SWAP2 POP PUSH2 0x20B4 PUSH1 0x20 DUP5 ADD PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x20CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A2022546865204E4654206C696D6974206F DUP2 MSTORE PUSH32 0x726465722074686174206561726E73206D6F6E65792122000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F7765627579 PUSH1 0x37 DUP3 ADD MSTORE PUSH11 0x3A3432B234B81731B7B691 PUSH1 0xA9 SHL PUSH1 0x57 DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2186 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH21 0x1610113730B6B2911D1011213ABCAA3432A234B811 PUSH1 0x59 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A2022446970204C PUSH1 0xA4 DUP3 ADD MSTORE PUSH16 0x32BB32B6111610113B30B63AB2911D1 PUSH1 0x85 SHL PUSH1 0xC4 DUP3 ADD MSTORE PUSH2 0x2235 PUSH2 0x2227 PUSH1 0xD4 DUP4 ADD DUP7 PUSH2 0x20BD JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x2250 DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x1DE7 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A2022537472696B65205072696365222C202276616C75 PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0x32911D1 PUSH1 0xE5 SHL DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP8 MLOAD PUSH2 0x22C0 DUP2 PUSH1 0x44 DUP7 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x44 SWAP5 SWAP1 SWAP2 ADD SWAP4 DUP5 ADD MSTORE PUSH1 0x46 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6169745F74797065223A2022555344432042616C616E6365222C202276616C75 PUSH1 0x66 DUP4 ADD MSTORE PUSH1 0x86 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x2316 DUP2 PUSH1 0x8A DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x23AB PUSH2 0x239E PUSH2 0x2391 PUSH2 0x2227 PUSH2 0x238B PUSH2 0x233C PUSH1 0x8A DUP8 DUP10 ADD ADD PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP2 MSTORE PUSH32 0x6169745F74797065223A2022456E65726779222C202276616C7565223A200000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3E ADD SWAP1 JUMP JUMPDEST DUP10 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x24B7 JUMPI PUSH2 0x24B7 PUSH2 0x248E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x24D0 JUMPI PUSH2 0x24D0 PUSH2 0x248E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24FC JUMPI PUSH2 0x24FC PUSH2 0x24D7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2513 JUMPI PUSH2 0x2513 PUSH2 0x248E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2527 JUMPI PUSH2 0x2527 PUSH2 0x24D7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x253B JUMPI PUSH2 0x253B PUSH2 0x248E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x25C8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E13 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1CF9 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F7374 PUSH2 0x7469 PUSH4 0x30312E6E PUSH26 0x742E636F6D2F696D616765732F323031392F30322F30352F776F PUSH19 0x6C642F30356567672F313578702D6567672D70 PUSH19 0x6F6D6F2D73757065724A756D626F2D76322E6A PUSH17 0x67A26469706673582212204C5518570C87 SELFDESTRUCT CREATE LOG4 0xCD PUSH19 0xB15DD31FA32303DBEC79E2E1EBCF416318EDE9 0x5F SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x206"
    },
    "25": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11A"
    },
    "42": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87BFC7F"
    },
    "60": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87BFC7F"
    },
    "71": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "75": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDB2A0A55"
    },
    "82": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4AE"
    },
    "86": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE52E3249"
    },
    "93": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x502"
    },
    "97": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x515"
    },
    "108": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x551"
    },
    "119": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "131": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3E1"
    },
    "135": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB88D4FDE"
    },
    "142": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F4"
    },
    "146": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xBC0B0D88"
    },
    "153": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x407"
    },
    "157": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87B56DD"
    },
    "164": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41A"
    },
    "168": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "173": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "174": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "175": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x82AFD23B"
    },
    "180": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "185": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "186": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x82AFD23B"
    },
    "191": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "192": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A1"
    },
    "195": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B5"
    },
    "206": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "213": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3C6"
    },
    "217": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x97FC007C"
    },
    "224": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CE"
    },
    "228": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "232": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "233": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "234": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "235": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "240": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x360"
    },
    "244": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "245": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "246": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x715018A6"
    },
    "251": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x373"
    },
    "255": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "256": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "257": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7539CC7F"
    },
    "262": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37B"
    },
    "266": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "267": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "268": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x7901EA78"
    },
    "273": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "274": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x38E"
    },
    "277": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "281": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "282": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "283": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "284": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1249C58B"
    },
    "289": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "290": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19D"
    },
    "293": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "294": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "295": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2F745C59"
    },
    "300": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C"
    },
    "304": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "305": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "306": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2F745C59"
    },
    "311": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x314"
    },
    "315": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "316": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "317": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42842E0E"
    },
    "322": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x327"
    },
    "326": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "327": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "328": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x437454B9"
    },
    "333": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CB"
    },
    "337": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "338": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "339": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F6CCCE7"
    },
    "344": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "345": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x33A"
    },
    "348": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "349": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "350": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6352211E"
    },
    "355": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "356": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x34D"
    },
    "359": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "360": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "362": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "363": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "364": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "365": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "366": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1249C58B"
    },
    "371": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "372": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DE"
    },
    "375": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "376": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "377": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "382": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "383": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E6"
    },
    "386": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "387": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "388": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "393": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "394": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2EE"
    },
    "397": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "398": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "399": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2B7AC3F3"
    },
    "404": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "405": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x301"
    },
    "408": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "409": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "412": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "413": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "414": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "415": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81812FC"
    },
    "420": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "GT",
      "path": "18"
    },
    "421": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D9"
    },
    "424": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "425": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "426": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81812FC"
    },
    "431": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "432": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x27D"
    },
    "435": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "436": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "437": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "442": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "443": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A8"
    },
    "446": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "447": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "448": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA363D08"
    },
    "453": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "454": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BD"
    },
    "457": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "458": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC457CE4"
    },
    "464": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "465": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CB"
    },
    "468": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "469": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "471": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "472": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "473": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "474": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "475": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "480": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "481": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20B"
    },
    "484": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "485": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "486": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x419E314"
    },
    "491": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "492": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x233"
    },
    "495": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "496": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5106353"
    },
    "502": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "503": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x253"
    },
    "506": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "507": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "508": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "513": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "EQ",
      "path": "18"
    },
    "514": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x275"
    },
    "517": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "518": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "519": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "522": {
      "first_revert": true,
      "fn": null,
      "offset": [
        314,
        7347
      ],
      "op": "REVERT",
      "path": "18"
    },
    "523": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "524": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "527": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x219"
    },
    "530": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "531": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "533": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CDC"
    },
    "536": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "537": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "538": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x564"
    },
    "541": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "542": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "543": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "545": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "546": {
      "op": "SWAP1"
    },
    "547": {
      "op": "ISZERO"
    },
    "548": {
      "op": "ISZERO"
    },
    "549": {
      "op": "DUP2"
    },
    "550": {
      "op": "MSTORE"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "op": "ADD"
    },
    "554": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "555": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "557": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "558": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "559": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "560": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "7"
    },
    "561": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "562": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "7"
    },
    "563": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "564": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x246"
    },
    "567": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x241"
    },
    "570": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "571": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "573": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D8C"
    },
    "576": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "577": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "578": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58F"
    },
    "581": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "582": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "583": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "585": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "586": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22A"
    },
    "589": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "590": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "591": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E3F"
    },
    "594": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "595": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "596": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x267"
    },
    "599": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x261"
    },
    "602": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "603": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "605": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "608": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        3757,
        3827
      ],
      "op": "JUMP",
      "path": "18"
    },
    "609": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "610": {
      "op": "POP"
    },
    "611": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3810,
        3817
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "613": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3810,
        3817
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "614": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "JUMP",
      "path": "18"
    },
    "615": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "616": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "618": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "619": {
      "op": "SWAP1"
    },
    "620": {
      "op": "DUP2"
    },
    "621": {
      "op": "MSTORE"
    },
    "622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "624": {
      "op": "ADD"
    },
    "625": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        3757,
        3827
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22A"
    },
    "628": {
      "op": "JUMP"
    },
    "629": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x246"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x608"
    },
    "636": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "637": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "638": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x290"
    },
    "641": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28B"
    },
    "644": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "645": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "647": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E52"
    },
    "650": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "651": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "652": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69A"
    },
    "655": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "656": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "657": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "659": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "666": {
      "op": "SHL"
    },
    "667": {
      "op": "SUB"
    },
    "668": {
      "op": "SWAP1"
    },
    "669": {
      "op": "SWAP2"
    },
    "670": {
      "op": "AND"
    },
    "671": {
      "op": "DUP2"
    },
    "672": {
      "op": "MSTORE"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22A"
    },
    "679": {
      "op": "JUMP"
    },
    "680": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "681": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "684": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "687": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "688": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "690": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E87"
    },
    "693": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "694": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "695": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x734"
    },
    "698": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "699": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "700": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "6"
    },
    "701": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "702": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21E"
    },
    "705": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x261"
    },
    "708": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "709": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "711": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        3908,
        3978
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "714": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        3908,
        3978
      ],
      "op": "JUMP",
      "path": "18"
    },
    "715": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "716": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "719": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D9"
    },
    "722": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "723": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "725": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "728": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMP",
      "path": "18"
    },
    "729": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "730": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x84A"
    },
    "733": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMP",
      "path": "18"
    },
    "734": {
      "fn": "Wizards.mint",
      "offset": [
        2222,
        2581
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "735": {
      "fn": "Wizards.mint",
      "offset": [
        2222,
        2581
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "738": {
      "fn": "Wizards.mint",
      "offset": [
        2222,
        2581
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88D"
    },
    "741": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2222,
        2581
      ],
      "op": "JUMP",
      "path": "18"
    },
    "742": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "743": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x8"
    },
    "745": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "746": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x267"
    },
    "749": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "750": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FC"
    },
    "757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EB1"
    },
    "763": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "765": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA03"
    },
    "768": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "769": {
      "offset": [
        564,
        587
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "772": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "773": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x290"
    },
    "776": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "offset": [
        564,
        587
      ],
      "op": "AND",
      "path": "18"
    },
    "786": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "DUP2",
      "path": "18"
    },
    "787": {
      "fn": "ERC721.transferFrom",
      "offset": [
        564,
        587
      ],
      "op": "JUMP",
      "path": "18"
    },
    "788": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "789": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x267"
    },
    "792": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x322"
    },
    "795": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "796": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "798": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E87"
    },
    "801": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "802": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "803": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA34"
    },
    "806": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "807": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "808": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "811": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x335"
    },
    "814": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "815": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EB1"
    },
    "820": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xACA"
    },
    "825": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "826": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "827": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x267"
    },
    "830": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x348"
    },
    "833": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "834": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "836": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E52"
    },
    "839": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "840": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "841": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE5"
    },
    "844": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "845": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "846": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x290"
    },
    "849": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35B"
    },
    "852": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "853": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E52"
    },
    "858": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "859": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "860": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB78"
    },
    "863": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "864": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "865": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x267"
    },
    "868": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36E"
    },
    "871": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "872": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1EED"
    },
    "877": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "878": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEF"
    },
    "882": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BB"
    },
    "887": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC76"
    },
    "890": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "891": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "892": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "895": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x389"
    },
    "898": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "899": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "901": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F08"
    },
    "904": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMP",
      "path": "18"
    },
    "905": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "906": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCAC"
    },
    "909": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMP",
      "path": "18"
    },
    "910": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "911": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "914": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39C"
    },
    "917": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "918": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "920": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "923": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMP",
      "path": "18"
    },
    "924": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "925": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE57"
    },
    "928": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMP",
      "path": "18"
    },
    "929": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "930": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21E"
    },
    "933": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AF"
    },
    "936": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "937": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "939": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "942": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMP",
      "path": "18"
    },
    "943": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "Wizards.isActive",
      "offset": [
        1651,
        1655
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 1,
      "value": "0x1"
    },
    "947": {
      "fn": "Wizards.isActive",
      "offset": [
        1651,
        1655
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "948": {
      "fn": "Wizards.isActive",
      "offset": [
        1576,
        1679
      ],
      "op": "JUMP",
      "path": "18"
    },
    "949": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0xA"
    },
    "952": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "959": {
      "op": "SHL"
    },
    "960": {
      "op": "SUB"
    },
    "961": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "962": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x290"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "966": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "967": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x246"
    },
    "970": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED2"
    },
    "973": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "974": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "975": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "978": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DC"
    },
    "981": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "982": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "984": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EED"
    },
    "987": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMP",
      "path": "18"
    },
    "988": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "989": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEE1"
    },
    "992": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMP",
      "path": "18"
    },
    "993": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "994": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "997": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EF"
    },
    "1000": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1001": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1003": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F43"
    },
    "1006": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1007": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1008": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFCD"
    },
    "1011": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x402"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F7F"
    },
    "1025": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1092"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1031": {
      "offset": [
        499,
        521
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "1034": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x290"
    },
    "1038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "op": "SUB"
    },
    "1047": {
      "offset": [
        499,
        521
      ],
      "op": "AND",
      "path": "18"
    },
    "1048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        499,
        521
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1050": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1051": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x246"
    },
    "1054": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x428"
    },
    "1057": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1058": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1060": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "1063": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        4282,
        4597
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1064": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1065": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CA"
    },
    "1068": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        4282,
        4597
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1069": {
      "offset": [
        445,
        493
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1070": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x497"
    },
    "1073": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x43B"
    },
    "1076": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1077": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1079": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E52"
    },
    "1082": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        445,
        493
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1083": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1084": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "1086": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1088": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1089": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1091": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1092": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1093": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1094": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1096": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1097": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1098": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1099": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1100": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1102": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1103": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1104": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1105": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "1107": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1108": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1109": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1110": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1112": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1113": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1114": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1115": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1117": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1118": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1119": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1120": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "1122": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1123": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1124": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1125": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "1127": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1128": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1129": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1130": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "1132": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1133": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1134": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1135": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1137": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP10",
      "path": "18"
    },
    "1138": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1139": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1140": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "1142": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1143": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1144": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1145": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "1147": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1148": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "1149": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "ADD",
      "path": "18"
    },
    "1150": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1151": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "1152": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "1153": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "1154": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "1155": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1156": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "1157": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1158": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1159": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1160": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1161": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1162": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1163": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1164": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1165": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1166": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1167": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1168": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1169": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1170": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1172": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "AND",
      "path": "18"
    },
    "1173": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "DUP12",
      "path": "18"
    },
    "1174": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1175": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1176": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1178": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1179": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22A"
    },
    "1182": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP12",
      "path": "18"
    },
    "1183": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "1184": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "1185": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "1186": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "1187": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1188": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1189": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1190": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1191": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1192": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1193": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1194": {
      "fn": "Wizards.tokenURI",
      "offset": [
        445,
        493
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2011"
    },
    "1197": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        445,
        493
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1198": {
      "offset": [
        1318,
        1358
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1199": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "1201": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1202": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "1204": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1205": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1207": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1208": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "1210": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1211": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "1213": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1214": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4D1"
    },
    "1217": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1218": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1219": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1220": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1221": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1228": {
      "op": "SHL"
    },
    "1229": {
      "op": "SUB"
    },
    "1230": {
      "offset": [
        1318,
        1358
      ],
      "op": "AND",
      "path": "18"
    },
    "1231": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1232": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1233": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1234": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1236": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1237": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1318,
        1358
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1238": {
      "op": "SWAP6"
    },
    "1239": {
      "op": "DUP7"
    },
    "1240": {
      "op": "MSTORE"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1243": {
      "op": "DUP7"
    },
    "1244": {
      "op": "ADD"
    },
    "1245": {
      "op": "SWAP5"
    },
    "1246": {
      "op": "SWAP1"
    },
    "1247": {
      "op": "SWAP5"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "SWAP3"
    },
    "1250": {
      "op": "DUP5"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "op": "SWAP2"
    },
    "1253": {
      "op": "SWAP1"
    },
    "1254": {
      "op": "SWAP2"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1258": {
      "op": "DUP4"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "AND"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1272": {
      "op": "DUP3"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "offset": [
        1318,
        1358
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22A"
    },
    "1281": {
      "op": "JUMP"
    },
    "1282": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1283": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BB"
    },
    "1286": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x510"
    },
    "1289": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1290": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1292": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EED"
    },
    "1295": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        6885,
        7107
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1296": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1297": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x116B"
    },
    "1300": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        6885,
        7107
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1301": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1302": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21E"
    },
    "1305": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523"
    },
    "1308": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1309": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1311": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x208A"
    },
    "1314": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1315": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 3
    },
    "1325": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1326": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "1327": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1329": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1330": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1331": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1332": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1334": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1336": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1337": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1338": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1339": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1341": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1342": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1343": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1344": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1345": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1346": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1347": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1348": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1349": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1350": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1351": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1352": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1353": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1354": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1355": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1356": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1358": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1359": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1360": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BB"
    },
    "1365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x55F"
    },
    "1368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1371": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EED"
    },
    "1374": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1250"
    },
    "1379": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1380": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1381": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1389": {
      "op": "SHL"
    },
    "1390": {
      "op": "SUB"
    },
    "1391": {
      "op": "NOT"
    },
    "1392": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 4
    },
    "1393": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "7"
    },
    "1394": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1401": {
      "op": "SHL"
    },
    "1402": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "7"
    },
    "1403": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1404": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x589"
    },
    "1407": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1408": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "7"
    },
    "1409": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x589"
    },
    "1412": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1413": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12E8"
    },
    "1416": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1417": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1418": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1419": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1420": {
      "op": "POP"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1423": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1424": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4690,
        4703
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1426": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4769,
        4791
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1428": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4990,
        4998
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1429": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5176,
        5196
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59E"
    },
    "1432": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5193,
        5194
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "1434": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5176,
        5184
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1338"
    },
    "1437": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5176,
        5196
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1438": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5176,
        5196
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1439": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1441": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1442": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1444": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "ADD",
      "path": "18"
    },
    "1445": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AF"
    },
    "1448": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1449": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1450": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1451": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20D9"
    },
    "1454": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        4801,
        5214
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1455": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1456": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1458": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1459": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1461": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1462": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1463": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SUB",
      "path": "18"
    },
    "1464": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SUB",
      "path": "18"
    },
    "1465": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1466": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1467": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1468": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1470": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4801,
        5214
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1471": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4769,
        5215
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1472": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4769,
        5215
      ],
      "op": "POP",
      "path": "18"
    },
    "1473": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5260,
        5268
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 5
    },
    "1474": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5CC"
    },
    "1477": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5383,
        5386
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14D"
    },
    "1480": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5366,
        5374
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1338"
    },
    "1483": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1484": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5366,
        5388
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1485": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5494,
        5516
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5D6"
    },
    "1488": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5511,
        5514
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6F"
    },
    "1490": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5494,
        5502
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1338"
    },
    "1493": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5494,
        5516
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1494": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5494,
        5516
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1495": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5620,
        5642
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5E0"
    },
    "1498": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5637,
        5640
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xDE"
    },
    "1500": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5620,
        5628
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1338"
    },
    "1503": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5620,
        5642
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1504": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5620,
        5642
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1505": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1507": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1510": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "ADD",
      "path": "18"
    },
    "1511": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5F3"
    },
    "1514": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1515": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1516": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1517": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1518": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1519": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x223E"
    },
    "1522": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        5243,
        5712
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1523": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1524": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1526": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1527": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1530": {
      "op": "NOT"
    },
    "1531": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1532": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1533": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SUB",
      "path": "18"
    },
    "1534": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "ADD",
      "path": "18"
    },
    "1535": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1536": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1537": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        5243,
        5712
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1538": {
      "op": "POP"
    },
    "1539": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1540": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        4603,
        5720
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1541": {
      "op": "POP"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        4603,
        5720
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1544": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1545": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1547": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x0"
    },
    "1549": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1550": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1551": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x617"
    },
    "1554": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1555": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23B7"
    },
    "1558": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1559": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1560": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1561": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1563": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1564": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1566": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1567": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1568": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "1569": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "1570": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1572": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1573": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1576": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1577": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1578": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1579": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1581": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1582": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1583": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1584": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1585": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1586": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1587": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1588": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1589": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1591": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1592": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1593": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1594": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1595": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x643"
    },
    "1598": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1599": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23B7"
    },
    "1602": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1603": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1604": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1605": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1606": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x690"
    },
    "1609": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1610": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1611": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1613": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "6"
    },
    "1614": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x665"
    },
    "1617": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1618": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1621": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1622": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1623": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1624": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "1625": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "1626": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1627": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1628": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1629": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1631": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1632": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1633": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x690"
    },
    "1636": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1637": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1638": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1639": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1640": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1641": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1642": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1644": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1645": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1647": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1649": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1650": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1651": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1652": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1653": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1654": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1655": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1656": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1657": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1659": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1660": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1661": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1663": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1664": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1665": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1666": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "6"
    },
    "1667": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x673"
    },
    "1670": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1671": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1672": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1673": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "6"
    },
    "1674": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1676": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "6"
    },
    "1677": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1678": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "1679": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1680": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1681": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1682": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1683": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1684": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1685": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1686": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1687": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "1688": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1689": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1690": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1691": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1693": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 7
    },
    "1694": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1695": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1696": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1698": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1700": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1701": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1703": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1704": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1705": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "1715": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 8,
      "value": "0x718"
    },
    "1718": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1719": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1730": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1733": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1735": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1736": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "6"
    },
    "1737": {
      "op": "MSTORE"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1742": {
      "op": "DUP3"
    },
    "1743": {
      "op": "ADD"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "MSTORE"
    },
    "1783": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1801": {
      "op": "DUP3"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "MSTORE"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1812": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1813": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "6"
    },
    "1814": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1815": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "1816": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "1820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1821": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1822": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1827": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1828": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1830": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1831": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1832": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "6"
    },
    "1842": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1843": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1844": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1845": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x73F"
    },
    "1850": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1851": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB78"
    },
    "1854": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1855": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1856": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1857": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "6"
    },
    "1858": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 10
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "1868": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "1878": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "EQ",
      "path": "6"
    },
    "1879": {
      "branch": 117,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1880": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7AD"
    },
    "1883": {
      "branch": 117,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1884": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1886": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1887": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1895": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1898": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1900": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1901": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "6"
    },
    "1902": {
      "op": "MSTORE"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1907": {
      "op": "DUP3"
    },
    "1908": {
      "op": "ADD"
    },
    "1909": {
      "op": "MSTORE"
    },
    "1910": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1945": {
      "op": "DUP3"
    },
    "1946": {
      "op": "ADD"
    },
    "1947": {
      "op": "MSTORE"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1955": {
      "op": "DUP3"
    },
    "1956": {
      "op": "ADD"
    },
    "1957": {
      "op": "MSTORE"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "1964": {
      "op": "JUMP"
    },
    "1965": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1966": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 11
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1973": {
      "op": "SHL"
    },
    "1974": {
      "op": "SUB"
    },
    "1975": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 12
    },
    "1976": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "6"
    },
    "1977": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "6"
    },
    "1978": {
      "branch": 118,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1979": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C9"
    },
    "1982": {
      "branch": 118,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1983": {
      "op": "POP"
    },
    "1984": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C9"
    },
    "1987": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1988": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1989": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x523"
    },
    "1992": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1993": {
      "branch": 119,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1994": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x83B"
    },
    "1997": {
      "branch": 119,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1998": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2000": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2009": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2015": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "6"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "ADD"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "2106": {
      "op": "JUMP"
    },
    "2107": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2108": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 13,
      "value": "0x845"
    },
    "2111": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2112": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2113": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144C"
    },
    "2116": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2117": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2118": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2119": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2120": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "2121": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2122": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2123": {
      "offset": [
        6339,
        6349
      ],
      "op": "CALLER",
      "path": "18"
    },
    "2124": {
      "offset": [
        6361,
        6365
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "2125": {
      "offset": [
        6339,
        6366
      ],
      "op": "EQ",
      "path": "18"
    },
    "2126": {
      "branch": 106,
      "fn": "Wizards.verifyDuty",
      "offset": [
        6339,
        6366
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2127": {
      "offset": [
        6331,
        6384
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88A"
    },
    "2130": {
      "branch": 106,
      "offset": [
        6331,
        6384
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2131": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6331,
        6384
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2133": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6331,
        6384
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "offset": [
        6331,
        6384
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2142": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6331,
        6384
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2145": {
      "offset": [
        6331,
        6384
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2147": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6331,
        6384
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2148": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        6331,
        6384
      ],
      "op": "ADD",
      "path": "18"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "ADD"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2181": {
      "op": "ADD"
    },
    "2182": {
      "offset": [
        6331,
        6384
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "2185": {
      "op": "JUMP"
    },
    "2186": {
      "offset": [
        6331,
        6384
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2187": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        4052,
        4119
      ],
      "op": "POP",
      "path": "18"
    },
    "2188": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        4052,
        4119
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2189": {
      "fn": "Wizards.mint",
      "offset": [
        2222,
        2581
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2190": {
      "fn": "Wizards.mint",
      "offset": [
        2281,
        2307
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 14,
      "value": "0x10"
    },
    "2192": {
      "fn": "Wizards.mint",
      "offset": [
        2281,
        2307
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2193": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2195": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2196": {
      "branch": 107,
      "fn": "Wizards.mint",
      "offset": [
        2265,
        2307
      ],
      "op": "LT",
      "path": "18"
    },
    "2197": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8D1"
    },
    "2200": {
      "branch": 107,
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2201": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2203": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2212": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2215": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2217": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2218": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "ADD",
      "path": "18"
    },
    "2219": {
      "op": "MSTORE"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2224": {
      "op": "DUP3"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2244": {
      "op": "SHL"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2247": {
      "op": "DUP3"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "op": "MSTORE"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "2256": {
      "op": "JUMP"
    },
    "2257": {
      "fn": "Wizards.mint",
      "offset": [
        2257,
        2326
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2258": {
      "fn": "Wizards.mint",
      "offset": [
        2336,
        2356
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2260": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2262": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2263": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2264": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "2267": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2268": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2270": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2271": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2272": {
      "fn": "Wizards.mint",
      "offset": [
        2366,
        2367
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2274": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2275": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2276": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2278": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2279": {
      "fn": "Wizards.mint",
      "offset": [
        2369,
        2370
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2281": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2282": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2283": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2285": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2286": {
      "fn": "Wizards.mint",
      "offset": [
        2372,
        2373
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2288": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2289": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2290": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2292": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2293": {
      "fn": "Wizards.mint",
      "offset": [
        2375,
        2376
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2295": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2296": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2297": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2299": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2300": {
      "fn": "Wizards.mint",
      "offset": [
        2378,
        2379
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2302": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2303": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2304": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2306": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2307": {
      "fn": "Wizards.mint",
      "offset": [
        2381,
        2382
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2309": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2310": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2311": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2313": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2314": {
      "fn": "Wizards.mint",
      "offset": [
        2384,
        2385
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2316": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2317": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2318": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2320": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2321": {
      "fn": "Wizards.mint",
      "offset": [
        2387,
        2388
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2323": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2324": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2325": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2327": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2328": {
      "fn": "Wizards.mint",
      "offset": [
        2390,
        2391
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2330": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2331": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2332": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2334": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2335": {
      "fn": "Wizards.mint",
      "offset": [
        2393,
        2394
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2337": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2338": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2339": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2341": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ADD",
      "path": "18"
    },
    "2342": {
      "fn": "Wizards.mint",
      "offset": [
        2396,
        2408
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2344": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2346": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2347": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "GT",
      "path": "18"
    },
    "2348": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2349": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x938"
    },
    "2352": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2353": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x938"
    },
    "2356": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FFB"
    },
    "2359": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2360,
        2409
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2360": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2361": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2362": {
      "fn": "Wizards.mint",
      "offset": [
        2360,
        2409
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2363": {
      "fn": "Wizards.mint",
      "offset": [
        2336,
        2409
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "fn": "Wizards.mint",
      "offset": [
        2336,
        2409
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2366": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2459
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 15,
      "value": "0xB"
    },
    "2368": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2370": {
      "fn": "Wizards.mint",
      "offset": [
        2460,
        2473
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x94A"
    },
    "2373": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2375": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2376": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2377": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2378": {
      "fn": "Wizards.mint",
      "offset": [
        2460,
        2473
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2379": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2380": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2381": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2383": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "ADD",
      "path": "18"
    },
    "2384": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2385": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2386": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2387": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2389": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "ADD",
      "path": "18"
    },
    "2390": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2392": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2474
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2393": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2395": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2396": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2397": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2398": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2399": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2401": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2402": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2403": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2405": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2406": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2407": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2408": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2409": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2411": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2412": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2413": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2415": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2416": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2417": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2418": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2419": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2421": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2422": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2423": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2425": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2426": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2427": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2428": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2429": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2431": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2432": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2433": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2435": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2436": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2437": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2438": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2439": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2441": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2442": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2443": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "2445": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2446": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2447": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2448": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2449": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "2451": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2452": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2453": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "2455": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2456": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2457": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2458": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2459": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "2461": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2462": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2463": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "2465": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2466": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2467": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2468": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2469": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "2471": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2472": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2473": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2476": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2477": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2478": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2479": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2480": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2482": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2483": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2484": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x120"
    },
    "2487": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2488": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2489": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2490": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2491": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "2493": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2494": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2495": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x140"
    },
    "2498": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2499": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2500": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2501": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2502": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2504": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ADD",
      "path": "18"
    },
    "2505": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2507": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2510": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "EXP",
      "path": "18"
    },
    "2511": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2512": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2513": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2514": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2516": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MUL",
      "path": "18"
    },
    "2517": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "NOT",
      "path": "18"
    },
    "2518": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "AND",
      "path": "18"
    },
    "2519": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2520": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2521": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2523": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2524": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "GT",
      "path": "18"
    },
    "2525": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2526": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9E9"
    },
    "2529": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2530": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9E9"
    },
    "2533": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FFB"
    },
    "2536": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2445,
        2484
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2537": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2538": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "MUL",
      "path": "18"
    },
    "2539": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "OR",
      "path": "18"
    },
    "2540": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2541": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2542": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "POP",
      "path": "18"
    },
    "2543": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2544": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "POP",
      "path": "18"
    },
    "2545": {
      "fn": "Wizards.mint",
      "offset": [
        2445,
        2484
      ],
      "op": "POP",
      "path": "18"
    },
    "2546": {
      "fn": "Wizards.mint",
      "offset": [
        2494,
        2530
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 16,
      "value": "0x88A"
    },
    "2549": {
      "fn": "Wizards.mint",
      "offset": [
        2504,
        2514
      ],
      "op": "CALLER",
      "path": "18"
    },
    "2550": {
      "fn": "Wizards.mint",
      "offset": [
        2516,
        2529
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9FE"
    },
    "2553": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2555": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2556": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2557": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2558": {
      "fn": "Wizards.mint",
      "offset": [
        2516,
        2529
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2559": {
      "fn": "Wizards.mint",
      "offset": [
        2494,
        2503
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14BA"
    },
    "2562": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        2494,
        2530
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2563": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2564": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 17,
      "value": "0xA0D"
    },
    "2567": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2568": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2569": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D8"
    },
    "2572": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2573": {
      "branch": 120,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2574": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA29"
    },
    "2577": {
      "branch": 120,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2578": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2580": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2590": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "6"
    },
    "2593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "2596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23F2"
    },
    "2600": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0x845"
    },
    "2605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2608": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15CF"
    },
    "2611": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2612": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2613": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2615": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0xA3F"
    },
    "2618": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2619": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBEF"
    },
    "2622": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2623": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2624": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2625": {
      "branch": 130,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "7"
    },
    "2626": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA1"
    },
    "2629": {
      "branch": 130,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2630": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2632": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2633": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2641": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2644": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2646": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2647": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "7"
    },
    "2648": {
      "op": "MSTORE"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2653": {
      "op": "DUP3"
    },
    "2654": {
      "op": "ADD"
    },
    "2655": {
      "op": "MSTORE"
    },
    "2656": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "op": "MSTORE"
    },
    "2694": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2711": {
      "op": "DUP3"
    },
    "2712": {
      "op": "ADD"
    },
    "2713": {
      "op": "MSTORE"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70F"
    },
    "2720": {
      "op": "JUMP"
    },
    "2721": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "op": "SUB"
    },
    "2731": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 20
    },
    "2732": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2733": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2734": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "7"
    },
    "2735": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2737": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2738": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2739": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2740": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "2742": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2744": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2745": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2746": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2747": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2749": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2750": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2751": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2752": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "2753": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2754": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2755": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2756": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2757": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2758": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2759": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2760": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2761": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2762": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2763": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0x845"
    },
    "2766": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2767": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2768": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2769": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2771": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2772": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2773": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2775": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "6"
    },
    "2776": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2778": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2779": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2780": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2782": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2783": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2784": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "6"
    },
    "2785": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1092"
    },
    "2788": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2789": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2790": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2792": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0xAF0"
    },
    "2795": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "2797": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2798": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2799": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2800": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2801": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2802": {
      "branch": 131,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "7"
    },
    "2803": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB53"
    },
    "2806": {
      "branch": 131,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2807": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2809": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2816": {
      "op": "SHL"
    },
    "2817": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2818": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2821": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2823": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2824": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "2825": {
      "op": "MSTORE"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2830": {
      "op": "DUP3"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "MSTORE"
    },
    "2833": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2868": {
      "op": "DUP3"
    },
    "2869": {
      "op": "ADD"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2889": {
      "op": "DUP3"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2894": {
      "op": "ADD"
    },
    "2895": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x70F"
    },
    "2898": {
      "op": "JUMP"
    },
    "2899": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2900": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 23,
      "value": "0x8"
    },
    "2902": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2903": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2904": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2905": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2906": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "7"
    },
    "2907": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB66"
    },
    "2910": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2911": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB66"
    },
    "2914": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2443"
    },
    "2917": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2918": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2919": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2920": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2922": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2923": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2925": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2927": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2928": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "7"
    },
    "2929": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2930": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2931": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "7"
    },
    "2932": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2933": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2934": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "7"
    },
    "2935": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2936": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2937": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2939": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2940": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2941": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2942": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2944": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2946": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2947": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2949": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2950": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2951": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "SUB"
    },
    "2960": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "6"
    },
    "2961": {
      "branch": 121,
      "fn": "ERC721.ownerOf",
      "offset": [
        2362,
        2381
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 24
    },
    "2962": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "2965": {
      "branch": 121,
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2966": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2968": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2977": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2980": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2982": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2983": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "6"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2989": {
      "op": "DUP3"
    },
    "2990": {
      "op": "ADD"
    },
    "2991": {
      "op": "MSTORE"
    },
    "2992": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3027": {
      "op": "DUP3"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3045": {
      "op": "DUP3"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "MSTORE"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3050": {
      "op": "ADD"
    },
    "3051": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "3054": {
      "op": "JUMP"
    },
    "3055": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "op": "SUB"
    },
    "3066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 25
    },
    "3067": {
      "branch": 122,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "6"
    },
    "3068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC5A"
    },
    "3071": {
      "branch": 122,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3074": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3081": {
      "op": "SHL"
    },
    "3082": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3086": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3088": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "6"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3095": {
      "op": "DUP3"
    },
    "3096": {
      "op": "ADD"
    },
    "3097": {
      "op": "MSTORE"
    },
    "3098": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3133": {
      "op": "DUP3"
    },
    "3134": {
      "op": "ADD"
    },
    "3135": {
      "op": "MSTORE"
    },
    "3136": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3149": {
      "op": "SHL"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3152": {
      "op": "DUP3"
    },
    "3153": {
      "op": "ADD"
    },
    "3154": {
      "op": "MSTORE"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3157": {
      "op": "ADD"
    },
    "3158": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "3161": {
      "op": "JUMP"
    },
    "3162": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3170": {
      "op": "SHL"
    },
    "3171": {
      "op": "SUB"
    },
    "3172": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "6",
      "statement": 26
    },
    "3173": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3175": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3176": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3177": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3178": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3180": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3182": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3183": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3185": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3186": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3187": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3188": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3189": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3191": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3193": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3200": {
      "op": "SHL"
    },
    "3201": {
      "op": "SUB"
    },
    "3202": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "3203": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3204": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "3205": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA0"
    },
    "3208": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3209": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3211": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3218": {
      "op": "SHL"
    },
    "3219": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3220": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3221": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3223": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "3224": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70F"
    },
    "3227": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3228": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2459"
    },
    "3231": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3232": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 27,
      "value": "0xCAA"
    },
    "3236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x177A"
    },
    "3241": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3243": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3244": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3245": {
      "offset": [
        6699,
        6706
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "3247": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6699,
        6706
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3254": {
      "op": "SHL"
    },
    "3255": {
      "op": "SUB"
    },
    "3256": {
      "offset": [
        6699,
        6706
      ],
      "op": "AND",
      "path": "18"
    },
    "3257": {
      "offset": [
        6685,
        6695
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3258": {
      "offset": [
        6685,
        6706
      ],
      "op": "EQ",
      "path": "18"
    },
    "3259": {
      "offset": [
        6664,
        6768
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD12"
    },
    "3262": {
      "offset": [
        6664,
        6768
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3263": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6664,
        6768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3265": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6664,
        6768
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "offset": [
        6664,
        6768
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3274": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6664,
        6768
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3277": {
      "offset": [
        6664,
        6768
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3279": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6664,
        6768
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3280": {
      "fn": "Wizards.reportBattle",
      "offset": [
        6664,
        6768
      ],
      "op": "ADD",
      "path": "18"
    },
    "3281": {
      "op": "MSTORE"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3284": {
      "op": "DUP1"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3333": {
      "op": "SHL"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3336": {
      "op": "DUP3"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3341": {
      "op": "ADD"
    },
    "3342": {
      "offset": [
        6664,
        6768
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "3345": {
      "op": "JUMP"
    },
    "3346": {
      "offset": [
        6664,
        6768
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3347": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 28,
      "value": "0x0"
    },
    "3349": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3350": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3351": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3352": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3194
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3354": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3356": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3357": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3359": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3360": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3361": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3363": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3212
      ],
      "op": "ADD",
      "path": "18"
    },
    "3364": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3365": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3366": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3216,
        3220
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3367": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3216,
        3220
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3368": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3207
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3369": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD33"
    },
    "3372": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3373": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3216,
        3220
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3374": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3216,
        3220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3375": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3378": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3180,
        3220
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3379": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3380": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3381": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3382": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3180,
        3220
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3275
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 29
    },
    "3386": {
      "branch": 108,
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3275
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3387": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD45"
    },
    "3390": {
      "branch": 108,
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3391": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3282,
        3283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3393": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD48"
    },
    "3396": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3397": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3398": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3278,
        3279
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3400": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3268,
        3283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3401": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3403": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "AND",
      "path": "18"
    },
    "3404": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3244
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3406": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3408": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3245,
        3256
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3409": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3410": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3411": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3413": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "ADD",
      "path": "18"
    },
    "3414": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3415": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3416": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3417": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3419": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "ADD",
      "path": "18"
    },
    "3420": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3422": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3257
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3423": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3264
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3425": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3264
      ],
      "op": "ADD",
      "path": "18"
    },
    "3426": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3264
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3428": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3429": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3430": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3431": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD70"
    },
    "3434": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3435": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3436": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3439": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3230,
        3283
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3440": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3441": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3442": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3443": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3230,
        3283
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 30,
      "value": "0x0"
    },
    "3448": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3449": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3450": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3451": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3453": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3455": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3456": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3458": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3459": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3460": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3334
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3462": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3334
      ],
      "op": "ADD",
      "path": "18"
    },
    "3463": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3464": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3465": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3338,
        3348
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3466": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3338,
        3348
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3467": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3320
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3468": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD96"
    },
    "3471": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3472": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3338,
        3348
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3473": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3338,
        3348
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3474": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3477": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3293,
        3348
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3478": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3479": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3480": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3481": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3293,
        3348
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3482": {
      "op": "POP"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3434
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 31
    },
    "3485": {
      "branch": 109,
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3434
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3486": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDA8"
    },
    "3489": {
      "branch": 109,
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3490": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3441,
        3442
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3492": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDAB"
    },
    "3495": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3496": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3497": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3437,
        3438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3499": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3427,
        3442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3500": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3502": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "AND",
      "path": "18"
    },
    "3503": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3405
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3505": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3507": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3406,
        3417
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3508": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3509": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3510": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3512": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "ADD",
      "path": "18"
    },
    "3513": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3514": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3515": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3516": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3518": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "ADD",
      "path": "18"
    },
    "3519": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3521": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3418
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3522": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3423
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "3524": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3423
      ],
      "op": "ADD",
      "path": "18"
    },
    "3525": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3423
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3527": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3528": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3529": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3530": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD3"
    },
    "3533": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3534": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3535": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3538": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3391,
        3442
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3539": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3540": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3541": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3542": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3391,
        3442
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 32,
      "value": "0x0"
    },
    "3547": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3548": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3549": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3550": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3466
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3552": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3554": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3555": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3557": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3558": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3559": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3486
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3561": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3486
      ],
      "op": "ADD",
      "path": "18"
    },
    "3562": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3563": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3564": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3490,
        3494
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3565": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3490,
        3494
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3566": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3479
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3567": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDF9"
    },
    "3570": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3571": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3490,
        3494
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3572": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3490,
        3494
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3573": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3576": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3452,
        3494
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3577": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3578": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3579": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3580": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3452,
        3494
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 33,
      "value": "0x0"
    },
    "3585": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3586": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3587": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3588": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3518
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3590": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3592": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3593": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3595": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3596": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3597": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3545
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3599": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3545
      ],
      "op": "ADD",
      "path": "18"
    },
    "3600": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3601": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3602": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3549,
        3559
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3603": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3549,
        3559
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3604": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3531
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3605": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE1F"
    },
    "3608": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3609": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3549,
        3559
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3610": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3549,
        3559
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3611": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3614": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3504,
        3559
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3615": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3616": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3617": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3618": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3504,
        3559
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3619": {
      "op": "POP"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "branch": 110,
      "fn": "Wizards.reportBattle",
      "offset": [
        3573,
        3580
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3622": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3570,
        3699
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE50"
    },
    "3625": {
      "branch": 110,
      "fn": "Wizards.reportBattle",
      "offset": [
        3570,
        3699
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3626": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 34,
      "value": "0x0"
    },
    "3628": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3629": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3630": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3631": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3633": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3635": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3636": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3638": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3639": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3640": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "3642": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3637
      ],
      "op": "ADD",
      "path": "18"
    },
    "3643": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3644": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3645": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3641,
        3653
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3646": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3641,
        3653
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3647": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3623
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3648": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE4A"
    },
    "3651": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3652": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3641,
        3653
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3653": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3641,
        3653
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3654": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3657": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3658": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3659": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3660": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3661": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3596,
        3653
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3570,
        3699
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3665": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "POP",
      "path": "18"
    },
    "3666": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "POP",
      "path": "18"
    },
    "3667": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "POP",
      "path": "18"
    },
    "3668": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "POP",
      "path": "18"
    },
    "3669": {
      "fn": "Wizards.reportBattle",
      "offset": [
        3021,
        3705
      ],
      "op": "POP",
      "path": "18"
    },
    "3670": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        3021,
        3705
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3671": {
      "fn": "Wizards.initiate",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3672": {
      "fn": "Wizards.initiate",
      "offset": [
        2733,
        2743
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 35
    },
    "3673": {
      "fn": "Wizards.initiate",
      "offset": [
        2712,
        2729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE61"
    },
    "3676": {
      "fn": "Wizards.initiate",
      "offset": [
        2720,
        2728
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3677": {
      "fn": "Wizards.initiate",
      "offset": [
        2712,
        2719
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB78"
    },
    "3680": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        2712,
        2729
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3681": {
      "fn": "Wizards.initiate",
      "offset": [
        2712,
        2729
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3688": {
      "op": "SHL"
    },
    "3689": {
      "op": "SUB"
    },
    "3690": {
      "fn": "Wizards.initiate",
      "offset": [
        2712,
        2743
      ],
      "op": "AND",
      "path": "18"
    },
    "3691": {
      "branch": 111,
      "fn": "Wizards.initiate",
      "offset": [
        2712,
        2743
      ],
      "op": "EQ",
      "path": "18"
    },
    "3692": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEA7"
    },
    "3695": {
      "branch": 111,
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3696": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3698": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3705": {
      "op": "SHL"
    },
    "3706": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3707": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3710": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3712": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3713": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "ADD",
      "path": "18"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3719": {
      "op": "DUP3"
    },
    "3720": {
      "op": "ADD"
    },
    "3721": {
      "op": "MSTORE"
    },
    "3722": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "3750": {
      "op": "JUMP"
    },
    "3751": {
      "fn": "Wizards.initiate",
      "offset": [
        2704,
        2761
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3752": {
      "fn": "Wizards.initiate",
      "offset": [
        2803,
        2824
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3754": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3755": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3756": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3757": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "3759": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3761": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3762": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3764": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3765": {
      "fn": "Wizards.initiate",
      "offset": [
        2827,
        2851
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3766": {
      "fn": "Wizards.initiate",
      "offset": [
        2891,
        2906
      ],
      "op": "TIMESTAMP",
      "path": "18",
      "statement": 36
    },
    "3767": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3769": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2888
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3770": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2888
      ],
      "op": "ADD",
      "path": "18"
    },
    "3771": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2906
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3772": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2906
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3773": {
      "fn": "Wizards.initiate",
      "offset": [
        2861,
        2906
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3774": {
      "fn": "Wizards.initiate",
      "offset": [
        2968,
        3008
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 37,
      "value": "0x11"
    },
    "3776": {
      "fn": "Wizards.initiate",
      "offset": [
        2968,
        3008
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3777": {
      "fn": "Wizards.initiate",
      "offset": [
        2950,
        3008
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEC9"
    },
    "3780": {
      "fn": "Wizards.initiate",
      "offset": [
        2950,
        3008
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3781": {
      "fn": "Wizards.initiate",
      "offset": [
        2950,
        3008
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "3784": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        2950,
        3008
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3785": {
      "fn": "Wizards.initiate",
      "offset": [
        2950,
        3008
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3786": {
      "fn": "Wizards.initiate",
      "offset": [
        2916,
        2947
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3788": {
      "fn": "Wizards.initiate",
      "offset": [
        2916,
        2947
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3789": {
      "fn": "Wizards.initiate",
      "offset": [
        2916,
        2947
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3790": {
      "fn": "Wizards.initiate",
      "offset": [
        2916,
        2947
      ],
      "op": "ADD",
      "path": "18"
    },
    "3791": {
      "fn": "Wizards.initiate",
      "offset": [
        2916,
        3008
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        2649,
        3015
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3794": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3795": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "3797": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 38,
      "value": "0x1"
    },
    "3799": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3800": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3801": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x617"
    },
    "3804": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3805": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23B7"
    },
    "3808": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3809": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3810": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3812": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3819": {
      "op": "SHL"
    },
    "3820": {
      "op": "SUB"
    },
    "3821": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "3822": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "3823": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "3824": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF0B"
    },
    "3827": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3828": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3830": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3839": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3840": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "3842": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "3843": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70F"
    },
    "3846": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3847": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2459"
    },
    "3850": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3851": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "op": "SUB"
    },
    "3860": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 39
    },
    "3861": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "AND",
      "path": "18"
    },
    "3862": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3863": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3864": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3865": {
      "branch": 112,
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7216
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3866": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7241
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF31"
    },
    "3869": {
      "branch": 112,
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7241
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7233,
        7241
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "3873": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7233,
        7241
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3880": {
      "op": "SHL"
    },
    "3881": {
      "op": "SUB"
    },
    "3882": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7220,
        7241
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3883": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7220,
        7241
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3884": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7220,
        7241
      ],
      "op": "AND",
      "path": "18"
    },
    "3885": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7233,
        7241
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3886": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7233,
        7241
      ],
      "op": "AND",
      "path": "18"
    },
    "3887": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7220,
        7241
      ],
      "op": "EQ",
      "path": "18"
    },
    "3888": {
      "branch": 113,
      "fn": "Wizards.updateVerifier",
      "offset": [
        7220,
        7241
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3889": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7193,
        7241
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3890": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF78"
    },
    "3893": {
      "branch": 113,
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3894": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3896": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3903": {
      "op": "SHL"
    },
    "3904": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3905": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3908": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3910": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3911": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "ADD",
      "path": "18"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3917": {
      "op": "DUP3"
    },
    "3918": {
      "op": "ADD"
    },
    "3919": {
      "op": "MSTORE"
    },
    "3920": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3947": {
      "op": "SHL"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3950": {
      "op": "DUP3"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "3959": {
      "op": "JUMP"
    },
    "3960": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7185,
        7270
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3961": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7288
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 40,
      "value": "0xD"
    },
    "3963": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3964": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3971": {
      "op": "SHL"
    },
    "3972": {
      "op": "SUB"
    },
    "3973": {
      "op": "NOT"
    },
    "3974": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "AND",
      "path": "18"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3981": {
      "op": "SHL"
    },
    "3982": {
      "op": "SUB"
    },
    "3983": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3984": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "AND",
      "path": "18"
    },
    "3985": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3986": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3987": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "OR",
      "path": "18"
    },
    "3988": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3989": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3990": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7280,
        7300
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3991": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 41,
      "value": "0x40"
    },
    "3993": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3994": {
      "op": "SWAP1"
    },
    "3995": {
      "op": "DUP2"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "4030": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4035": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4037": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4038": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4039": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4040": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "SUB",
      "path": "18"
    },
    "4041": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4042": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7315,
        7337
      ],
      "op": "LOG1",
      "path": "18"
    },
    "4043": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        7113,
        7344
      ],
      "op": "POP",
      "path": "18"
    },
    "4044": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        7113,
        7344
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4045": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 42
    },
    "4055": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "6"
    },
    "4056": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4057": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "EQ",
      "path": "6"
    },
    "4058": {
      "branch": 123,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4059": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1026"
    },
    "4062": {
      "branch": 123,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4063": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4065": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4074": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4077": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4079": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4080": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "6"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4086": {
      "op": "DUP3"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4124": {
      "op": "DUP3"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4129": {
      "op": "ADD"
    },
    "4130": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "4133": {
      "op": "JUMP"
    },
    "4134": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4135": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4136": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x0"
    },
    "4138": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4139": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4140": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4141": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "4143": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4145": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4146": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4147": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4148": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4150": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4151": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4152": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "SUB"
    },
    "4161": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4162": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "6"
    },
    "4163": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4164": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4165": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4166": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4167": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4168": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4169": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4170": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4171": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4172": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4173": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4174": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4177": {
      "op": "NOT"
    },
    "4178": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "6"
    },
    "4179": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "6"
    },
    "4180": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4181": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4182": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4183": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4184": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "6"
    },
    "4185": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4186": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4187": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4188": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 44
    },
    "4189": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4190": {
      "op": "SWAP1"
    },
    "4191": {
      "op": "DUP2"
    },
    "4192": {
      "op": "MSTORE"
    },
    "4193": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4194": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4195": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4196": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "4229": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4233": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4235": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4236": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "6"
    },
    "4237": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "6"
    },
    "4239": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "4240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "4241": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4243": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 45,
      "value": "0x109C"
    },
    "4246": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4247": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4248": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D8"
    },
    "4251": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4252": {
      "branch": 124,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4253": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B8"
    },
    "4256": {
      "branch": 124,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4257": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4259": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4266": {
      "op": "SHL"
    },
    "4267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "6"
    },
    "4272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "4275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23F2"
    },
    "4279": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 46,
      "value": "0x10C4"
    },
    "4284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4285": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4286": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4287": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4288": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17CC"
    },
    "4291": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4292": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4293": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "4294": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "4295": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "4296": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "4297": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4298": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4282,
        4597
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4299": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4301": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4302": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4303": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4304": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4306": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4308": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4309": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4311": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4312": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4313": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4314": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4356,
        4369
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4316": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4356,
        4369
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4323": {
      "op": "SHL"
    },
    "4324": {
      "op": "SUB"
    },
    "4325": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "4326": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 47,
      "value": "0x1149"
    },
    "4329": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4330": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4332": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4341": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4344": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4346": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4347": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "ADD",
      "path": "18"
    },
    "4348": {
      "op": "MSTORE"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4353": {
      "op": "DUP3"
    },
    "4354": {
      "op": "ADD"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4391": {
      "op": "DUP3"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4412": {
      "op": "SHL"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4415": {
      "op": "DUP3"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "MSTORE"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "4424": {
      "op": "JUMP"
    },
    "4425": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4381,
        4458
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4426": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 48,
      "value": "0x589"
    },
    "4429": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4490,
        4498
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4430": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4432": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4433": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4434": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "4436": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "ADD",
      "path": "18"
    },
    "4437": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4439": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4440": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4441": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x57"
    },
    "4443": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4444": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4445": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4447": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "ADD",
      "path": "18"
    },
    "4448": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2606"
    },
    "4451": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x57"
    },
    "4453": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4454": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4590
      ],
      "op": "CODECOPY",
      "path": "18"
    },
    "4455": {
      "fn": "Wizards.tokenURI",
      "offset": [
        4475,
        4489
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x58F"
    },
    "4458": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        4475,
        4590
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4459": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6885,
        7107
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4460": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4462": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "SUB"
    },
    "4471": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4472": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4473": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4474": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1195"
    },
    "4477": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4478": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4480": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4487": {
      "op": "SHL"
    },
    "4488": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4489": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4490": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4492": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4493": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70F"
    },
    "4496": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4497": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2459"
    },
    "4500": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4501": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4508": {
      "op": "SHL"
    },
    "4509": {
      "op": "SUB"
    },
    "4510": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 49
    },
    "4511": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "AND",
      "path": "18"
    },
    "4512": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4513": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4514": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4515": {
      "branch": 114,
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        6985
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4516": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        7008
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11BB"
    },
    "4519": {
      "branch": 114,
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        7008
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7001,
        7008
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "4523": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7001,
        7008
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "op": "SUB"
    },
    "4532": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6989,
        7008
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4533": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6989,
        7008
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4534": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6989,
        7008
      ],
      "op": "AND",
      "path": "18"
    },
    "4535": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7001,
        7008
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4536": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7001,
        7008
      ],
      "op": "AND",
      "path": "18"
    },
    "4537": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6989,
        7008
      ],
      "op": "EQ",
      "path": "18"
    },
    "4538": {
      "branch": 115,
      "fn": "Wizards.updateBattler",
      "offset": [
        6989,
        7008
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4539": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6963,
        7008
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4540": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1202"
    },
    "4543": {
      "branch": 115,
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4544": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4546": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4553": {
      "op": "SHL"
    },
    "4554": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4555": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4558": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4560": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4561": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "ADD",
      "path": "18"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4567": {
      "op": "DUP3"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "MSTORE"
    },
    "4570": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4597": {
      "op": "SHL"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4600": {
      "op": "DUP3"
    },
    "4601": {
      "op": "ADD"
    },
    "4602": {
      "op": "MSTORE"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4605": {
      "op": "ADD"
    },
    "4606": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x70F"
    },
    "4609": {
      "op": "JUMP"
    },
    "4610": {
      "fn": "Wizards.updateBattler",
      "offset": [
        6955,
        7037
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4611": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7054
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 50,
      "value": "0xC"
    },
    "4613": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4614": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "op": "NOT"
    },
    "4624": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "AND",
      "path": "18"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "op": "SUB"
    },
    "4633": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4634": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "AND",
      "path": "18"
    },
    "4635": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4636": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4637": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "OR",
      "path": "18"
    },
    "4638": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4639": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4640": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7047,
        7065
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4641": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 51,
      "value": "0x40"
    },
    "4643": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7080,
        7100
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4644": {
      "op": "SWAP1"
    },
    "4645": {
      "op": "DUP2"
    },
    "4646": {
      "op": "MSTORE"
    },
    "4647": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "4680": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7080,
        7100
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4683": {
      "op": "ADD"
    },
    "4684": {
      "fn": "Wizards.updateBattler",
      "offset": [
        7080,
        7100
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFC2"
    },
    "4687": {
      "op": "JUMP"
    },
    "4688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4689": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4691": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4698": {
      "op": "SHL"
    },
    "4699": {
      "op": "SUB"
    },
    "4700": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4701": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "4702": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4703": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x127A"
    },
    "4706": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4707": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4709": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4718": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4719": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4721": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4722": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70F"
    },
    "4725": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4726": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2459"
    },
    "4729": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4730": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4737": {
      "op": "SHL"
    },
    "4738": {
      "op": "SUB"
    },
    "4739": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 52
    },
    "4740": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "8"
    },
    "4741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12DF"
    },
    "4744": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4754": {
      "op": "SHL"
    },
    "4755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "8"
    },
    "4763": {
      "op": "MSTORE"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4768": {
      "op": "DUP3"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "op": "MSTORE"
    },
    "4771": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4806": {
      "op": "DUP3"
    },
    "4807": {
      "op": "ADD"
    },
    "4808": {
      "op": "MSTORE"
    },
    "4809": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4818": {
      "op": "SHL"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4821": {
      "op": "DUP3"
    },
    "4822": {
      "op": "ADD"
    },
    "4823": {
      "op": "MSTORE"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4826": {
      "op": "ADD"
    },
    "4827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x70F"
    },
    "4830": {
      "op": "JUMP"
    },
    "4831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 53,
      "value": "0x88A"
    },
    "4835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x177A"
    },
    "4839": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4840": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4841": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "op": "NOT"
    },
    "4852": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 54
    },
    "4853": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "4854": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4861": {
      "op": "SHL"
    },
    "4862": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "6"
    },
    "4863": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4864": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1319"
    },
    "4867": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4868": {
      "op": "POP"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "op": "SUB"
    },
    "4877": {
      "op": "NOT"
    },
    "4878": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4879": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "6"
    },
    "4880": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "6"
    },
    "4889": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4890": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4891": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "4894": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "op": "NOT"
    },
    "4913": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 55
    },
    "4914": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "5"
    },
    "4915": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "5"
    },
    "4916": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x589"
    },
    "4919": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4920": {
      "fn": "Wizards.uint2str",
      "offset": [
        5726,
        6193
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4921": {
      "fn": "Wizards.uint2str",
      "offset": [
        5776,
        5803
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4923": {
      "branch": 116,
      "fn": "Wizards.uint2str",
      "offset": [
        5819,
        5826
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4924": {
      "fn": "Wizards.uint2str",
      "offset": [
        5815,
        5863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x135C"
    },
    "4927": {
      "branch": 116,
      "fn": "Wizards.uint2str",
      "offset": [
        5815,
        5863
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 56,
      "value": "0x40"
    },
    "4932": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4933": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4934": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4935": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4936": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "ADD",
      "path": "18"
    },
    "4937": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4938": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4939": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4940": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4942": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4943": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4948": {
      "op": "SHL"
    },
    "4949": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4951": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4952": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "ADD",
      "path": "18"
    },
    "4953": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4954": {
      "fn": "Wizards.uint2str",
      "offset": [
        5842,
        5852
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4955": {
      "fn": "Wizards.uint2str",
      "jump": "o",
      "offset": [
        5726,
        6193
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4956": {
      "fn": "Wizards.uint2str",
      "offset": [
        5815,
        5863
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4957": {
      "fn": "Wizards.uint2str",
      "offset": [
        5881,
        5883
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4958": {
      "fn": "Wizards.uint2str",
      "offset": [
        5872,
        5878
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4960": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4961": {
      "fn": "Wizards.uint2str",
      "offset": [
        5918,
        5924
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4962": {
      "fn": "Wizards.uint2str",
      "offset": [
        5918,
        5924
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4963": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1386"
    },
    "4966": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4967": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 57
    },
    "4968": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1370"
    },
    "4971": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4972": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24BC"
    },
    "4975": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        5940,
        5945
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4976": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4977": {
      "fn": "Wizards.uint2str",
      "offset": [
        5940,
        5945
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4978": {
      "op": "POP"
    },
    "4979": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 58,
      "value": "0x137F"
    },
    "4982": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4983": {
      "op": "POP"
    },
    "4984": {
      "fn": "Wizards.uint2str",
      "offset": [
        5964,
        5966
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "4986": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4987": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24ED"
    },
    "4990": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        5959,
        5966
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4991": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4992": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4993": {
      "fn": "Wizards.uint2str",
      "offset": [
        5959,
        5966
      ],
      "op": "POP",
      "path": "18"
    },
    "4994": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1360"
    },
    "4997": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4998": {
      "fn": "Wizards.uint2str",
      "offset": [
        5911,
        5977
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4999": {
      "fn": "Wizards.uint2str",
      "offset": [
        5986,
        6003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5001": {
      "fn": "Wizards.uint2str",
      "offset": [
        6016,
        6019
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5002": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5011": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5012": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "GT",
      "path": "18"
    },
    "5013": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5014": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13A1"
    },
    "5017": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5018": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13A1"
    },
    "5021": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D00"
    },
    "5024": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6006,
        6020
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5025": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5026": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5028": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5029": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5030": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5031": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5032": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5033": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5034": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5036": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ADD",
      "path": "18"
    },
    "5037": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "5039": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "NOT",
      "path": "18"
    },
    "5040": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "AND",
      "path": "18"
    },
    "5041": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5043": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ADD",
      "path": "18"
    },
    "5044": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5045": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ADD",
      "path": "18"
    },
    "5046": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5048": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5049": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5050": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5051": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13CB"
    },
    "5054": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5055": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5057": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5058": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ADD",
      "path": "18"
    },
    "5059": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5060": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5061": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "5062": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5063": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "5064": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "ADD",
      "path": "18"
    },
    "5065": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "fn": "Wizards.uint2str",
      "offset": [
        6006,
        6020
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "fn": "Wizards.uint2str",
      "offset": [
        5986,
        6020
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5070": {
      "op": "POP"
    },
    "5071": {
      "fn": "Wizards.uint2str",
      "offset": [
        6030,
        6036
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5073": {
      "fn": "Wizards.uint2str",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DB"
    },
    "5076": {
      "fn": "Wizards.uint2str",
      "offset": [
        6045,
        6046
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "5078": {
      "fn": "Wizards.uint2str",
      "offset": [
        6039,
        6042
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5079": {
      "fn": "Wizards.uint2str",
      "offset": [
        6039,
        6046
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2501"
    },
    "5082": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6039,
        6046
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5083": {
      "fn": "Wizards.uint2str",
      "offset": [
        6039,
        6046
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5084": {
      "fn": "Wizards.uint2str",
      "offset": [
        6030,
        6046
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5085": {
      "fn": "Wizards.uint2str",
      "offset": [
        6030,
        6046
      ],
      "op": "POP",
      "path": "18"
    },
    "5086": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5087": {
      "fn": "Wizards.uint2str",
      "offset": [
        6063,
        6070
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5088": {
      "fn": "Wizards.uint2str",
      "offset": [
        6063,
        6070
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5089": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1443"
    },
    "5092": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5093": {
      "fn": "Wizards.uint2str",
      "offset": [
        6116,
        6123
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 59,
      "value": "0x13EF"
    },
    "5096": {
      "fn": "Wizards.uint2str",
      "offset": [
        6121,
        6123
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "5098": {
      "fn": "Wizards.uint2str",
      "offset": [
        6116,
        6118
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5099": {
      "fn": "Wizards.uint2str",
      "offset": [
        6116,
        6123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2518"
    },
    "5102": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6116,
        6123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5103": {
      "fn": "Wizards.uint2str",
      "offset": [
        6116,
        6123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5104": {
      "fn": "Wizards.uint2str",
      "offset": [
        6111,
        6123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13FA"
    },
    "5107": {
      "fn": "Wizards.uint2str",
      "offset": [
        6111,
        6123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5108": {
      "fn": "Wizards.uint2str",
      "offset": [
        6111,
        6113
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x30"
    },
    "5110": {
      "fn": "Wizards.uint2str",
      "offset": [
        6111,
        6123
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24A4"
    },
    "5113": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6111,
        6123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5114": {
      "fn": "Wizards.uint2str",
      "offset": [
        6111,
        6123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5115": {
      "fn": "Wizards.uint2str",
      "offset": [
        6098,
        6125
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "5117": {
      "fn": "Wizards.uint2str",
      "offset": [
        6098,
        6125
      ],
      "op": "SHL",
      "path": "18"
    },
    "5118": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6090
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5119": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5120": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1408"
    },
    "5123": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5124": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x252C"
    },
    "5127": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6091,
        6094
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5128": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5129": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5130": {
      "fn": "Wizards.uint2str",
      "offset": [
        6091,
        6094
      ],
      "op": "POP",
      "path": "18"
    },
    "5131": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5132": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5133": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5134": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "LT",
      "path": "18"
    },
    "5135": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x141A"
    },
    "5138": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5139": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x141A"
    },
    "5142": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2443"
    },
    "5145": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6086,
        6095
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5146": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5147": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5149": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "ADD",
      "path": "18"
    },
    "5150": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6095
      ],
      "op": "ADD",
      "path": "18"
    },
    "5151": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5158": {
      "op": "SHL"
    },
    "5159": {
      "op": "SUB"
    },
    "5160": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "NOT",
      "path": "18"
    },
    "5161": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "AND",
      "path": "18"
    },
    "5162": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5163": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5164": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5166": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "BYTE",
      "path": "18"
    },
    "5167": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5168": {
      "fn": "Wizards.uint2str",
      "offset": [
        6086,
        6125
      ],
      "op": "MSTORE8",
      "path": "18"
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 60,
      "value": "0x143C"
    },
    "5173": {
      "fn": "Wizards.uint2str",
      "offset": [
        6145,
        6147
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "5175": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5176": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24ED"
    },
    "5179": {
      "fn": "Wizards.uint2str",
      "jump": "i",
      "offset": [
        6139,
        6147
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5180": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5181": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5182": {
      "fn": "Wizards.uint2str",
      "offset": [
        6139,
        6147
      ],
      "op": "POP",
      "path": "18"
    },
    "5183": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x13DE"
    },
    "5186": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5187": {
      "fn": "Wizards.uint2str",
      "offset": [
        6056,
        6158
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5188": {
      "op": "POP"
    },
    "5189": {
      "fn": "Wizards.uint2str",
      "offset": [
        6181,
        6185
      ],
      "op": "SWAP5",
      "path": "18",
      "statement": 61
    },
    "5190": {
      "fn": "Wizards.uint2str",
      "offset": [
        5726,
        6193
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5191": {
      "op": "POP"
    },
    "5192": {
      "op": "POP"
    },
    "5193": {
      "op": "POP"
    },
    "5194": {
      "op": "POP"
    },
    "5195": {
      "fn": "Wizards.uint2str",
      "jump": "o",
      "offset": [
        5726,
        6193
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5196": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5197": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 62,
      "value": "0x0"
    },
    "5199": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5200": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5201": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5202": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5204": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5206": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5207": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5209": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5210": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5211": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5212": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5219": {
      "op": "SHL"
    },
    "5220": {
      "op": "SUB"
    },
    "5221": {
      "op": "NOT"
    },
    "5222": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "5223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "op": "SUB"
    },
    "5231": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5232": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "5233": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5234": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5235": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "6"
    },
    "5236": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5237": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5238": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5239": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5240": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5241": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 63,
      "value": "0x1481"
    },
    "5244": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5245": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB78"
    },
    "5248": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5249": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5256": {
      "op": "SHL"
    },
    "5257": {
      "op": "SUB"
    },
    "5258": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "6"
    },
    "5259": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "5292": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5294": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5295": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5297": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5298": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5299": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5300": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "6"
    },
    "5301": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5302": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "6"
    },
    "5303": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "5304": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "5305": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5306": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5307": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 64,
      "value": "0x14D4"
    },
    "5310": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5311": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5312": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5314": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5315": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5316": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5318": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "6"
    },
    "5319": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5321": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5322": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5323": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5325": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5326": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5327": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "6"
    },
    "5328": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FF"
    },
    "5331": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5332": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5333": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "5334": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "5335": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5336": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5337": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5339": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5340": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5341": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5342": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5344": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5346": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5347": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5349": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5350": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5351": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5358": {
      "op": "SHL"
    },
    "5359": {
      "op": "SUB"
    },
    "5360": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "5361": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 65,
      "value": "0x1551"
    },
    "5364": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5365": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5376": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5379": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5381": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5382": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "6"
    },
    "5383": {
      "op": "MSTORE"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5388": {
      "op": "DUP3"
    },
    "5389": {
      "op": "ADD"
    },
    "5390": {
      "op": "MSTORE"
    },
    "5391": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5426": {
      "op": "DUP3"
    },
    "5427": {
      "op": "ADD"
    },
    "5428": {
      "op": "MSTORE"
    },
    "5429": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5444": {
      "op": "SHL"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5447": {
      "op": "DUP3"
    },
    "5448": {
      "op": "ADD"
    },
    "5449": {
      "op": "MSTORE"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5452": {
      "op": "ADD"
    },
    "5453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "5456": {
      "op": "JUMP"
    },
    "5457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5458": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155C"
    },
    "5463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5464": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB78"
    },
    "5467": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5468": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5469": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5470": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "6"
    },
    "5471": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 66
    },
    "5472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5478": {
      "op": "SHL"
    },
    "5479": {
      "op": "SUB"
    },
    "5480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "5481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5488": {
      "op": "SHL"
    },
    "5489": {
      "op": "SUB"
    },
    "5490": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "5491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "6"
    },
    "5492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5493": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1597"
    },
    "5496": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5497": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "6"
    },
    "5498": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5503": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5505": {
      "op": "SHL"
    },
    "5506": {
      "op": "SUB"
    },
    "5507": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "5508": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x158C"
    },
    "5511": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5512": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x69A"
    },
    "5515": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5516": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5523": {
      "op": "SHL"
    },
    "5524": {
      "op": "SUB"
    },
    "5525": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "5526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "6"
    },
    "5527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5529": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15C7"
    },
    "5532": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5540": {
      "op": "SHL"
    },
    "5541": {
      "op": "SUB"
    },
    "5542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "5545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5548": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "5552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5554": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5555": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5556": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5557": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5559": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5560": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5561": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5563": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "6"
    },
    "5564": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "5565": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5566": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5567": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5569": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5570": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5571": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5572": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "5574": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "5575": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5576": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8016,
        8112
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "5577": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "POP"
    },
    "5582": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5583": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5584": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 67
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5591": {
      "op": "SHL"
    },
    "5592": {
      "op": "SUB"
    },
    "5593": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "5594": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E2"
    },
    "5597": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5598": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB78"
    },
    "5601": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5602": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5609": {
      "op": "SHL"
    },
    "5610": {
      "op": "SUB"
    },
    "5611": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "5612": {
      "branch": 125,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "6"
    },
    "5613": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164A"
    },
    "5616": {
      "branch": 125,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5617": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5619": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5626": {
      "op": "SHL"
    },
    "5627": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5628": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5631": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5633": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5634": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "6"
    },
    "5635": {
      "op": "MSTORE"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5640": {
      "op": "DUP3"
    },
    "5641": {
      "op": "ADD"
    },
    "5642": {
      "op": "MSTORE"
    },
    "5643": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "5676": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5678": {
      "op": "DUP3"
    },
    "5679": {
      "op": "ADD"
    },
    "5680": {
      "op": "MSTORE"
    },
    "5681": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5693": {
      "op": "SHL"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5696": {
      "op": "DUP3"
    },
    "5697": {
      "op": "ADD"
    },
    "5698": {
      "op": "MSTORE"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5701": {
      "op": "ADD"
    },
    "5702": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "5705": {
      "op": "JUMP"
    },
    "5706": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5713": {
      "op": "SHL"
    },
    "5714": {
      "op": "SUB"
    },
    "5715": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 68
    },
    "5716": {
      "branch": 126,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "6"
    },
    "5717": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16AC"
    },
    "5720": {
      "branch": 126,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5721": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5723": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5730": {
      "op": "SHL"
    },
    "5731": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5732": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5735": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "5737": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5738": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "6"
    },
    "5739": {
      "op": "MSTORE"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5742": {
      "op": "DUP1"
    },
    "5743": {
      "op": "DUP3"
    },
    "5744": {
      "op": "ADD"
    },
    "5745": {
      "op": "MSTORE"
    },
    "5746": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5781": {
      "op": "DUP3"
    },
    "5782": {
      "op": "ADD"
    },
    "5783": {
      "op": "MSTORE"
    },
    "5784": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5791": {
      "op": "SHL"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5794": {
      "op": "DUP3"
    },
    "5795": {
      "op": "ADD"
    },
    "5796": {
      "op": "MSTORE"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5799": {
      "op": "ADD"
    },
    "5800": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "5803": {
      "op": "JUMP"
    },
    "5804": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5805": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 69,
      "value": "0x16B7"
    },
    "5808": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5809": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5810": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "5811": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1832"
    },
    "5814": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5815": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5816": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 70,
      "value": "0x16C2"
    },
    "5819": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5821": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5822": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144C"
    },
    "5825": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5826": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5833": {
      "op": "SHL"
    },
    "5834": {
      "op": "SUB"
    },
    "5835": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 71
    },
    "5836": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "6"
    },
    "5837": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5839": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5840": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5841": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5842": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5844": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5846": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5847": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5849": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5850": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5851": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5852": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5853": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5855": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5856": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5857": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16EB"
    },
    "5860": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5861": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5862": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5863": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2501"
    },
    "5866": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5867": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5868": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5869": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5870": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5871": {
      "op": "POP"
    },
    "5872": {
      "op": "POP"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "op": "SUB"
    },
    "5881": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 72
    },
    "5882": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "6"
    },
    "5883": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5885": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5886": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5887": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5888": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "5890": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5892": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5893": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5895": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5896": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5897": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5898": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5899": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5901": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5902": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5903": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1719"
    },
    "5906": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5907": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5908": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5909": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24A4"
    },
    "5912": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5913": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5914": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5915": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5916": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5917": {
      "op": "POP"
    },
    "5918": {
      "op": "POP"
    },
    "5919": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 73,
      "value": "0x0"
    },
    "5921": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5922": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5923": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5924": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "5926": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5928": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5929": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "5931": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5932": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5933": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5934": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5935": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "op": "NOT"
    },
    "5945": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5952": {
      "op": "SHL"
    },
    "5953": {
      "op": "SUB"
    },
    "5954": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "6"
    },
    "5955": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5956": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "5957": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5958": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5959": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "6"
    },
    "5960": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5961": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5962": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5963": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 74
    },
    "5964": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "5965": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "6"
    },
    "5966": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "5967": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5968": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "6"
    },
    "5969": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "6"
    },
    "5970": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5971": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6004": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6005": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "6"
    },
    "6006": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "6007": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "6008": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "6009": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6010": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6011": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "6013": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6014": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6021": {
      "op": "SHL"
    },
    "6022": {
      "op": "SUB"
    },
    "6023": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 75
    },
    "6024": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6025": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6032": {
      "op": "SHL"
    },
    "6033": {
      "op": "SUB"
    },
    "6034": {
      "op": "NOT"
    },
    "6035": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6036": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "6037": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6038": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "8"
    },
    "6039": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6040": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6041": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "6042": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 76,
      "value": "0x40"
    },
    "6044": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6045": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6046": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "8"
    },
    "6047": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6048": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6049": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6050": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6051": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6084": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6085": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6087": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6088": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "8"
    },
    "6089": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "6090": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "6091": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6092": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6093": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 77,
      "value": "0x17D7"
    },
    "6096": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6097": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6098": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6099": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15CF"
    },
    "6102": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6103": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6104": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 78,
      "value": "0x17E3"
    },
    "6107": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6108": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6109": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6110": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6111": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18EA"
    },
    "6114": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6115": {
      "branch": 127,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6116": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C4"
    },
    "6119": {
      "branch": 127,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6120": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6122": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6129": {
      "op": "SHL"
    },
    "6130": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6131": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6132": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6134": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "6"
    },
    "6135": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "6138": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6139": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2543"
    },
    "6142": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6143": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6144": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 79,
      "value": "0x1809"
    },
    "6147": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6148": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6149": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19E8"
    },
    "6152": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6153": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6154": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 80,
      "value": "0x1816"
    },
    "6157": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6159": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6160": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6161": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6162": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18EA"
    },
    "6165": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6166": {
      "branch": 128,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6167": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x845"
    },
    "6170": {
      "branch": 128,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6171": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6173": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6180": {
      "op": "SHL"
    },
    "6181": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6182": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6183": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6185": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "6"
    },
    "6186": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "6189": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6190": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2543"
    },
    "6193": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6194": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6201": {
      "op": "SHL"
    },
    "6202": {
      "op": "SUB"
    },
    "6203": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6204": {
      "branch": 132,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "7"
    },
    "6205": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x188D"
    },
    "6208": {
      "branch": 132,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6209": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 81,
      "value": "0x1888"
    },
    "6212": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6213": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 82,
      "value": "0x8"
    },
    "6215": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6216": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6217": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6219": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6220": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6221": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6222": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "6224": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6226": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6227": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6229": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6230": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6231": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6232": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6233": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6234": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 83,
      "value": "0x1"
    },
    "6236": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6237": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "6238": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6239": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6240": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6241": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6242": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6243": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6244": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "6277": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "6278": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6279": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6280": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6281": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B0"
    },
    "6284": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6285": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6286": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6293": {
      "op": "SHL"
    },
    "6294": {
      "op": "SUB"
    },
    "6295": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "6296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6303": {
      "op": "SHL"
    },
    "6304": {
      "op": "SUB"
    },
    "6305": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "6306": {
      "branch": 133,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "7"
    },
    "6307": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B0"
    },
    "6310": {
      "branch": 133,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6311": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 84,
      "value": "0x18B0"
    },
    "6314": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6315": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6316": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B36"
    },
    "6319": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6320": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "op": "SUB"
    },
    "6329": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6330": {
      "branch": 134,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "7"
    },
    "6331": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18C7"
    },
    "6334": {
      "branch": 134,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6335": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 85,
      "value": "0x845"
    },
    "6338": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6339": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BD3"
    },
    "6342": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6343": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6344": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "op": "SUB"
    },
    "6353": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "6354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "6364": {
      "branch": 135,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "7"
    },
    "6365": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x845"
    },
    "6368": {
      "branch": 135,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6369": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 86,
      "value": "0x845"
    },
    "6372": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6373": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6374": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C82"
    },
    "6377": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6387": {
      "op": "SHL"
    },
    "6388": {
      "op": "SUB"
    },
    "6389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "6"
    },
    "6391": {
      "op": "EXTCODESIZE"
    },
    "6392": {
      "op": "ISZERO"
    },
    "6393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19DD"
    },
    "6396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6400": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "op": "SUB"
    },
    "6418": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "6"
    },
    "6420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x150B7A02"
    },
    "6426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192E"
    },
    "6430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6431": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "4"
    },
    "6432": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "6"
    },
    "6434": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "6"
    },
    "6436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6437": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "6"
    },
    "6438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "6442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2595"
    },
    "6445": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6449": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6451": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6453": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "6"
    },
    "6455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6456": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "6"
    },
    "6460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "6"
    },
    "6461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6462": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "6463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "6464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "6465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1969"
    },
    "6470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6471": {
      "op": "POP"
    },
    "6472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6480": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6481": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6484": {
      "op": "NOT"
    },
    "6485": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "6"
    },
    "6486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "6488": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6489": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6490": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1966"
    },
    "6494": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6495": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6496": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "6497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25D2"
    },
    "6501": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6505": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19C3"
    },
    "6509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6513": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1997"
    },
    "6517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6520": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "6523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "6"
    },
    "6526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "6528": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "6530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "6"
    },
    "6531": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "6533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "6546": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199C"
    },
    "6550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6555": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "6556": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6557": {
      "op": "POP"
    },
    "6558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19BB"
    },
    "6563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 87,
      "value": "0x40"
    },
    "6566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6573": {
      "op": "SHL"
    },
    "6574": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6575": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6576": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "6"
    },
    "6579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "6582": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6583": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2543"
    },
    "6586": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6587": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6589": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6590": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6591": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6593": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "6"
    },
    "6594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6602": {
      "op": "SHL"
    },
    "6603": {
      "op": "SUB"
    },
    "6604": {
      "op": "NOT"
    },
    "6605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "6",
      "statement": 88
    },
    "6606": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6613": {
      "op": "SHL"
    },
    "6614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "6"
    },
    "6615": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6616": {
      "op": "POP"
    },
    "6617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15C7"
    },
    "6620": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6621": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6622": {
      "op": "POP"
    },
    "6623": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 89,
      "value": "0x1"
    },
    "6625": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "6626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "6628": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "6629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "6630": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "6631": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6632": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6639": {
      "op": "SHL"
    },
    "6640": {
      "op": "SUB"
    },
    "6641": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 90
    },
    "6642": {
      "branch": 129,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "6"
    },
    "6643": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A3E"
    },
    "6646": {
      "branch": 129,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6647": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6649": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6656": {
      "op": "SHL"
    },
    "6657": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6658": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6661": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6663": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6664": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "6"
    },
    "6665": {
      "op": "DUP2"
    },
    "6666": {
      "op": "SWAP1"
    },
    "6667": {
      "op": "MSTORE"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6670": {
      "op": "DUP3"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "op": "MSTORE"
    },
    "6673": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6708": {
      "op": "DUP3"
    },
    "6709": {
      "op": "ADD"
    },
    "6710": {
      "op": "MSTORE"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6713": {
      "op": "ADD"
    },
    "6714": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "6717": {
      "op": "JUMP"
    },
    "6718": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6719": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6721": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6722": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6723": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6724": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "6726": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6728": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6729": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6731": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6732": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6733": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "op": "SUB"
    },
    "6742": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "6743": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6744": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 91,
      "value": "0x1AA3"
    },
    "6747": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6748": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6750": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6757": {
      "op": "SHL"
    },
    "6758": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6759": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6762": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6764": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6765": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "6"
    },
    "6766": {
      "op": "MSTORE"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6771": {
      "op": "DUP3"
    },
    "6772": {
      "op": "ADD"
    },
    "6773": {
      "op": "MSTORE"
    },
    "6774": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6809": {
      "op": "DUP3"
    },
    "6810": {
      "op": "ADD"
    },
    "6811": {
      "op": "MSTORE"
    },
    "6812": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6814": {
      "op": "ADD"
    },
    "6815": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x70F"
    },
    "6818": {
      "op": "JUMP"
    },
    "6819": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6820": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 92,
      "value": "0x1AAF"
    },
    "6823": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6825": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6826": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6827": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1832"
    },
    "6830": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6831": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6838": {
      "op": "SHL"
    },
    "6839": {
      "op": "SUB"
    },
    "6840": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 93
    },
    "6841": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "6"
    },
    "6842": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6844": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6845": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6846": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6847": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "6849": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6851": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6852": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6854": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6855": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6856": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6857": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6858": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6860": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6861": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6862": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AD8"
    },
    "6865": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6866": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6867": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6868": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24A4"
    },
    "6871": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6872": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6873": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6874": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6875": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6876": {
      "op": "POP"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 94,
      "value": "0x0"
    },
    "6880": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6881": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6882": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6883": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "6885": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6887": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6888": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6890": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6891": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6892": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6893": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6894": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6901": {
      "op": "SHL"
    },
    "6902": {
      "op": "SUB"
    },
    "6903": {
      "op": "NOT"
    },
    "6904": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6911": {
      "op": "SHL"
    },
    "6912": {
      "op": "SUB"
    },
    "6913": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6914": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "6915": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6916": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6917": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "6"
    },
    "6918": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6919": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6920": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6921": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 95
    },
    "6922": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6923": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6924": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6925": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6926": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "6959": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6960": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6961": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6962": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "6"
    },
    "6963": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "6964": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "6965": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6966": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6967": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6969": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6971": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B43"
    },
    "6974": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6975": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBEF"
    },
    "6978": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6979": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6980": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B4D"
    },
    "6983": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6984": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6985": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2501"
    },
    "6988": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6989": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6990": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6992": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6993": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6994": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6995": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "6997": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6999": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7000": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7002": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7003": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7004": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7005": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7006": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7007": {
      "op": "POP"
    },
    "7008": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7009": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7010": {
      "branch": 136,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "7"
    },
    "7011": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BA0"
    },
    "7014": {
      "branch": 136,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7021": {
      "op": "SHL"
    },
    "7022": {
      "op": "SUB"
    },
    "7023": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7024": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "7"
    },
    "7025": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7027": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7028": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7029": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7030": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7032": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7034": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7035": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7036": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7037": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7039": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7040": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7041": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7042": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7043": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7044": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7045": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7046": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7047": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7048": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7049": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7050": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7051": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 96
    },
    "7052": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7053": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7054": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7055": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7056": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7057": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7058": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7059": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7060": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 97
    },
    "7061": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7062": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "7064": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7065": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7066": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7067": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7068": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7069": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7070": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7071": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7072": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7073": {
      "op": "POP"
    },
    "7074": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 98,
      "value": "0x0"
    },
    "7076": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7077": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7078": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7079": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "7081": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7083": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7084": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7085": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7086": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7088": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7089": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7090": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7091": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7092": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7093": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7100": {
      "op": "SHL"
    },
    "7101": {
      "op": "SUB"
    },
    "7102": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 99
    },
    "7103": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "7104": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "7"
    },
    "7105": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7106": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7107": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7109": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7110": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7111": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7112": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7113": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7114": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7115": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7116": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7117": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7118": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7119": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7120": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7121": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7122": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7123": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7124": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7126": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7127": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7129": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7130": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BE5"
    },
    "7133": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7134": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7136": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7137": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2501"
    },
    "7140": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7141": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7142": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7144": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7145": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7146": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7147": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "7149": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7151": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7152": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7154": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7155": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7156": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7157": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7159": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7160": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7161": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7162": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "7163": {
      "op": "POP"
    },
    "7164": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7165": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7166": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7167": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7168": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7169": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "7"
    },
    "7170": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C0D"
    },
    "7173": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7174": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C0D"
    },
    "7177": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2443"
    },
    "7180": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7181": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7182": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7183": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7185": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7186": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7188": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7190": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7191": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "7"
    },
    "7192": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7193": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7194": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "7"
    },
    "7195": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 100
    },
    "7196": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7198": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7199": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7200": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7201": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7202": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "7"
    },
    "7203": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C2E"
    },
    "7206": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7207": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C2E"
    },
    "7210": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2443"
    },
    "7213": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7214": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7215": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7217": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7218": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7219": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7220": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7222": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7223": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7224": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7225": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7226": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7227": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "7"
    },
    "7228": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7229": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7230": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7231": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7232": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 101
    },
    "7233": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7234": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7235": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "7237": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7238": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7239": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7240": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7242": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7243": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7244": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7245": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7246": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7247": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7248": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 102
    },
    "7249": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7250": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7251": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7252": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7253": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7254": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 103,
      "value": "0x8"
    },
    "7256": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7257": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7258": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7259": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C66"
    },
    "7262": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7263": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C66"
    },
    "7266": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25EF"
    },
    "7269": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7271": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7273": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7274": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "7"
    },
    "7275": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7276": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7277": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7278": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7280": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7281": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7283": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7285": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7286": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "7"
    },
    "7287": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7289": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7290": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7291": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7292": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7293": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "7294": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "7295": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "7296": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "7297": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7298": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7299": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7301": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C8D"
    },
    "7304": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7305": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBEF"
    },
    "7308": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7309": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7316": {
      "op": "SHL"
    },
    "7317": {
      "op": "SUB"
    },
    "7318": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 104
    },
    "7319": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7320": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "7"
    },
    "7321": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7323": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7324": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7325": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7326": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7328": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7330": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7331": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7332": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7333": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7335": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7336": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7337": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7338": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7339": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7340": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7341": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7342": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7343": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7344": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7345": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7346": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7347": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7348": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7349": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 105
    },
    "7350": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7351": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7352": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "7354": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7355": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7356": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7357": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7358": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7359": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7360": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7361": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7362": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7363": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7364": {
      "op": "POP"
    },
    "7365": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7366": {
      "op": "JUMPDEST"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7373": {
      "op": "SHL"
    },
    "7374": {
      "op": "SUB"
    },
    "7375": {
      "op": "NOT"
    },
    "7376": {
      "op": "DUP2"
    },
    "7377": {
      "op": "AND"
    },
    "7378": {
      "op": "DUP2"
    },
    "7379": {
      "op": "EQ"
    },
    "7380": {
      "op": "PUSH2",
      "value": "0x88A"
    },
    "7383": {
      "op": "JUMPI"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7386": {
      "op": "DUP1"
    },
    "7387": {
      "op": "REVERT"
    },
    "7388": {
      "op": "JUMPDEST"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7393": {
      "op": "DUP3"
    },
    "7394": {
      "op": "DUP5"
    },
    "7395": {
      "op": "SUB"
    },
    "7396": {
      "op": "SLT"
    },
    "7397": {
      "op": "ISZERO"
    },
    "7398": {
      "op": "PUSH2",
      "value": "0x1CEE"
    },
    "7401": {
      "op": "JUMPI"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7404": {
      "op": "DUP1"
    },
    "7405": {
      "op": "REVERT"
    },
    "7406": {
      "op": "JUMPDEST"
    },
    "7407": {
      "op": "DUP2"
    },
    "7408": {
      "op": "CALLDATALOAD"
    },
    "7409": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "7412": {
      "op": "DUP2"
    },
    "7413": {
      "op": "PUSH2",
      "value": "0x1CC6"
    },
    "7416": {
      "jump": "i",
      "op": "JUMP"
    },
    "7417": {
      "op": "JUMPDEST"
    },
    "7418": {
      "op": "SWAP4"
    },
    "7419": {
      "op": "SWAP3"
    },
    "7420": {
      "op": "POP"
    },
    "7421": {
      "op": "POP"
    },
    "7422": {
      "op": "POP"
    },
    "7423": {
      "jump": "o",
      "op": "JUMP"
    },
    "7424": {
      "op": "JUMPDEST"
    },
    "7425": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7432": {
      "op": "SHL"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7435": {
      "op": "MSTORE"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7440": {
      "op": "MSTORE"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7445": {
      "op": "REVERT"
    },
    "7446": {
      "op": "JUMPDEST"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7449": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7458": {
      "op": "DUP1"
    },
    "7459": {
      "op": "DUP5"
    },
    "7460": {
      "op": "GT"
    },
    "7461": {
      "op": "ISZERO"
    },
    "7462": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7465": {
      "op": "JUMPI"
    },
    "7466": {
      "op": "PUSH2",
      "value": "0x1D31"
    },
    "7469": {
      "op": "PUSH2",
      "value": "0x1D00"
    },
    "7472": {
      "jump": "i",
      "op": "JUMP"
    },
    "7473": {
      "op": "JUMPDEST"
    },
    "7474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7476": {
      "op": "MLOAD"
    },
    "7477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7479": {
      "op": "DUP6"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7483": {
      "op": "NOT"
    },
    "7484": {
      "op": "SWAP1"
    },
    "7485": {
      "op": "DUP2"
    },
    "7486": {
      "op": "AND"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7489": {
      "op": "ADD"
    },
    "7490": {
      "op": "AND"
    },
    "7491": {
      "op": "DUP2"
    },
    "7492": {
      "op": "ADD"
    },
    "7493": {
      "op": "SWAP1"
    },
    "7494": {
      "op": "DUP3"
    },
    "7495": {
      "op": "DUP3"
    },
    "7496": {
      "op": "GT"
    },
    "7497": {
      "op": "DUP2"
    },
    "7498": {
      "op": "DUP4"
    },
    "7499": {
      "op": "LT"
    },
    "7500": {
      "op": "OR"
    },
    "7501": {
      "op": "ISZERO"
    },
    "7502": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7505": {
      "op": "JUMPI"
    },
    "7506": {
      "op": "PUSH2",
      "value": "0x1D59"
    },
    "7509": {
      "op": "PUSH2",
      "value": "0x1D00"
    },
    "7512": {
      "jump": "i",
      "op": "JUMP"
    },
    "7513": {
      "op": "JUMPDEST"
    },
    "7514": {
      "op": "DUP2"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7517": {
      "op": "MSTORE"
    },
    "7518": {
      "op": "DUP1"
    },
    "7519": {
      "op": "SWAP4"
    },
    "7520": {
      "op": "POP"
    },
    "7521": {
      "op": "DUP6"
    },
    "7522": {
      "op": "DUP2"
    },
    "7523": {
      "op": "MSTORE"
    },
    "7524": {
      "op": "DUP7"
    },
    "7525": {
      "op": "DUP7"
    },
    "7526": {
      "op": "DUP7"
    },
    "7527": {
      "op": "ADD"
    },
    "7528": {
      "op": "GT"
    },
    "7529": {
      "op": "ISZERO"
    },
    "7530": {
      "op": "PUSH2",
      "value": "0x1D72"
    },
    "7533": {
      "op": "JUMPI"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7536": {
      "op": "DUP1"
    },
    "7537": {
      "op": "REVERT"
    },
    "7538": {
      "op": "JUMPDEST"
    },
    "7539": {
      "op": "DUP6"
    },
    "7540": {
      "op": "DUP6"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7543": {
      "op": "DUP4"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "CALLDATACOPY"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7550": {
      "op": "DUP8"
    },
    "7551": {
      "op": "DUP4"
    },
    "7552": {
      "op": "ADD"
    },
    "7553": {
      "op": "ADD"
    },
    "7554": {
      "op": "MSTORE"
    },
    "7555": {
      "op": "POP"
    },
    "7556": {
      "op": "POP"
    },
    "7557": {
      "op": "POP"
    },
    "7558": {
      "op": "SWAP4"
    },
    "7559": {
      "op": "SWAP3"
    },
    "7560": {
      "op": "POP"
    },
    "7561": {
      "op": "POP"
    },
    "7562": {
      "op": "POP"
    },
    "7563": {
      "jump": "o",
      "op": "JUMP"
    },
    "7564": {
      "op": "JUMPDEST"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7567": {
      "op": "DUP1"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7570": {
      "op": "DUP4"
    },
    "7571": {
      "op": "DUP6"
    },
    "7572": {
      "op": "SUB"
    },
    "7573": {
      "op": "SLT"
    },
    "7574": {
      "op": "ISZERO"
    },
    "7575": {
      "op": "PUSH2",
      "value": "0x1D9F"
    },
    "7578": {
      "op": "JUMPI"
    },
    "7579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7581": {
      "op": "DUP1"
    },
    "7582": {
      "op": "REVERT"
    },
    "7583": {
      "op": "JUMPDEST"
    },
    "7584": {
      "op": "DUP3"
    },
    "7585": {
      "op": "CALLDATALOAD"
    },
    "7586": {
      "op": "SWAP2"
    },
    "7587": {
      "op": "POP"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7590": {
      "op": "DUP4"
    },
    "7591": {
      "op": "ADD"
    },
    "7592": {
      "op": "CALLDATALOAD"
    },
    "7593": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7602": {
      "op": "DUP2"
    },
    "7603": {
      "op": "GT"
    },
    "7604": {
      "op": "ISZERO"
    },
    "7605": {
      "op": "PUSH2",
      "value": "0x1DBD"
    },
    "7608": {
      "op": "JUMPI"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7611": {
      "op": "DUP1"
    },
    "7612": {
      "op": "REVERT"
    },
    "7613": {
      "op": "JUMPDEST"
    },
    "7614": {
      "op": "DUP4"
    },
    "7615": {
      "op": "ADD"
    },
    "7616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7618": {
      "op": "DUP2"
    },
    "7619": {
      "op": "ADD"
    },
    "7620": {
      "op": "DUP6"
    },
    "7621": {
      "op": "SGT"
    },
    "7622": {
      "op": "PUSH2",
      "value": "0x1DCE"
    },
    "7625": {
      "op": "JUMPI"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7628": {
      "op": "DUP1"
    },
    "7629": {
      "op": "REVERT"
    },
    "7630": {
      "op": "JUMPDEST"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x1DDD"
    },
    "7634": {
      "op": "DUP6"
    },
    "7635": {
      "op": "DUP3"
    },
    "7636": {
      "op": "CALLDATALOAD"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7639": {
      "op": "DUP5"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "7644": {
      "jump": "i",
      "op": "JUMP"
    },
    "7645": {
      "op": "JUMPDEST"
    },
    "7646": {
      "op": "SWAP2"
    },
    "7647": {
      "op": "POP"
    },
    "7648": {
      "op": "POP"
    },
    "7649": {
      "op": "SWAP3"
    },
    "7650": {
      "op": "POP"
    },
    "7651": {
      "op": "SWAP3"
    },
    "7652": {
      "op": "SWAP1"
    },
    "7653": {
      "op": "POP"
    },
    "7654": {
      "jump": "o",
      "op": "JUMP"
    },
    "7655": {
      "op": "JUMPDEST"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7658": {
      "op": "JUMPDEST"
    },
    "7659": {
      "op": "DUP4"
    },
    "7660": {
      "op": "DUP2"
    },
    "7661": {
      "op": "LT"
    },
    "7662": {
      "op": "ISZERO"
    },
    "7663": {
      "op": "PUSH2",
      "value": "0x1E02"
    },
    "7666": {
      "op": "JUMPI"
    },
    "7667": {
      "op": "DUP2"
    },
    "7668": {
      "op": "DUP2"
    },
    "7669": {
      "op": "ADD"
    },
    "7670": {
      "op": "MLOAD"
    },
    "7671": {
      "op": "DUP4"
    },
    "7672": {
      "op": "DUP3"
    },
    "7673": {
      "op": "ADD"
    },
    "7674": {
      "op": "MSTORE"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7677": {
      "op": "ADD"
    },
    "7678": {
      "op": "PUSH2",
      "value": "0x1DEA"
    },
    "7681": {
      "op": "JUMP"
    },
    "7682": {
      "op": "JUMPDEST"
    },
    "7683": {
      "op": "DUP4"
    },
    "7684": {
      "op": "DUP2"
    },
    "7685": {
      "op": "GT"
    },
    "7686": {
      "op": "ISZERO"
    },
    "7687": {
      "op": "PUSH2",
      "value": "0x10C4"
    },
    "7690": {
      "op": "JUMPI"
    },
    "7691": {
      "op": "POP"
    },
    "7692": {
      "op": "POP"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7695": {
      "op": "SWAP2"
    },
    "7696": {
      "op": "ADD"
    },
    "7697": {
      "op": "MSTORE"
    },
    "7698": {
      "jump": "o",
      "op": "JUMP"
    },
    "7699": {
      "op": "JUMPDEST"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7702": {
      "op": "DUP2"
    },
    "7703": {
      "op": "MLOAD"
    },
    "7704": {
      "op": "DUP1"
    },
    "7705": {
      "op": "DUP5"
    },
    "7706": {
      "op": "MSTORE"
    },
    "7707": {
      "op": "PUSH2",
      "value": "0x1E2B"
    },
    "7710": {
      "op": "DUP2"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7713": {
      "op": "DUP7"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7717": {
      "op": "DUP7"
    },
    "7718": {
      "op": "ADD"
    },
    "7719": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "7722": {
      "jump": "i",
      "op": "JUMP"
    },
    "7723": {
      "op": "JUMPDEST"
    },
    "7724": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7726": {
      "op": "ADD"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7729": {
      "op": "NOT"
    },
    "7730": {
      "op": "AND"
    },
    "7731": {
      "op": "SWAP3"
    },
    "7732": {
      "op": "SWAP1"
    },
    "7733": {
      "op": "SWAP3"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7737": {
      "op": "ADD"
    },
    "7738": {
      "op": "SWAP3"
    },
    "7739": {
      "op": "SWAP2"
    },
    "7740": {
      "op": "POP"
    },
    "7741": {
      "op": "POP"
    },
    "7742": {
      "jump": "o",
      "op": "JUMP"
    },
    "7743": {
      "op": "JUMPDEST"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7746": {
      "op": "DUP2"
    },
    "7747": {
      "op": "MSTORE"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7755": {
      "op": "DUP4"
    },
    "7756": {
      "op": "ADD"
    },
    "7757": {
      "op": "DUP5"
    },
    "7758": {
      "op": "PUSH2",
      "value": "0x1E13"
    },
    "7761": {
      "jump": "i",
      "op": "JUMP"
    },
    "7762": {
      "op": "JUMPDEST"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7767": {
      "op": "DUP3"
    },
    "7768": {
      "op": "DUP5"
    },
    "7769": {
      "op": "SUB"
    },
    "7770": {
      "op": "SLT"
    },
    "7771": {
      "op": "ISZERO"
    },
    "7772": {
      "op": "PUSH2",
      "value": "0x1E64"
    },
    "7775": {
      "op": "JUMPI"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7778": {
      "op": "DUP1"
    },
    "7779": {
      "op": "REVERT"
    },
    "7780": {
      "op": "JUMPDEST"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "op": "CALLDATALOAD"
    },
    "7783": {
      "op": "SWAP2"
    },
    "7784": {
      "op": "SWAP1"
    },
    "7785": {
      "op": "POP"
    },
    "7786": {
      "jump": "o",
      "op": "JUMP"
    },
    "7787": {
      "op": "JUMPDEST"
    },
    "7788": {
      "op": "DUP1"
    },
    "7789": {
      "op": "CALLDATALOAD"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7796": {
      "op": "SHL"
    },
    "7797": {
      "op": "SUB"
    },
    "7798": {
      "op": "DUP2"
    },
    "7799": {
      "op": "AND"
    },
    "7800": {
      "op": "DUP2"
    },
    "7801": {
      "op": "EQ"
    },
    "7802": {
      "op": "PUSH2",
      "value": "0x1E82"
    },
    "7805": {
      "op": "JUMPI"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7808": {
      "op": "DUP1"
    },
    "7809": {
      "op": "REVERT"
    },
    "7810": {
      "op": "JUMPDEST"
    },
    "7811": {
      "op": "SWAP2"
    },
    "7812": {
      "op": "SWAP1"
    },
    "7813": {
      "op": "POP"
    },
    "7814": {
      "jump": "o",
      "op": "JUMP"
    },
    "7815": {
      "op": "JUMPDEST"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7818": {
      "op": "DUP1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7821": {
      "op": "DUP4"
    },
    "7822": {
      "op": "DUP6"
    },
    "7823": {
      "op": "SUB"
    },
    "7824": {
      "op": "SLT"
    },
    "7825": {
      "op": "ISZERO"
    },
    "7826": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "7829": {
      "op": "JUMPI"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7832": {
      "op": "DUP1"
    },
    "7833": {
      "op": "REVERT"
    },
    "7834": {
      "op": "JUMPDEST"
    },
    "7835": {
      "op": "PUSH2",
      "value": "0x1EA3"
    },
    "7838": {
      "op": "DUP4"
    },
    "7839": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7842": {
      "jump": "i",
      "op": "JUMP"
    },
    "7843": {
      "op": "JUMPDEST"
    },
    "7844": {
      "op": "SWAP5"
    },
    "7845": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7847": {
      "op": "SWAP4"
    },
    "7848": {
      "op": "SWAP1"
    },
    "7849": {
      "op": "SWAP4"
    },
    "7850": {
      "op": "ADD"
    },
    "7851": {
      "op": "CALLDATALOAD"
    },
    "7852": {
      "op": "SWAP4"
    },
    "7853": {
      "op": "POP"
    },
    "7854": {
      "op": "POP"
    },
    "7855": {
      "op": "POP"
    },
    "7856": {
      "jump": "o",
      "op": "JUMP"
    },
    "7857": {
      "op": "JUMPDEST"
    },
    "7858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7860": {
      "op": "DUP1"
    },
    "7861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7865": {
      "op": "DUP5"
    },
    "7866": {
      "op": "DUP7"
    },
    "7867": {
      "op": "SUB"
    },
    "7868": {
      "op": "SLT"
    },
    "7869": {
      "op": "ISZERO"
    },
    "7870": {
      "op": "PUSH2",
      "value": "0x1EC6"
    },
    "7873": {
      "op": "JUMPI"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7876": {
      "op": "DUP1"
    },
    "7877": {
      "op": "REVERT"
    },
    "7878": {
      "op": "JUMPDEST"
    },
    "7879": {
      "op": "PUSH2",
      "value": "0x1ECF"
    },
    "7882": {
      "op": "DUP5"
    },
    "7883": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7886": {
      "jump": "i",
      "op": "JUMP"
    },
    "7887": {
      "op": "JUMPDEST"
    },
    "7888": {
      "op": "SWAP3"
    },
    "7889": {
      "op": "POP"
    },
    "7890": {
      "op": "PUSH2",
      "value": "0x1EDD"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7895": {
      "op": "DUP6"
    },
    "7896": {
      "op": "ADD"
    },
    "7897": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7900": {
      "jump": "i",
      "op": "JUMP"
    },
    "7901": {
      "op": "JUMPDEST"
    },
    "7902": {
      "op": "SWAP2"
    },
    "7903": {
      "op": "POP"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7906": {
      "op": "DUP5"
    },
    "7907": {
      "op": "ADD"
    },
    "7908": {
      "op": "CALLDATALOAD"
    },
    "7909": {
      "op": "SWAP1"
    },
    "7910": {
      "op": "POP"
    },
    "7911": {
      "op": "SWAP3"
    },
    "7912": {
      "op": "POP"
    },
    "7913": {
      "op": "SWAP3"
    },
    "7914": {
      "op": "POP"
    },
    "7915": {
      "op": "SWAP3"
    },
    "7916": {
      "jump": "o",
      "op": "JUMP"
    },
    "7917": {
      "op": "JUMPDEST"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7922": {
      "op": "DUP3"
    },
    "7923": {
      "op": "DUP5"
    },
    "7924": {
      "op": "SUB"
    },
    "7925": {
      "op": "SLT"
    },
    "7926": {
      "op": "ISZERO"
    },
    "7927": {
      "op": "PUSH2",
      "value": "0x1EFF"
    },
    "7930": {
      "op": "JUMPI"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7933": {
      "op": "DUP1"
    },
    "7934": {
      "op": "REVERT"
    },
    "7935": {
      "op": "JUMPDEST"
    },
    "7936": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "7939": {
      "op": "DUP3"
    },
    "7940": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "7943": {
      "jump": "i",
      "op": "JUMP"
    },
    "7944": {
      "op": "JUMPDEST"
    },
    "7945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7947": {
      "op": "DUP1"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7950": {
      "op": "DUP1"
    },
    "7951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7955": {
      "op": "DUP7"
    },
    "7956": {
      "op": "DUP9"
    },
    "7957": {
      "op": "SUB"
    },
    "7958": {
      "op": "SLT"
    },
    "7959": {
      "op": "ISZERO"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1F20"
    },
    "7963": {
      "op": "JUMPI"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7966": {
      "op": "DUP1"
    },
    "7967": {
      "op": "REVERT"
    },
    "7968": {
      "op": "JUMPDEST"
    },
    "7969": {
      "op": "POP"
    },
    "7970": {
      "op": "POP"
    },
    "7971": {
      "op": "DUP4"
    },
    "7972": {
      "op": "CALLDATALOAD"
    },
    "7973": {
      "op": "SWAP6"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7976": {
      "op": "DUP6"
    },
    "7977": {
      "op": "ADD"
    },
    "7978": {
      "op": "CALLDATALOAD"
    },
    "7979": {
      "op": "SWAP6"
    },
    "7980": {
      "op": "POP"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7983": {
      "op": "DUP6"
    },
    "7984": {
      "op": "ADD"
    },
    "7985": {
      "op": "CALLDATALOAD"
    },
    "7986": {
      "op": "SWAP5"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7989": {
      "op": "DUP2"
    },
    "7990": {
      "op": "ADD"
    },
    "7991": {
      "op": "CALLDATALOAD"
    },
    "7992": {
      "op": "SWAP5"
    },
    "7993": {
      "op": "POP"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7996": {
      "op": "ADD"
    },
    "7997": {
      "op": "CALLDATALOAD"
    },
    "7998": {
      "op": "SWAP3"
    },
    "7999": {
      "op": "POP"
    },
    "8000": {
      "op": "SWAP1"
    },
    "8001": {
      "op": "POP"
    },
    "8002": {
      "jump": "o",
      "op": "JUMP"
    },
    "8003": {
      "op": "JUMPDEST"
    },
    "8004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8006": {
      "op": "DUP1"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8009": {
      "op": "DUP4"
    },
    "8010": {
      "op": "DUP6"
    },
    "8011": {
      "op": "SUB"
    },
    "8012": {
      "op": "SLT"
    },
    "8013": {
      "op": "ISZERO"
    },
    "8014": {
      "op": "PUSH2",
      "value": "0x1F56"
    },
    "8017": {
      "op": "JUMPI"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8020": {
      "op": "DUP1"
    },
    "8021": {
      "op": "REVERT"
    },
    "8022": {
      "op": "JUMPDEST"
    },
    "8023": {
      "op": "PUSH2",
      "value": "0x1F5F"
    },
    "8026": {
      "op": "DUP4"
    },
    "8027": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "8030": {
      "jump": "i",
      "op": "JUMP"
    },
    "8031": {
      "op": "JUMPDEST"
    },
    "8032": {
      "op": "SWAP2"
    },
    "8033": {
      "op": "POP"
    },
    "8034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8036": {
      "op": "DUP4"
    },
    "8037": {
      "op": "ADD"
    },
    "8038": {
      "op": "CALLDATALOAD"
    },
    "8039": {
      "op": "DUP1"
    },
    "8040": {
      "op": "ISZERO"
    },
    "8041": {
      "op": "ISZERO"
    },
    "8042": {
      "op": "DUP2"
    },
    "8043": {
      "op": "EQ"
    },
    "8044": {
      "op": "PUSH2",
      "value": "0x1F74"
    },
    "8047": {
      "op": "JUMPI"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8050": {
      "op": "DUP1"
    },
    "8051": {
      "op": "REVERT"
    },
    "8052": {
      "op": "JUMPDEST"
    },
    "8053": {
      "op": "DUP1"
    },
    "8054": {
      "op": "SWAP2"
    },
    "8055": {
      "op": "POP"
    },
    "8056": {
      "op": "POP"
    },
    "8057": {
      "op": "SWAP3"
    },
    "8058": {
      "op": "POP"
    },
    "8059": {
      "op": "SWAP3"
    },
    "8060": {
      "op": "SWAP1"
    },
    "8061": {
      "op": "POP"
    },
    "8062": {
      "jump": "o",
      "op": "JUMP"
    },
    "8063": {
      "op": "JUMPDEST"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8066": {
      "op": "DUP1"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8069": {
      "op": "DUP1"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8072": {
      "op": "DUP6"
    },
    "8073": {
      "op": "DUP8"
    },
    "8074": {
      "op": "SUB"
    },
    "8075": {
      "op": "SLT"
    },
    "8076": {
      "op": "ISZERO"
    },
    "8077": {
      "op": "PUSH2",
      "value": "0x1F95"
    },
    "8080": {
      "op": "JUMPI"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8083": {
      "op": "DUP1"
    },
    "8084": {
      "op": "REVERT"
    },
    "8085": {
      "op": "JUMPDEST"
    },
    "8086": {
      "op": "PUSH2",
      "value": "0x1F9E"
    },
    "8089": {
      "op": "DUP6"
    },
    "8090": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "8093": {
      "jump": "i",
      "op": "JUMP"
    },
    "8094": {
      "op": "JUMPDEST"
    },
    "8095": {
      "op": "SWAP4"
    },
    "8096": {
      "op": "POP"
    },
    "8097": {
      "op": "PUSH2",
      "value": "0x1FAC"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8102": {
      "op": "DUP7"
    },
    "8103": {
      "op": "ADD"
    },
    "8104": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "8107": {
      "jump": "i",
      "op": "JUMP"
    },
    "8108": {
      "op": "JUMPDEST"
    },
    "8109": {
      "op": "SWAP3"
    },
    "8110": {
      "op": "POP"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8113": {
      "op": "DUP6"
    },
    "8114": {
      "op": "ADD"
    },
    "8115": {
      "op": "CALLDATALOAD"
    },
    "8116": {
      "op": "SWAP2"
    },
    "8117": {
      "op": "POP"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8120": {
      "op": "DUP6"
    },
    "8121": {
      "op": "ADD"
    },
    "8122": {
      "op": "CALLDATALOAD"
    },
    "8123": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8132": {
      "op": "DUP2"
    },
    "8133": {
      "op": "GT"
    },
    "8134": {
      "op": "ISZERO"
    },
    "8135": {
      "op": "PUSH2",
      "value": "0x1FCF"
    },
    "8138": {
      "op": "JUMPI"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8141": {
      "op": "DUP1"
    },
    "8142": {
      "op": "REVERT"
    },
    "8143": {
      "op": "JUMPDEST"
    },
    "8144": {
      "op": "DUP6"
    },
    "8145": {
      "op": "ADD"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8148": {
      "op": "DUP2"
    },
    "8149": {
      "op": "ADD"
    },
    "8150": {
      "op": "DUP8"
    },
    "8151": {
      "op": "SGT"
    },
    "8152": {
      "op": "PUSH2",
      "value": "0x1FE0"
    },
    "8155": {
      "op": "JUMPI"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8158": {
      "op": "DUP1"
    },
    "8159": {
      "op": "REVERT"
    },
    "8160": {
      "op": "JUMPDEST"
    },
    "8161": {
      "op": "PUSH2",
      "value": "0x1FEF"
    },
    "8164": {
      "op": "DUP8"
    },
    "8165": {
      "op": "DUP3"
    },
    "8166": {
      "op": "CALLDATALOAD"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8169": {
      "op": "DUP5"
    },
    "8170": {
      "op": "ADD"
    },
    "8171": {
      "op": "PUSH2",
      "value": "0x1D16"
    },
    "8174": {
      "jump": "i",
      "op": "JUMP"
    },
    "8175": {
      "op": "JUMPDEST"
    },
    "8176": {
      "op": "SWAP2"
    },
    "8177": {
      "op": "POP"
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "op": "SWAP3"
    },
    "8180": {
      "op": "SWAP6"
    },
    "8181": {
      "op": "SWAP2"
    },
    "8182": {
      "op": "SWAP5"
    },
    "8183": {
      "op": "POP"
    },
    "8184": {
      "op": "SWAP3"
    },
    "8185": {
      "op": "POP"
    },
    "8186": {
      "jump": "o",
      "op": "JUMP"
    },
    "8187": {
      "op": "JUMPDEST"
    },
    "8188": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8198": {
      "op": "MSTORE"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8203": {
      "op": "MSTORE"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8208": {
      "op": "REVERT"
    },
    "8209": {
      "op": "JUMPDEST"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8212": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "8215": {
      "op": "DUP3"
    },
    "8216": {
      "op": "ADD"
    },
    "8217": {
      "op": "SWAP1"
    },
    "8218": {
      "op": "POP"
    },
    "8219": {
      "op": "DUP13"
    },
    "8220": {
      "op": "DUP3"
    },
    "8221": {
      "op": "MSTORE"
    },
    "8222": {
      "op": "DUP12"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8225": {
      "op": "DUP4"
    },
    "8226": {
      "op": "ADD"
    },
    "8227": {
      "op": "MSTORE"
    },
    "8228": {
      "op": "DUP11"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8231": {
      "op": "DUP4"
    },
    "8232": {
      "op": "ADD"
    },
    "8233": {
      "op": "MSTORE"
    },
    "8234": {
      "op": "DUP10"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8237": {
      "op": "DUP4"
    },
    "8238": {
      "op": "ADD"
    },
    "8239": {
      "op": "MSTORE"
    },
    "8240": {
      "op": "DUP9"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8243": {
      "op": "DUP4"
    },
    "8244": {
      "op": "ADD"
    },
    "8245": {
      "op": "MSTORE"
    },
    "8246": {
      "op": "DUP8"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8249": {
      "op": "DUP4"
    },
    "8250": {
      "op": "ADD"
    },
    "8251": {
      "op": "MSTORE"
    },
    "8252": {
      "op": "DUP7"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8255": {
      "op": "DUP4"
    },
    "8256": {
      "op": "ADD"
    },
    "8257": {
      "op": "MSTORE"
    },
    "8258": {
      "op": "DUP6"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8261": {
      "op": "DUP4"
    },
    "8262": {
      "op": "ADD"
    },
    "8263": {
      "op": "MSTORE"
    },
    "8264": {
      "op": "DUP5"
    },
    "8265": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "8268": {
      "op": "DUP4"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "MSTORE"
    },
    "8271": {
      "op": "DUP4"
    },
    "8272": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "8275": {
      "op": "DUP4"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "MSTORE"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8280": {
      "op": "DUP4"
    },
    "8281": {
      "op": "LT"
    },
    "8282": {
      "op": "PUSH2",
      "value": "0x2073"
    },
    "8285": {
      "op": "JUMPI"
    },
    "8286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8293": {
      "op": "SHL"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8296": {
      "op": "MSTORE"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8301": {
      "op": "MSTORE"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8306": {
      "op": "REVERT"
    },
    "8307": {
      "op": "JUMPDEST"
    },
    "8308": {
      "op": "DUP3"
    },
    "8309": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "8312": {
      "op": "DUP4"
    },
    "8313": {
      "op": "ADD"
    },
    "8314": {
      "op": "MSTORE"
    },
    "8315": {
      "op": "SWAP13"
    },
    "8316": {
      "op": "SWAP12"
    },
    "8317": {
      "op": "POP"
    },
    "8318": {
      "op": "POP"
    },
    "8319": {
      "op": "POP"
    },
    "8320": {
      "op": "POP"
    },
    "8321": {
      "op": "POP"
    },
    "8322": {
      "op": "POP"
    },
    "8323": {
      "op": "POP"
    },
    "8324": {
      "op": "POP"
    },
    "8325": {
      "op": "POP"
    },
    "8326": {
      "op": "POP"
    },
    "8327": {
      "op": "POP"
    },
    "8328": {
      "op": "POP"
    },
    "8329": {
      "jump": "o",
      "op": "JUMP"
    },
    "8330": {
      "op": "JUMPDEST"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8333": {
      "op": "DUP1"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8336": {
      "op": "DUP4"
    },
    "8337": {
      "op": "DUP6"
    },
    "8338": {
      "op": "SUB"
    },
    "8339": {
      "op": "SLT"
    },
    "8340": {
      "op": "ISZERO"
    },
    "8341": {
      "op": "PUSH2",
      "value": "0x209D"
    },
    "8344": {
      "op": "JUMPI"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8347": {
      "op": "DUP1"
    },
    "8348": {
      "op": "REVERT"
    },
    "8349": {
      "op": "JUMPDEST"
    },
    "8350": {
      "op": "PUSH2",
      "value": "0x20A6"
    },
    "8353": {
      "op": "DUP4"
    },
    "8354": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "8357": {
      "jump": "i",
      "op": "JUMP"
    },
    "8358": {
      "op": "JUMPDEST"
    },
    "8359": {
      "op": "SWAP2"
    },
    "8360": {
      "op": "POP"
    },
    "8361": {
      "op": "PUSH2",
      "value": "0x20B4"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8366": {
      "op": "DUP5"
    },
    "8367": {
      "op": "ADD"
    },
    "8368": {
      "op": "PUSH2",
      "value": "0x1E6B"
    },
    "8371": {
      "jump": "i",
      "op": "JUMP"
    },
    "8372": {
      "op": "JUMPDEST"
    },
    "8373": {
      "op": "SWAP1"
    },
    "8374": {
      "op": "POP"
    },
    "8375": {
      "op": "SWAP3"
    },
    "8376": {
      "op": "POP"
    },
    "8377": {
      "op": "SWAP3"
    },
    "8378": {
      "op": "SWAP1"
    },
    "8379": {
      "op": "POP"
    },
    "8380": {
      "jump": "o",
      "op": "JUMP"
    },
    "8381": {
      "op": "JUMPDEST"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8384": {
      "op": "DUP2"
    },
    "8385": {
      "op": "MLOAD"
    },
    "8386": {
      "op": "PUSH2",
      "value": "0x20CF"
    },
    "8389": {
      "op": "DUP2"
    },
    "8390": {
      "op": "DUP6"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8393": {
      "op": "DUP7"
    },
    "8394": {
      "op": "ADD"
    },
    "8395": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "8398": {
      "jump": "i",
      "op": "JUMP"
    },
    "8399": {
      "op": "JUMPDEST"
    },
    "8400": {
      "op": "SWAP3"
    },
    "8401": {
      "op": "SWAP1"
    },
    "8402": {
      "op": "SWAP3"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "op": "SWAP3"
    },
    "8405": {
      "op": "SWAP2"
    },
    "8406": {
      "op": "POP"
    },
    "8407": {
      "op": "POP"
    },
    "8408": {
      "jump": "o",
      "op": "JUMP"
    },
    "8409": {
      "op": "JUMPDEST"
    },
    "8410": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A2022546865204E4654206C696D6974206F"
    },
    "8443": {
      "op": "DUP2"
    },
    "8444": {
      "op": "MSTORE"
    },
    "8445": {
      "op": "PUSH32",
      "value": "0x726465722074686174206561726E73206D6F6E65792122000000000000000000"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8480": {
      "op": "DUP3"
    },
    "8481": {
      "op": "ADD"
    },
    "8482": {
      "op": "MSTORE"
    },
    "8483": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F7765627579"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "8518": {
      "op": "DUP3"
    },
    "8519": {
      "op": "ADD"
    },
    "8520": {
      "op": "MSTORE"
    },
    "8521": {
      "op": "PUSH11",
      "value": "0x3A3432B234B81731B7B691"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "8535": {
      "op": "SHL"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0x57"
    },
    "8538": {
      "op": "DUP3"
    },
    "8539": {
      "op": "ADD"
    },
    "8540": {
      "op": "MSTORE"
    },
    "8541": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8556": {
      "op": "SHL"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "8559": {
      "op": "DUP3"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "op": "MSTORE"
    },
    "8562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8564": {
      "op": "DUP4"
    },
    "8565": {
      "op": "MLOAD"
    },
    "8566": {
      "op": "PUSH2",
      "value": "0x2186"
    },
    "8569": {
      "op": "DUP2"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "8572": {
      "op": "DUP6"
    },
    "8573": {
      "op": "ADD"
    },
    "8574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8576": {
      "op": "DUP9"
    },
    "8577": {
      "op": "ADD"
    },
    "8578": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "8581": {
      "jump": "i",
      "op": "JUMP"
    },
    "8582": {
      "op": "JUMPDEST"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8587": {
      "op": "SHL"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "8590": {
      "op": "SWAP2"
    },
    "8591": {
      "op": "DUP5"
    },
    "8592": {
      "op": "ADD"
    },
    "8593": {
      "op": "SWAP2"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH21",
      "value": "0x1610113730B6B2911D1011213ABCAA3432A234B811"
    },
    "8619": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "8621": {
      "op": "SHL"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "8624": {
      "op": "DUP3"
    },
    "8625": {
      "op": "ADD"
    },
    "8626": {
      "op": "MSTORE"
    },
    "8627": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8662": {
      "op": "DUP3"
    },
    "8663": {
      "op": "ADD"
    },
    "8664": {
      "op": "MSTORE"
    },
    "8665": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A2022446970204C"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "8700": {
      "op": "DUP3"
    },
    "8701": {
      "op": "ADD"
    },
    "8702": {
      "op": "MSTORE"
    },
    "8703": {
      "op": "PUSH16",
      "value": "0x32BB32B6111610113B30B63AB2911D1"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x85"
    },
    "8722": {
      "op": "SHL"
    },
    "8723": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "8725": {
      "op": "DUP3"
    },
    "8726": {
      "op": "ADD"
    },
    "8727": {
      "op": "MSTORE"
    },
    "8728": {
      "op": "PUSH2",
      "value": "0x2235"
    },
    "8731": {
      "op": "PUSH2",
      "value": "0x2227"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "8736": {
      "op": "DUP4"
    },
    "8737": {
      "op": "ADD"
    },
    "8738": {
      "op": "DUP7"
    },
    "8739": {
      "op": "PUSH2",
      "value": "0x20BD"
    },
    "8742": {
      "jump": "i",
      "op": "JUMP"
    },
    "8743": {
      "op": "JUMPDEST"
    },
    "8744": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8749": {
      "op": "SHL"
    },
    "8750": {
      "op": "DUP2"
    },
    "8751": {
      "op": "MSTORE"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8754": {
      "op": "ADD"
    },
    "8755": {
      "op": "SWAP1"
    },
    "8756": {
      "op": "JUMP"
    },
    "8757": {
      "op": "JUMPDEST"
    },
    "8758": {
      "op": "SWAP6"
    },
    "8759": {
      "op": "SWAP5"
    },
    "8760": {
      "op": "POP"
    },
    "8761": {
      "op": "POP"
    },
    "8762": {
      "op": "POP"
    },
    "8763": {
      "op": "POP"
    },
    "8764": {
      "op": "POP"
    },
    "8765": {
      "jump": "o",
      "op": "JUMP"
    },
    "8766": {
      "op": "JUMPDEST"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8769": {
      "op": "DUP6"
    },
    "8770": {
      "op": "MLOAD"
    },
    "8771": {
      "op": "PUSH2",
      "value": "0x2250"
    },
    "8774": {
      "op": "DUP2"
    },
    "8775": {
      "op": "DUP5"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8778": {
      "op": "DUP11"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "8783": {
      "jump": "i",
      "op": "JUMP"
    },
    "8784": {
      "op": "JUMPDEST"
    },
    "8785": {
      "op": "DUP1"
    },
    "8786": {
      "op": "DUP4"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "SWAP1"
    },
    "8789": {
      "op": "POP"
    },
    "8790": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "8823": {
      "op": "DUP1"
    },
    "8824": {
      "op": "DUP3"
    },
    "8825": {
      "op": "MSTORE"
    },
    "8826": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022537472696B65205072696365222C202276616C75"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8861": {
      "op": "DUP4"
    },
    "8862": {
      "op": "ADD"
    },
    "8863": {
      "op": "MSTORE"
    },
    "8864": {
      "op": "PUSH4",
      "value": "0x32911D1"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8871": {
      "op": "SHL"
    },
    "8872": {
      "op": "DUP1"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8875": {
      "op": "DUP5"
    },
    "8876": {
      "op": "ADD"
    },
    "8877": {
      "op": "MSTORE"
    },
    "8878": {
      "op": "DUP8"
    },
    "8879": {
      "op": "MLOAD"
    },
    "8880": {
      "op": "PUSH2",
      "value": "0x22C0"
    },
    "8883": {
      "op": "DUP2"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8886": {
      "op": "DUP7"
    },
    "8887": {
      "op": "ADD"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8890": {
      "op": "DUP13"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "8895": {
      "jump": "i",
      "op": "JUMP"
    },
    "8896": {
      "op": "JUMPDEST"
    },
    "8897": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8902": {
      "op": "SHL"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8905": {
      "op": "SWAP5"
    },
    "8906": {
      "op": "SWAP1"
    },
    "8907": {
      "op": "SWAP2"
    },
    "8908": {
      "op": "ADD"
    },
    "8909": {
      "op": "SWAP4"
    },
    "8910": {
      "op": "DUP5"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "op": "MSTORE"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "8915": {
      "op": "DUP4"
    },
    "8916": {
      "op": "ADD"
    },
    "8917": {
      "op": "SWAP2"
    },
    "8918": {
      "op": "SWAP1"
    },
    "8919": {
      "op": "SWAP2"
    },
    "8920": {
      "op": "MSTORE"
    },
    "8921": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022555344432042616C616E6365222C202276616C75"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "8956": {
      "op": "DUP4"
    },
    "8957": {
      "op": "ADD"
    },
    "8958": {
      "op": "MSTORE"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x86"
    },
    "8961": {
      "op": "DUP3"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "op": "MSTORE"
    },
    "8964": {
      "op": "DUP5"
    },
    "8965": {
      "op": "MLOAD"
    },
    "8966": {
      "op": "PUSH2",
      "value": "0x2316"
    },
    "8969": {
      "op": "DUP2"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "8972": {
      "op": "DUP5"
    },
    "8973": {
      "op": "ADD"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8976": {
      "op": "DUP10"
    },
    "8977": {
      "op": "ADD"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x1DE7"
    },
    "8981": {
      "jump": "i",
      "op": "JUMP"
    },
    "8982": {
      "op": "JUMPDEST"
    },
    "8983": {
      "op": "PUSH2",
      "value": "0x23AB"
    },
    "8986": {
      "op": "PUSH2",
      "value": "0x239E"
    },
    "8989": {
      "op": "PUSH2",
      "value": "0x2391"
    },
    "8992": {
      "op": "PUSH2",
      "value": "0x2227"
    },
    "8995": {
      "op": "PUSH2",
      "value": "0x238B"
    },
    "8998": {
      "op": "PUSH2",
      "value": "0x233C"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "9003": {
      "op": "DUP8"
    },
    "9004": {
      "op": "DUP10"
    },
    "9005": {
      "op": "ADD"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9012": {
      "op": "SHL"
    },
    "9013": {
      "op": "DUP2"
    },
    "9014": {
      "op": "MSTORE"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9017": {
      "op": "ADD"
    },
    "9018": {
      "op": "SWAP1"
    },
    "9019": {
      "op": "JUMP"
    },
    "9020": {
      "op": "JUMPDEST"
    },
    "9021": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "9054": {
      "op": "DUP2"
    },
    "9055": {
      "op": "MSTORE"
    },
    "9056": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022456E65726779222C202276616C7565223A200000"
    },
    "9089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9091": {
      "op": "DUP3"
    },
    "9092": {
      "op": "ADD"
    },
    "9093": {
      "op": "MSTORE"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "op": "SWAP1"
    },
    "9098": {
      "op": "JUMP"
    },
    "9099": {
      "op": "JUMPDEST"
    },
    "9100": {
      "op": "DUP10"
    },
    "9101": {
      "op": "PUSH2",
      "value": "0x20BD"
    },
    "9104": {
      "jump": "i",
      "op": "JUMP"
    },
    "9105": {
      "op": "JUMPDEST"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9110": {
      "op": "SHL"
    },
    "9111": {
      "op": "DUP2"
    },
    "9112": {
      "op": "MSTORE"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9115": {
      "op": "ADD"
    },
    "9116": {
      "op": "SWAP1"
    },
    "9117": {
      "op": "JUMP"
    },
    "9118": {
      "op": "JUMPDEST"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "9123": {
      "op": "SHL"
    },
    "9124": {
      "op": "DUP2"
    },
    "9125": {
      "op": "MSTORE"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9128": {
      "op": "ADD"
    },
    "9129": {
      "op": "SWAP1"
    },
    "9130": {
      "op": "JUMP"
    },
    "9131": {
      "op": "JUMPDEST"
    },
    "9132": {
      "op": "SWAP9"
    },
    "9133": {
      "op": "SWAP8"
    },
    "9134": {
      "op": "POP"
    },
    "9135": {
      "op": "POP"
    },
    "9136": {
      "op": "POP"
    },
    "9137": {
      "op": "POP"
    },
    "9138": {
      "op": "POP"
    },
    "9139": {
      "op": "POP"
    },
    "9140": {
      "op": "POP"
    },
    "9141": {
      "op": "POP"
    },
    "9142": {
      "jump": "o",
      "op": "JUMP"
    },
    "9143": {
      "op": "JUMPDEST"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9146": {
      "op": "DUP2"
    },
    "9147": {
      "op": "DUP2"
    },
    "9148": {
      "op": "SHR"
    },
    "9149": {
      "op": "SWAP1"
    },
    "9150": {
      "op": "DUP3"
    },
    "9151": {
      "op": "AND"
    },
    "9152": {
      "op": "DUP1"
    },
    "9153": {
      "op": "PUSH2",
      "value": "0x23CB"
    },
    "9156": {
      "op": "JUMPI"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9159": {
      "op": "DUP3"
    },
    "9160": {
      "op": "AND"
    },
    "9161": {
      "op": "SWAP2"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "JUMPDEST"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9166": {
      "op": "DUP3"
    },
    "9167": {
      "op": "LT"
    },
    "9168": {
      "op": "DUP2"
    },
    "9169": {
      "op": "EQ"
    },
    "9170": {
      "op": "ISZERO"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x23EC"
    },
    "9174": {
      "op": "JUMPI"
    },
    "9175": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9182": {
      "op": "SHL"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9185": {
      "op": "MSTORE"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9188": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9190": {
      "op": "MSTORE"
    },
    "9191": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9195": {
      "op": "REVERT"
    },
    "9196": {
      "op": "JUMPDEST"
    },
    "9197": {
      "op": "POP"
    },
    "9198": {
      "op": "SWAP2"
    },
    "9199": {
      "op": "SWAP1"
    },
    "9200": {
      "op": "POP"
    },
    "9201": {
      "jump": "o",
      "op": "JUMP"
    },
    "9202": {
      "op": "JUMPDEST"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9205": {
      "op": "DUP1"
    },
    "9206": {
      "op": "DUP3"
    },
    "9207": {
      "op": "MSTORE"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9210": {
      "op": "SWAP1"
    },
    "9211": {
      "op": "DUP3"
    },
    "9212": {
      "op": "ADD"
    },
    "9213": {
      "op": "MSTORE"
    },
    "9214": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9249": {
      "op": "DUP3"
    },
    "9250": {
      "op": "ADD"
    },
    "9251": {
      "op": "MSTORE"
    },
    "9252": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "9272": {
      "op": "SHL"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9275": {
      "op": "DUP3"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "op": "MSTORE"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9280": {
      "op": "ADD"
    },
    "9281": {
      "op": "SWAP1"
    },
    "9282": {
      "jump": "o",
      "op": "JUMP"
    },
    "9283": {
      "op": "JUMPDEST"
    },
    "9284": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9291": {
      "op": "SHL"
    },
    "9292": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9294": {
      "op": "MSTORE"
    },
    "9295": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9299": {
      "op": "MSTORE"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9304": {
      "op": "REVERT"
    },
    "9305": {
      "op": "JUMPDEST"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9308": {
      "op": "DUP1"
    },
    "9309": {
      "op": "DUP3"
    },
    "9310": {
      "op": "MSTORE"
    },
    "9311": {
      "op": "DUP2"
    },
    "9312": {
      "op": "DUP2"
    },
    "9313": {
      "op": "ADD"
    },
    "9314": {
      "op": "MSTORE"
    },
    "9315": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9350": {
      "op": "DUP3"
    },
    "9351": {
      "op": "ADD"
    },
    "9352": {
      "op": "MSTORE"
    },
    "9353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9355": {
      "op": "ADD"
    },
    "9356": {
      "op": "SWAP1"
    },
    "9357": {
      "jump": "o",
      "op": "JUMP"
    },
    "9358": {
      "op": "JUMPDEST"
    },
    "9359": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9366": {
      "op": "SHL"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9369": {
      "op": "MSTORE"
    },
    "9370": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9374": {
      "op": "MSTORE"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9379": {
      "op": "REVERT"
    },
    "9380": {
      "op": "JUMPDEST"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9383": {
      "op": "DUP3"
    },
    "9384": {
      "op": "NOT"
    },
    "9385": {
      "op": "DUP3"
    },
    "9386": {
      "op": "GT"
    },
    "9387": {
      "op": "ISZERO"
    },
    "9388": {
      "op": "PUSH2",
      "value": "0x24B7"
    },
    "9391": {
      "op": "JUMPI"
    },
    "9392": {
      "op": "PUSH2",
      "value": "0x24B7"
    },
    "9395": {
      "op": "PUSH2",
      "value": "0x248E"
    },
    "9398": {
      "jump": "i",
      "op": "JUMP"
    },
    "9399": {
      "op": "JUMPDEST"
    },
    "9400": {
      "op": "POP"
    },
    "9401": {
      "op": "ADD"
    },
    "9402": {
      "op": "SWAP1"
    },
    "9403": {
      "jump": "o",
      "op": "JUMP"
    },
    "9404": {
      "op": "JUMPDEST"
    },
    "9405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9409": {
      "op": "NOT"
    },
    "9410": {
      "op": "DUP3"
    },
    "9411": {
      "op": "EQ"
    },
    "9412": {
      "op": "ISZERO"
    },
    "9413": {
      "op": "PUSH2",
      "value": "0x24D0"
    },
    "9416": {
      "op": "JUMPI"
    },
    "9417": {
      "op": "PUSH2",
      "value": "0x24D0"
    },
    "9420": {
      "op": "PUSH2",
      "value": "0x248E"
    },
    "9423": {
      "jump": "i",
      "op": "JUMP"
    },
    "9424": {
      "op": "JUMPDEST"
    },
    "9425": {
      "op": "POP"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9428": {
      "op": "ADD"
    },
    "9429": {
      "op": "SWAP1"
    },
    "9430": {
      "jump": "o",
      "op": "JUMP"
    },
    "9431": {
      "op": "JUMPDEST"
    },
    "9432": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9439": {
      "op": "SHL"
    },
    "9440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9442": {
      "op": "MSTORE"
    },
    "9443": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9447": {
      "op": "MSTORE"
    },
    "9448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "REVERT"
    },
    "9453": {
      "op": "JUMPDEST"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9456": {
      "op": "DUP3"
    },
    "9457": {
      "op": "PUSH2",
      "value": "0x24FC"
    },
    "9460": {
      "op": "JUMPI"
    },
    "9461": {
      "op": "PUSH2",
      "value": "0x24FC"
    },
    "9464": {
      "op": "PUSH2",
      "value": "0x24D7"
    },
    "9467": {
      "jump": "i",
      "op": "JUMP"
    },
    "9468": {
      "op": "JUMPDEST"
    },
    "9469": {
      "op": "POP"
    },
    "9470": {
      "op": "DIV"
    },
    "9471": {
      "op": "SWAP1"
    },
    "9472": {
      "jump": "o",
      "op": "JUMP"
    },
    "9473": {
      "op": "JUMPDEST"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9476": {
      "op": "DUP3"
    },
    "9477": {
      "op": "DUP3"
    },
    "9478": {
      "op": "LT"
    },
    "9479": {
      "op": "ISZERO"
    },
    "9480": {
      "op": "PUSH2",
      "value": "0x2513"
    },
    "9483": {
      "op": "JUMPI"
    },
    "9484": {
      "op": "PUSH2",
      "value": "0x2513"
    },
    "9487": {
      "op": "PUSH2",
      "value": "0x248E"
    },
    "9490": {
      "jump": "i",
      "op": "JUMP"
    },
    "9491": {
      "op": "JUMPDEST"
    },
    "9492": {
      "op": "POP"
    },
    "9493": {
      "op": "SUB"
    },
    "9494": {
      "op": "SWAP1"
    },
    "9495": {
      "jump": "o",
      "op": "JUMP"
    },
    "9496": {
      "op": "JUMPDEST"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9499": {
      "op": "DUP3"
    },
    "9500": {
      "op": "PUSH2",
      "value": "0x2527"
    },
    "9503": {
      "op": "JUMPI"
    },
    "9504": {
      "op": "PUSH2",
      "value": "0x2527"
    },
    "9507": {
      "op": "PUSH2",
      "value": "0x24D7"
    },
    "9510": {
      "jump": "i",
      "op": "JUMP"
    },
    "9511": {
      "op": "JUMPDEST"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "op": "MOD"
    },
    "9514": {
      "op": "SWAP1"
    },
    "9515": {
      "jump": "o",
      "op": "JUMP"
    },
    "9516": {
      "op": "JUMPDEST"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9519": {
      "op": "DUP2"
    },
    "9520": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9523": {
      "op": "JUMPI"
    },
    "9524": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9527": {
      "op": "PUSH2",
      "value": "0x248E"
    },
    "9530": {
      "jump": "i",
      "op": "JUMP"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9535": {
      "op": "NOT"
    },
    "9536": {
      "op": "ADD"
    },
    "9537": {
      "op": "SWAP1"
    },
    "9538": {
      "jump": "o",
      "op": "JUMP"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9542": {
      "op": "DUP1"
    },
    "9543": {
      "op": "DUP3"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9547": {
      "op": "SWAP1"
    },
    "9548": {
      "op": "DUP3"
    },
    "9549": {
      "op": "ADD"
    },
    "9550": {
      "op": "MSTORE"
    },
    "9551": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9586": {
      "op": "DUP3"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "op": "MSTORE"
    },
    "9589": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "9610": {
      "op": "SHL"
    },
    "9611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9613": {
      "op": "DUP3"
    },
    "9614": {
      "op": "ADD"
    },
    "9615": {
      "op": "MSTORE"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9618": {
      "op": "ADD"
    },
    "9619": {
      "op": "SWAP1"
    },
    "9620": {
      "jump": "o",
      "op": "JUMP"
    },
    "9621": {
      "op": "JUMPDEST"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9628": {
      "op": "SHL"
    },
    "9629": {
      "op": "SUB"
    },
    "9630": {
      "op": "DUP6"
    },
    "9631": {
      "op": "DUP2"
    },
    "9632": {
      "op": "AND"
    },
    "9633": {
      "op": "DUP3"
    },
    "9634": {
      "op": "MSTORE"
    },
    "9635": {
      "op": "DUP5"
    },
    "9636": {
      "op": "AND"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9639": {
      "op": "DUP3"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "MSTORE"
    },
    "9642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9644": {
      "op": "DUP2"
    },
    "9645": {
      "op": "ADD"
    },
    "9646": {
      "op": "DUP4"
    },
    "9647": {
      "op": "SWAP1"
    },
    "9648": {
      "op": "MSTORE"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9653": {
      "op": "DUP3"
    },
    "9654": {
      "op": "ADD"
    },
    "9655": {
      "op": "DUP2"
    },
    "9656": {
      "op": "SWAP1"
    },
    "9657": {
      "op": "MSTORE"
    },
    "9658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9660": {
      "op": "SWAP1"
    },
    "9661": {
      "op": "PUSH2",
      "value": "0x25C8"
    },
    "9664": {
      "op": "SWAP1"
    },
    "9665": {
      "op": "DUP4"
    },
    "9666": {
      "op": "ADD"
    },
    "9667": {
      "op": "DUP5"
    },
    "9668": {
      "op": "PUSH2",
      "value": "0x1E13"
    },
    "9671": {
      "jump": "i",
      "op": "JUMP"
    },
    "9672": {
      "op": "JUMPDEST"
    },
    "9673": {
      "op": "SWAP7"
    },
    "9674": {
      "op": "SWAP6"
    },
    "9675": {
      "op": "POP"
    },
    "9676": {
      "op": "POP"
    },
    "9677": {
      "op": "POP"
    },
    "9678": {
      "op": "POP"
    },
    "9679": {
      "op": "POP"
    },
    "9680": {
      "op": "POP"
    },
    "9681": {
      "jump": "o",
      "op": "JUMP"
    },
    "9682": {
      "op": "JUMPDEST"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9687": {
      "op": "DUP3"
    },
    "9688": {
      "op": "DUP5"
    },
    "9689": {
      "op": "SUB"
    },
    "9690": {
      "op": "SLT"
    },
    "9691": {
      "op": "ISZERO"
    },
    "9692": {
      "op": "PUSH2",
      "value": "0x25E4"
    },
    "9695": {
      "op": "JUMPI"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9698": {
      "op": "DUP1"
    },
    "9699": {
      "op": "REVERT"
    },
    "9700": {
      "op": "JUMPDEST"
    },
    "9701": {
      "op": "DUP2"
    },
    "9702": {
      "op": "MLOAD"
    },
    "9703": {
      "op": "PUSH2",
      "value": "0x1CF9"
    },
    "9706": {
      "op": "DUP2"
    },
    "9707": {
      "op": "PUSH2",
      "value": "0x1CC6"
    },
    "9710": {
      "jump": "i",
      "op": "JUMP"
    },
    "9711": {
      "op": "JUMPDEST"
    },
    "9712": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9719": {
      "op": "SHL"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9722": {
      "op": "MSTORE"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9727": {
      "op": "MSTORE"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9732": {
      "op": "REVERT"
    }
  },
  "sha1": "47404298e8cc501e46f1d5214273aa9638056476",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n\n    struct Stats { // todo refine and move to bitencoding\n        uint256 hp;\n        uint256 mp;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public returns(bool) {\n        return true; // todo isActive\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        Stats memory myStats =  Stats(1, 2, 0, 0, 0, 0, 0, 0, 0, 0, ELEMENT.FIRE); // todo -- add randomness\n        tokenIdToStats[totalSupply()] = myStats;\n        _safeMint(msg.sender, totalSupply());\n//        unchecked { totalSupply() += 1; }\n    }\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n    }\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, uint256 _won, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        tokenIdToStats[_attackerId].wins += _won;\n        tokenIdToStats[_attackerId].losses += _won==0 ? 1 : 0;\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n        // todo -- tokens waged?\n        tokenIdToStats[_defenderId].wins += _won==0 ? 1 : 0;\n        tokenIdToStats[_defenderId].losses += _won;\n        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n\n        if(_won==0) {\n            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n        }\n    }\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public returns(uint256) {\n\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId) external onlyVerifier {\n    }\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        return formatTokenURI(_tokenId, \"https://static01.nyt.com/images/2019/02/05/world/05egg/15xp-egg-promo-superJumbo-v2.jpg\");\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"The NFT limit order that earns money!\"',\n            ', \"external_url\": \"https://webuythedip.com\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"BuyTheDip\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": ',\n            uint2str(uint256(9)),   ' }'\n        ));\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"Strike Price\", \"value\": ',\n            uint2str(uint256(333)),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"USDC Balance\", \"value\": ',\n            uint2str(uint256(111)),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"Energy\", \"value\": ',\n            uint2str(uint256(222)),   ' }',\n            ']', // End Attributes\n            '}'\n        ));\n    }\n\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len - 1;\n        while (_i != 0) {\n            bstr[k--] = bytes1(uint8(48 + _i % 10));\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "314:7033:18:-:0;;;1782:434;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1459:13:6;;1863:5:18;;1870:7;;1459:13:6;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1483:17:6;;;;:7;;:17;;;;;:::i;:::-;;1392:116;;889:23:8;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;1918:5:18::1;1889:26:::0;:34;1967:1:::1;1933:31:::0;:35;2006:1:::1;1889:16;1978:29:::0;2088:6:::1;2045:40:::0;:49;2132:38;:49;;-1:-1:-1;;;;;;2132:49:18::1;-1:-1:-1::0;;;;;2132:49:18;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;314:7033:18;;-1:-1:-1;314:7033:18;599:98:4;679:10;;599:98::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;314:7033:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;314:7033:18;;;-1:-1:-1;314:7033:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:19;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:19;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:19;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:19:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1256:16;;-1:-1:-1;;;;;1321:14:19;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1652:2;1637:18;;1631:25;1536:73;;-1:-1:-1;1631:25:19;-1:-1:-1;;;;;;1685:31:19;;1675:42;;1665:70;;1731:1;1728;1721:12;1665:70;1754:5;1744:15;;;1036:729;;;;;:::o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;:::-;314:7033:18;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}